"use strict"
define("hospitalrun/adapters/application",["exports","hospitalrun/mixins/check-for-errors","uuid","ember-concurrency-test-waiter/with-test-waiter","ember-pouch","ember-concurrency","ember-inflector"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=i.Adapter.extend(t.default,{ajax:Ember.inject.service(),database:Ember.inject.service(),db:Ember.computed.reads("database.mainDB"),usePouchFind:Ember.computed.reads("database.usePouchFind"),_specialQueries:["containsValue","mapReduce"],_esDefaultSize:25,_executeContainsSearch:function(e,t,n){var a=this
if(Ember.get(this,"usePouchFind"))return this._executePouchDBFind(e,t,n)
var i="/search/hrdb/"+this.getRecordTypeName(t)+"/_search"
if(n.containsValue&&n.containsValue.value){var s=""
n.containsValue.keys.forEach(function(e){Ember.isEmpty(s)||(s+=" OR ")
var t=n.containsValue.value
switch(e.type){case"contains":t="*"+t+"*"
break
case"fuzzy":t+="~"}s=s+"data."+e.name+":"+t})
var o=Ember.get(this,"ajax")
return Ember.isEmpty(n.size)&&(n.size=this.get("_esDefaultSize")),o.request(i,{dataType:"json",data:{q:s,size:this.get("_esDefaultSize")}}).then(function(n){if(n&&n.hits&&n.hits.hits){var i={rows:Ember.A(n.hits.hits).map(function(e){var t=e._source
return t.id=e._id,t})}
return a._handleQueryResponse(i,e,t)}if(n.rows)return a._handleQueryResponse(n,e,t)
throw new Error("Search results are not valid")}).catch(function(){return a._executePouchDBFind(e,t,n)})}throw new Error("invalid query")},_executePouchDBFind:function(e,t,n){this._init(e,t)
var a=this.get("db"),i=this.getRecordTypeName(t),s={selector:{$and:[{},{$or:[]}]}}
if(s.selector.$and[0]._id={$gt:a.rel.makeDocID({type:i}),$lt:a.rel.makeDocID({type:i,id:{}})},n.containsValue&&n.containsValue.value){var o=new RegExp(n.containsValue.value,"i")
n.containsValue.keys.forEach(function(e){var t={}
t["data."+e.name]={$regex:o},s.selector.$and[1].$or.push(t)})}return a.find(s).then(function(e){return a.rel.parseRelDocs(i,e.docs)})},_handleQueryResponse:function(e,t,n){var a=this,i=this.get("database")
return new Ember.RSVP.Promise(function(s,r){if(e.rows.length>0){var l=e.rows.map(function(e){return i.getEmberId(e.id)})
a.findRecord(t,n,l).then(function(e){var t=(0,o.pluralize)(n.modelName.camelize()),a=[]
l.forEach(function(n){var i=e[t].findBy("id",n)
a.push(i)}),e[t]=a,s(e)},r)}else{var d={}
d[n.modelName]=[],s(d)}})},_doesStartKeyContainSpecialCharacters:function(e){var t=!1,n=this.get("maxValue")
return!Ember.isEmpty(e)&&Ember.isArray(e)&&e.forEach(function(e){null!==e&&e!==n||(t=!0)}),t},_startChangesToStoreListener:function(){var e=this.get("db")
e&&(this.changes=e.changes({since:"now",live:!0,returnDocs:!1}).on("change",Ember.run.bind(this,"onChange")).on("error",function(){}),e.changesListener=this.changes)},generateIdForRecord:function(){return n.default.v4()},query:function(e,t,n,a){for(var i=this,s=!1,o=0;o<this._specialQueries.length;o++)if(Ember.get(n,this._specialQueries[o])){s=!0
break}if(s){var r=null,l={}
if(n.options&&(l=Ember.copy(n.options),(n.sortKey||n.filterBy)&&(n.sortDesc&&(l.sortDesc=n.sortDesc),n.sortKey&&(l.sortKey=n.sortKey),this._doesStartKeyContainSpecialCharacters(l.startkey)?l.startkey&&(l.startkey=JSON.stringify(l.startkey)):(l.sortLimit=l.limit,delete l.limit,l.sortStartKey=JSON.stringify(l.startkey),delete l.startkey),n.filterBy&&(l.filterBy=JSON.stringify(n.filterBy)),l.endkey&&(l.endkey=JSON.stringify(l.endkey)),n.useList=!0)),l.reduce=!1,l.include_docs=!1,n.mapReduce)r=n.mapReduce
else if(n.containsValue)return this._executeContainsSearch(e,t,n)
var d=Ember.get(this,"database")
return new Ember.RSVP.Promise(function(a,s){var o=i.get("db")
try{if(r)if(n.useList){l.include_docs=!0
var u={query:l}
o.list(r+"/sort/"+r,u,function(n,o){if(n)s(d.handleErrorResponse(n))
else{var r=JSON.parse(o.body)
i._handleQueryResponse(r,e,t).then(a,s)}})}else o.query(r,l,function(n,o){n?s(d.handleErrorResponse(n)):i._handleQueryResponse(o,e,t).then(a,s)})
else o.allDocs(l,function(n,o){n?s(d.handleErrorResponse(n)):i._handleQueryResponse(o,e,t).then(a,s)})}catch(c){s(d.handleErrorResponse(c))}},"findQuery in application-pouchdb-adapter")}if(n.options){this._init(e,t)
var u=this.getRecordTypeName(t)
return this.get("db").rel.find(u,n.options)}return this._super(e,t,n,a)},createRecord:function(e,t,n){return this._checkForErrors(this._super(e,t,n))},findAll:function(e,t){return this._checkForErrors(this._super(e,t))},findMany:function(e,t,n){return this._checkForErrors(this._super(e,t,n))},findHasMany:function(e,t,n,a){return this._checkForErrors(this._super(e,t,n,a))},findRecord:function(e,t,n){return this._checkForErrors(this._super(e,t,n))},updateRecord:function(e,t,n){return this._checkForErrors(this._super(e,t,n))},deleteRecord:function(e,t,n){return this._checkForErrors(this._super(e,t,n))},checkForErrorsTask:(0,a.default)((0,s.task)(regeneratorRuntime.mark(function e(t){var n=this
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,new Ember.RSVP.Promise(function(e,a){t.then(e,function(e){var t=Ember.get(n,"database")
a(t.handleErrorResponse(e))})})
case 2:return e.abrupt("return",e.sent)
case 3:case"end":return e.stop()}},e,this)}))),_checkForErrors:function(e){return Ember.get(this,"checkForErrorsTask").perform(e)}})}),define("hospitalrun/adapters/user",["exports","hospitalrun/mixins/check-for-errors","ember-data","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=n.default.RESTAdapter
e.default=i.extend(t.default,a.default,{defaultSerializer:"couchdb",config:Ember.inject.service(),database:Ember.inject.service(),session:Ember.inject.service(),oauthHeaders:Ember.computed.alias("database.oauthHeaders"),standAlone:Ember.computed.alias("config.standAlone"),usersDB:Ember.computed.alias("database.usersDB"),headers:Ember.computed("oauthHeaders",function(){var e=Ember.get(this,"oauthHeaders")
return Ember.isEmpty(e)?{}:e}),ajaxError:function(e){var t=this._super(e)
if(e&&401===e.status){var a=Ember.$.parseJSON(e.responseText)
return window.Hospitalrun.__container__.lookup("controller:application").transitionToRoute("login"),new n.default.InvalidError(a)}return t},ajaxOptions:function(e,t,n){return(n=n||{}).xhrFields={withCredentials:!0},this._super(e,t,n)},createRecord:function(e,t,n){return this.updateRecord(e,t,n)},deleteRecord:function(e,t,n){return this.updateRecord(e,t,n,!0)},findRecord:function(e,t,n,a){return!0===Ember.get(this,"standAlone")?this._offlineFind(n):this._checkForErrors(this._super(e,t,n,a))},findAll:function(e,t,n,a){var i={data:{include_docs:!0,startkey:'"org.couchdb.user"'}}
if(!0===Ember.get(this,"standAlone"))return this._offlineFindAll(i.data)
var s=this.buildURL(t.modelName,null,a,"findAll")
return this._checkForErrors(this.ajax(s,"GET",i))},shouldReloadAll:function(){return!0},updateRecord:function(e,t,n,a){var i={}
if(e.serializerFor(n.modelName).serializeIntoHash(i,t,n,{includeId:!0}),i.type="user",a&&(i.deleted=!0,delete i.oauth,i.roles=["deleted"]),Ember.isEmpty(i._rev)&&delete i._rev,i=this._cleanPasswordAttrs(i),!0===Ember.get(this,"standAlone"))return this._offlineUpdateRecord(i)
var s=this._buildURL("user",Ember.get(n,"id"))
return this._checkForErrors(this.ajax(s,"PUT",{data:i}))},urlForFindAll:function(){return"/db/_users/_all_docs"},urlPrefix:function(){return"/db/_users/"},_buildURL:function(e,t){return"/db/_users/"+t},_cleanPasswordAttrs:function(e){return["derived_key","password","password_scheme","password_sha","salt","iterations"].forEach(function(t){Ember.isEmpty(e[t])&&delete e[t]}),e},_offlineFind:function(e){var t=this,n=Ember.get(this,"database.usersDB")
return new Ember.RSVP.Promise(function(a,i){n.get(e).then(a).catch(function(e){var n=Ember.get(t,"database")
i(n.handleErrorResponse(e))})})},_offlineFindAll:function(e){return Ember.get(this,"database.usersDB").allDocs(e)},_offlineUpdateRecord:function(e){return Ember.get(this,"usersDB").put(e)}})}),define("hospitalrun/admin/address/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideCancelButton:!0,updateCapability:"update_config",afterUpdate:function(){this.displayAlert(this.get("intl").t("admin.address.titles.optionsSaved"),this.get("intl").t("admin.address.messages.addressSaved"))}})}),define("hospitalrun/admin/address/route",["exports","hospitalrun/routes/abstract-edit-route","ember-concurrency","hospitalrun/macro","hospitalrun/utils/unauthorized-error"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,newTitle:(0,a.t)("admin.address.newTitle"),editTitle:(0,a.t)("admin.address.editTitle"),model:function(){return this.get("fetchAddressOptions").perform()},fetchAddressOptions:(0,n.task)(regeneratorRuntime.mark(function e(){var t
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.get("store"),e.prev=1,e.next=4,t.find("option","address_options")
case 4:return e.abrupt("return",e.sent)
case 7:if(e.prev=7,e.t0=e.catch(1),!(e.t0 instanceof i.default)){e.next=11
break}throw e.t0
case 11:return e.abrupt("return",t.push(this.get("defaultAddressOption")))
case 12:case"end":return e.stop()}},e,this,[[1,7]])})).keepLatest().cancelOn("deactivate"),defaultAddressOption:Ember.computed(function(){return this.get("store").normalize("option",{id:"address_options",value:{address1Label:this.get("intl").t("admin.address.addressLabel"),address1Include:!0}})})})}),define("hospitalrun/admin/address/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"tVEIe49W",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.address.address1Label"],null],"value.address1Label"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.address.include1Label"],null],"value.address1Include"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.address.address2Label"],null],"value.address2Label"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.address.include2Label"],null],"value.address2Include"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.address.address3Label"],null],"value.address3Label"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.address.include3Label"],null],"value.address3Include"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.address.address4Label"],null],"value.address4Label"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.address.include4Label"],null],"value.address4Include"]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/address/template.hbs"}})}),define("hospitalrun/admin/custom-forms/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","uuid"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=t.default.extend({preview:!1,previewModel:Ember.Object.create(),updateCapability:"update_config",afterUpdate:function(){this.displayAlert(this.get("intl").t("admin.customForms.titles.formSaved"),this.get("intl").t("admin.customForms.messages.formSaved",{name:this.get("model.shortDisplayName")}))},actions:{addField:function(){var e=this.store.createRecord("custom-field")
this.send("openModal","admin.custom-forms.field-edit",e)},deleteField:function(e){this.get("model.fields").removeObject(e)},editField:function(e){Ember.isEmpty(e)&&(e=this.store.createRecord("custom-field")),this.send("openModal","admin.custom-forms.field-edit",e)},moveFieldDown:function(e){var t=this.get("model.fields"),n=t.indexOf(e),a=t.objectAt(n+1)
t.replace(n,2,[a,e])},moveFieldUp:function(e){var t=this.get("model.fields"),n=t.indexOf(e)-1,a=t.objectAt(n)
t.replace(n,2,[e,a])},togglePreview:function(){this.toggleProperty("preview")},updateField:function(e){e.get("isNew")&&this._addNewField(e),this.get("model").save()}},formName:Ember.computed("model.name",function(){var e=this.get("intl"),t=this.get("model.name")
return Ember.isEmpty(t)?e.t("admin.customForms.labels.newForm"):t}),formTypeValues:["incident","operativePlan","patient","socialwork","visit","opdReport","dischargeReport","lab"],formTypes:Ember.computed(function(){var e=this.get("intl")
return this.get("formTypeValues").map(function(t){return{id:t,value:e.t("admin.customForms.labels."+t+"FormType")}}).sort(function(e,t){return Ember.compare(e.value.toString(),t.value.toString())})}),lastFieldIndex:Ember.computed("model.fields.length",function(){return this.get("model.fields.length")-1}),fieldTypeLabel:function(e){return this.get("intl").t("admin.customForms.labels."+e)},_addNewField:function(e){var t=e.changedAttributes(),i={},s=this.get("store")
this._generatePropertyNames(e),Object.keys(t).forEach(function(e){var n=a(t[e],2)[1]
i[e]=n}),i.property=e.get("property")
var o=s.push({data:{id:n.default.v4(),type:"custom-field",attributes:i}})
this.get("model.fields").addObject(o)},_generatePropertyNames:function(e){var t=e.get("type"),n=this._getPropertyName(e)
"checkbox"===t?e.get("values").forEach(function(e,t){e.set("property",""+n+(t+1))}):e.set("property",n)},_getPropertyName:function(e){for(var t=e.get("label").camelize(),n=1,a=t;this._isPropertyUsed(a)&&n<10;)a=""+t+ ++n
return a},_isPropertyUsed:function(e){var t=this.get("model.fields"),n=t.findBy("property",e)
return!Ember.isEmpty(n)||t.filterBy("type","checkbox").any(function(t){if(n=t.get("values").findBy("property",e),!Ember.isEmpty(n))return!0})}})}),define("hospitalrun/admin/custom-forms/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,newTitle:(0,n.t)("admin.customForms.titles.newCustomForm"),editTitle:(0,n.t)("admin.customForms.titles.editCustomForm"),modelName:"custom-form",actions:{allItems:function(){this.transitionTo("admin.custom-forms")}}})}),define("hospitalrun/admin/custom-forms/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"d/l7mLcK",block:'{"symbols":["form","form","field","index"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,2,["input"]]],[["property","label","class"],["name",[25,"t",["admin.customForms.labels.formName"],null],"form-input-group required col-xs-4 custom-form-name"]]],false],[0,"\\n      "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-xs-3 form-input-group required custom-form-type",[25,"t",["admin.customForms.labels.formType"],null],"formType",[20,["formTypes"]]," "]]],false],[0,"\\n      "],[1,[25,"component",[[19,2,["input"]]],[["property","label","class"],["columns",[25,"t",["admin.customForms.labels.columns"],null],"form-input-group col-xs-2 custom-form-columns"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[25,"t",["admin.customForms.labels.alwaysInclude"],null],"alwaysInclude","form-input-group col-xs-2 js-custom-form-always-include"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[6,"h4"],[9,"class","col-xs-8"],[7],[0,"\\n        "],[1,[25,"t",["admin.customForms.titles.fields"],null],false],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","col-xs-4"],[7],[0,"\\n        "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"addField"]],[7],[0,"\\n          "],[1,[25,"t",["admin.customForms.buttons.addField"],null],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["admin.customForms.labels.label"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model","fields"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[7],[1,[19,3,["label"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,3,["type"]]],null,{"statements":[[0,"              "],[1,[25,"t",[[25,"concat",["admin.customForms.labels.",[19,3,["type"]]],null]],null],false],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n            "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteField",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n              "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editField",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n              "],[1,[25,"t",["buttons.edit"],null],false],[0,"\\n            "],[8],[0,"\\n"],[4,"if",[[25,"not-eq",[[19,4,[]],0],null]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"moveFieldUp",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                 "],[6,"span"],[9,"class","glyphicon glyphicon-chevron-up"],[9,"aria-hidden","true"],[7],[8],[0,"\\n                "],[1,[25,"t",["admin.customForms.buttons.moveUp"],null],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"lt",[[19,4,[]],[20,["lastFieldIndex"]]],null]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"moveFieldDown",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                 "],[6,"span"],[9,"class","glyphicon glyphicon-chevron-down"],[9,"aria-hidden","true"],[7],[8],[0,"\\n                "],[1,[25,"t",["admin.customForms.buttons.moveDown"],null],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[3,4]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"  "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"togglePreview"],[["bubbles"],[false]]],[7],[0,"\\n    "],[1,[25,"t",["admin.customForms.buttons.preview"],null],false],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["preview"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","panel panel-default form-preview"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[1,[18,"formName"],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["previewModel"]],false]],{"statements":[[0,"          "],[1,[25,"custom-form",null,[["model","form","rapidForm"],[[20,["previewModel"]],[20,["model"]],[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/custom-forms/edit/template.hbs"}})}),define("hospitalrun/admin/custom-forms/field-edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editController:Ember.inject.controller("admin/custom-forms/edit"),cancelAction:"closeModal",intl:Ember.inject.service(),actions:{addValue:function(){var e=this.get("model.values"),t=this.get("model.type")
Ember.isEmpty(e)&&(e=[],this.get("model").set("values",e));("header"===t&&e.length<1||"header"!=t)&&e.addObject(Ember.Object.create())},deleteValue:function(e){this.get("model.values").removeObject(e)},selectType:function(e){this.get("model").set("type",e)},update:function(){this.get("editController").send("updateField",this.get("model")),this.send("closeModal")}},fieldTypeValues:["header","checkbox","radio","select","text","textarea"],fieldTypes:Ember.computed(function(){var e=this.get("intl")
return this.get("fieldTypeValues").map(function(t){return{id:t,value:e.t("admin.customForms.labels."+t)}}).sort(function(e,t){return Ember.compare(e.value.toString(),t.value.toString())})}),showValues:Ember.computed("model.type",function(){var e=this.get("model.type")
return"checkbox"===e||"radio"===e||"select"===e||"header"===e})})}),define("hospitalrun/admin/custom-forms/field-edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"YF/dix7H",block:'{"symbols":["form","value","fieldType"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[25,"t",[[25,"if",[[20,["model","isNew"]],"admin.lookup.edit.template.addTitle","admin.lookup.edit.template.editTitle"],null]],null],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[6,"div"],[9,"class","form-input-group col-xs-6"],[7],[0,"\\n        "],[6,"label"],[9,"for","fieldTypeSelect"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n        "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"selectType"],[["value"],["target.value"]]],null],[9,"class","form-control custom-field-select"],[9,"id","fieldTypeSelect"],[7],[0,"\\n          "],[6,"option"],[9,"disabled",""],[10,"selected",[25,"is-not",[[20,["model","type"]]],null],null],[7],[8],[0,"\\n"],[4,"each",[[20,["fieldTypes"]]],null,{"statements":[[0,"            "],[6,"option"],[10,"value",[26,[[19,3,["id"]]]]],[10,"selected",[25,"eq",[[20,["model","type"]],[19,3,["id"]]],null],null],[7],[0,"\\n              "],[1,[19,3,["value"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","class","label"],["label","col-xs-6 required custom-field-label",[25,"t",["admin.customForms.labels.label"],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","class","label"],["colSpan","col-xs-5 custom-field-colspan",[25,"t",["admin.customForms.labels.colSpan"],null]]]],false],[0,"\\n    "],[8],[0,"\\n"],[4,"if",[[20,["showValues"]]],null,{"statements":[[0,"      "],[6,"h4"],[7],[0,"\\n"],[4,"if",[[25,"eq",[[20,["model","type"]],"radio"],null]],null,{"statements":[[0,"          "],[1,[25,"t",["admin.customForms.titles.radioValues"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[20,["model","type"]],"select"],null]],null,{"statements":[[0,"          "],[1,[25,"t",["admin.customForms.titles.dropDownValues"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[20,["model","type"]],"checkbox"],null]],null,{"statements":[[0,"          "],[1,[25,"t",["admin.customForms.titles.checkboxValues"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[20,["model","type"]],"header"],null]],null,{"statements":[[0,"          "],[1,[25,"t",["admin.customForms.titles.headerValues"],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"addValue"]],[7],[0,"\\n          "],[1,[25,"t",["buttons.addValue"],null],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"if",[[25,"eq",[[20,["model","type"]],"checkbox"],null]],null,{"statements":[[0,"            "],[6,"th"],[7],[1,[25,"t",["admin.customForms.labels.label"],null],false],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"            "],[6,"th"],[7],[1,[25,"t",["labels.value"],null],false],[8],[0,"\\n"]],"parameters":[]}],[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["model","values"]]],null,{"statements":[[0,"          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[1,[25,"input",null,[["value","class"],[[19,2,["label"]],"form-control custom-field-value"]]],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[6,"button"],[9,"class","btn btn-default warning delete-field-value"],[3,"action",[[19,0,[]],"deleteValue",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[20,["model","type"]],"radio"],null]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","checkbox"],[7],[0,"\\n        "],[6,"label"],[7],[0,"\\n          "],[1,[25,"input",null,[["type","checked"],["checkbox",[20,["model","includeOtherOption"]]]]],false],[0,"\\n          "],[1,[25,"t",["admin.customForms.labels.includeOtherOption"],null],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"if",[[20,["model","includeOtherOption"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["admin.customForms.labels.otherOptionLabel"],null],false],[8],[0,"\\n          "],[1,[25,"input",null,[["class","value"],["form-control",[20,["model","otherOptionLabel"]]]]],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/custom-forms/field-edit/template.hbs"}})}),define("hospitalrun/admin/custom-forms/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addPermission:"update_config",deletePermission:"update_config"})}),define("hospitalrun/admin/custom-forms/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/modal-helper","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{newButtonAction:Ember.computed(function(){return this.currentUserCan("update_config")?"newItem":null}),newButtonText:(0,i.t)("admin.customForms.buttons.newForm"),pageTitle:Ember.computed("intl.locale",function(){return(0,i.t)("admin.customForms.titles.customForms")}),model:function(){return this.get("store").findAll("custom-form")},actions:{deleteItem:function(e){var t=this.get("intl"),n=Ember.Object.create({itemToDelete:e}),a=t.t("messages.delete",{name:e.get("name")}),i=t.t("admin.customForms.titles.deleteForm")
this.displayConfirm(i,a,"deleteCustomForm",n)},deleteCustomForm:function(e){e.itemToDelete.set("archived",!0),e.itemToDelete.save().then(function(){e.itemToDelete.unloadRecord()})},editItem:function(e){this.transitionTo("admin.custom-forms.edit",e)},newItem:function(){this.transitionTo("admin.custom-forms.edit","new")}}})}),define("hospitalrun/admin/custom-forms/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2oVsqzbN",block:'{"symbols":["customForm"],"statements":[[4,"item-listing",null,null,{"statements":[[0,"  "],[6,"table"],[9,"class","table"],[7],[0,"\\n    "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[4,"unless",[[19,1,["archived"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[9,"class","custom-form-name"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,1,["formType"]]],null,{"statements":[[0,"              "],[1,[25,"t",[[25,"concat",["admin.customForms.labels.",[19,1,["formType"]],"FormType"],null]],null],false],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/custom-forms/index/template.hbs"}})}),define("hospitalrun/admin/loaddb/controller",["exports","hospitalrun/macro","hospitalrun/mixins/modal-helper","hospitalrun/mixins/progress-dialog"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(n.default,a.default,{database:Ember.inject.service(),fileSystem:Ember.inject.service("filesystem"),progressMessage:(0,t.t)("admin.loaddb.progressMessage"),progressTitle:(0,t.t)("admin.loaddb.progressTitle"),syncResults:null,fileImportedName:null,actions:{loadFile:function(){var e=this,t=this.get("fileSystem"),n=this.get("importFile")
n&&n.type?(this.showProgressModal(),this.set("syncResults"),this.set("fileImportedName"),t.fileToString(n).then(function(t){var n=e.get("database"),a=e.get("importFile.name")
e.set("fileImportedName",a),e.set("importFile"),e.set("model.importFileName"),n.loadDBFromDump(t).then(function(t){e.closeProgressModal(),e.set("syncResults",t)}).catch(function(t){e.displayAlert(e.get("intl").t("admin.loaddb.errorDisplayAlertTitle"),e.get("intl").t("admin.loaddb.errorDisplayAlertMessage",{error:JSON.stringify(t)}))})})):this.displayAlert(this.get("intl").t("admin.loaddb.displayAlertTitle"),this.get("intl").t("admin.loaddb.displayAlertMessage"))}}})}),define("hospitalrun/admin/loaddb/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{hideNewButton:!0,editTitle:(0,n.t)("admin.loaddb.editTitle"),database:Ember.inject.service(),beforeModel:function(){this.currentUserCan("load_db")||this.transitionTo("application")},model:function(){var e=this,t=Ember.get(this,"database")
return t.getDBInfo().catch(function(n){return e.send("error",t.handleErrorResponse(n))})}})}),define("hospitalrun/admin/loaddb/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"XiKdbB98",block:'{"symbols":["form"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"      "],[1,[25,"file-upload",null,[["label","property","selectedFile"],[[25,"t",["labels.fileToLoad"],null],"importFileName",[20,["importFile"]]]]],false],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"loadFile"]],[7],[1,[25,"t",["buttons.loadFile"],null],false],[8],[0,"\\n"]],"parameters":[1]},null],[4,"if",[[20,["syncResults"]]],null,{"statements":[[0,"      "],[6,"h4"],[7],[1,[25,"t",["labels.fileLoadSuccessful"],null],false],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group col-xs-4"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["labels.fileName"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[18,"fileImportedName"],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group col-xs-2"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["labels.startTime"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["syncResults","start_time"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group col-xs-2"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["labels.endTime"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["syncResults","end_time"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group col-xs-2"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["labels.docRead"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["syncResults","docs_read"]],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group col-xs-2"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["labels.docWritten"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["syncResults","docs_written"]],false],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/loaddb/template.hbs"}})}),define("hospitalrun/admin/lookup/controller",["exports","hospitalrun/mixins/billing-categories","csv-parse","hospitalrun/mixins/modal-helper","hospitalrun/mixins/inventory-type-list","hospitalrun/mixins/unit-types","hospitalrun/mixins/visit-types","ember-keyboard"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0})
var l=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Controller.extend(t.default,r.EKMixin,i.default,a.default,s.default,o.default,{fileSystem:Ember.inject.service("filesystem"),lookupLists:Ember.inject.service(),lookupTypes:Ember.computed(function(){return[{name:this.get("intl").t("admin.lookup.anesthesiaTypes"),value:"anesthesia_types",model:{procedure:"anesthesiaType"}},{name:this.get("intl").t("admin.lookup.anesthesiologists"),value:"anesthesiologists",model:{procedure:"anesthesiologist"}},{defaultValues:"defaultBillingCategories",name:this.get("intl").t("admin.lookup.billingCategories"),value:"billing_categories",models:{"billing-line-item":"category"}},{name:this.get("intl").t("admin.lookup.clinicList"),value:"clinic_list",models:{patient:"clinic"}},{name:this.get("intl").t("admin.lookup.countryList"),value:"country_list",models:{patient:"country"}},{name:this.get("intl").t("admin.lookup.diagnosisList"),value:"diagnosis_list",models:{diagnosis:"diagnosis"}},{name:this.get("intl").t("admin.lookup.cptCodeList"),value:"cpt_code_list",models:{procedure:"cptCode"}},{name:this.get("intl").t("admin.lookup.expenseAccountList"),value:"expense_account_list",models:{"inv-request":"expenseAccount",pricing:"expenseAccount"}},{name:this.get("intl").t("admin.lookup.aisleLocationList"),value:"aisle_location_list",models:{inventory:"aisleLocation","inv-location":"aisleLocation","inv-purchase":"aisleLocation","inv-request":["deliveryAisle","locationsAffected"]}},{name:this.get("intl").t("admin.lookup.warehouseList"),value:"warehouse_list",models:{inventory:"location","inv-location":"location","inv-purchase":"location","inv-request":["deliveryLocation","locationsAffected"]}},{name:this.get("intl").t("admin.lookup.incidentDepartments"),value:"incident_departments",models:{incident:"department"}},{defaultValues:"defaultInventoryTypes",name:this.get("intl").t("admin.lookup.inventoryTypes"),value:"inventory_types",models:{inventory:"inventoryType"}},{name:this.get("intl").t("admin.lookup.patientStatusList"),value:"patient_status_list",models:{patient:"status"}},{name:this.get("intl").t("admin.lookup.physicianList"),value:"physician_list",models:{appointment:"provider",visit:"examiner",procedure:["assistant","physician"]}},{name:this.get("intl").t("admin.lookup.procedureList"),value:"procedure_list",models:{procedure:"description"}},{name:this.get("intl").t("admin.lookup.procedureLocations"),value:"procedure_locations",models:{procedure:"location"}},{name:this.get("intl").t("admin.lookup.procedurePricingTypes"),value:"procedure_pricing_types",models:{pricing:"pricingType"}},{name:this.get("intl").t("admin.lookup.radiologists"),value:"radiologists",model:{imaging:"radiologist"}},{name:this.get("intl").t("labels.sex"),value:"sex",model:{patient:"sex"}},{defaultValues:"defaultUnitList",name:this.get("intl").t("admin.lookup.unitTypes"),value:"unit_types",models:{inventory:"distributionUnit","inv-purchase":"distributionUnit"}},{name:this.get("intl").t("admin.lookup.vendorList"),value:"vendor_list",models:{"inv-purchase":"vendor"}},{name:this.get("intl").t("admin.lookup.visitLocationList"),value:"visit_location_list",models:{appointment:"location",visit:"location"}},{defaultValues:"defaultVisitTypes",name:this.get("intl").t("admin.lookup.visitTypes"),value:"visit_types",models:{visit:"visitType"}},{name:this.get("intl").t("admin.lookup.wardPricingTypes"),value:"ward_pricing_types",models:{pricing:"pricingType"}}]}),importFile:Ember.computed.alias("lookupTypeList.importFile"),lookupTitle:Ember.computed("model.lookupType",function(){var e=this.get("model.lookupType"),t=this.get("lookupTypes"),n=void 0
if(!Ember.isEmpty(e)&&(n=t.findBy("value",e),!Ember.isEmpty(n)))return n.name}),lookupTypeList:Ember.computed("model.lookupType",function(){var e=this.get("model.lookupType"),t=void 0
if(!Ember.isEmpty(e)){if(t=this.get("model").findBy("id",e),Ember.isEmpty(t)||!t.get("isLoaded")){var n=[],a=this.get("lookupTypes").findBy("value",e),i=this.get("store")
Ember.isEmpty(a)||Ember.isEmpty(a.defaultValues)||(n=this.get(a.defaultValues)),t=i.push(i.normalize("lookup",{id:e,value:n}))}return!Ember.isEmpty(t)&&Ember.isEmpty(t.get("userCanAdd"))&&t.set("userCanAdd",!0),t}}),lookupTypeValues:Ember.computed("model.lookupType","lookupTypeList.value.[]",function(){var e=this,t=this.get("model.lookupType"),n=this.get("lookupTypeList.value")
return Ember.isEmpty(n)||(n.sort(this._sortValues),n=n.map(function(n){return{canModify:e._canModifyValue(n,t),value:n}})),Ember.ArrayProxy.create({content:Ember.A(n)})}),showOrganizeByType:Ember.computed("model.lookupType",function(){var e=this.get("model.lookupType")
return!Ember.isEmpty(e)&&e.indexOf("pricing_types")>0}),_canModifyValue:function(e,t){switch(t){case"inventory_types":if("Medication"===e)return!1
break
case"visit_types":if("Admission"===e)return!1
if("Imaging"===e)return!1
if("Lab"===e)return!1
if("Pharmacy"===e)return!1}return!0},_importLookupList:function(e){var t=this,a=Ember.get(this,"fileSystem"),i=Ember.get(this,"lookupTypeList"),s=Ember.get(i,"value")
a.fileToString(e).then(function(e){(0,n.default)(e,{trim:!0},function(e,n){n.forEach(function(e){var t=l(e,1)[0]
s.includes(t)||s.addObject(t)}),s.sort()
var a=Ember.get(t,"intl"),o=a.t("admin.lookup.alertImportListSaveMessage"),r=a.t("admin.lookup.alertImportListSaveTitle")
i.save().then(function(){Ember.get(t,"lookupLists").resetLookupList(Ember.get(i,"id")),t.displayAlert(r,o),t.set("importFile"),t.set("model.importFileName")})})})},_sortValues:function(e,t){return Ember.compare(e.toLowerCase(),t.toLowerCase())},activateKeyboard:Ember.on("init",function(){this.set("keyboardActivated",!0)}),updateListKeyboard:Ember.on((0,r.keyDown)("ctrl+KeyS"),(0,r.keyDown)("cmd+KeyS"),function(e){this.send("updateList"),e.preventDefault()}),actions:{addValue:function(){this.send("openModal","admin.lookup.edit",Ember.Object.create({isNew:!0}))},confirmDeleteValue:function(e){var t=this.get("intl"),n=t.t("admin.lookup.titles.deleteLookupValue"),a=t.t("messages.delete",{name:e})
this.displayConfirm(n,a,"deleteValue",Ember.Object.create({valueToDelete:e}))},deleteValue:function(e){var t=this.get("lookupTypeList"),n=t.get("value"),a=e.get("valueToDelete")
n.removeObject(a.toString()),t.save()},editValue:function(e){Ember.isEmpty(e)||this.send("openModal","admin.lookup.edit",Ember.Object.create({isNew:!1,originalValue:e.toString(),value:e.toString()}))},importList:function(){var e=this.get("importFile")
e&&e.type?this._importLookupList(e):this.displayAlert(this.get("intl").t("admin.lookup.alertImportListTitle"),this.get("intl").t("admin.lookup.alertImportListMessage"))},updateList:function(){var e=this,t=this.get("lookupTypeList")
t.save().then(function(){Ember.get(e,"lookupLists").resetLookupList(Ember.get(t,"id")),e.displayAlert(e.get("intl").t("admin.lookup.alertImportListUpdateTitle"),e.get("intl").t("admin.lookup.alertImportListUpdateMessage"))})},updateValue:function(e){var t=!1,n=this.get("lookupTypeList"),a=n.get("value"),i=e.get("value")
if(e.get("isNew"))t=!0
else{var s=e.get("originalValue")
i!==s&&(a.removeObject(s),t=!0)}t&&(a.addObject(i),a=a.sort(this._sortValues),n.set("value",a),this.send("updateList"))}}})}),define("hospitalrun/admin/lookup/edit/controller",["exports","hospitalrun/mixins/is-update-disabled"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{editController:Ember.inject.controller("admin/lookup"),showUpdateButton:!0,updateButtonAction:"update",updateButtonText:Ember.computed("model.isNew",function(){var e=this.get("intl")
return this.get("model.isNew")?e.t("buttons.add"):e.t("buttons.update")}),actions:{cancel:function(){this.send("closeModal")},update:function(){Ember.isEmpty(this.get("model.value"))||(this.get("editController").send("updateValue",this.get("model")),this.send("closeModal"))}}})}),define("hospitalrun/admin/lookup/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Dnj5sdO8",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[25,"t",[[25,"if",[[20,["model","isNew"]],"admin.lookup.edit.template.addTitle","admin.lookup.edit.template.editTitle"],null]],null],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton","action"],[[20,["model"]],false,"update"]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["admin.lookup.edit.template.labelTitle"],null],"value","lookup-type-value"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/lookup/edit/template.hbs"}})}),define("hospitalrun/admin/lookup/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("admin.lookup.pageTitle")}),model:function(){var e=this
return this.store.findAll("lookup").catch(function(t){return e.send("error",t)})},actions:{deleteValue:function(e){this.controller.send("deleteValue",e)}}})}),define("hospitalrun/admin/lookup/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"KwTtNw1k",block:'{"symbols":["form","lookupTypeValue","form"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"component",[[19,3,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","selected"],["col-xs-3 lookup-type form-input-group",[25,"t",["labels.lookupType"],null],"lookupType",[20,["lookupTypes"]],"value","name",[20,["model","lookupType"]]]]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n    "],[6,"h3"],[9,"class","panel-title"],[7],[1,[18,"lookupTitle"],false],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.value"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["lookupTypeValues"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[9,"class","lookup-type-value"],[7],[1,[19,2,["value"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,2,["canModify"]]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editValue",[19,2,["value"]]],[["bubbles"],[false]]],[7],[0,"\\n                "],[1,[25,"t",["labels.edit"],null],false],[0,"\\n              "],[8],[0,"\\n              "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"confirmDeleteValue",[19,2,["value"]]],[["bubbles"],[false]]],[7],[0,"\\n                "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["labels.delete"],null],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n    "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"addValue"]],[7],[1,[25,"t",["buttons.addValue"],null],false],[8],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["lookupTypeList"]],false]],{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[6,"div"],[9,"class","col-sm-4"],[7],[0,"\\n          "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["labels.userCanAddNewValue"],null],"userCanAdd"]]],false],[0,"\\n          "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"updateList"]],[7],[1,[25,"t",["buttons.update"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"if",[[20,["showOrganizeByType"]]],null,{"statements":[[0,"          "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],["Organize Pricing By Type","organizeByType","col-sm-4"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"div"],[9,"class","col-sm-4"],[7],[0,"\\n          "],[1,[25,"file-upload",null,[["label","property","selectedFile"],[[25,"t",["labels.importFile"],null],"importFileName",[20,["importFile"]]]]],false],[0,"\\n          "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"importList"]],[7],[1,[25,"t",["buttons.import"],null],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/lookup/template.hbs"}})}),define("hospitalrun/admin/print-header/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideCancelButton:!0,updateCapability:"update_config",afterUpdate:function(){this.displayAlert(this.get("intl").t("admin.header.titles.optionsSaved"),this.get("intl").t("admin.header.messages.headerSaved"))}})}),define("hospitalrun/admin/print-header/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro","hospitalrun/utils/unauthorized-error"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,newTitle:(0,n.t)("admin.header.newTitle"),editTitle:(0,n.t)("admin.header.editTitle"),model:function(){var e=this
return new Ember.RSVP.Promise(function(t,n){e.get("store").find("option","print_header").then(function(e){t(e)},function(i){if(i instanceof a.default)n(i)
else{var s=e.get("store"),o=s.push(s.normalize("option",{id:"print_header",value:{facilityName:e.get("intl").t("admin.header.facilityName"),headerLine1:e.get("intl").t("admin.header.headerLine1")}}))
t(o)}})})}})}),define("hospitalrun/admin/print-header/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Dm5J9gX8",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.header.facilityName"],null],"value.facilityName"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.header.headerLine1"],null],"value.headerLine1"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.header.headerLine2"],null],"value.headerLine2"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.header.headerLine3"],null],"value.headerLine3"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["admin.header.logoURL"],null],"value.logoURL"]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/print-header/template.hbs"}})}),define("hospitalrun/admin/query/controller",["exports","hospitalrun/mixins/edit-panel-props","hospitalrun/utils/select-values"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{hideCancelButton:!0,showUpdateButton:!0,updateButtonAction:"query",updateButtonText:"Query",objectTypeList:["appointment","imaging","inv-location","inv-purchase","inv-request","inventory","invoice","lab","medication","patient","photo","procedure","visit","vital"],objectTypes:Ember.computed.map("objectTypeList",n.default.selectValuesMap),actions:{query:function(){var e=this.get("fieldName"),t=this.get("objectType"),n={containsValue:{value:this.get("queryValue"),keys:[e]}}
this.store.query(t,n).then(function(e){if(Ember.isEmpty(e))this.set("errorMessage","Query returned no results."),this.set("haveError",!0),this.set("showQueryResults",!1)
else{var t=void 0,n=["id"],a=[]
e.get("firstObject").eachAttribute(function(e){n.push(e)}),e.forEach(function(e){var i=[]
n.forEach(function(n){t=e.get(n),Ember.isEmpty(t)||i.push({name:n,value:t})}),a.push(i)}),this.set("resultRows",a),this.set("haveError",!1),this.set("showQueryResults",!0)}}.bind(this),function(e){this.set("errorMessage",e),this.set("haveError",!0),this.set("showQueryResults",!1)}.bind(this))}}})}),define("hospitalrun/admin/query/route",["exports","ember-simple-auth/mixins/authenticated-route-mixin","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(n.default,t.default,{beforeModel:function(){this.currentUserCan("query_db")||this.transitionTo("application")}})}),define("hospitalrun/admin/query/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Vsse18ol",block:'{"symbols":["resultRow","result","form"],"statements":[[0,"\\n"],[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"component",[[19,3,["select"]]],[["class","label","property","content","selected"],["col-xs-3 form-input-group","Object Type","objectType",[20,["objectTypes"]],[20,["objectType"]]]]],false],[0,"\\n        "],[8],[0,"\\n        "],[1,[25,"component",[[19,3,["input"]]],[["label","property"],["Field Name","fieldName"]]],false],[0,"\\n        "],[1,[25,"component",[[19,3,["input"]]],[["label","property"],["Query Value","queryValue"]]],false],[0,"\\n"]],"parameters":[3]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["haveError"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-danger"],[9,"role","alert"],[7],[1,[18,"errorMessage"],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["showQueryResults"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"Query Results"],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"each",[[20,["resultRows"]]],null,{"statements":[[0,"          "],[6,"table"],[9,"class","table"],[7],[0,"\\n            "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n              "],[6,"th"],[7],[0,"Field"],[8],[0,"\\n              "],[6,"th"],[7],[0,"Value"],[8],[0,"\\n            "],[8],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"th"],[7],[1,[18,"name"],false],[8],[0,"\\n                "],[6,"td"],[7],[1,[18,"value"],false],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/query/template.hbs"}})}),define("hospitalrun/admin/roles/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/user-roles","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{currentRole:"",disabledAction:!1,hideCancelButton:!0,updateCapability:"define_user_roles",filteredRoles:Ember.computed.filter("userRoles",function(e){return"System Administrator"!==e.name}),availableCapabilities:[{name:"admin",capabilities:["admin","loadDb","updateConfig","defineUserRoles"]},{name:"appointments",capabilities:["appointments","addAppointment"]},{name:"billing",capabilities:["billing","addBillingDiagnosis","addCharge","addPricing","addPricingProfile","addInvoice","addPayment","deleteInvoice","deletePricing","deletePricingProfile","editInvoice","invoices","overrideInvoice","pricing","cashier","listPaidInvoices"]},{name:"patients",capabilities:["patients","addAllergy","addDiagnosis","addNote","addOperativePlan","addOperationReport","addPhoto","addPatient","addProcedure","addSocialwork","addVisit","addVitals","admitPatient","deleteNote","deletePhoto","deletePatient","deleteAppointment","deleteDiagnosis","deleteProcedure","deleteSocialwork","deleteVitals","deleteVisit","dischargePatient","patientReports","visits"]},{name:"medication",capabilities:["medication","addMedication","deleteMedication","fulfillMedication"]},{name:"labs",capabilities:["labs","addLab","completeLab","deleteLab"]},{name:"imaging",capabilities:["imaging","addImaging","completeImaging","deleteImaging"]},{name:"incident",capabilities:["incident","addIncident","addIncidentCategory","deleteIncident","deleteIncidentCategory","manageIncidents","generateIncidentReport"]},{name:"inventory",capabilities:["inventory","addInventoryRequest","addInventoryItem","addInventoryPurchase","adjustInventoryLocation","deleteInventoryItem","fulfillInventory"]}],missingCapablities:Ember.computed("availableCapabilities","defaultCapabilities",function(){var e=this.get("availableCapabilities"),t=Object.keys(e),n=Object.keys(this.get("defaultCapabilities")),a=[]
return n.forEach(function(n){var i=!1
t.forEach(function(t){e[t].capabilities.includes(n.camelize())&&(i=!0)}),i||a.push(n+" - "+n.camelize())}),a}),capabilitySections:Ember.computed.map("availableCapabilities",function(e){var t=this,n=[]
return e.capabilities.forEach(function(e){n.push({key:e,name:t.get("intl").t("admin.roles.capability."+e)})}),{name:this.get("intl").t("admin.roles.capability."+e.name),capabilities:n}}),actions:{selectRole:function(e){var t=this,n=this.get("model").findBy("id",e.dasherize())
this.set("currentRole",e),this.set("roleToUpdate",n)
try{if(n){var a=n.get("capabilities")
this.get("availableCapabilities").forEach(function(e){e.capabilities.forEach(function(e){a.includes(e)?t.set(e,!0):t.set(e,!1)})})}else{var i=this.get("defaultCapabilities")
Object.keys(i).forEach(function(n){i[n].includes(e)?t.set(n.camelize(),!0):t.set(n.camelize(),!1)})}}catch(s){console.log("ex setting role:",s)}},update:function(){var e=this,t=this.get("currentRole"),n=this.get("roleToUpdate")
Ember.isEmpty(n)&&(n=this.get("store").createRecord("user-role",{id:t.dasherize(),name:t}))
var a=[]
this.get("availableCapabilities").forEach(function(t){t.capabilities.forEach(function(t){!0===e.get(t)&&a.push(t)})}),n.set("capabilities",a),n.save().then(function(){e.displayAlert(e.get("intl").t("admin.roles.titles.roleSaved"),e.get("intl").t("admin.roles.messages.roleSaved",{roleName:t}))})}}})}),define("hospitalrun/admin/roles/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,newTitle:(0,n.t)("admin.userRoles"),editTitle:(0,n.t)("admin.userRoles"),model:function(){return this.get("store").findAll("user-role")}})}),define("hospitalrun/admin/roles/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"usL21ov9",block:'{"symbols":["form","capabilitySection","capability","userRole"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"        "],[6,"div"],[9,"class","form-input-group has-success"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.role"],null],false],[8],[0,"\\n          "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"selectRole"],[["value"],["target.value"]]],null],[9,"class","form-control role-select"],[7],[0,"\\n            "],[6,"option"],[9,"disabled",""],[10,"selected",[25,"is-not",[[20,["selectedRole"]]],null],null],[7],[0,"\\n            "],[8],[0,"\\n"],[4,"each",[[20,["filteredRoles"]]],null,{"statements":[[0,"              "],[6,"option"],[10,"value",[26,[[19,4,["name"]]]]],[10,"selected",[25,"eq",[[20,["selectedRole"]],[19,4,["name"]]],null],null],[7],[0,"\\n                "],[1,[19,4,["name"]],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["capabilitySections"]]],null,{"statements":[[0,"          "],[6,"div"],[9,"class","detail-section"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n              "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n                "],[1,[19,2,["name"]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","detail-section-content"],[7],[0,"\\n"],[4,"each",[[19,2,["capabilities"]]],null,{"statements":[[0,"                "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],[[19,3,["name"]],[19,3,["key"]],[25,"concat",["checkbox"," checkbox-",[19,3,["key"]]],null]]]],false],[0,"\\n"]],"parameters":[3]},null],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[2]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/roles/template.hbs"}})})
define("hospitalrun/admin/route",["exports","hospitalrun/routes/abstract-module-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addCapability:"add_user",allowSearch:!1,moduleName:"admin",sectionTitle:"Admin",editPath:Ember.computed(function(){return"users.edit"}),deletePath:Ember.computed(function(){return"users.delete"})})}),define("hospitalrun/admin/textreplace/controller",["exports","ember-validations"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{hideCancelButton:!0,updateCapability:"update_config",createExpansion:function(){var e=this.get("store").createRecord("text-expansion")
this.set("newExpansion",e)}.on("init"),actions:{cancelExpansion:function(){this.createExpansion()}},validations:{"newExpansion.from":{presence:!0},"newExpansion.to":{presence:!0}}})}),define("hospitalrun/admin/textreplace/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("admin.textReplacements.pageTitle")}),hideNewButton:!0,model:function(){return this.get("store").findAll("text-expansion").then(function(e){return e.filter(function(e){return!e.get("isNew")})})},setupController:function(e,t){this._super(e,t),e.createExpansion()},actions:{addExpansion:function(e){var t=this
e.save().then(function(){t.refresh()}).catch(function(){t.refresh()})},deleteExpansion:function(e){var t=this
e.deleteRecord(),e.save().then(function(){t.refresh()}).catch(function(){t.refresh()})}}})}),define("hospitalrun/admin/textreplace/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qFCzIzJN",block:'{"symbols":["form","expansion"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[6,"p"],[7],[1,[25,"t",["admin.textReplacements.replDesc"],null],false],[8],[0,"\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.from"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.to"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tbody"],[7],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"    "],[6,"tr"],[7],[0,"\\n      "],[6,"td"],[7],[0,"#"],[1,[19,2,["from"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,2,["to"]],false],[8],[0,"\\n      "],[6,"td"],[7],[0,"\\n        "],[6,"button"],[9,"class","pull-right btn button-default on-white"],[3,"action",[[19,0,[]],"deleteExpansion",[19,2,[]]]],[7],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"],[6,"div"],[9,"class","panel"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[6,"h3"],[7],[1,[25,"t",["admin.textReplacements.createNew"],null],false],[8],[0,"\\n"],[4,"em-form",null,[["model","action","formLayout","showErrorsOnFocusIn","submitButton"],[[20,["newExpansion"]],"addExpansion","horizontal","true",false]],{"statements":[[0,"        "],[1,[25,"component",[[19,1,["input"]]],[["property","label","placeholder"],["from",[25,"t",["labels.from"],null],[25,"t",["admin.textReplacements.toReplace"],null]]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["property","label","placeholder"],["to",[25,"t",["labels.to"],null],[25,"t",["admin.textReplacements.replaceWith"],null]]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n    "],[6,"button"],[9,"class","btn button-primary on-white"],[10,"disabled",[18,"isInvalid"],null],[3,"action",[[19,0,[]],"addExpansion",[20,["newExpansion"]]]],[7],[1,[25,"t",["buttons.add"],null],false],[8],[0,"\\n    "],[6,"button"],[9,"class","btn button-default on-white"],[3,"action",[[19,0,[]],"cancelExpansion"]],[7],[1,[25,"t",["buttons.cancel"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/textreplace/template.hbs"}})}),define("hospitalrun/admin/visit-forms/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/visit-types"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{hideCancelButton:!0,updateCapability:"update_config",visitTypesList:Ember.computed.alias("model.visitTypesList"),visitFormsForEditing:Ember.computed("model.visitForms","visitTypes",function(){var e=this.get("model.visitForms")
return this.get("visitTypes").map(function(t){return e[t.value]||(e[t.value]="initial"),{type:t.value,form:e[t.value]}})}),visitTemplateIds:["initial","followup"],visitTemplates:Ember.computed(function(){var e=this.get("intl")
return this.get("visitTemplateIds").map(function(t){return{id:t,value:e.t("admin.visitForms.labels."+t)}})}),afterUpdate:function(){this.displayAlert(this.get("intl").t("admin.address.titles.optionsSaved"),this.get("intl").t("admin.address.messages.addressSaved"))},actions:{selectForm:function(e,t){this.get("model.visitForms")[e]=t.target.value}}})}),define("hospitalrun/admin/visit-forms/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,editTitle:(0,n.t)("admin.visitForms.titles.visitForms"),newTitle:Ember.computed.alias("editTitle"),model:function(){var e=this.get("store"),t={visitFormsOption:e.find("option","visit_forms"),visitTypes:e.find("lookup","visit_types")}
return new Ember.RSVP.Promise(function(e,n){Ember.RSVP.hashSettled(t).then(function(t){var n=Ember.Object.create()
"fulfilled"===t.visitTypes.state&&n.set("visitTypesList",t.visitTypes.value),"fulfilled"===t.visitFormsOption.state?n.set("visitForms",t.visitFormsOption.value):n.set("visitForms",{}),e(n)},n)})}})}),define("hospitalrun/admin/visit-forms/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"6/mCKKmP",block:'{"symbols":["form","visitForm","visitTemplate"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["admin.visitForms.labels.visitType"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["admin.visitForms.labels.form"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["visitFormsForEditing"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[7],[1,[19,2,["type"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n            "],[6,"div"],[9,"class","form-input-group"],[7],[0,"\\n              "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"selectForm",[19,2,["type"]]],null],null],[9,"class","form-control role-select"],[7],[0,"\\n"],[4,"each",[[20,["visitTemplates"]]],null,{"statements":[[0,"                  "],[6,"option"],[10,"value",[26,[[19,3,["id"]]]]],[10,"selected",[25,"eq",[[19,2,["form"]],[19,3,["id"]]],null],null],[7],[0,"\\n                    "],[1,[19,3,["value"]],false],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"      "],[8],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/visit-forms/template.hbs"}})}),define("hospitalrun/admin/workflow/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideCancelButton:!0,updateCapability:"update_config",afterUpdate:function(){this.displayAlert(this.get("intl").t("admin.workflow.titles.optionsSaved"),this.get("intl").t("admin.workflow.messages.optionsSaved"))}})}),define("hospitalrun/admin/workflow/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({hideNewButton:!0,editTitle:(0,n.t)("admin.workflow.editTitle"),model:function(){var e=this.get("store")
return e.find("option","workflow_options").catch(function(){return e.push(e.normalize("option",{id:"workflow_options",value:{admissionDeposit:!1,clinicPrepayment:!1,followupPrepayment:!1,outpatientLabPrepayment:!1,outpatientImagingPrepayment:!1,outpatientMedicationPrepayment:!1}}))})}})}),define("hospitalrun/admin/workflow/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"RKFLVQhR",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.admissionDepositLabel"],null],"value.admissionDeposit"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.clinicPrepaymentLabel"],null],"value.clinicPrepayment"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.followupPrepaymentLabel"],null],"value.followupPrepayment"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.outpatientLabLabel"],null],"value.outpatientLabPrepayment"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.outpatientImagingLabel"],null],"value.outpatientImagingPrepayment"]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["admin.workflow.outpatientMedicationLabel"],null],"value.outpatientMedicationPrepayment"]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/admin/workflow/template.hbs"}})}),define("hospitalrun/allergy/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({intl:Ember.inject.service(),editController:Ember.computed.alias("model.editController"),newAllergy:!1,additionalButtons:Ember.computed("model.isNew",function(){var e=Ember.get(this,"model"),t=Ember.get(this,"intl").t("buttons.delete")
if(!Ember.get(e,"isNew"))return[{class:"btn btn-default warning",buttonAction:"deleteAllergy",buttonIcon:"octicon octicon-x",buttonText:t}]}),title:Ember.computed("model",function(){var e=Ember.get(this,"model"),t=Ember.get(this,"intl")
return Ember.get(e,"isNew")?t.t("allergies.titles.addAllergy"):t.t("allergies.titles.editAllergy")}),beforeUpdate:function(){var e=Ember.get(this,"model")
return Ember.set(this,"newAllergy",Ember.get(e,"isNew")),Ember.RSVP.Promise.resolve()},afterUpdate:function(e){Ember.get(this,"newAllergy")?(Ember.get(this,"editController").send("addAllergy",e),Ember.set(this,"name","")):this.send("closeModal")},actions:{cancel:function(){this.send("closeModal")},deleteAllergy:function(){var e=Ember.get(this,"model")
Ember.get(this,"editController").send("deleteAllergy",e)}}})}),define("hospitalrun/allergy/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"PMiE1RGH",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["title","updateButtonText","hideCancelButton","isUpdateDisabled","updateButtonAction","additionalButtons"],[[20,["title"]],[20,["updateButtonText"]],true,[20,["isUpdateDisabled"]],[20,["updateButtonAction"]],[20,["additionalButtons"]]]],{"statements":[[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["class","label","property"],["col-xs-12 form-group required test-allergy",[25,"t",["allergies.labels.allergyName"],null],"name"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/allergy/edit/template.hbs"}})}),define("hospitalrun/app",["exports","hospitalrun/resolver","ember-load-initializers","hospitalrun/config/environment"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=Ember.Application.extend({modulePrefix:a.default.modulePrefix,podModulePrefix:a.default.podModulePrefix,Resolver:t.default});(0,n.default)(i,a.default.modulePrefix),e.default=i}),define("hospitalrun/appointments/calendar/controller",["exports","hospitalrun/appointments/index/controller","hospitalrun/mixins/appointment-statuses","moment","hospitalrun/mixins/visit-types","hospitalrun/utils/select-values"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,{appointmentType:null,endDate:null,location:null,provider:null,queryParams:["appointmentType","endDate","provider","status","startDate","location","viewType"],startDate:null,status:null,viewType:"agendaWeek",appointmentsController:Ember.inject.controller("appointments"),locations:Ember.computed.alias("appointmentsController.locationList.value"),physicians:Ember.computed.alias("appointmentsController.physicianList.value"),calendarDate:Ember.computed("startDate",function(){var e=Ember.get(this,"startDate")
if(!Ember.isEmpty(e))return(0,a.default)(parseInt(e))}),locationList:Ember.computed("locations",function(){return s.default.selectValues(Ember.get(this,"locations"),!0)}),physicianList:Ember.computed("physicians",function(){return s.default.selectValues(Ember.get(this,"physicians"),!0)}),_getSelectedFilteringCriteria:function(){var e={status:Ember.get(this,"model.selectedStatus"),type:Ember.get(this,"model.selectedAppointmentType"),provider:Ember.get(this,"model.selectedProvider"),location:Ember.get(this,"model.selectedLocation")}
return{status:Ember.isEmpty(e.status)?null:e.status,type:Ember.isEmpty(e.type)?null:e.type,provider:Ember.isEmpty(e.provider)?null:e.provider,location:Ember.isEmpty(e.location)?null:e.location}},actions:{clearFilteringCriteria:function(){Ember.set(this,"model.selectedStatus",null),Ember.set(this,"model.selectedAppointmentType",null),Ember.set(this,"model.selectedProvider",null),Ember.set(this,"model.selectedLocation",null),this.send("filter")},createNewAppointment:function(e){var t=this.store.createRecord("appointment",{appointmentType:"Admission",allDay:!1,selectPatient:!0,startDate:e.local().toDate()})
this.send("editAppointment",t)},filter:function(){var e=this._getSelectedFilteringCriteria()
this.setProperties({appointmentType:e.type,provider:e.provider,status:e.status,location:e.location})},handleVisualConfigurationChanged:function(e){this.setProperties(e)},navigateToAppointment:function(e){this.send("editAppointment",e.referencedAppointment)},updateAppointment:function(e){var t=this,n=e.referencedAppointment,a=e.end.local().toDate(),i=e.start.local().toDate()
Ember.set(n,"startDate",i),Ember.set(n,"endDate",a),n.save().catch(function(e){t.send("error",e,"appointments.calendar")})}}})}),define("hospitalrun/appointments/calendar/route",["exports","hospitalrun/appointments/index/route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({dateIntervalEnd:null,dateIntervalStart:null,editReturn:"appointments.calendar",filterParams:["appointmentType","provider","status","location"],modelName:"appointment",pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("appointments.calendarTitle")}),queryParams:{appointmentType:{refreshModel:!0},endDate:{refreshModel:!0},provider:{refreshModel:!0},status:{refreshModel:!0},startDate:{refreshModel:!0},location:{refreshModel:!0},viewType:{refreshModel:!1}},model:function(e){return this._super(e).then(this._createCalendarEvents.bind(this)).then(function(t){return t.selectedAppointmentType=e.appointmentType,t.selectedProvider=e.provider,t.selectedStatus=e.status,t.selectedLocation=e.location,t})},_createCalendarEvent:function(e){var t=Ember.get(e,"patient.displayName"),n=Ember.get(e,"provider")
Ember.isEmpty(n)||(t=t+"\n"+n)
var a={allDay:Ember.get(e,"allDay"),title:t,start:Ember.get(e,"startDate"),end:Ember.get(e,"endDate"),referencedAppointment:e},i=Ember.get(e,"location")
Ember.isEmpty(i)&&(i=Ember.get(this,"intl").t("appointments.labels.noLocation").toString())
return a.resourceId=i.toLowerCase(),a},_createCalendarEvents:function(e){var t=this,n=[],a=[]
return e.forEach(function(e){var i=t._createCalendarEvent(e)
n.push(i)
var s=Ember.get(i,"resourceId")
a.findBy("id",s)||a.push({id:s,title:Ember.get(i,"referencedAppointment.location")})}),Ember.Object.create({events:n,resources:a})},_modelQueryParams:function(e){var t=e.endDate,n=e.startDate
return null===t||null===n?this._super(e):{options:{startkey:[parseInt(n),parseInt(n),this._getMinPouchId()],endkey:[parseInt(t),parseInt(t),this._getMaxPouchId()]},mapReduce:"appointments_by_date"}}})}),define("hospitalrun/appointments/calendar/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"yamPkBfc",block:'{"symbols":["form"],"statements":[[6,"div"],[9,"class","panel panel-info"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"          "],[6,"div"],[9,"class","row"],[7],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.status"],null],"selectedStatus",[20,["appointmentStatusesWithEmpty"]]]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.type"],null],"selectedAppointmentType",[20,["visitTypesWithEmpty"]]]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.provider"],null],"selectedProvider",[20,["physicianList"]]]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.location"],null],"selectedLocation",[20,["locationList"]]]]],false],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"        "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n          "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"clearFilteringCriteria"]],[7],[1,[25,"t",["buttons.clear"],null],false],[8],[0,"\\n          "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"filter"]],[7],[1,[25,"t",["buttons.filter"],null],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[1,[25,"calendar-control",null,[["events","defaultDate","defaultView","onDayClick","onEventClick","onEventDrop","onEventResize","onVisualConfigurationChanged","userCanEdit"],[[20,["model","events"]],[20,["calendarDate"]],[20,["viewType"]],[25,"action",[[19,0,[]],"createNewAppointment"],null],[25,"action",[[19,0,[]],"navigateToAppointment"],null],[25,"action",[[19,0,[]],"updateAppointment"],null],[25,"action",[[19,0,[]],"updateAppointment"],null],[25,"action",[[19,0,[]],"handleVisualConfigurationChanged"],null],[20,["canEdit"]]]]],false],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/appointments/calendar/template.hbs"}})}),define("hospitalrun/appointments/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:"Delete Appointment",afterDeleteAction:Ember.computed("model.deleteFromPatient",function(){return this.get("model.deleteFromPatient")?"appointmentDeleted":"closeModal"})})}),define("hospitalrun/appointments/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"TMCskipb",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.appointment.names.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/appointments/delete/template.hbs"}})}),define("hospitalrun/appointments/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/appointment-statuses","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/visit-types"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,{findPatientVisits:!1,updateCapability:"add_appointment",appointmentsController:Ember.inject.controller("appointments"),physicianList:Ember.computed.alias("appointmentsController.physicianList"),surgeryLocationList:Ember.computed.alias("appointmentsController.surgeryLocationList"),visitLocationList:Ember.computed.alias("appointmentsController.locationList"),visitTypesList:Ember.computed.alias("appointmentsController.visitTypesList"),cancelAction:Ember.computed("model.returnTo",function(){var e=Ember.get(this,"model.returnTo")
return Ember.isEmpty(e)?this._super():"returnTo"}),isAdmissionAppointment:Ember.computed("model.appointmentType",function(){var e=Ember.get(this,"model")
return"Admission"===Ember.get(e,"appointmentType")}),lookupListsToUpdate:Ember.computed("model.appointmentType",function(){var e=[{name:"physicianList",property:"model.provider",id:"physician_list"}]
"Surgery"===Ember.get(this,"model.appointmentType")?e.push({name:"visitLocationList",property:"model.location",id:"visit_location_list"}):e.push({name:"surgeryLocationList",property:"model.location",id:"procedure_locations"})}),showTime:Ember.computed("model.allDay","isAdmissionAppointment",function(){var e=Ember.get(this,"model.allDay"),t=Ember.get(this,"isAdmissionAppointment")
return!e&&t}),afterUpdate:function(e){var t=Ember.get(this,"intl"),n={patient:Ember.get(e,"patient.displayName")},a=t.t("appointments.messages.appointmentSaved",n),i=t.t("appointments.titles.appointmentSaved")
this.displayAlert(i,a)},actions:{appointmentTypeChanged:function(){var e=Ember.get(this,"model"),t=Ember.get(this,"isAdmissionAppointment")
Ember.set(e,"allDay",t)}}})}),define("hospitalrun/appointments/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","moment","hospitalrun/mixins/patient-list-route","hospitalrun/macro"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,{editTitle:(0,s.t)("appointments.editTitle"),modelName:"appointment",newButtonText:(0,s.t)("appointments.buttons.newButton"),newTitle:(0,s.t)("appointments.newTitle"),getNewData:function(e){var t=Ember.get(this,"idParam"),n={appointmentType:"Admission",allDay:!0,selectPatient:!0,startDate:new Date}
return Ember.isEmpty(t)||"newsurgery"!==e[t]||(n.appointmentType="Surgery",n.allDay=!1,n.endDate=(0,a.default)().add("1","hours").toDate(),n.returnTo="appointments.theater"),Ember.RSVP.resolve(n)},getScreenTitle:function(e){if("Surgery"===Ember.get(e,"appointmentType")){var t=Ember.get(this,"intl")
return Ember.get(e,"isNew")?t.t("appointments.titles.newSurgicalAppointment"):t.t("appointments.titles.editSurgicalAppointment")}return this._super(e)},model:function(e){var t=this.get("idParam"),n=e[t]
if(Ember.isEmpty(t)||0!==n.indexOf("new"))return this._super(e)
if(Ember.isEmpty(e.forPatientId)){if(Ember.isEmpty(e.forVisitId))return this._createNewRecord(e)
var a=this._super(e)
return this._setVisitOnModel(a,e.forVisitId)}var i=this._super(e)
return this._setPatientOnModel(i,e.forPatientId)}})}),define("hospitalrun/appointments/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"sVXLqPPN",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","selectPatient"]]],null,{"statements":[[0,"      "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["models.patient.names.singular"],null],[20,["patientList"]],[20,["selectedPatient"]],"required test-patient-input"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","returnTo","returnToContext","disablePatientLink","class"],[[20,["model","patient"]],"appointments.edit",[20,["model","id"]],[20,["model","isNew"]],"clickable"]]],false],[0,"\\n"]],"parameters":[]}],[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["isAdmissionAppointment"]]],null,{"statements":[[0,"        "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"startDate",[25,"t",["models.appointment.labels.startDate"],null],[20,["showTime"]],"col-sm-4 required test-appointment-start"]]],false],[0,"\\n        "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"endDate",[25,"t",["models.appointment.labels.endDate"],null],[20,["showTime"]],"col-sm-4 required test-appointment-end"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[1,[25,"date-time-picker",null,[["datePickerClass","label","model"],["required test-appointment-date",[25,"t",["labels.date"],null],[20,["model"]]]]],false],[0,"\\n"]],"parameters":[]}],[0,"      "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],[[25,"t",["models.appointment.labels.allDay"],null],"allDay","col-sm-2 appointment-all-day"]]],false],[0,"\\n    "],[8],[0,"\\n\\n"],[4,"if",[[25,"eq",[[20,["model","appointmentType"]],"Surgery"],null]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"select-or-typeahead",null,[["className","form","model","property","label","list","selection"],["col-sm-6 test-appointment-with",[19,1,[]],[20,["model"]],"provider",[25,"t",["models.appointment.labels.provider"],null],[20,["physicianList"]],[20,["model","provider"]]]]],false],[0,"\\n        "],[1,[25,"select-or-typeahead",null,[["className","form","model","property","label","list","selection"],["col-sm-6 test-appointment-location",[19,1,[]],[20,["model"]],"location",[25,"t",["models.appointment.labels.location"],null],[20,["surgeryLocationList"]],[20,["model","location"]]]]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"component",[[19,1,["select"]]],[["content","optionLabelPath","optionValuePath","property","class","label","id","action"],[[20,["visitTypes"]],"value","id","appointmentType","form-input-group col-sm-6 required test-appointment-type",[25,"t",["models.appointment.labels.type"],null],"appointmentType",[25,"action",[[19,0,[]],"appointmentTypeChanged"],null]]]],false],[0,"\\n        "],[1,[25,"select-or-typeahead",null,[["className","form","model","property","label","list","selection"],["col-sm-6 test-appointment-with",[19,1,[]],[20,["model"]],"provider",[25,"t",["models.appointment.labels.provider"],null],[20,["physicianList"]],[20,["model","provider"]]]]],false],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"select-or-typeahead",null,[["className","form","model","property","label","list","selection"],["col-sm-6 test-appointment-location",[19,1,[]],[20,["model"]],"location",[25,"t",["models.appointment.labels.location"],null],[20,["visitLocationList"]],[20,["model","location"]]]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["select"]]],[["class","property","label","content"],["form-input-group col-sm-3 test-appointment-status","status",[25,"t",["models.appointment.labels.status"],null],[20,["appointmentStatuses"]]]]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[1,[25,"expand-text",null,[["label","property","rows","form"],[[25,"t",["models.appointment.labels.notes"],null],"notes",3,[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/appointments/edit/template.hbs"}})}),define("hospitalrun/appointments/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{startKey:[],canAddVisit:Ember.computed(function(){return this.currentUserCan("add_visit")}),canEdit:Ember.computed(function(){return this.currentUserCan("add_appointment")}),canDelete:Ember.computed(function(){return this.currentUserCan("delete_appointment")}),sortProperties:["startDate","endDate"],sortAscending:!0})}),define("hospitalrun/appointments/index/route",["exports","hospitalrun/routes/abstract-index-route","moment","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editReturn:"appointments.index",modelName:"appointment",newButtonText:Ember.computed("intl.locale",function(){return(0,a.t)("appointments.buttons.newButton")}),pageTitle:Ember.computed("intl.locale",function(){return(0,a.t)("appointments.thisWeek")}),_getStartKeyFromItem:function(e){var t=e.get("endDate"),n=this._getPouchIdFromItem(e),a=e.get("startDate")
return t&&""!==t&&(t=new Date(t)).getTime&&(t=t.getTime()),a&&""!==a&&(a=new Date(a)).getTime&&(a=a.getTime()),[a,t,n]},_modelQueryParams:function(){var e=(0,n.default)().endOf("week").toDate().getTime()
return{options:{startkey:[(0,n.default)().startOf("week").toDate().getTime(),null,null],endkey:[e,e,this._getMaxPouchId()]},mapReduce:"appointments_by_date"}},actions:{editAppointment:function(e){e.set("returnTo",this.get("editReturn")),this.send("editItem",e)}}})}),define("hospitalrun/appointments/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"0ZE4Ey/q",block:'{"symbols":["appointment"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[0,"  "],[6,"table"],[9,"class","table"],[7],[0,"\\n    "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.appointmentDate"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.patient.labels.name"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.type"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.location"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.provider"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.status"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.appointment.labels.notes"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"      "],[12,"appointments/item",[1]],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/appointments/index/template.hbs"}})}),define("hospitalrun/appointments/item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qLZHwOz6",block:'{"symbols":[],"statements":[[6,"tr"],[10,"class",[26,[[25,"if",[[20,["canEdit"]],"clickable"],null]]]],[3,"action",[[19,0,[]],"editAppointment",[20,["appointment"]]]],[7],[0,"\\n  "],[6,"td"],[9,"class","appointment-date"],[7],[0,"\\n    "],[1,[20,["appointment","formattedAppointmentDate"]],false],[0,"\\n  "],[8],[0,"\\n  "],[6,"td"],[7],[1,[20,["appointment","patient","displayName"]],false],[8],[0,"\\n  "],[6,"td"],[7],[1,[20,["appointment","appointmentType"]],false],[8],[0,"\\n  "],[6,"td"],[7],[1,[20,["appointment","location"]],false],[8],[0,"\\n  "],[6,"td"],[7],[1,[20,["appointment","provider"]],false],[8],[0,"\\n  "],[6,"td"],[9,"class","appointment-status"],[7],[1,[20,["appointment","displayStatus"]],false],[8],[0,"\\n  "],[6,"td"],[7],[1,[20,["appointment","notes"]],false],[8],[0,"\\n  "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"      "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editAppointment",[20,["appointment"]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddVisit"]]],null,{"statements":[[4,"if",[[25,"eq",[[20,["appointment","displayStatus"]],"Scheduled"],null]],null,{"statements":[[0,"        "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"checkIn",[20,["appointment"]]],[["bubbles"],[false]]],[7],[0,"\\n          "],[6,"span"],[9,"class","glyphicon glyphicon-log-in"],[7],[8],[0,"\\n          "],[1,[25,"t",["visits.buttons.checkIn"],null],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"      "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[20,["appointment"]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/appointments/item/template.hbs"}})}),define("hospitalrun/appointments/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{addCapability:"add_appointment",allowSearch:!1,currentScreenTitle:(0,a.t)("appointments.currentScreenTitle"),editTitle:(0,a.t)("appointments.editTitle"),newTitle:(0,a.t)("appointments.newTitle"),moduleName:"appointments",newButtonText:(0,a.t)("appointments.buttons.newButton"),sectionTitle:(0,a.t)("appointments.sectionTitle"),actions:{checkIn:function(e){var t=e.get("patient"),n=e.getProperties("startDate","endDate","location","patient")
n.visitType=e.get("appointmentType"),n.examiner=e.get("provider"),n.notes=e.get("notes"),n.appointment=e,n.hidePatientSelection=!0,n.patient=t,n.returnTo="appointments",this.transitionTo("visits.edit","checkin").then(function(e){e.currentModel.setProperties(n),e.controller.getPatientDiagnoses(t,e.currentModel)}.bind(this))}},additionalModels:[{name:"physicianList",findArgs:["lookup","physician_list"]},{name:"locationList",findArgs:["lookup","visit_location_list"]},{name:"surgeryLocationList",findArgs:["lookup","procedure_locations"]},{name:"visitTypesList",findArgs:["lookup","visit_types"]}]})}),define("hospitalrun/appointments/search/controller",["exports","hospitalrun/appointments/index/controller","hospitalrun/mixins/appointment-statuses","hospitalrun/utils/select-values","hospitalrun/mixins/visit-types"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,{appointmentsController:Ember.inject.controller("appointments"),appointmentType:null,physicians:Ember.computed.alias("appointmentsController.physicianList.value"),physicianList:Ember.computed("physicians",function(){return a.default.selectValues(this.get("physicians"),!0)}),provider:null,queryParams:["appointmentType","provider","status","startKey","startDate"],selectedProvider:null,selectedStatus:null,sortProperties:null,startDate:null,startKey:[],status:null,visitTypesList:Ember.computed.alias("appointmentsController.visitTypesList"),actions:{search:function(){var e=this.get("model.selectedAppointmentType"),t={startKey:[],previousStartKey:null,previousStartKeys:[]},n=this.get("model.selectedProvider"),a=this.get("model.selectedStatus"),i=this.get("model.selectedStartingDate")
Ember.isEmpty(e)?t.appointmentType=null:t.appointmentType=e,Ember.isEmpty(n)?t.provider=null:t.provider=n,Ember.isEmpty(a)?t.status=null:t.status=a,Ember.isEmpty(i)||(t.startDate=i.getTime()),Ember.isEmpty(t)||this.setProperties(t)}}})}),define("hospitalrun/appointments/search/route",["exports","hospitalrun/appointments/index/route","hospitalrun/mixins/date-format","moment","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{editReturn:"appointments.search",filterParams:["appointmentType","provider","status"],modelName:"appointment",pageTitle:Ember.computed("intl.locale",function(){return(0,i.t)("appointments.searchTitle")}),queryParams:{appointmentType:{refreshModel:!0},provider:{refreshModel:!0},status:{refreshModel:!0},notes:{refreshModel:!0},startDate:{refreshModel:!0},startKey:{refreshModel:!0}},_modelQueryParams:function(e){var t=e.startDate,n=(t=Ember.isEmpty(t)?(0,a.default)():(0,a.default)(parseInt(t))).startOf("day").toDate().getTime(),i=t.endOf("day").toDate().getTime()
return{options:{startkey:[n,null,"appointment_"],endkey:[i,i,"appointment_"+i]},mapReduce:"appointments_by_date"}},model:function(e){return this._super(e).then(function(t){t.setProperties({selectedAppointmentType:e.appointmentType,selectedProvider:e.provider,selectedStatus:e.status})
var n=e.startDate
return n=new Date,Ember.isEmpty(e.startDate)||n.setTime(e.startDate),t.set("selectedStartingDate",n),t.set("display_selectedStartingDate",this._dateFormat(n)),t}.bind(this))}})}),define("hospitalrun/appointments/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"NwoFfxLf",block:'{"symbols":["appointment","form"],"statements":[[0,"\\n"],[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-info"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"selectedStartingDate",[25,"t",["appointments.labels.selectedStartingDate"],null],"col-sm-3 test-selected-start-date"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","property","label","content"],["col-sm-3 form-input-group test-selected-status","selectedStatus",[25,"t",["models.appointment.labels.status"],null],[20,["appointmentStatusesWithEmpty"]]]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group test-selected-appointment-type",[25,"t",["models.appointment.labels.type"],null],"selectedAppointmentType",[20,["visitTypesWithEmpty"]]]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","property","label","content"],["col-sm-3 form-input-group test-selected-provider","selectedProvider",[25,"t",["models.appointment.labels.provider"],null],[20,["physicianList"]]]]],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"search"]],[7],[1,[25,"t",["buttons.search"],null],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"table"],[9,"class","table"],[7],[0,"\\n    "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["date",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.appointmentDate"],null],false]],"parameters":[]},null],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["models.patient.labels.name"],null],false],[8],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["appointmentType",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.type"],null],false]],"parameters":[]},null],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["location",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.location"],null],false]],"parameters":[]},null],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["provider",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.provider"],null],false]],"parameters":[]},null],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["status",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.status"],null],false]],"parameters":[]},null],[0,"\\n      "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["notes",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["models.appointment.labels.notes"],null],false]],"parameters":[]},null],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"      "],[12,"appointments/item",[1]],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/appointments/search/template.hbs"}})}),define("hospitalrun/appointments/theater/controller",["exports","hospitalrun/appointments/calendar/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({dayGroupByResource:{day:{groupByResource:!0}},actions:{createNewAppointment:function(e){var t=this.store.createRecord("appointment",{appointmentType:"Surgery",selectPatient:!0,startDate:e.local().toDate(),endDate:e.add("1","hours").local().toDate()})
this.send("editAppointment",t)}}})})
define("hospitalrun/appointments/theater/route",["exports","hospitalrun/appointments/calendar/route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editReturn:"appointments.theater",newButtonText:Ember.computed("intl.locale",function(){return(0,n.t)("appointments.buttons.scheduleSurgery")}),pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("appointments.titles.theaterSchedule")}),_modelQueryParams:function(e){var t=this._super(e)
return t.mapReduce="surgical_appointments_by_date",t},actions:{newItem:function(){this.transitionTo("appointments.edit","newsurgery")}}})}),define("hospitalrun/appointments/theater/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"37kJCPWo",block:'{"symbols":["form"],"statements":[[6,"div"],[9,"class","panel panel-info"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"          "],[6,"div"],[9,"class","row"],[7],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.status"],null],"selectedStatus",[20,["appointmentStatusesWithEmpty"]]]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.provider"],null],"selectedProvider",[20,["physicianList"]]]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content"],["col-sm-3 form-input-group",[25,"t",["models.appointment.labels.location"],null],"selectedLocation",[20,["locationList"]]]]],false],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"        "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n          "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"clearFilteringCriteria"]],[7],[1,[25,"t",["buttons.clear"],null],false],[8],[0,"\\n          "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"filter"]],[7],[1,[25,"t",["buttons.filter"],null],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[1,[25,"calendar-control",null,[["events","defaultDate","defaultView","onDayClick","onEventClick","onEventDrop","onEventResize","onVisualConfigurationChanged","resources","userCanEdit","views"],[[20,["model","events"]],[20,["calendarDate"]],[20,["viewType"]],[25,"action",[[19,0,[]],"createNewAppointment"],null],[25,"action",[[19,0,[]],"navigateToAppointment"],null],[25,"action",[[19,0,[]],"updateAppointment"],null],[25,"action",[[19,0,[]],"updateAppointment"],null],[25,"action",[[19,0,[]],"handleVisualConfigurationChanged"],null],[20,["model","resources"]],[20,["canEdit"]],[20,["dayGroupByResource"]]]]],false],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/appointments/theater/template.hbs"}})}),define("hospitalrun/appointments/today/controller",["exports","hospitalrun/appointments/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({startKey:[]})}),define("hospitalrun/appointments/today/route",["exports","hospitalrun/appointments/index/route","moment","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editReturn:"appointments.today",modelName:"appointment",pageTitle:Ember.computed("intl.locale",function(){return(0,a.t)("appointments.todayTitle")}),_modelQueryParams:function(){var e=(0,n.default)().endOf("day").toDate().getTime(),t=this.get("maxValue")
return{options:{startkey:[(0,n.default)().startOf("day").toDate().getTime(),null,"appointment_"],endkey:[e,e,"appointment_"+t]},mapReduce:"appointments_by_date"}}})}),define("hospitalrun/appointments/today/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ZCqwFbAj",block:'{"symbols":[],"statements":[[12,"appointments/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/appointments/today/template.hbs"}})}),define("hospitalrun/authenticators/custom",["exports","ember-simple-auth/authenticators/base","pbkdf2","hospitalrun/mixins/map-oauth-params","hospitalrun/mixins/oauth-headers"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,i.default,{ajax:Ember.inject.service(),config:Ember.inject.service(),database:Ember.inject.service(),serverEndpoint:"/auth/login",standAlone:Ember.computed.alias("config.standAlone"),usersDB:Ember.computed.alias("database.usersDB"),_checkUser:function(e,t){var n=this
return new Ember.RSVP.Promise(function(a,i){var s=n.getOAuthHeaders(t)
n._makeRequest({name:e.name},"/chkuser",s).then(function(t){t.error&&i(t),e.displayName=t.displayName,e.role=t.role,e.prefix=t.prefix,a(e)}).catch(function(){a(e)})})},_finishAuth:function(e,t){return this.get("database").setup().then(function(){return e.oauthConfigs=t,e})},_makeRequest:function(e,t,n,a){t||(t=this.serverEndpoint)
var i=Ember.get(this,"ajax"),s={type:"POST",data:e,dataType:"json",contentType:"application/x-www-form-urlencoded",xhrFields:{withCredentials:!0}}
return a&&(s.type=a),n&&(s.headers=n),i.request(t,s)},_saveOAuthConfigs:function(e){var t=Ember.get(this,"config"),n=this.mapOauthParams(e)
return t.saveOauthConfigs(n).then(function(){return n})},authenticate:function(e){var t=this
if(!0===Ember.get(this,"standAlone"))return this._authenticateStandAlone(e)
if(e.google_auth)return this._saveOAuthConfigs(e.params).then(function(n){return t._checkUser({name:e.params.i},n).then(function(e){return t._finishAuth(e,n)})})
var n=this._getUserName(e),a={name:n,password:e.password}
return this._makeRequest(a).then(function(e){if(e.error)throw new Error(e.errorResult||"Unauthorized user")
var a={displayName:e.displayName,prefix:e.prefix,role:e.role}
return a.name=n,t._saveOAuthConfigs(e).then(function(e){return t._finishAuth(a,e)})})},invalidate:function(e){var t=Ember.get(this,"standAlone")
if(this.useGoogleAuth||t)return Ember.RSVP.resolve()
var n=this.getOAuthHeaders(e.oauthConfigs),a=Ember.get(this,"database").getRemoteDBUrl()
return this._makeRequest({},a,n,"GET")},restore:function(e){return window.ELECTRON?Ember.RSVP.resolve(e):this._checkUser(e,e.oauthConfigs)},_authenticateStandAlone:function(e){var t=this,n=Ember.get(this,"usersDB")
return new Ember.RSVP.Promise(function(a,i){var s=t._getUserName(e)
n.get("org.couchdb.user:"+s).then(function(n){var s=n.salt,o=n.iterations,r=n.derived_key,l=e.password
t._checkPassword(l,s,o,r,function(e,s){e&&i(e),s||i(new Error("UNAUTHORIZED")),n.role=t._getPrimaryRole(n),t._finishAuth(n,{}).then(a,i)})},i)})},_checkPassword:function(e,t,a,i,s){(0,n.pbkdf2)(e,t,a,20,"sha1",function(e,t){if(e)return s(e)
s(null,t.toString("hex")===i)})},_getPrimaryRole:function(e){var t=""
return e.roles&&e.roles.forEach(function(e){"user"!==e&&"admin"!==e&&(t=e)}),t},_getUserName:function(e){var t=e.identification
return"string"==typeof t&&t&&(t=t.trim()),t}})}),define("hospitalrun/cldrs/cn",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"cn",pluralRuleFunction:function(e,t){return"other"},fields:{year:{displayName:"Year",relative:{0:"this year",1:"next year","-1":"last year"},relativeTime:{future:{other:"+{0} y"},past:{other:"-{0} y"}}},month:{displayName:"Month",relative:{0:"this month",1:"next month","-1":"last month"},relativeTime:{future:{other:"+{0} m"},past:{other:"-{0} m"}}},day:{displayName:"Day",relative:{0:"today",1:"tomorrow","-1":"yesterday"},relativeTime:{future:{other:"+{0} d"},past:{other:"-{0} d"}}},hour:{displayName:"Hour",relativeTime:{future:{other:"+{0} h"},past:{other:"-{0} h"}}},minute:{displayName:"Minute",relativeTime:{future:{other:"+{0} min"},past:{other:"-{0} min"}}},second:{displayName:"Second",relative:{0:"now"},relativeTime:{future:{other:"+{0} s"},past:{other:"-{0} s"}}}}}]}),define("hospitalrun/cldrs/de",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"de",pluralRuleFunction:function(e,t){var n=!String(e).split(".")[1]
return t?"other":1==e&&n?"one":"other"},fields:{year:{displayName:"Jahr",relative:{0:"dieses Jahr",1:"nächstes Jahr","-1":"letztes Jahr"},relativeTime:{future:{one:"in {0} Jahr",other:"in {0} Jahren"},past:{one:"vor {0} Jahr",other:"vor {0} Jahren"}}},month:{displayName:"Monat",relative:{0:"diesen Monat",1:"nächsten Monat","-1":"letzten Monat"},relativeTime:{future:{one:"in {0} Monat",other:"in {0} Monaten"},past:{one:"vor {0} Monat",other:"vor {0} Monaten"}}},day:{displayName:"Tag",relative:{0:"heute",1:"morgen",2:"übermorgen","-2":"vorgestern","-1":"gestern"},relativeTime:{future:{one:"in {0} Tag",other:"in {0} Tagen"},past:{one:"vor {0} Tag",other:"vor {0} Tagen"}}},hour:{displayName:"Stunde",relativeTime:{future:{one:"in {0} Stunde",other:"in {0} Stunden"},past:{one:"vor {0} Stunde",other:"vor {0} Stunden"}}},minute:{displayName:"Minute",relativeTime:{future:{one:"in {0} Minute",other:"in {0} Minuten"},past:{one:"vor {0} Minute",other:"vor {0} Minuten"}}},second:{displayName:"Sekunde",relative:{0:"jetzt"},relativeTime:{future:{one:"in {0} Sekunde",other:"in {0} Sekunden"},past:{one:"vor {0} Sekunde",other:"vor {0} Sekunden"}}}}}]}),define("hospitalrun/cldrs/en",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"en",pluralRuleFunction:function(e,t){var n=String(e).split("."),a=!n[1],i=Number(n[0])==e,s=i&&n[0].slice(-1),o=i&&n[0].slice(-2)
return t?1==s&&11!=o?"one":2==s&&12!=o?"two":3==s&&13!=o?"few":"other":1==e&&a?"one":"other"},fields:{year:{displayName:"year",relative:{0:"this year",1:"next year","-1":"last year"},relativeTime:{future:{one:"in {0} year",other:"in {0} years"},past:{one:"{0} year ago",other:"{0} years ago"}}},month:{displayName:"month",relative:{0:"this month",1:"next month","-1":"last month"},relativeTime:{future:{one:"in {0} month",other:"in {0} months"},past:{one:"{0} month ago",other:"{0} months ago"}}},day:{displayName:"day",relative:{0:"today",1:"tomorrow","-1":"yesterday"},relativeTime:{future:{one:"in {0} day",other:"in {0} days"},past:{one:"{0} day ago",other:"{0} days ago"}}},hour:{displayName:"hour",relativeTime:{future:{one:"in {0} hour",other:"in {0} hours"},past:{one:"{0} hour ago",other:"{0} hours ago"}}},minute:{displayName:"minute",relativeTime:{future:{one:"in {0} minute",other:"in {0} minutes"},past:{one:"{0} minute ago",other:"{0} minutes ago"}}},second:{displayName:"second",relative:{0:"now"},relativeTime:{future:{one:"in {0} second",other:"in {0} seconds"},past:{one:"{0} second ago",other:"{0} seconds ago"}}}}}]}),define("hospitalrun/cldrs/es",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"es-CO",parentLocale:"es-419"},{locale:"es-419",parentLocale:"es"},{locale:"es",pluralRuleFunction:function(e,t){return t?"other":1==e?"one":"other"},fields:{year:{displayName:"año",relative:{0:"este año",1:"el próximo año","-1":"el año pasado"},relativeTime:{future:{one:"dentro de {0} año",other:"dentro de {0} años"},past:{one:"hace {0} año",other:"hace {0} años"}}},month:{displayName:"mes",relative:{0:"este mes",1:"el próximo mes","-1":"el mes pasado"},relativeTime:{future:{one:"dentro de {0} mes",other:"dentro de {0} meses"},past:{one:"hace {0} mes",other:"hace {0} meses"}}},day:{displayName:"día",relative:{0:"hoy",1:"mañana",2:"pasado mañana","-2":"anteayer","-1":"ayer"},relativeTime:{future:{one:"dentro de {0} día",other:"dentro de {0} días"},past:{one:"hace {0} día",other:"hace {0} días"}}},hour:{displayName:"hora",relativeTime:{future:{one:"dentro de {0} hora",other:"dentro de {0} horas"},past:{one:"hace {0} hora",other:"hace {0} horas"}}},minute:{displayName:"minuto",relativeTime:{future:{one:"dentro de {0} minuto",other:"dentro de {0} minutos"},past:{one:"hace {0} minuto",other:"hace {0} minutos"}}},second:{displayName:"segundo",relative:{0:"ahora"},relativeTime:{future:{one:"dentro de {0} segundo",other:"dentro de {0} segundos"},past:{one:"hace {0} segundo",other:"hace {0} segundos"}}}}}]}),define("hospitalrun/cldrs/fr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"fr",pluralRuleFunction:function(e,t){return t?1==e?"one":"other":e>=0&&e<2?"one":"other"},fields:{year:{displayName:"année",relative:{0:"cette année",1:"l’année prochaine","-1":"l’année dernière"},relativeTime:{future:{one:"dans {0} an",other:"dans {0} ans"},past:{one:"il y a {0} an",other:"il y a {0} ans"}}},month:{displayName:"mois",relative:{0:"ce mois-ci",1:"le mois prochain","-1":"le mois dernier"},relativeTime:{future:{one:"dans {0} mois",other:"dans {0} mois"},past:{one:"il y a {0} mois",other:"il y a {0} mois"}}},day:{displayName:"jour",relative:{0:"aujourd’hui",1:"demain",2:"après-demain","-2":"avant-hier","-1":"hier"},relativeTime:{future:{one:"dans {0} jour",other:"dans {0} jours"},past:{one:"il y a {0} jour",other:"il y a {0} jours"}}},hour:{displayName:"heure",relativeTime:{future:{one:"dans {0} heure",other:"dans {0} heures"},past:{one:"il y a {0} heure",other:"il y a {0} heures"}}},minute:{displayName:"minute",relativeTime:{future:{one:"dans {0} minute",other:"dans {0} minutes"},past:{one:"il y a {0} minute",other:"il y a {0} minutes"}}},second:{displayName:"seconde",relative:{0:"maintenant"},relativeTime:{future:{one:"dans {0} seconde",other:"dans {0} secondes"},past:{one:"il y a {0} seconde",other:"il y a {0} secondes"}}}}}]}),define("hospitalrun/cldrs/gr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"gr",pluralRuleFunction:function(e,t){return"other"},fields:{year:{displayName:"Year",relative:{0:"this year",1:"next year","-1":"last year"},relativeTime:{future:{other:"+{0} y"},past:{other:"-{0} y"}}},month:{displayName:"Month",relative:{0:"this month",1:"next month","-1":"last month"},relativeTime:{future:{other:"+{0} m"},past:{other:"-{0} m"}}},day:{displayName:"Day",relative:{0:"today",1:"tomorrow","-1":"yesterday"},relativeTime:{future:{other:"+{0} d"},past:{other:"-{0} d"}}},hour:{displayName:"Hour",relativeTime:{future:{other:"+{0} h"},past:{other:"-{0} h"}}},minute:{displayName:"Minute",relativeTime:{future:{other:"+{0} min"},past:{other:"-{0} min"}}},second:{displayName:"Second",relative:{0:"now"},relativeTime:{future:{other:"+{0} s"},past:{other:"-{0} s"}}}}}]}),define("hospitalrun/cldrs/he",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"he",pluralRuleFunction:function(e,t){var n=String(e).split("."),a=n[0],i=!n[1],s=Number(n[0])==e,o=s&&n[0].slice(-1)
return t?"other":1==e&&i?"one":2==a&&i?"two":i&&(e<0||e>10)&&s&&0==o?"many":"other"},fields:{year:{displayName:"שנה",relative:{0:"השנה",1:"השנה הבאה","-1":"השנה שעברה"},relativeTime:{future:{one:"בעוד שנה",two:"בעוד שנתיים",many:"בעוד {0} שנה",other:"בעוד {0} שנים"},past:{one:"לפני שנה",two:"לפני שנתיים",many:"לפני {0} שנה",other:"לפני {0} שנים"}}},month:{displayName:"חודש",relative:{0:"החודש",1:"החודש הבא","-1":"החודש שעבר"},relativeTime:{future:{one:"בעוד חודש",two:"בעוד חודשיים",many:"בעוד {0} חודשים",other:"בעוד {0} חודשים"},past:{one:"לפני חודש",two:"לפני חודשיים",many:"לפני {0} חודשים",other:"לפני {0} חודשים"}}},day:{displayName:"יום",relative:{0:"היום",1:"מחר",2:"מחרתיים","-2":"שלשום","-1":"אתמול"},relativeTime:{future:{one:"בעוד יום {0}",two:"בעוד יומיים",many:"בעוד {0} ימים",other:"בעוד {0} ימים"},past:{one:"לפני יום {0}",two:"לפני יומיים",many:"לפני {0} ימים",other:"לפני {0} ימים"}}},hour:{displayName:"שעה",relativeTime:{future:{one:"בעוד שעה",two:"בעוד שעתיים",many:"בעוד {0} שעות",other:"בעוד {0} שעות"},past:{one:"לפני שעה",two:"לפני שעתיים",many:"לפני {0} שעות",other:"לפני {0} שעות"}}},minute:{displayName:"דקה",relativeTime:{future:{one:"בעוד דקה",two:"בעוד שתי דקות",many:"בעוד {0} דקות",other:"בעוד {0} דקות"},past:{one:"לפני דקה",two:"לפני שתי דקות",many:"לפני {0} דקות",other:"לפני {0} דקות"}}},second:{displayName:"שנייה",relative:{0:"עכשיו"},relativeTime:{future:{one:"בעוד שנייה",two:"בעוד שתי שניות",many:"בעוד {0} שניות",other:"בעוד {0} שניות"},past:{one:"לפני שנייה",two:"לפני שתי שניות",many:"לפני {0} שניות",other:"לפני {0} שניות"}}}}}]}),define("hospitalrun/cldrs/hi",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"hi",pluralRuleFunction:function(e,t){return t?1==e?"one":2==e||3==e?"two":4==e?"few":6==e?"many":"other":e>=0&&e<=1?"one":"other"},fields:{year:{displayName:"वर्ष",relative:{0:"इस वर्ष",1:"अगला वर्ष","-1":"पिछला वर्ष"},relativeTime:{future:{one:"{0} वर्ष में",other:"{0} वर्ष में"},past:{one:"{0} वर्ष पहले",other:"{0} वर्ष पहले"}}},month:{displayName:"माह",relative:{0:"इस माह",1:"अगला माह","-1":"पिछला माह"},relativeTime:{future:{one:"{0} माह में",other:"{0} माह में"},past:{one:"{0} माह पहले",other:"{0} माह पहले"}}},day:{displayName:"दिन",relative:{0:"आज",1:"कल",2:"परसों","-2":"बीता परसों","-1":"कल"},relativeTime:{future:{one:"{0} दिन में",other:"{0} दिन में"},past:{one:"{0} दिन पहले",other:"{0} दिन पहले"}}},hour:{displayName:"घंटा",relativeTime:{future:{one:"{0} घंटे में",other:"{0} घंटे में"},past:{one:"{0} घंटे पहले",other:"{0} घंटे पहले"}}},minute:{displayName:"मिनट",relativeTime:{future:{one:"{0} मिनट में",other:"{0} मिनट में"},past:{one:"{0} मिनट पहले",other:"{0} मिनट पहले"}}},second:{displayName:"सेकंड",relative:{0:"अब"},relativeTime:{future:{one:"{0} सेकंड में",other:"{0} सेकंड में"},past:{one:"{0} सेकंड पहले",other:"{0} सेकंड पहले"}}}}}]}),define("hospitalrun/cldrs/it",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"it",pluralRuleFunction:function(e,t){var n=!String(e).split(".")[1]
return t?11==e||8==e||80==e||800==e?"many":"other":1==e&&n?"one":"other"},fields:{year:{displayName:"anno",relative:{0:"quest’anno",1:"anno prossimo","-1":"anno scorso"},relativeTime:{future:{one:"tra {0} anno",other:"tra {0} anni"},past:{one:"{0} anno fa",other:"{0} anni fa"}}},month:{displayName:"mese",relative:{0:"questo mese",1:"mese prossimo","-1":"mese scorso"},relativeTime:{future:{one:"tra {0} mese",other:"tra {0} mesi"},past:{one:"{0} mese fa",other:"{0} mesi fa"}}},day:{displayName:"giorno",relative:{0:"oggi",1:"domani",2:"dopodomani","-2":"l’altro ieri","-1":"ieri"},relativeTime:{future:{one:"tra {0} giorno",other:"tra {0} giorni"},past:{one:"{0} giorno fa",other:"{0} giorni fa"}}},hour:{displayName:"ora",relativeTime:{future:{one:"tra {0} ora",other:"tra {0} ore"},past:{one:"{0} ora fa",other:"{0} ore fa"}}},minute:{displayName:"minuto",relativeTime:{future:{one:"tra {0} minuto",other:"tra {0} minuti"},past:{one:"{0} minuto fa",other:"{0} minuti fa"}}},second:{displayName:"Secondo",relative:{0:"ora"},relativeTime:{future:{one:"tra {0} secondo",other:"tra {0} secondi"},past:{one:"{0} secondo fa",other:"{0} secondi fa"}}}}}]}),define("hospitalrun/cldrs/pt",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"pt-br",parentLocale:"pt"},{locale:"pt",pluralRuleFunction:function(e,t){var n=String(e).split("."),a=Number(n[0])==e
return t?"other":a&&e>=0&&e<=2&&2!=e?"one":"other"},fields:{year:{displayName:"ano",relative:{0:"este ano",1:"próximo ano","-1":"ano passado"},relativeTime:{future:{one:"em {0} ano",other:"em {0} anos"},past:{one:"há {0} ano",other:"há {0} anos"}}},month:{displayName:"mês",relative:{0:"este mês",1:"próximo mês","-1":"mês passado"},relativeTime:{future:{one:"em {0} mês",other:"em {0} meses"},past:{one:"há {0} mês",other:"há {0} meses"}}},day:{displayName:"dia",relative:{0:"hoje",1:"amanhã",2:"depois de amanhã","-2":"anteontem","-1":"ontem"},relativeTime:{future:{one:"em {0} dia",other:"em {0} dias"},past:{one:"há {0} dia",other:"há {0} dias"}}},hour:{displayName:"hora",relativeTime:{future:{one:"em {0} hora",other:"em {0} horas"},past:{one:"há {0} hora",other:"há {0} horas"}}},minute:{displayName:"minuto",relativeTime:{future:{one:"em {0} minuto",other:"em {0} minutos"},past:{one:"há {0} minuto",other:"há {0} minutos"}}},second:{displayName:"segundo",relative:{0:"agora"},relativeTime:{future:{one:"em {0} segundo",other:"em {0} segundos"},past:{one:"há {0} segundo",other:"há {0} segundos"}}}}}]}),define("hospitalrun/cldrs/ru",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"ru",pluralRuleFunction:function(e,t){var n=String(e).split("."),a=n[0],i=!n[1],s=a.slice(-1),o=a.slice(-2)
return t?"other":i&&1==s&&11!=o?"one":i&&s>=2&&s<=4&&(o<12||o>14)?"few":i&&0==s||i&&s>=5&&s<=9||i&&o>=11&&o<=14?"many":"other"},fields:{year:{displayName:"год",relative:{0:"в этом году",1:"в следующем году","-1":"в прошлом году"},relativeTime:{future:{one:"через {0} год",few:"через {0} года",many:"через {0} лет",other:"через {0} года"},past:{one:"{0} год назад",few:"{0} года назад",many:"{0} лет назад",other:"{0} года назад"}}},month:{displayName:"месяц",relative:{0:"в этом месяце",1:"в следующем месяце","-1":"в прошлом месяце"},relativeTime:{future:{one:"через {0} месяц",few:"через {0} месяца",many:"через {0} месяцев",other:"через {0} месяца"},past:{one:"{0} месяц назад",few:"{0} месяца назад",many:"{0} месяцев назад",other:"{0} месяца назад"}}},day:{displayName:"день",relative:{0:"сегодня",1:"завтра",2:"послезавтра","-2":"позавчера","-1":"вчера"},relativeTime:{future:{one:"через {0} день",few:"через {0} дня",many:"через {0} дней",other:"через {0} дней"},past:{one:"{0} день назад",few:"{0} дня назад",many:"{0} дней назад",other:"{0} дня назад"}}},hour:{displayName:"час",relativeTime:{future:{one:"через {0} час",few:"через {0} часа",many:"через {0} часов",other:"через {0} часа"},past:{one:"{0} час назад",few:"{0} часа назад",many:"{0} часов назад",other:"{0} часа назад"}}},minute:{displayName:"минута",relativeTime:{future:{one:"через {0} минуту",few:"через {0} минуты",many:"через {0} минут",other:"через {0} минуты"},past:{one:"{0} минуту назад",few:"{0} минуты назад",many:"{0} минут назад",other:"{0} минуты назад"}}},second:{displayName:"секунда",relative:{0:"сейчас"},relativeTime:{future:{one:"через {0} секунду",few:"через {0} секунды",many:"через {0} секунд",other:"через {0} секунды"},past:{one:"{0} секунду назад",few:"{0} секунды назад",many:"{0} секунд назад",other:"{0} секунды назад"}}}}}]}),define("hospitalrun/cldrs/th",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"th",pluralRuleFunction:function(e,t){return"other"},fields:{year:{displayName:"ปี",relative:{0:"ปีนี้",1:"ปีหน้า","-1":"ปีที่แล้ว"},relativeTime:{future:{other:"ในอีก {0} ปี"},past:{other:"{0} ปีที่แล้ว"}}},month:{displayName:"เดือน",relative:{0:"เดือนนี้",1:"เดือนหน้า","-1":"เดือนที่แล้ว"},relativeTime:{future:{other:"ในอีก {0} เดือน"},past:{other:"{0} เดือนที่ผ่านมา"}}},day:{displayName:"วัน",relative:{0:"วันนี้",1:"พรุ่งนี้",2:"มะรืนนี้","-2":"เมื่อวานซืน","-1":"เมื่อวาน"},relativeTime:{future:{other:"ในอีก {0} วัน"},past:{other:"{0} วันที่ผ่านมา"}}},hour:{displayName:"ชั่วโมง",relativeTime:{future:{other:"ในอีก {0} ชั่วโมง"},past:{other:"{0} ชั่วโมงที่ผ่านมา"}}},minute:{displayName:"นาที",relativeTime:{future:{other:"ในอีก {0} นาที"},past:{other:"{0} นาทีที่ผ่านมา"}}},second:{displayName:"วินาที",relative:{0:"ขณะนี้"},relativeTime:{future:{other:"ในอีก {0} วินาที"},past:{other:"{0} วินาทีที่ผ่านมา"}}}}}]}),define("hospitalrun/cldrs/tr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"tr",pluralRuleFunction:function(e,t){return t?"other":1==e?"one":"other"},fields:{year:{displayName:"Yıl",relative:{0:"bu yıl",1:"gelecek yıl","-1":"geçen yıl"},relativeTime:{future:{one:"{0} yıl sonra",other:"{0} yıl sonra"},past:{one:"{0} yıl önce",other:"{0} yıl önce"}}},month:{displayName:"Ay",relative:{0:"bu ay",1:"gelecek ay","-1":"geçen ay"},relativeTime:{future:{one:"{0} ay sonra",other:"{0} ay sonra"},past:{one:"{0} ay önce",other:"{0} ay önce"}}},day:{displayName:"Gün",relative:{0:"bugün",1:"yarın",2:"öbür gün","-2":"evvelsi gün","-1":"dün"},relativeTime:{future:{one:"{0} gün sonra",other:"{0} gün sonra"},past:{one:"{0} gün önce",other:"{0} gün önce"}}},hour:{displayName:"Saat",relativeTime:{future:{one:"{0} saat sonra",other:"{0} saat sonra"},past:{one:"{0} saat önce",other:"{0} saat önce"}}},minute:{displayName:"Dakika",relativeTime:{future:{one:"{0} dakika sonra",other:"{0} dakika sonra"},past:{one:"{0} dakika önce",other:"{0} dakika önce"}}},second:{displayName:"Saniye",relative:{0:"şimdi"},relativeTime:{future:{one:"{0} saniye sonra",other:"{0} saniye sonra"},past:{one:"{0} saniye önce",other:"{0} saniye önce"}}}}}]}),define("hospitalrun/cldrs/tw",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"tw",pluralRuleFunction:function(e,t){return"other"},fields:{year:{displayName:"Year",relative:{0:"this year",1:"next year","-1":"last year"},relativeTime:{future:{other:"+{0} y"},past:{other:"-{0} y"}}},month:{displayName:"Month",relative:{0:"this month",1:"next month","-1":"last month"},relativeTime:{future:{other:"+{0} m"},past:{other:"-{0} m"}}},day:{displayName:"Day",relative:{0:"today",1:"tomorrow","-1":"yesterday"},relativeTime:{future:{other:"+{0} d"},past:{other:"-{0} d"}}},hour:{displayName:"Hour",relativeTime:{future:{other:"+{0} h"},past:{other:"-{0} h"}}},minute:{displayName:"Minute",relativeTime:{future:{other:"+{0} min"},past:{other:"-{0} min"}}},second:{displayName:"Second",relative:{0:"now"},relativeTime:{future:{other:"+{0} s"},past:{other:"-{0} s"}}}}}]}),define("hospitalrun/cldrs/ur",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{locale:"ur",pluralRuleFunction:function(e,t){var n=!String(e).split(".")[1]
return t?"other":1==e&&n?"one":"other"},fields:{year:{displayName:"سال",relative:{0:"اس سال",1:"اگلے سال","-1":"گزشتہ سال"},relativeTime:{future:{one:"{0} سال میں",other:"{0} سال میں"},past:{one:"{0} سال پہلے",other:"{0} سال پہلے"}}},month:{displayName:"مہینہ",relative:{0:"اس مہینہ",1:"اگلے مہینہ","-1":"پچھلے مہینہ"},relativeTime:{future:{one:"{0} مہینہ میں",other:"{0} مہینے میں"},past:{one:"{0} مہینہ پہلے",other:"{0} مہینے پہلے"}}},day:{displayName:"دن",relative:{0:"آج",1:"آئندہ کل",2:"آنے والا پرسوں","-2":"گزشتہ پرسوں","-1":"گزشتہ کل"},relativeTime:{future:{one:"{0} دن میں",other:"{0} دنوں میں"},past:{one:"{0} دن پہلے",other:"{0} دنوں پہلے"}}},hour:{displayName:"گھنٹہ",relativeTime:{future:{one:"{0} گھنٹہ میں",other:"{0} گھنٹے میں"},past:{one:"{0} گھنٹہ پہلے",other:"{0} گھنٹے پہلے"}}},minute:{displayName:"منٹ",relativeTime:{future:{one:"{0} منٹ میں",other:"{0} منٹ میں"},past:{one:"{0} منٹ پہلے",other:"{0} منٹ پہلے"}}},second:{displayName:"سیکنڈ",relative:{0:"اب"},relativeTime:{future:{one:"{0} سیکنڈ میں",other:"{0} سیکنڈ میں"},past:{one:"{0} سیکنڈ پہلے",other:"{0} سیکنڈ پہلے"}}}}}]}),define("hospitalrun/components/action-checkbox",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({attributeBindings:["type","value"],tagName:"input",type:"checkbox",checked:!1,_updateElementValue:function(){this.set("checked",this.$().prop("checked"))}.on("didInsertElement"),change:function(){this._updateElementValue(),this.sendAction("action",this.get("value"),this.get("checked"))}})}),define("hospitalrun/components/active-link",["exports","ember-cli-active-link-wrapper/components/active-link"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/array-display",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({isArray:Ember.computed("content",function(){var e=this.get("content")
return Ember.isArray(e)})})}),define("hospitalrun/components/bar-code",["exports","ember-cli-barcode/components/bar-code"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/calendar-control",["exports","moment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({calendarHeader:{center:"agendaDay,agendaWeek,month",left:"title",right:"today prev,next"},defaultDate:null,defaultView:"agendaWeek",height:500,onDayClick:null,onEventClick:null,onEventDrop:null,onEventResize:null,userCanEdit:!1,visualConfiguration:{endDate:null,startDate:null,viewType:null},_convertDateFromUTCToLocal:function(e){return(0,t.default)(e.utc().format("YYYY-MM-DD HH:mm:ss")).valueOf()},actions:{handleRenderingComplete:function(e){var t,n,a=Ember.get(this,"visualConfiguration"),i={startDate:this._convertDateFromUTCToLocal(e.intervalStart),endDate:this._convertDateFromUTCToLocal(e.intervalEnd),viewType:e.name}
Ember.isEmpty(a.startDate)&&Ember.isEmpty(a.endDate)?Ember.set(this,"visualConfiguration",i):(n=i,((t=a).startDate!==n.startDate||t.endDate!==n.endDate||t.viewType!==n.viewType)&&(Ember.set(this,"visualConfiguration",i),Ember.get(this,"onVisualConfigurationChanged")(i)))}}})}),define("hospitalrun/components/charge-quantity",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({intl:Ember.inject.service(),classNames:["col-xs-2","form-group"],classNameBindings:["hasError"],tagName:"td",pricingItem:null,didReceiveAttrs:function(){this._super.apply(this,arguments),this.quantitySelected=Ember.computed.alias("model."+this.get("pricingItem.id"))},hasError:Ember.computed("quantitySelected",function(){var e=this.get("quantitySelected")
return!Ember.isEmpty(e)&&isNaN(e)}),quantityHelp:Ember.computed("hasError",function(){if(this.get("hasError"))return this.get("intl").t("errors.invalidNumber")})})}),define("hospitalrun/components/charges-by-type-tab",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({attributeBindings:["role"],classNameBindings:["active"],index:null,pricingList:null,role:"presentation",tagName:"li",active:Ember.computed(function(){return 0===this.get("index")}),tabId:Ember.computed("pricingType",function(){return this.get("pricingType").toLowerCase().dasherize()}),tabHref:Ember.computed("tabId",function(){return"#"+this.get("tabId")})})}),define("hospitalrun/components/checkbox-or-typeahead",["exports","hospitalrun/components/select-or-typeahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({checkboxesPerRow:5,model:null,_getLabelFromContent:function(e){var t=this.get("optionLabelPath")
return Ember.get(e,t)},_getValueFromContent:function(e){var t=this.get("optionValuePath")
return Ember.get(e,t)},_mapCheckboxValues:function(e){return{label:this._getLabelFromContent(e),value:this._getValueFromContent(e)}},_setup:function(){var e=this.get("property")
Ember.defineProperty(this,"errors",Ember.computed("model.errors."+e,function(){var e=this.get("property"),t=this.get("model.errors."+e)
if(!Ember.isEmpty(t))return t[0]}))}.on("init"),checkboxRows:Ember.computed("content","checkboxesPerRow",function(){for(var e=[],t=this.get("checkboxesPerRow"),n=this.get("content").copy();n.length>0;){var a=n.splice(0,t).map(this._mapCheckboxValues.bind(this))
e.push(a)}return e}),actions:{checkboxChanged:function(e,t){var n="model."+this.get("property"),a=this.get(n)
Ember.isArray(a)||(a=[]),t&&!a.includes(e)?a.addObject(e):!t&&a.includes(e)&&a.removeObject(e),this.set(n,a),this.set("selection",a),this.get("model").validate().catch(function(){})}}})}),define("hospitalrun/components/control-within-label",["exports","ember-rapid-forms/components/control-within-label"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default})
define("hospitalrun/components/custom-form-manager",["exports","hospitalrun/utils/select-values","hospitalrun/mixins/custom-form-manager"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,n.default,{model:null,didReceiveAttrs:function(){this._super.apply(this,arguments),this.initFormsForType()},actions:{addForm:function(){var e=this.get("model"),t=this.get("formsForSelect")
this.sendAction("openModalAction","custom-form-add",Ember.Object.create({modelToAddTo:e,customForms:t}))}}})}),define("hospitalrun/components/custom-form",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{classNames:["detail-section-content","js-custom-form"],propertyPrefix:"",fieldsByRow:Ember.computed("form","form.fields.[]","form.columns",function(){var e=[],t=this.get("form"),n=this.get("form.fields")
if(!Ember.isEmpty(t)&&!Ember.isEmpty(n)){var a=this.getWithDefault("form.columns",1),i=[],s=0,o=Math.floor(12/a)
n.forEach(function(t){var n=t.get("classNames")
n||(n="")
var r=t.get("colSpan")||1;(s===a||s+r>a)&&(e.push(i.slice()),i=[],s=0),n+=" col-sm-"+o*r,t.set("displayClassNames",n),"radio"===t.get("type")&&t.set("mappedValues",t.get("values").map(function(e){return Ember.get(e,"label")})),i.push(t),s+=r}),s>0&&e.push(i)}return e})})}),define("hospitalrun/components/date-filter",["exports","hospitalrun/mixins/pikaday-component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{classNames:["input-group"],dateSetAction:"filter",actions:{clearFilter:function(){this.$("input").val(""),this.sendAction("dateSetAction")}}})}),define("hospitalrun/components/date-input",["exports","ember-rapid-forms/components/em-input","hospitalrun/mixins/pikaday-component"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{_shouldSetDate:function(e,t){return t&&(Ember.isEmpty(e)||Ember.isEmpty(t.getDate())||e.getTime&&t.getDate().getTime()!==e.getTime())},currentDateChangedValue:function(){var e=this.get("currentDate"),t=this.get("_picker")
!Ember.isEmpty(e)&&this._shouldSetDate(e,t)&&t.setDate(e)},format:Ember.computed("showTime",function(){return this.get("showTime")?"DD/MM/YYYY HH:mm":"DD/MM/YYYY"}),showTimeChanged:function(){var e=this.get("_picker")
e&&(e.destroy(),this.didInsertElement())}.observes("showTime"),dateSet:function(){var e=this.get("currentDate"),t=this.get("_picker")
if(this._shouldSetDate(e,t)){var n=t.getDate(),a=this.get("dateSetAction")
this.set("currentDate",n),Ember.isEmpty(a)||this.sendAction("dateSetAction",n)}},didReceiveAttrs:function(){this._super.apply(this,arguments)
var e=this.get("originalProperty"),t="display_"+e
this.currentDate=Ember.computed.alias("model."+e),this.addObserver("model."+e,this,this.currentDateChangedValue),Ember.defineProperty(this,"model.errors."+t,Ember.computed.alias("model.errors."+e))}})}),define("hospitalrun/components/date-picker-wrapper",["exports","hospitalrun/components/date-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({dateSetAction:null,minDate:null,maxDate:null,originalProperty:null,showTime:!1,yearRange:50})}),define("hospitalrun/components/date-picker",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({actions:{dateSetActionWrapper:function(e){Ember.isEmpty(this.get("dateSetAction"))||this.sendAction("dateSetAction",e)}}})}),define("hospitalrun/components/date-time-picker",["exports","moment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({intl:Ember.inject.service(),dateTimePickerDate:null,datePickerClass:"",endDate:Ember.computed.alias("model.endDate"),endHour:null,endMinute:null,label:"",startDate:Ember.computed.alias("model.startDate"),startHour:null,startMinute:null,didReceiveAttrs:function(){var e=(0,t.default)(this.get("endDate")),n=(0,t.default)(this.get("startDate"))
Ember.isEmpty(e)&&(e=n),this.set("endHour",e.hour()),this.set("endMinute",e.minute()),this.set("startHour",n.hour()),this.set("startMinute",n.minute()),this.set("dateTimePickerDate",n.toDate()),this._updateDates()},hourList:Ember.computed(function(){var e=void 0,t=[],n=this.get("intl")
for(e=0;e<24;e++){var a=void 0,i={hour:e%12}
a=0===e?n.t("components.dateTimePicker.midnight"):12===e?n.t("components.dateTimePicker.noon"):e<12?n.t("components.dateTimePicker.amHour",i):n.t("components.dateTimePicker.pmHour",i),t.push({name:a,value:e})}return t}),isAllDay:Ember.computed("model.allDay",function(){var e=this.get("model.allDay")
return e&&(this.set("startHour",0),this.set("startMinute",0),this.set("endHour",23),this.set("endMinute",59),this._updateDates()),e}),minuteList:Ember.computed(function(){var e=void 0,t=[]
for(e=0;e<60;e++)t.push({name:String("00"+e).slice(-2),value:e})
return t}),actions:{dateChanged:function(){this._updateDates()},endHourChanged:function(e){this.set("endHour",e),this._updateDates()},endMinuteChanged:function(e){this.set("endMinute",e),this._updateDates()},startHourChanged:function(e){this.set("startHour",e),this._updateDates()},startMinuteChanged:function(e){this.set("startMinute",e),this._updateDates()}},endTimeHasError:Ember.computed("model.isValid",function(){return this.get("model.errors.endDate").length>0}),_updateDates:function(){var e=this
Ember.run.once(this,function(){["start","end"].forEach(function(n){var a=n+"Date",i=e.get(a),s=e.get("dateTimePickerDate"),o=e.get(n+"Hour"),r=e.get(n+"Minute")
Ember.isEmpty(s)||((i=(0,t.default)(s)).hour(o),i.minute(r),e.set(a,i.toDate()))}),e.get("model").validate().catch(function(){})})}})}),define("hospitalrun/components/edit-panel",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({editPanelProps:null,cancelAction:"cancel",actions:{cancel:function(){this.sendAction("cancelAction")},disabledAction:function(){this.sendAction("editPanelProps.disabledAction")},fireButtonAction:function(e){this.set(e,e),this.sendAction(e)},updateButtonAction:function(){this.sendAction("editPanelProps.updateButtonAction")}}})}),define("hospitalrun/components/em-checkbox-input",["exports","ember-rapid-forms/components/em-checkbox-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-checkbox",["exports","ember-rapid-forms/components/em-checkbox"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-custom-input",["exports","ember-rapid-forms/components/em-custom-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-form-control-help",["exports","ember-rapid-forms/components/em-form-control-help"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-form-group",["exports","ember-rapid-forms/components/em-form-group"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-form-label",["exports","ember-rapid-forms/components/em-form-label"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-form-submit",["exports","ember-rapid-forms/components/em-form-submit"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-form",["exports","ember-rapid-forms/components/em-form"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-input",["exports","ember-rapid-forms/components/em-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-select",["exports","ember-rapid-forms/components/em-select"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/em-text",["exports","ember-rapid-forms/components/em-text"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/expand-text",["exports","hospitalrun/utils/text-expansion"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Component.extend({intl:Ember.inject.service(),store:Ember.inject.service(),userText:"",didInsertElement:function(){var e=this,t=this.$("textarea"),a=n(t,1)[0]
this.set("textarea",a),this.get("feedbackText"),this.get("activeExpansionSite"),this.get("store").findAll("text-expansion").then(function(e){return e.reduce(function(e,t){return e[t.get("from")]=t.get("to"),e},{})}).then(function(t){e.get("isDestroyed")||e.get("isDestroying")||e.set("expansions",t)})},keyUp:function(e){var t=e.target,n=t.value
this.set("userText",n),this.set("cursorLocation",t.selectionStart)},keyDown:function(e){if(13===e.keyCode){var t=this.get("possibleSwaps")
if(t&&1===t.length){var n=t[0].to,a=this.get("activeExpansionSite"),i=a.match.length,s=e.target.value,o=s.slice(0,a.index)+n+s.slice(a.index+i)
return e.target.value=o,e.preventDefault(),e.returnValue=!1,e.cancelBubble=!0,!1}}},activeExpansionSite:Ember.computed("userText","cursorLocation",function(){var e=this.get("userText"),n=this.get("textarea")
if(!n)return null
var a=n.selectionStart,i=t.default.findExpansionSubjects(e)
return t.default.findExpansionSites(e,i).find(function(e){var t=e.index+e.match.length
return a>=e.index&&a<=t})}),possibleSwaps:Ember.computed("activeExpansionSite","expansions",function(){var e=this.get("activeExpansionSite")
if(e){var t=this.get("expansions")
return Object.keys(t).filter(function(t){return t.startsWith(e.term)}).sort().map(function(e){return{from:e,to:t[e]}})}}),expansionText:Ember.computed("possibleSwaps","activeExpansionSite","userText",function(){var e="",t=this.get("intl"),n=this.get("possibleSwaps")
if(n){var a=this.get("activeExpansionSite")
if(1===n.length){var i=n[0].to
e=t.t("admin.textReplacements.performExpand",{from:a.term,to:i})}else if(n.length>1){var s=n.map(function(e){return e.from}).join(", ")
e=t.t("admin.textReplacements.possibleExpansions",{possible:s})}else e=t.t("admin.textReplacements.noMatches",{term:a.term})}return e}),expansionDivStyle:Ember.computed("expansionText",function(){var e=this.get("expansionText")?"visible":"hidden",t=this.get("textarea"),n="visibility: "+e+";"
if(t){var a=t.getBoundingClientRect()
n+=" top: "+a.bottom+"px; left: "+a.left+"px; width: "+t.offsetWidth+"px;"}return Ember.String.htmlSafe(n)})})}),define("hospitalrun/components/ext-radio",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({includeOtherOption:!1,otherOptionLabel:null,showInline:!1,haveLabel:Ember.computed("content",function(){var e=this.get("content.firstObject")
return!Ember.isEmpty(e.label)}),radioClass:Ember.computed("showInline",function(){return this.get("showInline")?"radio-inline":"radio"})})}),define("hospitalrun/components/fa-icon",["exports","ember-font-awesome/components/fa-icon"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/fa-list",["exports","ember-font-awesome/components/fa-list"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/fa-stack",["exports","ember-font-awesome/components/fa-stack"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/file-upload",["exports","hospitalrun/components/image-upload"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({resizeFile:!1})}),define("hospitalrun/components/form-group-control",["exports","ember-rapid-forms/components/form-group-control"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/form-group",["exports","ember-rapid-forms/components/form-group"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/components/full-calendar",["exports","ember-fullcalendar/components/full-calendar"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/icd10-pcs-typeahead",["exports","hospitalrun/components/icd10-typeahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/components/icd10-typeahead",["exports","hospitalrun/components/type-ahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({class:"scrollable-typeahead",minlength:2,selectionKey:"id",setOnBlur:!0,templates:{header:'<div class="alert alert-success well-sm query-results" role="alert"></div>'},_sourceQuery:function(e,t){this.bloodhound.get(e,function(n){t(n),this.$(".query-results").html("<strong><em>"+e+"</em></strong> returned <strong>"+n.length+"</strong> results")}.bind(this))},_getSource:function(){return this._sourceQuery.bind(this)}})})
define("hospitalrun/components/image-upload",["exports","ember-rapid-forms/components/em-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({fileInputEl:null,isImage:!0,resizeFile:!0,selectedFile:null,type:"file",_fileChanged:function(){var e=this.get("fileInputEl"),t=this.get("resizeFile")
if(!Ember.isEmpty(e.files[0])&&t){var n=window.URL.createObjectURL(e.files[0]),a=new Image
a.src=n,a.addEventListener("load",function(){window.URL.revokeObjectURL(n),this.set("selectedFile",this._resizeImage(a)),this.set("isImage",!0)}.bind(this)),a.addEventListener("error",function(){window.URL.revokeObjectURL(n),this.set("selectedFile",e.files[0]),this.set("isImage",!1)}.bind(this))}else this.set("isImage",!1),this.set("selectedFile",e.files[0])},_resizeImage:function(e){var t=document.createElement("canvas"),n=e.height,a=e.width
a>n?a>1024&&(n=Math.round(n*=1024/a),a=1024):n>1024&&(a=Math.round(a*=1024/n),n=1024),t.width=a,t.height=n,t.getContext("2d").drawImage(e,0,0,a,n)
for(var i=t.toDataURL("image/png"),s=atob(i.split(",")[1]),o=[],r=0;r<s.length;r++)o.push(s.charCodeAt(r))
return new Blob([new Uint8Array(o)],{type:"image/png"})},didInsertElement:function(){var e=this.$("input")
this.set("fileInputEl",e[0]),e.on("change",this._fileChanged.bind(this))}})}),define("hospitalrun/components/inventory-location-picker",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({calculatedLocationPickers:null,doingSetup:!1,label:null,locationList:null,quantityRequested:null,locationChange:function(){var e=this.get("doingSetup"),t=this.get("locationList"),n=this.get("calculatedLocationPickers"),a=this.get("quantityRequested"),i=-1,s=[]
e||(n.reduce(function(e,t,n){var s=t.get("selectedLocation"),o=void 0
return o=Ember.isEmpty(s)?e:e+s.get("quantity"),-1===i&&o>=a&&(i=n),o},0),i>-1?n.get("length")>i+1&&(n=n.slice(0,i+1),this.set("calculatedLocationPickers",n)):n.addObject(Ember.Object.create()),this._setupLocationPickers(n,t)),n.forEach(function(e){s.addObject(e.get("selectedLocation"))}),this.set("componentSelectedLocations",s)},_setup:function(){Ember.defineProperty(this,"componentSelectedLocations",Ember.computed.alias("selectedLocations"))}.on("init"),_setupLocationPickers:function(e,n,a){e.reduce(function(e,n){var i=n.get("selectedLocation")
return n.set("subLocationList",e.map(t.default.selectObjectMap)),e.includes(i)&&!a||n.set("selectedLocation",e.get("firstObject")),n.set("label","And"),e.filter(function(e){return n.get("selectedLocation.id")!==e.get("id")})},n)
var i=e.get("firstObject")
Ember.isEmpty(i)||i.set("label",this.get("label")),this.set("calculatedLocationPickers",e)},locationPickers:Ember.computed("calculatedLocationPickers","locationList","quantityRequested",function(){var e=this.get("locationList"),t=[],n=this.get("quantityRequested")
if(!Ember.isEmpty(e)&&!Ember.isEmpty(n))return this.set("doingSetup",!0),e.reduce(function(e,a){return e<n&&t.addObject(Ember.Object.create()),e+a.get("quantity")},0),this._setupLocationPickers(t,e,!0),Ember.run.scheduleOnce("afterRender",this,this.locationChange),this.set("doingSetup",!1),this.get("calculatedLocationPickers")})})}),define("hospitalrun/components/inventory-typeahead",["exports","hospitalrun/components/type-ahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({classNameBindings:["haveInventoryItems"],displayKey:"name",showQuantity:!0,intl:Ember.inject.service(),store:Ember.inject.service(),_mapInventoryItems:function(e){var t={}
return this.get("showQuantity")&&e.quantity?t.name=e.name+" - "+e.friendlyId+" ("+this.get("intl").t("inventory.labels.availableQuantity",{quantity:e.quantity})+")":t.name=e.name+" - "+e.friendlyId,t[this.get("selectionKey")]=e,t},haveInventoryItems:Ember.computed("content",function(){var e=this.get("content")
if(!Ember.isEmpty(e)&&e.length>0)return"have-inventory-items"}),mappedContent:Ember.computed("content",function(){var e=this.get("content"),t=[]
return e&&(t=e.map(this._mapInventoryItems.bind(this))),t}),contentChanged:function(){var e=this.get("bloodhound"),t=this.get("content")
e&&(e.clear(),e.add(t.map(this._mapInventoryItems.bind(this))))}.observes("content.[]"),itemSelected:function(e){var t=this
this._super()
var n=this.get("store")
Ember.isEmpty(e)||n.find("inventory",e.id).then(function(e){var n=t.get("model")
n.set("inventoryItem",e),Ember.run.once(t,function(){n.validate().catch(function(){})})})}})}),define("hospitalrun/components/item-listing",["exports","hospitalrun/mixins/paging-actions"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{classNames:["panel","panel-primary"]})}),define("hospitalrun/components/language-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({intl:Ember.inject.service(),languagePreference:Ember.inject.service(),selectedLanguage:Ember.computed("intl.locale",function(){var e=this.get("intl.locale")
return"string"==typeof e?e:e.get("firstObject")}),languageOptions:Ember.computed("intl.locale",function(){var e=this.get("intl")
return e.get("locales").map(function(t){return{id:t,name:e.lookup("languageName",t)}})}),onFinish:function(){},actions:{selectLanguage:function(e){this.get("languagePreference").saveUserLanguagePreference(e),this.get("onFinish")()}}})}),define("hospitalrun/components/loading-message",["exports","hospitalrun/macro"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"span",showLoadingMessages:!1,loadingMessages:[(0,t.t)("loading.messages.0"),(0,t.t)("loading.messages.1"),(0,t.t)("loading.messages.2"),(0,t.t)("loading.messages.3"),(0,t.t)("loading.messages.4"),(0,t.t)("loading.messages.5"),(0,t.t)("loading.messages.6"),(0,t.t)("loading.messages.7"),(0,t.t)("loading.messages.8"),(0,t.t)("loading.messages.9"),(0,t.t)("loading.messages.10"),(0,t.t)("loading.messages.11")],_setRandomMessage:function(){var e=this.get("loadingMessages"),t=Math.floor(Math.random()*e.length)
this.set("message",e[t]),this.set("timer",Ember.run.later(this,this._setRandomMessage,1e3))},didInsertElement:function(){this._setRandomMessage()},willDestroyElement:function(){var e=this.get("timer")
Ember.isEmpty(e)||Ember.run.cancel(e)}})}),define("hospitalrun/components/location-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({locationPicker:null,_setup:function(){this.locationChange=this.currentLocationChanged.bind(this)}.on("init"),currentLocationChanged:function(){Ember.run.once(this,function(){this.get("parentView").locationChange()})}})}),define("hospitalrun/components/medication-allergy",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({classNames:"ps-info-group long-form",canAddAllergy:null,patient:null,editAllergyAction:"editAllergy",showAddAllergyAction:"showAddAllergy",showAllergies:Ember.computed("canAddAllergy","patient.allergies.[]",{get:function(){var e=Ember.get(this,"canAddAllergy"),t=Ember.get(this,"patient.allergies")
return e||!Ember.isEmpty(t)}}),actions:{editAllergy:function(e){this.sendAction("editAllergyAction",e)},createNewAllergy:function(){this.sendAction("showAddAllergyAction")}}})}),define("hospitalrun/components/modal-dialog",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({intl:Ember.inject.service(),cancelAction:"cancel",closeModalAction:"closeModal",hideCancelButton:!1,hideUpdateButton:!1,isUpdateDisabled:!1,title:"",updateButtonAction:"",updateButtonClass:"",updateButtonText:"",cancelButtonText:"",cancelBtnText:Ember.computed("cancelButtonText",function(){var e=this.get("cancelButtonText")
return Ember.isEmpty(e)?this.get("intl").t("buttons.cancel"):e}),actions:{cancelAction:function(){this.sendAction("cancelAction")},fireButtonAction:function(e){this.set(e,e),this.sendAction(e)},updateAction:function(){this.sendAction("updateButtonAction")}},didInsertElement:function(){this.$(".modal").modal().on("hidden.bs.modal",function(){this.sendAction("closeModalAction"),this.sendAction("cancelAction")}.bind(this))},willDestroyElement:function(){var e=this.$(".modal")
e.off("hidden.bs.modal"),e.modal("hide"),$("body").removeClass("modal-open"),$(".modal-backdrop").remove()}})}),define("hospitalrun/components/nav-menu",["exports","hospitalrun/mixins/user-session"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{callCloseSettings:"closeSettings",callNavAction:"navAction",classNames:["primary-nav-item"],isShowing:!1,nav:null,tagName:"div",show:Ember.computed("nav","session.data.authenticated.userCaps",function(){return this._setupSubNav(),this.currentUserCan(Ember.get(this,"nav").capability)}),_setup:function(){Ember.get(this,"nav").closeSubnav=function(){Ember.set(this,"isShowing",!1)}.bind(this),this._setupSubNav()}.on("init"),_setupSubNav:function(){var e=this
Ember.get(this,"nav").subnav.forEach(function(t){Ember.set(t,"show",e.currentUserCan(t.capability))})},actions:{resetNav:function(){this.sendAction("callCloseSettings")},toggleContent:function(){this.toggleProperty("isShowing"),this.sendAction("callNavAction",this.nav)}}})}),define("hospitalrun/components/nav-paging",["exports","hospitalrun/mixins/paging-actions"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{classNames:["paging-buttons"],paginationProps:null})}),define("hospitalrun/components/number-input",["exports","ember-rapid-forms/components/em-input"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({sanitizeFunction:function(e){return e.replace(new RegExp(/([^0-9|.]+)/g),"")},focusOut:function(){return this._sanitizeValue(),this._super()},keyUp:function(){return this._sanitizeValue(),this._super()},_sanitizeValue:function(){var e=this.get("model"),t=this.get("property"),n=e.get(t),a=this.get("sanitizeFunction")(n)
e.set(t,a)}})}),define("hospitalrun/components/operative-procedures",["exports"],function(e){function t(e){var t=Ember.get(e,"procedures"),n=Ember.get(e,"procedureDescription")
Ember.isEmpty(n)||(t.addObject({description:n}),Ember.set(e,"procedureDescription",null))}Object.defineProperty(e,"__esModule",{value:!0}),e.addProcedure=t,e.default=Ember.Component.extend({model:null,procedureList:null,haveProcedures:Ember.computed("model.procedures.[]",{get:function(){return!Ember.isEmpty(Ember.get(this,"model.procedures"))}}),actions:{addProcedure:function(){t(Ember.get(this,"model"))},deleteProcedure:function(e){var t=Ember.get(this,"model")
Ember.get(t,"procedures").removeObject(e),t.validate()}}})}),define("hospitalrun/components/patient-diagnosis",["exports","hospitalrun/mixins/patient-diagnosis","hospitalrun/macro","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=["diagnosisContainer","hideInActiveDiagnoses","diagnosisContainer.diagnoses.@each.active","diagnosisContainer.diagnoses.@each.secondaryDiagnosis"]
e.default=Ember.Component.extend(t.default,a.default,{intl:Ember.inject.service(),allowAddDiagnosis:!1,diagnosisContainer:null,diagnosisProperty:null,diagnosisList:null,editDiagnosisAction:"editDiagnosis",hideInActiveDiagnoses:!0,showAddDiagnosisAction:"showAddDiagnosis",primaryDiagnosisLabel:(0,n.t)("patients.labels.primaryDiagnosis"),secondaryDiagnosisLabel:(0,n.t)("patients.labels.secondaryDiagnosis"),canAddDiagnosis:Ember.computed("allowAddDiagnosis",{get:function(){return Ember.get(this,"allowAddDiagnosis")&&this.currentUserCan("add_diagnosis")}}),havePrimaryDiagnoses:Ember.computed("primaryDiagnoses.length",{get:function(){return this.get("primaryDiagnoses.length")>0}}),haveSecondaryDiagnoses:Ember.computed("secondaryDiagnoses.length",{get:function(){return this.get("secondaryDiagnoses.length")>0}}),primaryDiagnoses:Ember.computed.apply(void 0,i.concat([{get:function(){var e=this.get("diagnosisContainer"),t=this.get("hideInActiveDiagnoses")
return this.getDiagnoses(e,t,!1)}}])),secondaryDiagnoses:Ember.computed.apply(void 0,i.concat([{get:function(){var e=this.get("diagnosisContainer"),t=this.get("hideInActiveDiagnoses")
return this.getDiagnoses(e,t,!0)}}])),showPrimaryDiagnoses:Ember.computed("canAddDiagnosis","havePrimaryDiagnoses",{get:function(){return this.get("canAddDiagnosis")||this.get("havePrimaryDiagnoses")}}),actions:{editDiagnosis:function(e){this.sendAction("editDiagnosisAction",e)},showAddDiagnosis:function(){this.sendAction("showAddDiagnosisAction")}}})}),define("hospitalrun/components/patient-orders",["exports","hospitalrun/mixins/filter-list","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,n.default,{editImagingAction:"editImaging",editLabAction:"editLab",editMedicationAction:"editMedication",filterBy:null,filterValue:null,newImagingAction:"newImaging",newLabAction:"newLab",newMedicationAction:"newMedication",showDeleteImagingAction:"showDeleteImaging",showDeleteLabAction:"showDeleteLab",showDeleteMedicationAction:"showDeleteMedication",sortKey:null,sortDesc:!1,orderTypeFilters:Ember.computed(function(){var e=this.get("intl")
return[e.t("components.patientOrders.labels.imagingOrderType").toString(),e.t("components.patientOrders.labels.labOrderType").toString(),e.t("components.patientOrders.labels.medicationOrderType").toString()]}),canAddImaging:Ember.computed(function(){return this.currentUserCan("add_imaging")}),canAddLab:Ember.computed(function(){return this.currentUserCan("add_lab")}),canAddMedication:Ember.computed(function(){return this.currentUserCan("add_medication")}),canDeleteImaging:Ember.computed(function(){return this.currentUserCan("delete_imaging")}),canDeleteLab:Ember.computed(function(){return this.currentUserCan("delete_lab")}),canDeleteMedication:Ember.computed(function(){return this.currentUserCan("delete_medication")}),filteredList:Ember.computed("orderList.[]","filterBy","filterValue",function(){var e=this.get("filterBy"),t=this.get("filterValue"),n=this.get("orderList")
return n=this.filterList(n,e,t)}),orderList:Ember.computed("visit.imaging.[]","visit.labs.[]","visit.medication.[]",function(){var e=this,t=this.get("intl"),n=this.get("visit.imaging"),a=this.get("visit.labs"),i=this.get("visit.medication"),s=new Ember.A
return s.addObjects(n.map(function(n){return n.set("orderType",t.t("components.patientOrders.labels.imagingOrderType")),n.set("name",n.get("imagingType.name")),n.set("dateProcessed",n.get("imagingDate")),e._setPermissions(n,"canAddImaging","canDeleteImaging"),n})),s.addObjects(a.map(function(n){return n.set("orderType",t.t("components.patientOrders.labels.labOrderType")),n.set("name",n.get("labType.name")),n.set("dateProcessed",n.get("labDate")),e._setPermissions(n,"canAddLab","canDeleteLab"),n})),s.addObjects(i.map(function(n){return n.set("orderType",t.t("components.patientOrders.labels.medicationOrderType")),n.set("name",n.get("medicationName")),n.set("dateProcessed",n.get("prescriptionDate")),n.set("result",""),n.set("notes",n.get("prescription")),e._setPermissions(n,"canAddMedication","canDeleteMedication"),n})),s}),sortedOrders:Ember.computed("filteredList","sortKey","sortDesc",function(){var e=this.get("filteredList"),t=this.get("sortDesc"),n=this.get("sortKey")
return Ember.isEmpty(e)||Ember.isEmpty(n)?e:e=e.sort(function(e,a){var i=e.get(n),s=a.get(n)
return"orderType"===n&&(i=i.toString(),s=s.toString()),t?Ember.compare(s,i):Ember.compare(i,s)})}),intl:Ember.inject.service(),visit:null,_setPermissions:function(e,t,n){e.get("canEdit")&&(this.get(t)&&e.set("canEdit",!0),this.get(n)&&e.set("canDelete",!0))},actions:{filter:function(e,t){this.setProperties({filterBy:e,filterValue:t})},newImaging:function(){this.sendAction("newImagingAction")},newLab:function(){this.sendAction("newLabAction")},newMedication:function(){this.sendAction("newMedicationAction")},editOrder:function(e){var t=e.get("constructor.modelName").capitalize()
this.sendAction("edit"+t+"Action",e)},showDeleteOrder:function(e){var t=e.get("constructor.modelName").capitalize()
this.sendAction("showDelete"+t+"Action",e)},sortByKey:function(e,t){this.setProperties({sortKey:e,sortDesc:t})}}})}),define("hospitalrun/components/patient-summary",["exports","hospitalrun/mixins/user-session"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{allowAddAllergy:!1,allowAddDiagnosis:!1,allowAddOperativePlan:!1,classNames:["patient-summary"],diagnosisContainer:null,diagnosisList:null,disablePatientLink:!1,editAllergyAction:"editAllergy",editDiagnosisAction:"editDiagnosis",editOperativePlanAction:"editOperativePlan",editOperationReportAction:"editOperationReport",editProcedureAction:"editProcedure",hideInActiveDiagnoses:!0,patient:null,patientProcedures:null,showAddAllergyAction:"showAddAllergy",showAddDiagnosisAction:"showAddDiagnosis",showPatientAction:"showPatient",canAddAllergy:Ember.computed("allowAddAllergy",{get:function(){return Ember.get(this,"allowAddAllergy")&&this.currentUserCan("add_allergy")}}),canAddOperativePlan:Ember.computed("allowAddOperativePlan",{get:function(){return Ember.get(this,"allowAddOperativePlan")&&this.currentUserCan("add_operative_plan")}}),currentOperativePlan:Ember.computed("patient.operativePlans.@each.status",{get:function(){return Ember.get(this,"patient.operativePlans").findBy("isPlanned",!0)}}),haveProcedures:Ember.computed("patientProcedures.length",function(){return this.get("patientProcedures.length")>0}),shouldLinkToPatient:Ember.computed("disablePatientLink",function(){return!this.get("disablePatientLink")}),didReceiveAttrs:function(){this._super.apply(this,arguments)
var e=Ember.get(this,"diagnosisContainer")
Ember.isEmpty(e)&&Ember.set(this,"diagnosisContainer",Ember.get(this,"patient"))},actions:{addOperativePlan:function(){this.sendAction("editOperativePlanAction")},editOperativePlan:function(e){this.sendAction("editOperativePlanAction",e)},linkToPatient:function(){if(this.get("shouldLinkToPatient")){var e=this.get("patient"),t=this.get("returnTo"),n=this.get("returnToContext")
e.set("returnTo",t),e.set("returnToContext",n),this.sendAction("showPatientAction",this.get("patient"))}},editAllergy:function(e){this.sendAction("editAllergyAction",e)},editDiagnosis:function(e){this.sendAction("editDiagnosisAction",e)},editProcedure:function(e){var t=Ember.get(e,"report")
Ember.isEmpty(t)?this.sendAction("editProcedureAction",e):this.sendAction("editOperationReportAction",t)},showAddAllergy:function(){this.sendAction("showAddAllergyAction")},showAddDiagnosis:function(){this.sendAction("showAddDiagnosisAction")}}})}),define("hospitalrun/components/patient-typeahead",["exports","hospitalrun/mixins/patient-name","hospitalrun/components/type-ahead"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(t.default,{displayKey:"name",selectedAction:"selectedPatientChanged",setOnBlur:!0,_mapPatient:function(e){var t={}
return t.name=this.getPatientDisplayName(e)+" - "+this.getPatientDisplayId(e),t[this.get("selectionKey")]=e,t},contentChanged:function(){var e=this.get("bloodhound"),t=this.get("content")
e&&(e.clear(),Ember.isEmpty(t)||e.add(t.map(this._mapPatient.bind(this))))}.observes("content.[]"),mappedContent:Ember.computed("content",function(){var e=this.get("content"),t=[]
return e&&(t=e.map(this._mapPatient.bind(this))),t})})}),define("hospitalrun/components/photo-display",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({computedPhotoUrl:null,filesystem:Ember.inject.service(),isFileSystemEnabled:Ember.computed.alias("filesystem.isFileSystemEnabled"),fileName:Ember.computed.alias("photo.fileName"),photo:null,url:Ember.computed.alias("photo.url"),photoUrl:Ember.computed("computedPhotoUrl","fileName","url",function(){var e=this.get("computedPhotoUrl"),t=this.get("fileName"),n=this.get("filesystem"),a=this.get("isFileSystemEnabled"),i=this.get("url")
return Ember.isEmpty(e)?(a&&n.pathToFileSystemURL(t).then(function(e){Ember.isEmpty(e)||this.set("computedPhotoUrl",e)}.bind(this)),i):e})})}),define("hospitalrun/components/price-list",["exports","hospitalrun/mixins/charge-actions"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{attributeBindings:["tabId:id","role"],charges:Ember.computed.alias("model.charges"),classNameBindings:["active"],classNames:["tab-pane"],index:null,model:null,pricingList:null,pricingType:null,role:"tab",setChargeQuantityAction:"setChargeQuantity",active:Ember.computed(function(){return 0===this.get("index")}),pricingListByType:Ember.computed("pricingType","pricingList",function(){var e=this.get("pricingList"),t=this.get("pricingType"),n=[]
if(!Ember.isEmpty(e))for(var a=0,i=(e=(e=e.filterBy("pricingType",t)).map(function(e){var t=this.findChargeForPricingItem(e,this.get("charges"))
return t&&this.sendAction("setChargeQuantityAction",e.id,t.get("quantity")),e}.bind(this))).length;a<i;)n.push(e.slice(a,a+6)),a+=6
return n}),tabId:Ember.computed("pricingType",function(){return this.get("pricingType").toLowerCase().dasherize()})})}),define("hospitalrun/components/pricing-typeahead",["exports","hospitalrun/components/type-ahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({displayKey:"name",setOnBlur:!0,_mapContentItems:function(){var e=this.get("content")
if(e){var t=e.filter(function(e){return!Ember.isEmpty(e)})
return t=t.map(function(e){var t={}
return t.name=e.name,t[this.get("selectionKey")]=e,t}.bind(this))}return[]}})}),define("hospitalrun/components/print-this",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({print:!0,delay:null,didInsertElement:function(){if(Ember.get(this,"print")){var e=Ember.get(this,"delay")
!Ember.isEmpty(e)&&!isNaN(e)&&e>0?Ember.run.later(null,function(){window.print()},e):Ember.run.scheduleOnce("afterRender",this,function(){window.print()})}}})}),define("hospitalrun/components/quantity-calc",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({quantityGroups:[],calculated:null,currentUnit:null,targetUnit:null,unitList:null,didReceiveAttrs:function(){this._super.apply(this,arguments)
var e=this.get("quantityGroups")
if(Ember.isEmpty(e)){var t=this.get("calculated"),n=this.get("targetUnit")
e.addObject({index:0,unit:n,firstQuantity:!0,quantity:t})}},showTotal:Ember.computed("calculated",function(){var e=this.get("calculated")
return this.get("quantityGroups").length>1&&!Ember.isEmpty(e)&&!isNaN(e)}),currentQuantityGroups:Ember.computed("quantityGroups","targetUnit",function(){var e,t=this.get("quantityGroups"),n=this.get("targetUnit")
if(e=t.get("firstObject"),!Ember.isEmpty(e)){var a=e.unit
Ember.isEmpty(a)?this.set("quantityGroups.firstObject.unit",n):this.updateCurrentUnit(a,0)}return t}),calculateTotal:function(){var e=this.get("quantityGroups"),t=e.get("lastObject"),n=this.get("targetUnit")
if(e.every(function(e){var t=e.quantity,n=e.unit
return!Ember.isEmpty(t)&&!Ember.isEmpty(n)&&!isNaN(t)})&&t.unit===n){var a=e.reduce(function(e,t){return e*parseInt(t.quantity)},1)
this.set("calculated",a)}else this.set("calculated")},updateCurrentUnit:function(e,t){var n=this.get("targetUnit"),a=this.get("quantityGroups"),i=a.length
Ember.isEmpty(n)||(e===n?t<i-1&&a.removeAt(t+1,i-1-t):t===i-1?a.addObject({unitName:e,unit:n,index:a.length}):Ember.set(a.objectAt(t+1),"unitName",e),Ember.run.once(this,this.calculateTotal))}})}),define("hospitalrun/components/quantity-conv",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({firstQuantity:!1,quantity:null,quantityHelp:null,unitName:null,unit:null,resetUnitName:!1,targetUnit:Ember.computed.alias("parentView.targetUnit"),unitList:null,unitListHash:Ember.computed("unitList",function(){return this.get("unitList").map(function(e){return{id:e,value:e}})}),unitClass:Ember.computed("targetUnit","unit",function(){var e=this.get("unit"),t=this.get("targetUnit"),n="has-success"
return!Ember.isEmpty(t)&&Ember.isEmpty(e)?(this.set("unitHelp","please select a unit"),n="has-error"):(Ember.isEmpty(t)&&(n=""),this.set("unitHelp")),this.get("parentView").updateCurrentUnit(e,this.get("index")),n}),quantityClass:Ember.computed("quantity","targetUnit",function(){var e=this.get("quantity"),t="has-success",n=this.get("targetUnit")
return!Ember.isEmpty(n)&&(Ember.isEmpty(e)||isNaN(e)||e<0)?(this.set("quantityHelp","not a valid number"),t="has-error"):(Ember.isEmpty(n)&&(t=""),this.set("quantityHelp")),Ember.run.once(this,function(){this.get("parentView").calculateTotal()}),t})})}),define("hospitalrun/components/radio-button",["exports","ember-radio-buttons/components/radio-button"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/components/role-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({content:null,prompt:null,optionValuePath:"roles",optionLabelPath:"name",action:function(){},_selection:Ember.computed.reads("selection"),init:function(){this._super.apply(this,arguments),this.get("content")||this.set("content",[])},actions:{change:function(){var e=this.$("select").get(0).selectedIndex,t=this.get("content")[!!this.get("prompt")?e-1:e].roles
this.set("_selection",t),this.get("action")(t)}}})}),define("hospitalrun/components/search-listing",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({action:"allItems",actions:{allItems:function(){this.sendAction()}}})}),define("hospitalrun/components/select-or-typeahead",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({name:"select-or-typeahead",className:null,hint:!0,label:null,list:null,optionLabelPath:"value",optionValuePath:"id",property:null,prompt:" ",selection:null,setOnBlur:!0,typeAheadType:null,content:Ember.computed("list.value.[]",function(){var e=this.get("list"),n=this.get("optionLabelPath"),a=this.get("optionValuePath"),i=this.get("userCanAdd")
if(!Ember.isEmpty(e)&&e.get){var s=e.get("value")
return Ember.isEmpty(s)?[]:i||"value"!==n||"id"!==a?s:s.map(t.default.selectValuesMap)}}),usePricingTypeAhead:Ember.computed("typeAheadType",function(){return"pricing"===this.get("typeAheadType")}),userCanAdd:Ember.computed("list.userCanAdd",function(){var e=this.get("list")
return!(!Ember.isEmpty(e)&&e.get)||e.get("userCanAdd")})})}),define("hospitalrun/components/sidebar-nav",["exports","hospitalrun/mixins/hospitalrun-version","hospitalrun/mixins/modal-helper","hospitalrun/mixins/user-session","hospitalrun/mixins/navigation"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,n.default,a.default,i.default,{ajax:Ember.inject.service(),allowSearch:!1,config:Ember.inject.service(),intl:Ember.inject.service(),progressTitle:"Searching",router:Ember.inject.service(),session:Ember.inject.service(),syncStatus:"",currentOpenNav:null,selectedLanguage:null,actions:{about:function(){var e=this,t=this.get("version")
this.get("ajax").request("/serverinfo").then(function(n){var a="Version: "+t
Ember.isEmpty(n)||(a+=" Site Info: "+n),e.displayAlert(e.get("intl").t("navigation.about"),a)})},invalidateSession:function(){var e=this,t=this.get("session")
t.get("isAuthenticated")&&t.invalidate().catch(function(){var t=e.get("intl"),n=t.t("navigation.messages.logoutFailed"),a=t.t("navigation.titles.logoutFailed")
e.displayAlert(a,n)})},search:function(){this.sendAction("search",this.get("searchText")),this.set("searchText","")},navAction:function(e){this.currentOpenNav&&this.currentOpenNav.route!==e.route&&this.currentOpenNav.closeSubnav(),this.set("currentOpenNav",e),this.get("router").transitionTo(e.route),this.set("isShowingSettings",!1)},toggleSettings:function(){this.toggleProperty("isShowingSettings")},closeSettings:function(){this.set("isShowingSettings",!1)}}})}),define("hospitalrun/components/smart-prescription",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.TextArea.extend(Ember.TargetActionSupport,{valueDidChange:Ember.observer("value",function(){this.triggerAction({action:"search"})})})}),define("hospitalrun/components/sortable-column",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({classNames:["sortable-column"],tagName:"th",action:"sortByKey",filterAction:"filter",filterBy:null,filteredBy:null,filterType:"list",sortDesc:!1,sortBy:null,sortKey:null,filtered:!1,sorted:Ember.computed("sortBy","sortKey",function(){return this.get("sortBy")===this.get("sortKey")}),actions:{sort:function(){var e=this.get("sortBy"),t=!1
this.get("sorted")&&(t=this.toggleProperty("sortDesc")),this.sendAction("action",e,t)},filter:function(e){Ember.isEmpty(e)?this.set("filtered"):this.set("filtered",!0)
var t=this.get("filterBy")
this.$(".dropdown-toggle").dropdown("toggle"),this.sendAction("filterAction",t,e)}}})})
define("hospitalrun/components/take-photo",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),n=["takeAPicture","uploadAFile"]
e.default=Ember.Component.extend({defaultPhotoSource:null,canvas:null,height:0,isImage:!1,photo:null,photoFile:null,photoSource:null,selectedCamera:null,setupCamera:!1,sourceLabel:null,video:null,videoSources:null,width:200,intl:Ember.inject.service(),canCaptureVideo:Ember.computed(function(){return navigator.mediaDevices&&navigator.mediaDevices.getUserMedia}),photoSources:Ember.computed(function(){var e=Ember.get(this,"intl")
return n.map(function(t){return{label:e.t("components.takePhoto.labels."+t),value:t}})}),sourceChooserLabel:Ember.computed("sourceLabel",function(){var e=Ember.get(this,"intl"),t=Ember.get(this,"sourceLabel")
return Ember.isEmpty(t)?e.t("components.takePhoto.how"):t}),showFileUpload:Ember.computed("photoSource",function(){return"uploadAFile"===Ember.get(this,"photoSource")}),showCameraSelect:Ember.computed("videoSources",function(){var e=Ember.get(this,"showFileUpload"),t=Ember.get(this,"videoSources")
return!e&&t&&t.length>1}),didInsertElement:function(){var e=Ember.get(this,"canCaptureVideo"),t=Ember.get(this,"defaultPhotoSource")
Ember.isEmpty(t)&&(t=e?"takeAPicture":"uploadAFile"),this._photoSourceChanged(t)},willDestroyElement:function(){this._stopStream()},_cameraChange:function(e){Ember.set(this,"selectedCamera",e)
var t=Ember.get(this,"stream"),n=Ember.get(this,"video")
Ember.isEmpty(t)||(n.src=null,this._stopStream())
var a={audio:!1,video:{deviceId:Ember.get(this,"selectedCamera")}}
navigator.mediaDevices.getUserMedia(a).then(this._gotStream.bind(this)).catch(this._errorCallback),this._setupVideo()},_errorCallback:function(e){console.log("navigator.mediaDevices.getUserMedia error: ",e)},_gotSources:function(e){for(var t=0,n=void 0,a=[],i=0;i!==e.length;++i){var s=e[i]
"videoinput"===s.kind&&(n="Camera '"+ ++t,s.label&&(n+=" ("+s.label+")"),a.addObject({deviceId:s.deviceId,label:n}))}Ember.set(this,"videoSources",a),a.length>0&&(Ember.set(this,"selectedCamera",a[0].deviceId),this._cameraChange(a[0].deviceId))},_gotStream:function(e){if(this.isDestroyed)this._stopStream(e)
else{var t=Ember.get(this,"video")
Ember.set(this,"stream",e),t.srcObject=e,t.play()}},_photoSourceChanged:function(e){var t=this.$(".camera"),n=Ember.get(this,"setupCamera")
if(Ember.set(this,"photoSource",e),"uploadAFile"===e)t.hide()
else if(t.show(),!n){var a=this.$("canvas").get(0),i=this.$("img").get(0),s=this.$("video").get(0)
if(this.setProperties({canvas:a,photo:i,video:s}),navigator.mediaDevices)if(navigator.mediaDevices.enumerateDevices)navigator.mediaDevices.enumerateDevices().then(this._gotSources.bind(this)).catch(this._errorCallback),this._setupCanPlayListener(s)
else if(navigator.mediaDevices.getUserMedia){navigator.mediaDevices.getUserMedia({audio:!1,video:!0}).then(this._gotStream.bind(this)).catch(this._errorCallback),this._setupCanPlayListener(s)}Ember.set(this,"setupCamera",!0)}},_setupCanPlayListener:function(e){e.removeEventListener("canplay",this._setupVideo.bind(this),!1),e.addEventListener("canplay",this._setupVideo.bind(this),!1)},_setupVideo:function(){var e=Ember.get(this,"canvas"),t=Ember.get(this,"height"),n=Ember.get(this,"video"),a=Ember.get(this,"width")
t=n.videoHeight/(n.videoWidth/a),n.setAttribute("width",a),n.setAttribute("height",t),e.setAttribute("width",a),e.setAttribute("height",t),this.setProperties({height:t,width:a})},_stopStream:function(e){var n=e||Ember.get(this,"stream")
if(!Ember.isEmpty(n))if(void 0===n.active)n.stop()
else{var a=n.getTracks()
t(a,1)[0].stop()}},actions:{cameraChange:function(e){this._cameraChange(e)},photoSourceChange:function(e){this._photoSourceChanged(e)},takePhoto:function(){var e=Ember.get(this,"canvas"),t=Ember.get(this,"height"),n=Ember.get(this,"video"),a=Ember.get(this,"width")
e.width=a,e.height=t,e.getContext("2d").drawImage(n,0,0,a,t)
for(var i=e.toDataURL("image/png"),s=atob(i.split(",")[1]),o=[],r=0;r<s.length;r++)o.push(s.charCodeAt(r))
Ember.set(this,"photoFile",new Blob([new Uint8Array(o)],{type:"image/png"})),Ember.set(this,"isImage",!0)}}})}),define("hospitalrun/components/text-search",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.TextField.extend(Ember.TargetActionSupport,{change:function(){this.triggerAction({action:"search"})},didInsertElement:function(){this.$().focus()}})}),define("hospitalrun/components/type-ahead",["exports","ember-rapid-forms/components/em-input","hospitalrun/mixins/typeahead"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default)}),define("hospitalrun/components/typeahead-filter",["exports","hospitalrun/mixins/typeahead"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{classNames:["input-group"],selectedAction:"filter",setOnBlur:!1,actions:{clearFilter:function(){this.$(".tt-input").val(""),this.sendAction("selectedAction")}}})}),define("hospitalrun/components/upcoming-appointments",["exports","ember-data","moment"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=t.default.PromiseArray
e.default=Ember.Component.extend({patient:null,database:Ember.inject.service(),store:Ember.inject.service(),appointments:Ember.computed("patient",function(){var e=Ember.get(this,"patient")
if(!Ember.isEmpty(e)){var t=Ember.get(this,"database"),i=(0,n.default)().add(10,"years").toDate().getTime(),s=t.getMaxPouchId("appointment"),o=t.getMinPouchId("appointment"),r=Ember.get(e,"id"),l=(0,n.default)().toDate().getTime(),d=Ember.get(this,"store").query("appointment",{options:{startkey:[r,l,l,o],endkey:[r,i,i,s]},mapReduce:"appointments_by_patient"})
return a.create({promise:d})}})})}),define("hospitalrun/controllers/abstract-delete-controller",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({afterDeleteAction:"closeModal",showUpdateButton:!0,updateButtonText:"Delete",updateButtonAction:"delete",isUpdateDisabled:!1,actions:{cancel:function(){this.send("closeModal")},delete:function(){var e=this.get("model")
e.set("archived",!0),e.save().then(function(){e.destroyRecord().then(function(){return e.unloadRecord()}),this.send(this.get("afterDeleteAction"),e)}.bind(this))}}})}),define("hospitalrun/controllers/abstract-edit-controller",["exports","hospitalrun/mixins/edit-panel-props","hospitalrun/mixins/is-update-disabled","hospitalrun/mixins/modal-helper","ember-concurrency","hospitalrun/mixins/user-session"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,n.default,a.default,s.default,{cancelAction:"allItems",cancelButtonText:Ember.computed("model.hasDirtyAttributes",function(){var e=Ember.get(this,"intl")
return Ember.get(this,"model.hasDirtyAttributes")?e.t("buttons.cancel"):e.t("buttons.returnButton")}),disabledAction:Ember.computed("model.isValid",function(){var e=Ember.get(this,"model")
if(e.validate&&e.validate().catch(function(){}),!e.get("isValid"))return"showDisabledDialog"}),isNewOrDeleted:Ember.computed("model.isNew","model.isDeleted",function(){return Ember.get(this,"model.isNew")||Ember.get(this,"model.isDeleted")}),lookupLists:Ember.inject.service(),lookupListsLastUpdate:null,lookupListsToUpdate:null,showUpdateButton:Ember.computed("updateCapability",function(){var e=Ember.get(this,"updateCapability")
return this.currentUserCan(e)}),updateButtonAction:"update",updateButtonText:Ember.computed("model.isNew",function(){var e=Ember.get(this,"intl")
return Ember.get(this,"model.isNew")?e.t("buttons.add"):e.t("buttons.update")}),updateCapability:null,silentUpdate:function(e,t){var n=this
return this.get("updateTask").perform(!0).then(function(){n.send(e,t)})},updateTask:(0,i.task)(regeneratorRuntime.mark(function e(t){var n=this
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.beforeUpdate().then(function(){return n.saveModel(t)}).catch(function(e){return n._handleError(e)})
case 3:e.next=8
break
case 5:e.prev=5,e.t0=e.catch(0),this._handleError(e.t0)
case 8:case"end":return e.stop()}},e,this,[[0,5]])})).enqueue(),_addValueToLookupList:function(e,t,n,a){var i=e.get("value")
Ember.isArray(i)||(i=[]),i.includes(t)||(i.push(t),i.sort(),e.set("value",i),n.includes(e)||n.push(e),this.set(a,e))},_cancelUpdate:function(){Ember.get(this,"model").rollbackAttributes()},_handleError:function(e){if(!e.ignore){var t=Ember.get(this,"intl"),n=e
n.message||(n.message=e.toString()),this.displayAlert(t.t("alerts.errorExclamation"),t.t("messages.saveActionException",n))}},actions:{cancel:function(){this._cancelUpdate(),this.send(Ember.get(this,"cancelAction"))},returnTo:function(){this._cancelUpdate()
var e=Ember.get(this,"model.returnTo"),t=Ember.get(this,"model.returnToContext")
Ember.isEmpty(t)?this.transitionToRoute(e):this.transitionToRoute(e,t)},showDisabledDialog:function(){var e=Ember.get(this,"intl")
this.displayAlert(e.t("alerts.warningExclamation"),e.t("messages.requiredFieldsCorrectErrors"))},update:function(e){return this.get("updateTask").perform(e)}},afterUpdate:function(){},beforeUpdate:function(){return Ember.RSVP.Promise.resolve()},saveModel:function(e){var t=this
return Ember.get(this,"model").save().then(function(n){t.updateLookupLists().then(function(){e||t.afterUpdate(n)})}).catch(function(e){t.send("error",e)})},updateLookupLists:function(){var e=this,t=Ember.get(this,"lookupListsToUpdate"),n=Ember.A(),a=[]
return Ember.isEmpty(t)||(t.forEach(function(t){var i=Ember.get(e,Ember.get(t,"property")),s=Ember.get(e,Ember.get(t,"name"))
Ember.isEmpty(i)||(!Ember.isEmpty(s)&&s.then?a.push(s.then(function(a){return e._checkListForUpdate(t,a,n,i)})):e._checkListForUpdate(t,s,n,i))}),Ember.isEmpty(a))?Ember.RSVP.resolve():Ember.RSVP.all(a).then(function(){var t=Ember.get(e,"lookupLists"),a=[]
return n.forEach(function(n){a.push(n.save().then(function(){Ember.set(e,"lookupListsLastUpdate",(new Date).getTime()),t.resetLookupList(Ember.get(n,"id"))}))}),Ember.RSVP.all(a)})},_checkListForUpdate:function(e,t,n,a){var i=Ember.get(this,"store")
return t||(t=i.push(i.normalize("lookup",{id:e.id,value:[],userCanAdd:!0}))),Ember.isArray(a)?a.forEach(function(a){this._addValueToLookupList(t,a,n,e.name)}.bind(this)):this._addValueToLookupList(t,a,n,e.name),t}})}),define("hospitalrun/controllers/abstract-paged-controller",["exports","hospitalrun/mixins/pagination-props","hospitalrun/mixins/progress-dialog","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,n.default,a.default,{addPermission:null,deletePermission:null,nextStartKey:null,previousStartKey:null,previousStartKeys:[],progressMessage:"Loading Records.  Please wait...",progressTitle:"Loading",queryParams:["startKey","sortKey","sortDesc"],sortDesc:!1,sortKey:null,canAdd:Ember.computed(function(){return this.currentUserCan(this.get("addPermission"))}),canDelete:Ember.computed(function(){return this.currentUserCan(this.get("deletePermission"))}),canEdit:Ember.computed(function(){return this.currentUserCan(this.get("addPermission"))}),showActions:Ember.computed("canAdd","canEdit","canDelete",function(){return this.get("canAdd")||this.get("canEdit")||this.get("canDelete")}),disablePreviousPage:Ember.computed("previousStartKey",function(){return Ember.isEmpty(this.get("previousStartKey"))}),disableNextPage:Ember.computed("nextStartKey",function(){return Ember.isEmpty(this.get("nextStartKey"))}),showPagination:Ember.computed("nextStartKey","previousStartKey",function(){return!Ember.isEmpty(this.get("previousStartKey"))||!Ember.isEmpty(this.get("nextStartKey"))}),hasRecords:Ember.computed("model.length",{get:function(){var e=this.get("model")
return!Ember.isEmpty(e)&&e.get("length")>0}}),actions:{nextPage:function(){var e=this.get("nextStartKey"),t=this.get("previousStartKeys"),n=this.get("firstKey")
this.set("previousStartKey",n),t.push(n),this.set("startKey",e),this.showProgressModal()},previousPage:function(){var e=this.get("previousStartKey"),t=this.get("previousStartKeys")
t.pop(),this.set("startKey",e),this.set("previousStartKey",t.pop()),this.set("previousStartKeys",t),this.showProgressModal()},sortByKey:function(e,t){this.setProperties({previousStartKey:null,previousStartKeys:[],nextStartKey:null,sortDesc:t,sortKey:e,startKey:null,firstKey:null}),this.showProgressModal()}}})}),define("hospitalrun/controllers/abstract-report-controller",["exports","hospitalrun/mixins/date-format","hospitalrun/mixins/modal-helper","moment","hospitalrun/mixins/number-format","hospitalrun/mixins/pagination-props","hospitalrun/mixins/pouchdb","hospitalrun/mixins/progress-dialog"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,n.default,i.default,s.default,o.default,r.default,{defaultErrorMessage:"An error was encountered while generating the requested report.  Please let your system administrator know that you have encountered an error.",offset:0,limit:25,progressMessage:"Please wait while your report is generated.",progressTitle:"Generating Report",reportColumns:null,reportHeaders:null,reportRows:[],reportTitle:null,reportType:null,reportTypes:null,showFirstPageButton:!0,showLastPageButton:!0,showReportResults:!1,_addReportRow:function(e,t,n,a){var i=void 0,s=this.get("reportRows"),o=[]
for(var r in Ember.isEmpty(n)&&(n=this.get("reportColumns")),n)n[r].include&&(i=Ember.get(e,n[r].property),Ember.isEmpty(i)?o.push(""):"_numberFormat"===n[r].format?t?o.push(i):o.push(this._numberFormat(i)):!t&&n[r].format?o.push(this[n[r].format](i)):o.push(i))
a?s.addObject({rowAction:a,row:o}):s.addObject(o)},_finishReport:function(e){this.set("showReportResults",!0),this.set("offset",0),this._setReportHeaders(e),this._setReportTitle(),this._generateExport(),this.closeProgressModal()},_generateExport:function(){var e=[],t=[this.get("reportHeaders")]
t.addObjects(this.get("reportRows")),t.forEach(function(t){var n=void 0
n=(n=t.row?t.row:t).map(function(e){return e?e.replace?e.replace('"','""'):e:""}),e.push('"'+n.join('","')+'"')})
var n=e.join("\r\n"),a="data:application/csv;charset=utf-8,"+encodeURIComponent(n)
this.set("csvExport",a)},_notifyReportError:function(e){var t=this.get("intl")
throw this.closeProgressModal(),this.displayAlert(t.t("alerts.reportError"),t.t("messages.reportError")),new Error(e)},_setReportHeaders:function(e){var t=[]
for(var n in Ember.isEmpty(e)&&(e=this.get("reportColumns")),e)e[n].include&&t.push(e[n].label)
this.set("reportHeaders",t)},_setReportTitle:function(){var e=this.get("endDate"),t="",n="",i=this.get("reportType"),s=this.get("reportTypes"),o=this.get("startDate")
Ember.isEmpty(e)||(t=(0,a.default)(e).format("l"))
var r=s.findBy("value",i)
Ember.isEmpty(o)?this.set("reportTitle",this.get("intl").t("inventory.reports.titleSingleDate",{name:r.name,date:t})):(n=(0,a.default)(o).format("l"),this.set("reportTitle",this.get("intl").t("inventory.reports.titleDateRange",{name:r.name,startDate:n,endDate:t})))},_validateDateInputs:function(){var e=!0,t=this.get("startDate"),n=this.get("endDate"),a=void 0
if(Ember.isEmpty(t))a="Please enter a start date.",e=!1
else{if(Ember.isEmpty(n)){var i=new Date
this.set("endDate",i),n=this.get("endDate")}n.getTime()<t.getTime()&&(a="Please enter an end date after the start date.",e=!1)}return e||this.displayAlert("Error Generating Report",a),e},actions:{firstPage:function(){this.set("offset",0)},nextPage:function(){var e=this.get("limit")
this.incrementProperty("offset",e)},previousPage:function(){var e=this.get("limit")
this.decrementProperty("offset",e)},lastPage:function(){var e=this.get("reportRows.length"),t=this.get("limit"),n=parseInt(e/t)
this.set("offset",n*t)}},currentReportRows:Ember.computed("reportRows.[]","offset","limit",function(){var e=this.get("limit"),t=this.get("offset")
return this.get("reportRows").slice(t,t+e)}),disablePreviousPage:Ember.computed("offset",function(){return 0===this.get("offset")}),disableNextPage:Ember.computed("offset","limit","reportRows.length",function(){var e=this.get("limit"),t=this.get("reportRows.length")
return this.get("offset")+e>=t}),showPagination:Ember.computed("reportRows.length",function(){return this.get("reportRows.length")>this.get("limit")})})}),define("hospitalrun/controllers/application",["exports","hospitalrun/mixins/progress-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{filesystem:Ember.inject.service(),session:Ember.inject.service(),allowSearch:!1,currentSearchText:null,_setup:function(){this.get("filesystem").setup()}.on("init"),actions:{search:function(e){if(this.allowSearch&&this.searchRoute){var t=this.get("currentRouteName")
this.get("currentSearchText")===e&&-1!==t.indexOf(".search")||(this.set("progressMessage","Searching for "+e+". Please wait..."),this.showProgressModal(),this.transitionToRoute(this.searchRoute+"/"+e))}}}})}),define("hospitalrun/controllers/appointments",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/imaging",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/incident",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/index",["exports","hospitalrun/mixins/user-session"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{config:Ember.inject.service(),database:Ember.inject.service(),standAlone:Ember.computed.alias("config.standAlone"),needsUserSetup:Ember.computed.alias("config.needsUserSetup"),init:function(){var e=this
Ember.get(this,"standAlone")&&Ember.get(this,"database.usersDB").allDocs().then(function(t){t.total_rows<=1&&Ember.run(function(){return e.set("config.needsUserSetup",!0)})})},actions:{newUser:function(){this.send("createNewUser")}}})}),define("hospitalrun/controllers/inventory",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/invoices",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/labs",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/login",["exports","ember-ajax/errors"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=Ember.Controller.extend({session:Ember.inject.service(),errorMessage:null,identification:null,password:null,actions:{authenticate:function(){var e=this,n=this.getProperties("identification","password"),a=n.identification,i=n.password
this.get("session").authenticate("authenticator:custom",{identification:a,password:i}).catch(function(n){(0,t.isAbortError)(n)||(0,t.isTimeoutError)(n)?(e.set("errorMessage",!1),e.set("offlineError",!0)):(e.set("errorMessage",!0),e.set("offlineError",!1))})}}})
e.default=n}),define("hospitalrun/controllers/medication",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/patients",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/controllers/visits",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({})}),define("hospitalrun/custom-form-add/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({updateAction:"addForm",actions:{addForm:function(){var e=this.get("model.modelToAddTo"),t=e.get("customForms"),n=this.get("model.selectedForm")
Ember.isEmpty(t)&&(t=Ember.Object.create(),e.set("customForms",t)),t.set(n,Ember.Object.create()),e.notifyPropertyChange("customForms"),this.send("closeModal")}},isUpdateDisabled:Ember.computed("model.selectedForm",function(){return Ember.isEmpty(this.get("model.selectedForm"))})})}),define("hospitalrun/custom-form-add/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Sk5O4KvC",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["cancelAction","isUpdateDisabled","title","updateButtonAction","updateButtonText"],["closeModal",[20,["isUpdateDisabled"]],[25,"t",["customForms.titles.addCustomForm"],null],"addForm",[25,"t",["customForms.buttons.addForm"],null]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["select"]]],[["label","property","content","prompt","class"],[[25,"t",["customForms.labels.formToAdd"],null],"selectedForm",[20,["model","customForms"]]," ","form-to-add form-input-group"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/custom-form-add/template.hbs"}})}),define("hospitalrun/diagnosis/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({updateCapability:"add_diagnosis",editController:Ember.computed.alias("model.editController"),diagnosisList:Ember.computed.alias("editController.diagnosisList"),newDiagnosis:!1,lookupListsToUpdate:[{name:"diagnosisList",property:"model.diagnosis",id:"diagnosis_list"}],additionalButtons:Ember.computed("model.isNew",function(){var e=this.get("intl")
if(!this.get("model.isNew"))return[{class:"btn btn-default warning",buttonAction:"deleteDiagnosis",buttonIcon:"octicon octicon-x",buttonText:e.t("buttons.delete")}]}),canDeleteDiagnosis:Ember.computed(function(){return this.currentUserCan("delete_diagnosis")}),title:Ember.computed("model.isNew",function(){var e=this.get("intl")
return this.get("model.isNew")?e.t("diagnosis.titles.addDiagnosis"):e.t("diagnosis.titles.editDiagnosis")}),afterUpdate:function(e){this.get("newDiagnosis")?this.get("editController").send("addDiagnosis",e):this.send("closeModal")},beforeUpdate:function(){var e=this.get("model")
return this.set("newDiagnosis",e.get("isNew")),Ember.RSVP.Promise.resolve()},actions:{cancel:function(){this.send("closeModal")},deleteDiagnosis:function(){var e=this.get("model")
this.get("editController").send("deleteDiagnosis",e)}}})}),define("hospitalrun/diagnosis/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"cmHcZqd7",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["additionalButtons","hideCancelButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["additionalButtons"]],[20,["hideCancelButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","hint","class"],[[19,1,[]],[20,["model"]],"diagnosis",[25,"t",["diagnosis.labels.diagnosis"],null],[20,["diagnosisList"]],false,"diagnosis-text required"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["diagnosis.labels.diagnosis"],null],false],[8],[0,"\\n        "],[6,"div"],[7],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","diagnosis"]],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"date",[25,"t",["diagnosis.labels.date"],null],"col-sm-4 required"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],[[25,"t",["diagnosis.labels.secondaryDiagnosis"],null],"secondaryDiagnosis","col-sm-4 secondary-diagnosis"]]],false],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],[[25,"t",["diagnosis.labels.activeDiagnosis"],null],"active","col-sm-4"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/diagnosis/edit/template.hbs"}})}),define("hospitalrun/dialog/controller",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({showUpdateButton:!0,isUpdateDisabled:!1,cancelAction:Ember.computed("model.cancelAction",function(){var e=Ember.get(this,"model.cancelAction")
return Ember.isEmpty(e)&&(e="cancel"),e}),actions:{cancel:function(){this.send("closeModal")},confirm:function(){var e=this.getWithDefault("model.closeModalOnConfirm",!0),t=this.getWithDefault("model.confirmAction","model.confirm")
this.send(t,Ember.get(this,"model")),e&&this.send("closeModal")},ok:function(){var e=Ember.get(this,"model.okAction"),t=Ember.get(this,"model.okContext")
Ember.isEmpty(t)&&(t=Ember.get(this,"model")),Ember.isEmpty(e)||this.send(e,t),this.send("closeModal")}}})}),define("hospitalrun/dialog/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"gNzuFwgK",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["cancelAction","hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText","cancelButtonText"],[[20,["cancelAction"]],[20,["model","hideCancelButton"]],[20,["model","hideUpdateButton"]],[20,["model","isUpdateDisabled"]],[20,["model","title"]],[20,["model","updateButtonAction"]],[20,["model","updateButtonText"]],[20,["model","cancelButtonText"]]]],{"statements":[[4,"if",[[20,["model","showProgress"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","progress"],[7],[0,"\\n      "],[6,"div"],[9,"class","progress-bar progress-bar-striped active"],[9,"role","progressbar"],[10,"aria-valuenow",[20,["model","progressBarValue"]],null],[9,"aria-valuemin","0"],[9,"aria-valuemax","100"],[10,"style",[20,["model","progressBarStyle"]],null],[7],[0,"\\n        "],[6,"span"],[9,"class","sr-only"],[7],[1,[25,"t",["loading.progressBar.progress"],[["progressBarValue"],[[20,["model","progressBarValue"]]]]],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[1,[20,["model","message"]],false],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/dialog/template.hbs"}})}),define("hospitalrun/electron/reload",[],function(){(function(){var e=window?window.processNode:null
if(window.ELECTRON&&!(e&&e.env&&e.env.DO_NOT_SETUP_LIVERELOAD)){var t=void 0,n=void 0,a=void 0
try{t=window.requireNode("fs"),n=window.requireNode("path")}catch(s){return console.warn("ember-electron tried to require fs and path to enable live-reload features, but failed."),console.warn("Automatic reloading is therefore disabled."),void console.warn(s)}document.addEventListener("DOMContentLoaded",function(){var o=__dirname||(e&&(e||{}).cwd?e.cwd():null)
o&&(t.stat(o,function(t){t||(i(),e&&"linux"===e.platform&&(i("assets"),i("tests")))}),function(){try{(a=window.requireNode("devtron"))&&a.install()}catch(s){}}(),function(){var e=void 0
try{var a=window.requireNode.resolve("ember-inspector")
e=n.join(a,"dist","chrome")}catch(i){e=n.join(__dirname,"..","node_modules","ember-inspector","dist","chrome")}t.lstat(e,function(t,n){if(t)console.warn("Error loading Ember Inspector",t)
else if(n&&n.isDirectory&&n.isDirectory()){var a=window.requireNode("electron").remote.BrowserWindow,i=a.getDevToolsExtensions&&a.getDevToolsExtensions().hasOwnProperty("Ember Inspector")
try{i||a.addDevToolsExtension(e)}catch(t){}}})}())})}function i(){for(var e,a=arguments.length,i=Array(a),s=0;s<a;s++)i[s]=arguments[s]
var o=(e=n).join.apply(e,[__dirname].concat(i))
t.watch(o,{recursive:!0},function(){return window.location.reload()})}})()}),define("hospitalrun/finishgauth/route",["exports","hospitalrun/mixins/map-oauth-params","hospitalrun/mixins/setup-user-role"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,n.default,{config:Ember.inject.service(),database:Ember.inject.service(),session:Ember.inject.service(),model:function(e){e.k&&e.s1&&e.s2&&e.t&&this.get("session").authenticate("authenticator:custom",{google_auth:!0,params:e})}})}),define("hospitalrun/formats",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={time:{hhmmss:{hour:"numeric",minute:"numeric",second:"numeric"}},date:{hhmmss:{hour:"numeric",minute:"numeric",second:"numeric"}},number:{EUR:{style:"currency",currency:"EUR",minimumFractionDigits:2,maximumFractionDigits:2},USD:{style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2}}}})
define("hospitalrun/helpers/and",["exports","ember-truth-helpers/helpers/and"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"and",{enumerable:!0,get:function(){return t.and}})}),define("hospitalrun/helpers/app-version",["exports","hospitalrun/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n){function a(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.default.APP.version,s=a.versionOnly||a.hideSha,o=a.shaOnly||a.hideVersion,r=null
return s&&(a.showExtended&&(r=i.match(n.versionExtendedRegExp)),r||(r=i.match(n.versionRegExp))),o&&(r=i.match(n.shaRegExp)),r?r[0]:i}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=a,e.default=Ember.Helper.helper(a)}),define("hospitalrun/helpers/cancel-all",["exports","ember-concurrency/helpers/cancel-all"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/date-format",["exports","moment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e,a){if(!Ember.isEmpty(e[0])){var i="l",s=n(e,1)[0]
return a&&a.format&&(i=a.format),s&&"function"==typeof s.get&&(s=s.get("content")),(0,t.default)(s).format(i)}})}),define("hospitalrun/helpers/eq",["exports","ember-truth-helpers/helpers/equal"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"equal",{enumerable:!0,get:function(){return t.equal}})}),define("hospitalrun/helpers/format-date",["exports","ember-intl/helpers/format-date"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/format-message",["exports","ember-intl/helpers/format-message"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/format-number",["exports","ember-intl/helpers/format-number"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/format-relative",["exports","ember-intl/helpers/format-relative"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/format-time",["exports","ember-intl/helpers/format-time"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/gt",["exports","ember-truth-helpers/helpers/gt"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gt",{enumerable:!0,get:function(){return t.gt}})}),define("hospitalrun/helpers/gte",["exports","ember-truth-helpers/helpers/gte"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gte",{enumerable:!0,get:function(){return t.gte}})}),define("hospitalrun/helpers/html-line-break",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e){var n=t(e,1)[0]
return null!=n?Ember.String.htmlSafe(n.replace(/\n/g,"<br>")):null})}),define("hospitalrun/helpers/is-array",["exports","ember-truth-helpers/helpers/is-array"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isArray",{enumerable:!0,get:function(){return t.isArray}})}),define("hospitalrun/helpers/is-empty",["exports","ember-truth-helpers/helpers/is-empty"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/is-equal-array",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e){var n=t(e,2),a=n[0],i=n[1]
return!(!Ember.isArray(a)||!Ember.isArray(i)||a.get("length")!==i.get("length"))&&a.every(function(e){return i.includes(e)})})}),define("hospitalrun/helpers/is-equal",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e){var n=t(e,2)
return n[0]===n[1]})}),define("hospitalrun/helpers/is-not",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e){return!t(e,1)[0]})}),define("hospitalrun/helpers/lt",["exports","ember-truth-helpers/helpers/lt"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lt",{enumerable:!0,get:function(){return t.lt}})}),define("hospitalrun/helpers/lte",["exports","ember-truth-helpers/helpers/lte"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lte",{enumerable:!0,get:function(){return t.lte}})}),define("hospitalrun/helpers/not-eq",["exports","ember-truth-helpers/helpers/not-equal"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"notEq",{enumerable:!0,get:function(){return t.notEq}})}),define("hospitalrun/helpers/not",["exports","ember-truth-helpers/helpers/not"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"not",{enumerable:!0,get:function(){return t.not}})}),define("hospitalrun/helpers/number-format",["exports","hospitalrun/mixins/number-format"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=Ember.Object.extend(t.default)
e.default=Ember.Helper.helper(function(e){var t=n(e,1)[0]
return(new a)._numberFormat(t)})}),define("hospitalrun/helpers/or",["exports","ember-truth-helpers/helpers/or"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"or",{enumerable:!0,get:function(){return t.or}})}),define("hospitalrun/helpers/perform",["exports","ember-concurrency/helpers/perform"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/helpers/read-path",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Helper.helper(function(e){var n=t(e,2),a=n[0],i=n[1]
return Ember.isEmpty(i)?a:Ember.get(a,i)})}),define("hospitalrun/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/helpers/t",["exports","ember-intl/helpers/t"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/helpers/task",["exports","ember-concurrency/helpers/task"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})
define("hospitalrun/helpers/xor",["exports","ember-truth-helpers/helpers/xor"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"xor",{enumerable:!0,get:function(){return t.xor}})}),define("hospitalrun/imaging/completed/completed-list-item/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"tr"})}),define("hospitalrun/imaging/completed/completed-list-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"GssnjDym",block:'{"symbols":[],"statements":[[6,"td"],[9,"class","requested-date"],[7],[1,[25,"date-format",[[20,["imaging","requestedDate"]]],null],false],[8],[0,"\\n"],[6,"td"],[9,"class","imaging-date"],[7],[1,[25,"date-format",[[20,["imaging","imagingDate"]]],null],false],[8],[0,"\\n"],[6,"td"],[9,"class","requested-by"],[7],[1,[20,["imaging","requestedBy"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","completed-by"],[7],[1,[20,["imaging","completedBy"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","display-name"],[7],[1,[20,["imaging","patient","displayName"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","type"],[7],[1,[20,["imaging","imagingType","name"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","results"],[7],[1,[20,["imaging","result"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","notes"],[7],[1,[20,["imaging","notes"]],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/completed/completed-list-item/template.hbs"}})}),define("hospitalrun/imaging/completed/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({startKey:[],showActions:!1})}),define("hospitalrun/imaging/completed/route",["exports","hospitalrun/macro","hospitalrun/imaging/index/route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({pageTitle:(0,t.t)("imaging.titles.completedImaging"),searchStatus:"Completed"})}),define("hospitalrun/imaging/completed/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hSt81ny5",block:'{"symbols":["imaging"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["model"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table imaging-completed-table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.dateCompleted"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["imaging.labels.completedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.imagingType"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.results"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[1,[25,"imaging/completed/completed-list-item",null,[["imaging"],[[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["imaging.messages.noCompleted"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/completed/template.hbs"}})}),define("hospitalrun/imaging/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/mixins/patient-submodule"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{title:"Delete Request",actions:{delete:function(){this.deleteChildFromVisit("imaging")}}})}),define("hospitalrun/imaging/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"vnMOyC16",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",[[20,["models","imaging","request","singular"]]],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/delete/template.hbs"}})}),define("hospitalrun/imaging/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/charge-actions","hospitalrun/mixins/patient-submodule"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{imagingController:Ember.inject.controller("imaging"),chargePricingCategory:"Imaging",selectedImagingType:null,canComplete:Ember.computed("selectedImagingType.[]","model.imagingTypeName",function(){var e=this.get("model.isNew"),t=this.get("model.imagingTypeName"),n=this.get("selectedImagingType")
return(!e||!(Ember.isEmpty(t)||Ember.isArray(n)&&n.length>1))&&this.currentUserCan("complete_imaging")}),actions:{completeImaging:function(){this.set("model.status","Completed"),this.set("model.completedBy",this.get("model").getUserName()),this.get("model").validate().then(function(){this.get("model.isValid")&&(this.set("model.imagingDate",new Date),this.send("update"))}.bind(this)).catch(function(){})},update:function(){if(this.get("model.isNew")){var e=this.get("model"),t=this.get("selectedImagingType")
Ember.isEmpty(this.get("model.status"))&&this.set("model.status","Requested"),this.set("model.requestedBy",e.getUserName()),this.set("model.requestedDate",new Date),Ember.isEmpty(t)?this.saveNewPricing(this.get("model.imagingTypeName"),"Imaging","model.imagingType").then(function(){this.addChildToVisit(e,"imaging","Imaging").then(function(){this.saveModel()}.bind(this))}.bind(this)):this.getSelectedPricing("selectedImagingType").then(function(t){Ember.isArray(t)?this.createMultipleRequests(t,"imagingType","imaging","Imaging"):(this.set("model.imagingType",t),this.addChildToVisit(e,"imaging","Imaging").then(function(){this.saveModel()}.bind(this)))}.bind(this))}else this.saveModel()}},additionalButtons:Ember.computed("canComplete","model.isValid",function(){var e=this.get("intl"),t=this.get("canComplete")
if(this.get("model.isValid")&&t)return[{buttonAction:"completeImaging",buttonIcon:"glyphicon glyphicon-ok",class:"btn btn-primary on-white",buttonText:e.t("buttons.complete")}]}),lookupListsToUpdate:[{name:"radiologistList",property:"model.radiologist",id:"radiologists"}],pricingTypes:Ember.computed.alias("imagingController.imagingPricingTypes"),pricingList:null,radiologistList:Ember.computed.alias("imagingController.radiologistList"),updateCapability:"add_imaging",afterUpdate:function(e,t){var n=this.get("intl")
this.updateLookupLists()
var a=void 0,i=void 0,s=void 0
"Completed"===this.get("model.status")?(i=n.t("imaging.alerts.completedTitle"),s=n.t("imaging.alerts.completedMessage")):(i=n.t("imaging.alerts.savedTitle"),s=n.t("imaging.alerts.savedMessage")),t&&(a=this.get("cancelAction")),this.saveVisitIfNeeded(i,s,a),this.set("model.selectPatient",!1)}})}),define("hospitalrun/imaging/edit/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","hospitalrun/mixins/charge-route","moment","hospitalrun/mixins/patient-list-route"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(a.default,i.default,o.default,{editTitle:(0,t.t)("imaging.titles.editTitle"),modelName:"imaging",newTitle:(0,t.t)("imaging.titles.editTitle"),pricingCategory:"Imaging",actions:{returnToAllItems:function(){this.controller.send("returnToAllItems")}},getNewData:function(){return Ember.RSVP.resolve({selectPatient:!0,requestDate:(0,s.default)().startOf("day").toDate()})}})}),define("hospitalrun/imaging/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"5A44Risx",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","selectPatient"]]],null,{"statements":[[0,"      "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"required patient-input"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","returnTo","returnToContext","disablePatientLink","class"],[[20,["model","patient"]],"imaging.edit",[20,["model","id"]],[20,["model","isNew"]],"clickable"]]],false],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","prompt","selected"],["col-xs-3 required form-input-group",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[25,"t",["imaging.labels.addNewVisit"],null],[20,["model","visit"]]]]],false],[0,"\\n      "],[8],[0,"\\n      "],[1,[25,"checkbox-or-typeahead",null,[["property","label","list","selection","optionLabelPath","typeAheadType","className","prompt","model","class"],["imagingTypeName",[25,"t",["labels.imagingType"],null],[20,["objectTypeList"]],[20,["selectedImagingType"]],"name","pricing","required"," ",[20,["model"]],"imaging-type-input"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.visit"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visit","visitDate"]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-9"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.imagingType"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","imagingType","name"]],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-12"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","requestedBy"]],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["canComplete"]]],null,{"statements":[[0,"      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","prompt","class"],[[19,1,[]],[20,["model"]],"radiologist",[25,"t",["imaging.labels.radiologist"],null],[20,["radiologistList"]]," ","radiologist-input"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["result",[25,"t",["imaging.labels.resultNotes"],null],"result-input"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[1,[25,"expand-text",null,[["property","label","rows","form"],["notes",[25,"t",["imaging.labels.requestedNotes"],null],3,[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/edit/template.hbs"}})}),define("hospitalrun/imaging/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{startKey:[],addPermission:"add_imaging"})}),define("hospitalrun/imaging/index/imaging-edit-button/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"button",classNames:["btn","btn-default","neutral"]})}),define("hospitalrun/imaging/index/imaging-edit-button/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"tYXxVUcV",block:'{"symbols":[],"statements":[[4,"link-to",["imaging.edit",[20,["imaging"]]],null,{"statements":[[1,[25,"t",["labels.edit"],null],false]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/index/imaging-edit-button/template.hbs"}})}),define("hospitalrun/imaging/index/requested-list-item/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"tr",classNames:["clickable"],click:function(){this.sendAction("action",this.imaging)}})}),define("hospitalrun/imaging/index/requested-list-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2mTUT0Vb",block:'{"symbols":[],"statements":[[6,"td"],[9,"class","date"],[7],[1,[25,"date-format",[[20,["imaging","requestedDate"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n"],[6,"td"],[9,"class","requested-by"],[7],[1,[20,["imaging","requestedBy"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","patient"],[7],[1,[20,["imaging","patient","displayName"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","type"],[7],[1,[20,["imaging","imagingType","name"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","notes"],[7],[1,[20,["imaging","notes"]],false],[8],[0,"\\n\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"  "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"      "],[1,[25,"imaging/index/imaging-edit-button",null,[["imaging"],[[20,["imaging"]]]]],false],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/index/requested-list-item/template.hbs"}})}),define("hospitalrun/imaging/index/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-index-route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({modelName:"imaging",pageTitle:Ember.computed("intl.locale",function(){return(0,t.t)("imaging.pageTitle")}),searchStatus:"Requested",_getStartKeyFromItem:function(e){var t=e.get("imagingDateAsTime"),n=this._getPouchIdFromItem(e),a=e.get("requestedDateAsTime")
return[this.get("searchStatus"),a,t,n]},_modelQueryParams:function(){var e=this._getMaxPouchId(),t=this.get("maxValue"),n=this._getMinPouchId(),a=this.get("searchStatus")
return{options:{startkey:[a,null,null,n],endkey:[a,t,t,e]},mapReduce:"imaging_by_status"}}})}),define("hospitalrun/imaging/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"IgSs/PVl",block:'{"symbols":["imaging"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.imagingType"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[1,[25,"imaging/index/requested-list-item",null,[["imaging","action","showActions","canEdit"],[[19,1,[]],"editItem",[20,["showActions"]],[20,["canEdit"]]]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["messages.noItemsFound"],null],false],[0," "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0," "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/imaging/index/template.hbs"}})}),define("hospitalrun/imaging/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-module-route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({addCapability:"add_imaging",additionalModels:[{name:"radiologistList",findArgs:["lookup","radiologists"]}],allowSearch:!1,moduleName:"imaging",newButtonText:(0,t.t)("imaging.buttons.newButton"),sectionTitle:(0,t.t)("imaging.sectionTitle")})}),define("hospitalrun/inc-category/add-item/controller",["exports","hospitalrun/macro"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({showUpdateButton:!0,title:(0,t.t)("incident.titles.addCategoryItem"),updateButtonAction:"add",updateButtonText:"Add",incidentCategoryEdit:Ember.inject.controller("inc-category/edit"),editController:Ember.computed.alias("incidentCategoryEdit"),actions:{add:function(){var e=Ember.get(this,"model")
Ember.get(this,"editController").send("addItem",e)},cancel:function(){this.send("closeModal")}}})}),define("hospitalrun/inc-category/add-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"uUGgwbR0",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["incident.labels.item"],null],"item","incident-category-item"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inc-category/add-item/template.hbs"}})}),define("hospitalrun/inc-category/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:(0,n.t)("incident.titles.deleteIncidentCategory")})}),define("hospitalrun/inc-category/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"jW+0dQtq",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","incidentCategoryName"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inc-category/delete/template.hbs"}})}),define("hospitalrun/inc-category/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({updateCapability:"add_incident_category",afterUpdate:function(e){var t=Ember.get(this,"intl"),n=t.t("incident.messages.incidentCategorySaved",{name:Ember.get(e,"incidentCategoryName")}),a=t.t("incident.titles.incidentCategorySaved")
this.displayAlert(a,n)},actions:{addItem:function(e){var t=this.getWithDefault("model.incidentCategoryItems",[]),n=Ember.get(this,"model")
t.addObject(e),n.set("incidentCategoryItems",t),this.send("update",!0),this.send("closeModal")},deleteItem:function(e){var t=e.get("itemToDelete")
Ember.get(this,"model.incidentCategoryItems").removeObject(t),this.send("update",!0)},showAddItem:function(){this.send("openModal","inc-category.add-item",Ember.Object.create())},showDeleteItem:function(e){var t=Ember.get(this,"intl"),n=t.t("models.item.names.singular"),a=t.t("messages.delete_singular",{name:n}),i=t.t("incident.titles.deleteItem")
this.displayConfirm(i,a,"deleteItem",Ember.Object.create({itemToDelete:e}))}}})}),define("hospitalrun/inc-category/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:(0,n.t)("incident.titles.editIncidentCategory"),modelName:"inc-category",newTitle:(0,n.t)("incident.titles.newIncidentCategory"),actions:{deleteItem:function(e){this.controller.send("deleteItem",e)}}})}),define("hospitalrun/inc-category/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"1Hwbiz0v",block:'{"symbols":["form","incidentCategoryItem"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","form-group has-success"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n        "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n          "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n            "],[1,[25,"t",["incident.titles.incidentCategoryName"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n          "],[6,"div"],[9,"class","row"],[7],[0,"\\n            "],[1,[25,"component",[[19,1,["input"]]],[["property","class"],["incidentCategoryName","incident-category-name col-sm-12"]]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n        "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n          "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n            "],[1,[25,"t",["incident.titles.incidentCategoryItem"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n          "],[6,"table"],[9,"class","table"],[7],[0,"\\n            "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n              "],[6,"th"],[7],[1,[25,"t",["incident.labels.item"],null],false],[8],[0,"\\n              "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n            "],[8],[0,"\\n"],[4,"each",[[20,["model","incidentCategoryItems"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[9,"class","incident-category-item"],[7],[1,[19,2,["item"]],false],[8],[0,"\\n                "],[6,"td"],[7],[0,"\\n                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteItem",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["incident.buttons.delete"],null],false],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n          "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showAddItem"]],[7],[1,[25,"t",["incident.buttons.addItem"],null],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inc-category/edit/template.hbs"}})}),define("hospitalrun/inc-category/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({startKey:[],canDeleteIncidentCategory:Ember.computed(function(){return this.currentUserCan("delete_incident_category")}),actions:{showDeleteIncidentCategory:function(e){this.send("openModal","inc-category.delete",e)}}})}),define("hospitalrun/inc-category/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({modelName:"inc-category",newButtonAction:"newItem",newButtonText:(0,n.t)("incident.buttons.newCategory"),pageTitle:(0,n.t)("incident.titles.incidentCategories"),actions:{editItem:function(e){this.transitionTo("inc-category.edit",e)},newItem:function(){this.transitionTo("inc-category.edit","new")}}})}),define("hospitalrun/inc-category/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"RhoGEY9F",block:'{"symbols":["category"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["incident.titles.incidentCategoryName"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["incident.labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[4,"unless",[[19,1,["archived"]]],null,{"statements":[[0,"          "],[6,"tr"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[9,"class","incident-catergory-name"],[7],[1,[19,1,["incidentCategoryName"]],false],[8],[0,"\\n            "],[6,"td"],[7],[0,"\\n                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["incident.buttons.edit"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canDeleteIncidentCategory"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteIncidentCategory",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["incident.buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"em"],[7],[1,[25,"t",["incident.messages.noIncidentCategoriesFound"],null],false],[8],[0,"\\n      "],[6,"em"],[7],[1,[25,"t",["incident.messages.createNewIncidentCategory"],null],false],[8],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary on-white"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["incident.buttons.newCategory"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inc-category/index/template.hbs"}})}),define("hospitalrun/inc-category/route",["exports","ember-simple-auth/mixins/authenticated-route-mixin"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,{actions:{allItems:function(){this.transitionTo("inc-category.index")}}})})
define("hospitalrun/incident/attachment/controller",["exports","hospitalrun/patients/photo/controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addAction:"addAttachment",editTitle:(0,n.t)("incident.titles.editAttachment"),modelName:"attachment",newTitle:(0,n.t)("incident.titles.addAttachment"),fileRequiredMessage:(0,n.t)("incident.messages.attachmentFileRequired"),editController:Ember.inject.controller("incident/edit")})}),define("hospitalrun/incident/attachment/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"n6hOhStu",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonClass","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonClass"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["title",[25,"t",["incident.labels.title"],null],"attachment-title"]]],false],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[1,[25,"take-photo",null,[["form","defaultPhotoSource","isImage","photoFile","sourceLabel"],[[19,1,[]],"uploadAFile",[20,["model","isImage"]],[20,["model","photoFile"]],[25,"t",["incident.labels.howToAddAttachment"],null]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[20,["model","isImage"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","thumbnail"],[7],[0,"\\n          "],[6,"img"],[10,"alt",[20,["model","title"]],null],[10,"src",[20,["model","url"]],null],[9,"class","img-responsive"],[7],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"a"],[10,"href",[20,["model","url"]],null],[9,"target","_blank"],[10,"download",[26,[[20,["model","shortFileName"]]]]],[9,"class","btn btn-default"],[7],[0,"\\n          "],[6,"span"],[9,"class","glyphicon glyphicon-download"],[9,"aria-hidden","true"],[7],[8],[0," "],[1,[25,"t",["incident.buttons.download"],null],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]}],[4,"if",[[20,["showFileRequired"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","alert alert-warning"],[9,"role","alert"],[7],[1,[18,"fileRequiredMessage"],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/attachment/template.hbs"}})}),define("hospitalrun/incident/completed/controller",["exports","hospitalrun/incident/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({canDelete:!1,startKey:[]})}),define("hospitalrun/incident/completed/route",["exports","hospitalrun/incident/index/route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{editReturn:"incident.completed",modelName:"incident",pageTitle:(0,a.t)("incident.titles.closed"),_getStartKeyFromItem:function(e){var t=this._getPouchIdFromItem(e)
return[e.get("reportedBy"),t]},_modelQueryParams:function(){var e=this._getMaxPouchId(),t=this.getUserName(!0),n={mapReduce:"closed_incidents_by_user"}
return this.currentUserCan("manage_incidents")||(n.options={startkey:[t,null],endkey:[t,e]}),n}})}),define("hospitalrun/incident/completed/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"DivPDvIU",block:'{"symbols":[],"statements":[[12,"incident/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/incident/completed/template.hbs"}})}),define("hospitalrun/incident/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:(0,n.t)("incident.titles.deleteIncident"),_deleteChildObject:function(e,t,n){e.get(t).then(function(e){e.forEach(function(e){n.push(e.destroyRecord())})})},actions:{delete:function(){var e=[],t=Ember.get(this,"model")
this._deleteChildObject(t,"notes",e),Ember.RSVP.all(e).then(function(){Ember.get(this,"model").destroyRecord().then(function(){this.send("closeModal")}.bind(this))}.bind(this))}}})}),define("hospitalrun/incident/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Tkj2T9Dq",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0," "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.incident.names.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/delete/template.hbs"}})}),define("hospitalrun/incident/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","ember-data","hospitalrun/mixins/friendly-id","hospitalrun/mixins/incident-statuses","hospitalrun/mixins/patient-submodule","hospitalrun/utils/select-values","hospitalrun/mixins/user-session","hospitalrun/mixins/custom-form-manager"],function(e,t,n,a,i,s,o,r,l){Object.defineProperty(e,"__esModule",{value:!0})
var d=n.default.PromiseArray,u=n.default.PromiseObject
e.default=t.default.extend(i.default,a.default,s.default,o.default,r.default,l.default,{lookupListsToUpdate:[{name:"incidentDepartmentList",property:"model.department",id:"incident_departments"}],sequenceName:"incident",sequenceView:"incident_by_friendly_id",updateCapability:"add_incident",database:Ember.inject.service(),filesystem:Ember.inject.service(),lookupLists:Ember.inject.service(),customFormsToAdd:Ember.computed.alias("formsForSelect"),customFormsToDisplay:Ember.computed.alias("formsToDisplay"),showAddFormButton:Ember.computed.alias("showAddButton"),incidentController:Ember.inject.controller("incident"),canManageIncident:Ember.computed("model.{isNew,status}",function(){var e=this.currentUserCan("manage_incidents"),t=Ember.get(this,"model.status")
return(Ember.get(this,"model.isNew")||t===i.CLOSED)&&(e=!1),e}),canUpdateStatus:Ember.computed("model.isNew",function(){var e=this.currentUserCan("manage_incidents"),t=Ember.get(this,"model.isNew")
return e&&!t}),categoryNameList:Ember.computed("incidentCategoryList.@each.archived",function(){return d.create({promise:Ember.get(this,"incidentCategoryList").then(function(e){return e.map(function(e){return{id:Ember.get(e,"incidentCategoryName"),value:Ember.get(e,"incidentCategoryName")}})})})}).volatile(),incidentCategoryList:Ember.computed(function(){return Ember.get(this,"lookupLists").getLookupList("incidentCategories")}).volatile(),incidentDepartmentList:Ember.computed("lookupListsLastUpdate",function(){var e=Ember.get(this,"lookupLists")
return u.create({promise:e.getLookupList("incident_departments")})}).volatile(),incidentStatuses:Ember.computed(function(){var e=this
return Ember.get(this,"statusList").map(function(t){return{id:t,value:e.getLocalizedStatus(t)}})}),itemList:Ember.computed("model.categoryName",function(){var e=Ember.get(this,"model.categoryName")
if(!Ember.isEmpty(e))return d.create({promise:Ember.get(this,"incidentCategoryList").then(function(t){var n=t.findBy("incidentCategoryName",e)
return Ember.get(n,"incidentCategoryItems")})})}),afterUpdate:function(){var e=Ember.get(this,"intl")
this.displayAlert(e.t("incident.titles.incidentSaved"),e.t("incident.messages.saved"))},beforeUpdate:function(){var e=Ember.get(this,"model")
return Ember.set(e,"modifiedByDisplayName",this.getUserName(!1)),Ember.get(e,"isNew")?this.generateFriendlyId("incident").then(function(t){Ember.set(e,"friendlyId",t)}):Ember.RSVP.resolve()},setupCustomForms:function(){this.set("formType","incident"),this.initFormsForType()},_updateList:function(e,t,n){var a=Ember.get(this,"model")
Ember.get(a,e).then(function(e){n?e.removeObject(t):e.addObject(t),this.send("update",!0),this.send("closeModal")}.bind(this))},actions:{addNote:function(e){this._updateList("notes",e)},addAttachment:function(e){this._updateList("incidentAttachments",e)},addCustomForm:function(){this.send("openModal","custom-form-add",Ember.Object.create({modelToAddTo:this.get("model"),customForms:this.get("customFormsToAdd")}))},showAddAttachment:function(){var e=Ember.get(this,"store").createRecord("attachment",{dateAdded:new Date,addedBy:this.getUserName(!0),addedByDisplayName:this.getUserName(!1),saveToDir:"/incidents/"+Ember.get(this,"model.id")+"/"})
this.send("openModal","incident.attachment",e)},showAddNote:function(){var e=Ember.get(this,"store").createRecord("incident-note",{dateRecorded:new Date,givenBy:this.getUserName(!0),givenByDisplayName:this.getUserName(!1)})
this.send("openModal","incident.note.edit",e)},deleteAttachment:function(e){var t=this,n=Ember.get(e,"itemToDelete")
this._updateList("incidentAttachments",n,!0),n.destroyRecord().then(function(){var e=Ember.get(n,"id"),a=Ember.get(t,"database"),i=Ember.get(n,"fileName"),s=Ember.get(t,"filesystem")
if(Ember.get(s,"isFileSystemEnabled")){var o=a.getPouchId(e,"attachment")
s.deleteFile(i,o).catch(function(){})}})},deleteNote:function(e){this._updateList("notes",e,!0)},showDeleteAttachment:function(e){var t=Ember.get(this,"intl"),n=t.t("models.attachment.names.singular"),a=t.t("messages.delete_singular",{name:n}),i=Ember.Object.create({itemToDelete:e}),s=t.t("incident.titles.deleteAttachment")
this.displayConfirm(s,a,"deleteAttachment",i)},showDeleteNote:function(e){this.send("openModal","incident.note.delete",e)},showEditAttachment:function(e){this.send("openModal","incident.attachment",e)},showEditNote:function(e){this.send("openModal","incident.note.edit",e)}}})}),define("hospitalrun/incident/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/patient-list-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{editTitle:(0,i.t)("incident.titles.editIncident"),modelName:"incident",newTitle:(0,i.t)("incident.titles.newIncident"),customForms:Ember.inject.service(),getNewData:function(){var e=Ember.get(this,"customForms"),t=new Date,n={customForms:Ember.Object.create(),dateOfIncident:t,reportedDate:t,reportedBy:this.getUserName(!0),reportedByDisplayName:this.getUserName(!1)}
return e.setDefaultCustomForms(["incident"],n)},setupController:function(e,t){this._super(e,t),e.setupCustomForms()},actions:{deleteAttachment:function(e){this.controller.send("deleteAttachment",e)}}})}),define("hospitalrun/incident/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"zb/kXhJ4",block:'{"symbols":["form","customForm","index","attachment","note","customForm","index"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.incidentId"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","friendlyId"]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.reportedDate"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["model","reportedDate"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.reportedBy"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","reportedByDisplayName"]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.lastUpdated"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["model","lastModified"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.updatedBy"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","modifiedByDisplayName"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property","class"],[[25,"t",["incident.labels.sentinelEvent"],null],"sentinelEvent","col-sm-3 sentinel-event"]]],false],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class","showTime"],[[20,["model"]],"dateOfIncident",[25,"t",["incident.labels.incidentDate"],null],"col-sm-3 required incident-date",true]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-sm-3 required incident-department","department",[25,"t",["incident.labels.department"],null],[20,["incidentDepartmentList"]],[20,["model","location"]]]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["reportedTo",[25,"t",["incident.labels.reportedTo"],null],"col-sm-3 reported-to"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","prompt","property","content"],["col-sm-4 form-input-group required incident-category",[25,"t",["incident.labels.category"],null]," ","categoryName",[20,["categoryNameList"]]]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","prompt","property","content","optionLabelPath","optionValuePath"],["col-sm-4 form-input-group incident-category-item",[25,"t",["incident.labels.categoryItem"],null]," ","categoryItem",[20,["itemList"]],"item","item"]]],false],[0,"\\n"],[4,"if",[[20,["canUpdateStatus"]]],null,{"statements":[[0,"        "],[1,[25,"component",[[19,1,["select"]]],[["label","property","content","class"],[[25,"t",["incident.labels.status"],null],"status",[20,["incidentStatuses"]],"required form-input-group col-sm-3"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-sm-3"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.status"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","status"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"patient-typeahead",null,[["model","property","label","content","class","selection"],[[20,["model"]],"patientTypeAhead",[25,"t",["incident.labels.patientImpacted"],null],[20,["patientList"]],"patient-name col-sm-9",[20,["selectedPatient"]]]]],false],[0,"\\n"],[4,"if",[[20,["model","patient"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-sm-3"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["incident.labels.patientId"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static patient-id"],[7],[1,[20,["model","patient","friendlyId"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"expand-text",null,[["label","property","class","rows","form"],[[25,"t",["incident.labels.description"],null],"description","required col-sm-12 incident-description",3,[19,1,[]]]]],false],[0,"\\n    "],[8],[0,"\\n\\n"],[4,"if",[[20,["canManageIncident"]]],null,{"statements":[[0,"      "],[6,"ul"],[9,"class","nav nav-pills tab-nav"],[9,"role","tablist"],[7],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[9,"class","active"],[7],[6,"a"],[9,"href","#notes"],[9,"role","tab"],[9,"data-toggle","pill"],[7],[1,[25,"t",["incident.titles.notes"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#attachments"],[9,"role","tab"],[9,"data-toggle","pill"],[7],[1,[25,"t",["incident.titles.attachments"],null],false],[8],[8],[0,"\\n"],[4,"each",[[20,["customFormsToDisplay"]]],null,{"statements":[[0,"          "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n            "],[6,"a"],[10,"href",[25,"concat",["#customForm",[19,7,[]]],null],null],[9,"role","tab"],[9,"data-toggle","pill"],[7],[0,"\\n              "],[1,[19,6,["form","name"]],false],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[6,7]},null],[4,"if",[[20,["showAddFormButton"]]],null,{"statements":[[0,"          "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n            "],[6,"a"],[9,"role","tab"],[9,"data-toggle","pill"],[3,"action",[[19,0,[]],"addCustomForm"],[["bubbles"],[false]]],[7],[0,"\\n              "],[1,[25,"t",["incident.buttons.addForm"],null],false],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n      "],[6,"div"],[9,"class","tab-content"],[7],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane active"],[9,"id","notes"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n              "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n                "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddNote"],[["bubbles"],[false]]],[7],[1,[25,"t",["incident.buttons.newNote"],null],false],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.date"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.givenBy"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.note"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","notes"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,5,["dateRecorded"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["givenByDisplayName"]],false],[8],[0,"\\n                    "],[6,"td"],[9,"class","note-description"],[7],[1,[19,5,["description"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditNote",[19,5,[]]]],[7],[1,[25,"t",["incident.buttons.edit"],null],false],[8],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteNote",[19,5,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["incident.buttons.delete"],null],false],[8],[0,"\\n                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[5]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","attachments"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n              "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n                "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddAttachment"],[["bubbles"],[false]]],[7],[1,[25,"t",["incident.buttons.newAttachment"],null],false],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.date"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.addedBy"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.title"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["incident.labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","incidentAttachments"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,4,["dateAdded"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["addedByDisplayName"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["title"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditAttachment",[19,4,[]]]],[7],[1,[25,"t",["incident.buttons.edit"],null],false],[8],[0,"\\n                      "],[6,"a"],[10,"href",[19,4,["url"]],null],[9,"target","_blank"],[10,"download",[26,[[19,4,["shortFileName"]]]]],[9,"class","btn btn-default"],[7],[0,"\\n                        "],[6,"span"],[9,"class","glyphicon glyphicon-download"],[9,"aria-hidden","true"],[7],[8],[0," "],[1,[25,"t",["incident.buttons.download"],null],false],[0,"\\n                      "],[8],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteAttachment",[19,4,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["incident.buttons.delete"],null],false],[8],[0,"\\n                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["customFormsToDisplay"]]],null,{"statements":[[0,"          "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[10,"id",[25,"concat",["customForm",[19,3,[]]],null],null],[7],[0,"\\n            "],[6,"div"],[9,"class","panel"],[7],[0,"\\n              "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n                "],[1,[25,"custom-form",null,[["model","form","propertyPrefix"],[[20,["model"]],[19,2,["form"]],[19,2,["propertyPrefix"]]]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[2,3]},null],[0,"      "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/edit/template.hbs"}})}),define("hospitalrun/incident/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/filter-list","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{addPermission:"add_incident",deletePermission:"delete_incident",startKey:[],incidentController:Ember.inject.controller("incident"),departmentNames:Ember.computed.alias("incidentController.incidentDepartmentList.value"),categoryItems:Ember.computed("model.@each.categoryItem",function(){return this._getUniqueValues("categoryItem")}),categoryNames:Ember.computed("model.@each.categoryName",function(){return this._getUniqueValues("categoryName")}),statusList:Ember.computed("model.@each.localizedStatus",function(){return this._getUniqueValues("localizedStatus")}),filteredIncidents:Ember.computed("model.[]","filterBy","filterValue",function(){var e=Ember.get(this,"filterBy"),t=Ember.get(this,"filterValue"),n=Ember.get(this,"model")
return this.filterList(n,e,t)}),sortedIncidents:Ember.computed("filteredIncidents","sortByKey","sortByDesc",function(){var e=Ember.get(this,"filteredIncidents")
return this.sortFilteredList(e)}),_getUniqueValues:function(e){return Ember.get(this,"model").map(function(t){return Ember.get(t,e)}).uniq().filter(function(e){return!Ember.isEmpty(e)})},actions:{showDeleteIncident:function(e){this.send("openModal","incident.delete",e)}}})}),define("hospitalrun/incident/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{editReturn:"incident.index",itemsPerPage:null,modelName:"incident",pageTitle:(0,a.t)("incident.titles.incidents"),_getStartKeyFromItem:function(e){var t=this._getPouchIdFromItem(e)
return[e.get("reportedBy"),t]},_modelQueryParams:function(){var e=this._getMaxPouchId(),t=this.getUserName(!0),n={mapReduce:"open_incidents_by_user"}
return this.currentUserCan("manage_incidents")||(n.options={startkey:[t,null],endkey:[t,e]}),n}})}),define("hospitalrun/incident/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"cuWy6tK/",block:'{"symbols":["incident"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table incident-listing"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType"],["dateOfIncident",[20,["sortByDesc"]],[20,["sortByKey"]],"dateForFilter",[20,["filteredBy"]],"date"]],{"statements":[[0,"          "],[1,[25,"t",["incident.labels.incidentDate"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType","filterValues"],["department",[20,["sortByDesc"]],[20,["sortByKey"]],"department",[20,["filteredBy"]],"list",[20,["departmentNames"]]]],{"statements":[[0,"          "],[1,[25,"t",["incident.labels.department"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType","filterValues"],["categoryName",[20,["sortByDesc"]],[20,["sortByKey"]],"categoryName",[20,["filteredBy"]],"list",[20,["categoryNames"]]]],{"statements":[[0,"          "],[1,[25,"t",["incident.labels.category"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType","filterValues"],["categoryItem",[20,["sortByDesc"]],[20,["sortByKey"]],"categoryItem",[20,["filteredBy"]],"list",[20,["categoryItems"]]]],{"statements":[[0,"          "],[1,[25,"t",["incident.labels.categoryItem"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType","filterValues"],["localizedStatus",[20,["sortByDesc"]],[20,["sortByKey"]],"localizedStatus",[20,["filteredBy"]],"list",[20,["statusList"]]]],{"statements":[[0,"          "],[1,[25,"t",["incident.labels.status"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[1,[25,"t",["incident.labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["sortedIncidents"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","incident-row"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[9,"class","incident-date"],[7],[1,[25,"date-format",[[19,1,["dateOfIncident"]]],null],false],[8],[0,"\\n          "],[6,"td"],[9,"class","incident-department"],[7],[1,[19,1,["department"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","incident-category"],[7],[1,[19,1,["categoryName"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","incident-category-item"],[7],[1,[19,1,["categoryItem"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","incident-status"],[7],[1,[19,1,["localizedStatus"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["incident.buttons.edit"],null],false],[8],[0,"\\n              "]],"parameters":[]},null],[0," "],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"\\n                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteIncident",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["incident.buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[1,[25,"t",["incident.messages.noIncidents"],null],false],[0," "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["incident.messages.createNew"],null],false],[8]],"parameters":[]},null],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/index/template.hbs"}})}),define("hospitalrun/incident/note/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({afterDeleteAction:"notifyNoteDelete",editController:Ember.inject.controller("incident/edit"),title:(0,n.t)("incident.titles.deleteNote"),actions:{notifyNoteDelete:function(){Ember.get(this,"editController").send("deleteNote",Ember.get(this,"model")),this.send("closeModal")}}})}),define("hospitalrun/incident/note/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"lpETIH/w",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.note.names.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/note/delete/template.hbs"}})}),define("hospitalrun/incident/note/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({cancelAction:"closeModal",newNote:!1,updateCapability:"manage_incidents",editController:Ember.inject.controller("incident/edit"),title:Ember.computed("model.isNew",function(){var e=Ember.get(this,"intl")
return Ember.get(this,"model.isNew")?e.t("incident.titles.addNote"):e.t("incident.titles.editNote")}),afterUpdate:function(e){Ember.get(this,"newNote")?Ember.get(this,"editController").send("addNote",e):this.send("closeModal")},beforeUpdate:function(){return Ember.set(this,"newNote",Ember.get(this,"model.isNew")),Ember.RSVP.resolve()}})}),define("hospitalrun/incident/note/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"7PNMjhwS",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class","format","showTime"],[[20,["model"]],"dateRecorded",[25,"t",["incident.labels.dateRecorded"],null],"col-sm-6","l h:mm A",true]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"expand-text",null,[["property","label","class","form"],["description",[25,"t",["incident.labels.note"],null],"col-sm-12 note-description",[19,1,[]]]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/note/edit/template.hbs"}})}),define("hospitalrun/incident/reports/controller",["exports","hospitalrun/controllers/abstract-report-controller","hospitalrun/mixins/number-format","hospitalrun/mixins/user-session","moment"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,n.default,{reportType:"department",canGenerateReport:Ember.computed(function(){return this.currentUserCan("generate_incident_report")}),departmentReportColumns:Ember.computed(function(){var e=Ember.get(this,"intl")
return{department:{label:e.t("incident.labels.department"),include:!0,property:"type"},total:{label:e.t("incident.labels.total"),include:!0,property:"total",format:"_numberFormat"}}}),incidentCategoryReportColumns:Ember.computed(function(){var e=Ember.get(this,"intl")
return{incidentCategory:{label:e.t("incident.labels.category"),include:!0,property:"type"},total:{label:e.t("incident.labels.total"),include:!0,property:"total",format:"_numberFormat"}}}),reportTypes:Ember.computed(function(){var e=Ember.get(this,"intl")
return[{name:e.t("incident.titles.incidentsByDepartment"),value:"department"},{name:e.t("incident.titles.incidentsByCategory"),value:"incidentCategory"}]}),_findIncidentsByDate:function(){var e=Ember.get(this,"endDate"),t=Ember.get(this,"startDate"),n={options:{},mapReduce:"incident_by_date"},a=Ember.get(this,"maxValue")
return new Ember.RSVP.Promise(function(s,o){return n.options.startkey=[t.getTime(),null],e=(0,i.default)(e).endOf("day").toDate(),n.options.endkey=[e.getTime(),a],this.store.query("incident",n).then(s,o)}.bind(this))},_generateByDepartmentOrByIncidentCategoryReport:function(e,t){var n=void 0,a=void 0
"department"===t?(n=Ember.get(this,"departmentReportColumns"),a="department"):(n=Ember.get(this,"incidentCategoryReportColumns"),a="categoryName"),this._addRowsByType(e,a,"Total incidents: ",n),this._finishReport(n)},_addRowsByType:function(e,t,n,a){this._totalByType(e,t,n).forEach(function(e){this._addReportRow(e,!0,a)}.bind(this))},_totalByType:function(e,t,n){var a=0,i=[]
return e.forEach(function(e){var n=e.get(t),s=void 0
Ember.isEmpty(n)||(s=i.findBy("type",n),Ember.isEmpty(s)&&(s={type:n,total:0,records:[]},i.push(s)),s.total++,s.records.push(e),a++)}),(i=i.sortBy("type")).push({type:n,total:a}),i},_validateDates:function(){return this._validateDateInputs()},actions:{generateReport:function(){var e=this
if(this._validateDates()){var t=Ember.get(this,"reportRows"),n=Ember.get(this,"reportType")
switch(t.clear(),this.showProgressModal(),n){case"department":case"incidentCategory":this._findIncidentsByDate().then(function(t){e._generateByDepartmentOrByIncidentCategoryReport(t,n)}).catch(function(t){console.log("Error:",t),e.closeProgressModal()})}}}}})}),define("hospitalrun/incident/reports/route",["exports","hospitalrun/routes/abstract-index-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({pageTitle:"Incident Report",model:function(){return Ember.RSVP.resolve(Ember.Object.create({}))}})}),define("hospitalrun/incident/reports/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"e/Xn0Qim",block:'{"symbols":["row","subrow","header","form"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n"],[4,"if",[[20,["canGenerateReport"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[19,0,[]],"startDate",[25,"t",["incident.labels.startDate"],null],"col-sm-4 test-start-date"]]],false],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[19,0,[]],"endDate",[25,"t",["incident.labels.endDate"],null],"col-sm-4 test-end-date"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[9,"data-test-selector","select-report-type"],[7],[0,"\\n          "],[1,[25,"component",[[19,4,["select"]]],[["class","content","id","optionValuePath","optionLabelPath","property","label"],["form-input-group col-xs-6",[20,["reportTypes"]],"report-type","value","name","reportType",[25,"t",["incident.labels.reportType"],null]]]],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"generateReport"]],[7],[1,[25,"t",["incident.buttons.generateRep"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[8],[0,"\\n"],[4,"if",[[20,["showReportResults"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[1,[18,"reportTitle"],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"each",[[20,["reportHeaders"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[1,[19,3,[]],false],[8],[0,"\\n"]],"parameters":[3]},null],[0,"        "],[8],[0,"\\n"],[4,"each",[[20,["reportRows"]]],null,{"statements":[[0,"          "],[6,"tr"],[7],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[0,"              "],[6,"td"],[7],[1,[19,2,[]],false],[8],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"a"],[10,"href",[18,"csvExport"],null],[9,"target","_blank"],[10,"download",[26,[[18,"reportTitle"],".csv"]]],[9,"class","btn btn-primary"],[7],[1,[25,"t",["incident.buttons.export"],null],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/incident/reports/template.hbs"}})}),define("hospitalrun/incident/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addCapability:"add_incident",additionalModels:[{name:"incidentDepartmentList",findArgs:["lookup","incident_departments"]},{name:"incidentCategoryList",findArgs:["inc-category"]}],allowSearch:!1,editTitle:(0,n.t)("incidents.titles.editIncident"),newTitle:(0,n.t)("incidents.titles.newIncident"),moduleName:"incident",newButtonText:(0,n.t)("incident.buttons.newIncident"),sectionTitle:(0,n.t)("incident.titles.incidents")})}),define("hospitalrun/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","hospitalrun/config/environment"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=void 0,i=void 0
n.default.APP&&(a=n.default.APP.name,i=n.default.APP.version),e.default={name:"App Version",initialize:(0,t.default)(a,i)}}),define("hospitalrun/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("hospitalrun/initializers/data-adapter",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("hospitalrun/initializers/ember-concurrency",["exports","ember-concurrency/initializers/ember-concurrency"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("hospitalrun/initializers/ember-keyboard-first-responder-inputs",["exports","ember-keyboard/initializers/ember-keyboard-first-responder-inputs"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("hospitalrun/initializers/ember-simple-auth",["exports","hospitalrun/config/environment","ember-simple-auth/configuration","ember-simple-auth/initializers/setup-session","ember-simple-auth/initializers/setup-session-service","ember-simple-auth/initializers/setup-session-restoration"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-simple-auth",initialize:function(e){var o=t.default["ember-simple-auth"]||{}
o.rootURL=t.default.rootURL||t.default.baseURL,n.default.load(o),(0,a.default)(e),(0,i.default)(e),(0,s.default)(e)}}}),define("hospitalrun/initializers/export-application-global",["exports","hospitalrun/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var a,i=t.default.exportApplicationGlobal
a="string"==typeof i?i:Ember.String.classify(t.default.modulePrefix),n[a]||(n[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[a]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("hospitalrun/initializers/injectStore",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"injectStore",before:"store",initialize:function(){}}})
define("hospitalrun/initializers/intl",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"intl",initialize:function(e){e.inject("route","intl","service:intl"),e.inject("controller","intl","service:intl"),e.inject("mixin","intl","service:intl"),e.inject("model","intl","service:intl")}}}),define("hospitalrun/initializers/metrics",["exports","hospitalrun/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0],n=t.default.metricsAdapters,a=void 0===n?[]:n,i=t.default.environment,s={metricsAdapters:a,environment:void 0===i?"development":i}
e.register("config:metrics",s,{instantiate:!1}),e.inject("service:metrics","options","config:metrics")}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"metrics",initialize:n}}),define("hospitalrun/initializers/store",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("hospitalrun/initializers/transforms",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"transforms",before:"store",initialize:function(){}}}),define("hospitalrun/instance-initializers/ember-data",["exports","ember-data/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("hospitalrun/instance-initializers/ember-intl",["exports","ember-intl/initializer"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.instanceInitializer=void 0,e.instanceInitializer=t.instanceInitializer,e.default=t.default}),define("hospitalrun/instance-initializers/ember-simple-auth",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-simple-auth",initialize:function(){}}}),define("hospitalrun/inventory/adjust/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/inventory-adjustment-types","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{inventoryController:Ember.inject.controller("inventory"),expenseAccountList:Ember.computed.alias("inventoryController.expenseAccountList"),title:(0,a.t)("inventory.titles.adjustment"),transactionTypeChanged:function(){Ember.run.once(this,function(){this.get("model").validate().catch(function(){})})}.observes("transactionType"),updateButtonText:Ember.computed("model.transactionType",function(){var e=this.get("model.transactionType")
return this.get("adjustmentTypes").findBy("type",e).name}),updateButtonAction:"adjust",updateCapability:"adjust_inventory_location",actions:{cancel:function(){this.send("closeModal")},adjust:function(){this.send("adjustItems",this.get("model"),!0)}}})}),define("hospitalrun/inventory/adjust/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Lpysm6mG",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.item"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","adjustmentItem","name"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.adjustmentFor"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","locationName"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.currentQuantity"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","quantity"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath"],["col-sm-4 form-input-group",[25,"t",["inventory.labels.adjustmentType"],null],"transactionType",[20,["adjustmentTypes"]],"type","name"]]],false],[0,"\\n      "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"adjustmentQuantity",[25,"t",["labels.quantity"],null],"col-sm-3 required"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"expand-text",null,[["label","property","rows","form"],[[25,"t",["inventory.labels.reason"],null],"reason",3,[19,1,[]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateCompleted",[25,"t",["inventory.labels.adjustmentDate"],null],"col-sm-4 required"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["inventory.labels.expense"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]],"col-sm-8"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/adjust/template.hbs"}})}),define("hospitalrun/inventory/barcode/controller",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({selectedPrinter:null,barcodeUri:Ember.computed("model.id",function(){return Ember.$("#barcode-"+this.get("model.id")).attr("src")}),printers:Ember.computed(function(){return dymo.label.framework.getTapePrinters()}),havePrinters:Ember.computed.gt("printers.length",0),singlePrinter:Ember.computed.equal("printers.length",1),actions:{print:function(){var e=this.get("barcodeUri"),t=this.get("selectedPrinter")
t||(t=this.get("printers")[0].name),Ember.$.get("/dymo/BarcodeAsImage.label",function(n){var a=dymo.label.framework.openLabelXml(n),i=e.substr("data:image/png;base64,".length)
a.setObjectText("Image",i),a.print(t)},"text")}}})}),define("hospitalrun/inventory/barcode/route",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({model:function(e){return this.store.find("inventory",e.inventory_id)}})}),define("hospitalrun/inventory/barcode/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ZIveAa6+",block:'{"symbols":["form"],"statements":[[6,"div"],[9,"class","panel panel-default"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[1,[25,"bar-code",null,[["value","tagName","id","options"],[[20,["model","id"]],"img",[25,"concat",["barcode-",[20,["model","id"]]],null],[25,"hash",null,[["displayValue","text"],[true,[20,["model","name"]]]]]]]],false],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n\\n"],[4,"if",[[20,["havePrinters"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[1,[25,"t",["inventory.labels.printBarcode"],null],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"unless",[[20,["singlePrinter"]]],null,{"statements":[[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"              "],[1,[25,"component",[[19,1,["select"]]],[["content","optionLabelPath","optionValuePath","class","property","id","label"],[[20,["printers"]],"name","name","col-xs-6 form-input-group","selectedPrinter","printerSelect",[25,"t",["inventory.labels.printer"],null]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"print"]],[7],[6,"span"],[9,"class"," glyphicon glyphicon-print"],[7],[8],[0," "],[1,[25,"t",["inventory.labels.print"],null],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/barcode/template.hbs"}})}),define("hospitalrun/inventory/batch/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/inventory-id","hospitalrun/mixins/inventory-locations","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{doingUpdate:!1,inventoryController:Ember.inject.controller("inventory"),inventoryItems:null,warehouseList:Ember.computed.alias("inventoryController.warehouseList"),aisleLocationList:Ember.computed.alias("inventoryController.aisleLocationList"),vendorList:Ember.computed.alias("inventoryController.vendorList"),purchaseAttributes:["expirationDate","inventoryItem","lotNumber","purchaseCost","quantity","vendorItemNo"],inventoryList:Ember.computed("inventoryItems.[]",function(){var e=this.get("inventoryItems")
if(!Ember.isEmpty(e))return e.map(function(e){return e.doc})}),lookupListsToUpdate:[{name:"aisleLocationList",property:"model.aisleLocation",id:"aisle_location_list"},{name:"vendorList",property:"model.vendor",id:"vendor_list"},{name:"warehouseList",property:"model.location",id:"warehouse_list"}],showDistributionUnit:Ember.computed("model.inventoryItemTypeAhead","model.inventoryItem",function(){return this._haveValidInventoryItem()}),showInvoiceItems:Ember.computed("model.invoiceItems.[]",function(){var e=this.get("model.invoiceItems")
return!Ember.isEmpty(e)}),totalReceived:Ember.computed("model.invoiceItems.[].purchaseCost","model.isValid","model.purchaseCost",function(){var e=this.get("model.invoiceItems"),t=0
Ember.isEmpty("invoiceItems")||(t=e.reduce(function(e,t){return e+Number(t.get("purchaseCost"))},t))
var n=this.get("model.purchaseCost")
return this.get("model.isValid")&&!Ember.isEmpty(n)&&(t+=Number(n)),t}),updateButtonText:(0,i.t)("inventory.labels.save"),updateCapability:"add_inventory_item",_addNewInventoryItem:function(){this.generateId().then(function(e){var t=this.store.createRecord("inventory",{id:e,name:this.get("model.inventoryItemTypeAhead"),quantity:0,skipSavePurchase:!0})
this.send("openModal","inventory.quick-add",t)}.bind(this))},_addInventoryItem:function(){var e=this.get("model"),t=this.get("model.inventoryItemTypeAhead"),n=this.get("model.purchaseCost"),a=this.get("model.quantity")
return e.validate().then(function(){if(!this.get("model.isValid")||Ember.isEmpty(t)||Ember.isEmpty(a)||Ember.isEmpty(n))throw Error("invalid")
if(!this._haveValidInventoryItem())return this._addNewInventoryItem(),!0
this._addInvoiceItem()}.bind(this)).catch(function(){this.displayAlert(this.get("intl").t("inventory.titles.warning"),this.get("intl").t("inventory.messages.warning"))}.bind(this))},_addInvoiceItem:function(){var e=this.get("model"),t=e.get("invoiceItems"),n=e.getProperties(this.get("purchaseAttributes")),a=Ember.Object.create(n)
t.addObject(a),e.set("expirationDate"),e.set("inventoryItem"),e.set("inventoryItemTypeAhead"),e.set("lotNumber"),e.set("purchaseCost"),e.set("quantity"),e.set("selectedInventoryItem"),e.set("vendorItemNo")},_findInventoryItem:function(e){var t=this.get("model.invoiceItems"),n=e.get("inventoryItem")
if(!Ember.isEmpty(n)){var a=t.find(function(e){return e.get("inventoryItem.id")===n},this)
if(!Ember.isEmpty(a))return a.get("inventoryItem")}},_haveValidInventoryItem:function(){var e=this.get("model.inventoryItemTypeAhead"),t=this.get("model.inventoryItem")
if(Ember.isEmpty(e)||Ember.isEmpty(t))return!1
var n=t.get("name")
return e.substr(0,n.length)===n},_savePurchases:function(){var e=this.get("model"),t=e.getProperties(["dateReceived","vendor","invoiceNo","location","aisleLocation","giftInKind"]),n=e.get("invoiceItems"),a=void 0,i=[]
n.forEach(function(e){var n=e.get("inventoryItem"),s=e.get("quantity");(a=this.store.createRecord("inv-purchase",t)).setProperties(e.getProperties(this.get("purchaseAttributes"))),a.setProperties({distributionUnit:n.get("distributionUnit"),currentQuantity:s,originalQuantity:s,inventoryItem:n.get("id")}),i.push(a.save())}.bind(this)),Ember.RSVP.all(i).then(function(e){var t=[],n=[]
e.forEach(function(e){var t=this._findInventoryItem(e)
t.get("purchases").addObject(e),n.push(this.newPurchaseAdded(t,e))}.bind(this)),Ember.RSVP.all(t).then(function(){e.forEach(function(e){var n=this._findInventoryItem(e)
n.updateQuantity(),t.push(n.save())}.bind(this)),Ember.RSVP.all(t).then(function(){this.updateLookupLists(),this.displayAlert(this.get("intl").t("inventory.titles.purchaseSaved"),this.get("intl").t("inventory.messages.purchaseSaved"),"allItems")}.bind(this))}.bind(this))}.bind(this))},actions:{addInventoryItem:function(){this._addInventoryItem()},addedNewInventoryItem:function(e){this.set("model.inventoryItem",e),this._addInvoiceItem(),this.send("closeModal"),this.get("doingUpdate")&&this._savePurchases()},removeItem:function(e){var t=this.get("model.invoiceItems"),n=e.itemToRemove
t.removeObject(n),this.send("closeModal")},showRemoveItem:function(e){var t=this.get("intl").t("inventory.messages.removeItem"),n=Ember.Object.create({itemToRemove:e}),a=this.get("intl").t("inventory.titles.removeItem")
this.displayConfirm(a,t,"removeItem",n)},update:function(){this.set("doingUpdate",!0),this._addInventoryItem().then(function(e){e||this._savePurchases()}.bind(this))}}})}),define("hospitalrun/inventory/batch/route",["exports","hospitalrun/inventory/request/route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:(0,n.t)("navigation.subnav.inventoryReceived"),modelName:"inventory-batch",newTitle:(0,n.t)("navigation.subnav.inventoryReceived"),getNewData:function(){return Ember.RSVP.resolve({invoiceItems:[],dateReceived:new Date})},actions:{addedNewInventoryItem:function(e){this.controller.send("addedNewInventoryItem",e)}}})}),define("hospitalrun/inventory/batch/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"911E8FLC",block:'{"symbols":["form","invoiceItem"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateReceived",[25,"t",["inventory.labels.dateReceived"],null],"col-sm-4 required"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"vendor",[25,"t",["inventory.labels.vendor"],null],[20,["vendorList"]],[20,["model","vendor"]],"col-sm-4 required test-vendor"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["invoiceNo",[25,"t",["inventory.labels.invoiceNumber"],null],"col-sm-4 test-invoice-number"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"location",[25,"t",["inventory.labels.location"],null],[20,["warehouseList"]],[20,["model","location"]],"col-sm-5"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"aisleLocation",[25,"t",["inventory.labels.aisleLocation"],null],[20,["aisleLocationList"]],[20,["model","aisleLocation"]],"col-sm-5"]]],false],[0,"\\n      "],[6,"div"],[9,"class","col-sm-2 checkbox-label-space"],[7],[0,"\\n        "],[6,"div"],[9,"class","form-check"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label sr-only"],[7],[1,[25,"t",["inventory.labels.gift"],null],false],[8],[0,"\\n          "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["inventory.labels.gift"],null],"giftInKind"]]],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[1,[25,"t",["inventory.labels.invoiceLineItem"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"inventory-typeahead",null,[["model","class","property","label","content","selection","showQuantity"],[[20,["model"]],"col-sm-7 required test-inv-item","inventoryItemTypeAhead",[25,"t",["inventory.labels.inventoryItem"],null],[20,["inventoryList"]],[20,["selectedInventoryItem"]],false]]],false],[0,"\\n          "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"quantity",[25,"t",["labels.quantity"],null],"col-sm-2 required test-inv-quantity"]]],false],[0,"\\n          "],[6,"div"],[9,"class","form-group col-sm-1"],[7],[0,"\\n            "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.unit"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showDistributionUnit"]]],null,{"statements":[[0,"              "],[6,"p"],[9,"class","form-control-static inventory-distribution-unit"],[7],[1,[20,["model","inventoryItem","distributionUnit"]],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n          "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"purchaseCost",[25,"t",["inventory.labels.purchaseCost"],null],"col-sm-2 required test-inv-cost"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["vendorItemNo",[25,"t",["inventory.labels.vendorItemNumber"],null],"col-sm-4"]]],false],[0,"\\n          "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["lotNumber",[25,"t",["inventory.labels.serialNumber"],null],"col-sm-4"]]],false],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","minDate","class"],[[20,["model"]],"expirationDate",[25,"t",["inventory.labels.expirationDate"],null],"now","col-sm-2"]]],false],[0,"\\n          "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n            "],[6,"label"],[9,"class","control-label"],[7],[0," "],[8],[0,"\\n            "],[6,"p"],[9,"class","form-control-static"],[7],[0,"\\n              "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"addInventoryItem"]],[7],[0,"\\n                "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["inventory.labels.add"],null],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"if",[[20,["model","invoiceItems"]]],null,{"statements":[[0,"      "],[6,"h3"],[7],[1,[25,"t",["inventory.labels.invoiceItems"],null],false],[8],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.name"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.cost"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.itemNumber"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.serialNumber"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.expirationDate"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.action"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["model","invoiceItems"]]],null,{"statements":[[0,"          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[1,[19,2,["inventoryItem","name"]],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[6,"div"],[9,"class","input-group"],[7],[0,"\\n                "],[1,[25,"input",null,[["class","value"],["form-control",[19,2,["quantity"]]]]],false],[0,"\\n                "],[6,"span"],[9,"class","input-group-addon"],[7],[0,"\\n                  "],[1,[19,2,["inventoryItem","distributionUnit"]],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                "],[1,[25,"input",null,[["class","value"],["form-control",[19,2,["purchaseCost"]]]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                "],[1,[25,"input",null,[["class","value"],["form-control",[19,2,["vendorItemNo"]]]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                "],[1,[25,"input",null,[["class","value"],["form-control",[19,2,["lotNumber"]]]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-2"],[7],[0,"\\n              "],[1,[25,"date-picker",null,[["property","minDate","model"],["expirationDate","now",[19,2,[]]]]],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","col-sm-1"],[7],[0,"\\n              "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showRemoveItem",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["inventory.labels.remove"],null],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"      "],[8],[0,"\\n      "],[6,"h4"],[7],[1,[25,"t",["inventory.labels.totalReceived"],[["total"],[[20,["totalReceived"]]]]],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/batch/template.hbs"}})}),define("hospitalrun/inventory/delete/controller",["exports","hospitalrun/macro","hospitalrun/controllers/abstract-delete-controller"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({title:(0,t.t)("inventory.labels.deleteItem"),editController:Ember.inject.controller("inventory/edit"),afterDeleteAction:"updateAndCloseModal",actions:{updateAndCloseModal:function(){this.get("editController").send("update",!0),this.send("closeModal")}}})}),define("hospitalrun/inventory/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"kNtUKiBs",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0," \\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","name"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/delete/template.hbs"}})}),define("hospitalrun/inventory/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/friendly-id","hospitalrun/mixins/inventory-locations","hospitalrun/mixins/inventory-type-list","hospitalrun/mixins/return-to","hospitalrun/mixins/unit-types","hospitalrun/mixins/user-session"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,s.default,o.default,r.default,{inventory:Ember.inject.controller(),savingNewItem:!1,sequenceView:"inventory_by_friendly_id",canAddPurchase:Ember.computed(function(){return this.currentUserCan("add_inventory_purchase")}),canAdjustLocation:function(){return this.currentUserCan("adjust_inventory_location")},warehouseList:Ember.computed.alias("inventory.warehouseList"),aisleLocationList:Ember.computed.alias("inventory.aisleLocationList"),inventoryTypeList:Ember.computed.alias("inventory.inventoryTypeList.value"),inventoryUnitList:Ember.computed.alias("inventory.inventoryUnitList.value"),vendorList:Ember.computed.alias("inventory.vendorList"),database:Ember.inject.service(),lookupListsToUpdate:[{name:"aisleLocationList",property:"model.aisleLocation",id:"aisle_location_list"},{name:"vendorList",property:"model.vendor",id:"vendor_list"},{name:"warehouseList",property:"model.location",id:"warehouse_list"}],canEditQuantity:Ember.computed("model.isNew",function(){return this.get("model.isNew")}),haveTransactions:Ember.computed("transactions.[]",function(){return null!==this.get("transactions")}),locationQuantityTotal:Ember.computed("model.locations.@each.quantity",function(){return this.get("model.locations").reduce(function(e,t){return e+parseInt(t.get("quantity"))},0)}),quantityDiscrepency:Ember.computed("locationQuantityTotal","model.quantity",function(){var e=this.get("locationQuantityTotal"),t=this.get("model.quantity")
return!Ember.isEmpty(e)&&!Ember.isEmpty(t)&&e!==t}),quantityDifferential:Ember.computed("locationQuantityTotal","model.quantity",function(){var e=this.get("locationQuantityTotal"),t=this.get("model.quantity")
return Math.abs(e-t)}),originalQuantityUpdated:function(){var e=this.get("model.isNew"),t=this.get("model.originalQuantity")
e&&!Ember.isEmpty(t)&&this.set("model.quantity",t)}.observes("model.isNew","model.originalQuantity"),sequenceName:Ember.computed("model.inventoryType",function(){return"inventory_"+Ember.get(this,"model.inventoryType")}),showTransactions:Ember.computed("transactions.[]",function(){var e=this.get("transactions")
return!Ember.isEmpty(e)}),transactions:null,updateCapability:"add_inventory_item",actions:{adjustItems:function(e){var t=parseInt(e.get("adjustmentQuantity")),n=this.get("model"),a=e.get("transactionType"),i=this.get("store").createRecord("inv-request",{adjustPurchases:!0,dateCompleted:e.get("dateCompleted"),expenseAccount:e.get("expenseAccount"),inventoryItem:n,quantity:t,transactionType:a,reason:e.get("reason"),deliveryAisle:e.get("aisleLocation"),deliveryLocation:e.get("location")})
i.set("inventoryLocations",[e])
var s=!1
"Adjustment (Add)"!==a&&"Return"!==a||(s=!0),i.set("markAsConsumed",!0),i.get("inventoryItem").then(function(){this.send("fulfillRequest",i,!0,s,!0)}.bind(this))},editNewItem:function(){this.send("editItem",this.get("model.id"))},showAdjustment:function(e){e.setProperties({dateCompleted:new Date,adjustmentItem:this.get("model"),adjustmentQuantity:"",reason:"",transferItem:null,transactionType:"Adjustment (Add)"}),this.send("openModal","inventory.adjust",e)},showTransfer:function(e){e.set("adjustmentQuantity"),e.set("transferItem",this.get("model")),e.set("dateCompleted",new Date),this.send("openModal","inventory.transfer",e)},transferItems:function(e){var t=this.get("model"),n=this.get("store").createRecord("inv-request",{adjustPurchases:!1,dateCompleted:e.get("dateCompleted"),inventoryItem:t,quantity:e.get("adjustmentQuantity"),deliveryAisle:e.get("transferAisleLocation"),deliveryLocation:e.get("transferLocation"),transactionType:"Transfer"})
this.transferToLocation(t,e).then(function(){e.setProperties({transferItem:null,transferLocation:null,transferAisleLocation:null,adjustmentQuantity:null}),n.set("locationsAffected",[{name:e.get("locationName"),quantity:n.get("quantity")}]),n.get("inventoryItem").then(function(){this._saveRequest(n)}.bind(this))}.bind(this))},updatePurchase:function(e,t){t&&(this.get("model").updateQuantity(),this.send("update",!0)),this.send("closeModal")}},_completeBeforeUpdate:function(e){var t=[],n=this.get("model"),a=n.getProperties("aisleLocation","dateReceived","purchaseCost","lotNumber","expirationDate","giftInKind","invoiceNo","location","originalQuantity","quantityGroups","vendor","vendorItemNo"),i=this.get("model.originalQuantity")
if(!Ember.isEmpty(i)){a.currentQuantity=i,a.inventoryItem=this.get("model.id")
var s=this.get("store").createRecord("inv-purchase",a)
t.push(s.save()),this.get("model.purchases").addObject(s),t.push(this.newPurchaseAdded(this.get("model"),s))}return n.set("friendlyId",e),Ember.RSVP.all(t,"All before update done for inventory item")},_saveRequest:function(e){e.set("status","Completed"),e.set("completedBy",e.getUserName()),e.save().then(function(){this.send("update",!0),this.send("closeModal"),this.getTransactions()}.bind(this))},getTransactions:function(){var e=this.get("model.id")
this.set("transactions",null),this.store.query("inv-request",{options:{endkey:[e,"Completed",0],startkey:[e,"Completed",9999999999999],descending:!0},mapReduce:"inventory_request_by_item"}).then(function(e){this.set("transactions",e)}.bind(this))},beforeUpdate:function(){var e=this
if(this.get("model.isNew")){var t=this.get("model")
return t.validate().then(function(){if(t.get("isValid"))return e.set("savingNewItem",!0),e.generateFriendlyId("inventory").then(function(t){return e._completeBeforeUpdate(t)})
throw Error("invalid model")}).catch(function(){e.send("showDisabledDialog")})}return Ember.RSVP.Promise.resolve()},afterUpdate:function(){var e=null
this.get("savingNewItem")&&(e="editNewItem",this.set("savingNewItem",!1)),this.displayAlert("Inventory Item Saved","The inventory item has been saved.",e)}})}),define("hospitalrun/inventory/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro","hospitalrun/mixins/inventory-id"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{editTitle:(0,n.t)("inventory.labels.editItem"),modelName:"inventory",newTitle:(0,n.t)("inventory.labels.newItem"),actions:{adjustItems:function(e){this.controller.send("adjustItems",e)},doneFulfillRequest:function(){this.controller.getTransactions()},editNewItem:function(){this.controller.send("editNewItem")},transferItems:function(e){this.controller.send("transferItems",e)},updatePurchase:function(e,t){this.controller.send("updatePurchase",e,t)}},getNewData:function(){return Ember.RSVP.resolve({dateReceived:new Date,quantityGroups:[]})},setupController:function(e,t){this._super(e,t),e.getTransactions()}})}),define("hospitalrun/inventory/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"oDTfHkvb",block:'{"symbols":["form","transaction","location","location","location","purchase"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[12,"inventory-basic",[1]],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"h3"],[7],[1,[25,"t",["inventory.labels.purchaseInfo"],null],false],[8],[0,"\\n      "],[12,"inv-purchase",[1]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[20,["quantityDiscrepency"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","alert alert-danger alert-dismissible"],[9,"role","alert"],[7],[0,"\\n          "],[6,"button"],[9,"type","button"],[9,"class","close"],[9,"data-dismiss","alert"],[7],[6,"span"],[9,"aria-hidden","true"],[9,"class","octicon octicon-x"],[7],[8],[6,"span"],[9,"class","sr-only"],[7],[1,[25,"t",["buttons.close"],null],false],[8],[8],[0,"\\n          "],[6,"p"],[7],[0,"\\n            "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n            "],[1,[25,"t",["inventory.messages.quantity"],[["quantity","locationQuantity","htmlSafe"],[[20,["model","quantity"]],[20,["locationQuantityTotal"]],true]]],false],[0,"\\n          "],[8],[0,"\\n          "],[6,"p"],[7],[1,[25,"t",["inventory.messages.adjust"],[["difference"],[[20,["quantityDifferential"]]]]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"h3"],[7],[0,"\\n        "],[1,[25,"t",["inventory.labels.purchases"],null],false],[0,"\\n"],[4,"if",[[20,["canAddPurchase"]]],null,{"statements":[[0,"          "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPurchase",[20,["model"]]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["inventory.titles.addPurchase"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.dateReceived"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.purchaseCost"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.costPerUnit"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.originalQuantity"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.currentQuantity"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.gift"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.serialNumber"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.expirationDate"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.vendor"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.invoiceNumber"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["model","purchases"]]],null,{"statements":[[0,"          "],[6,"tr"],[10,"class",[25,"if",[[19,6,["expired"]],"warning"],null],null],[7],[0,"\\n            "],[6,"td"],[7],[1,[25,"date-format",[[19,6,["dateReceived"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["purchaseCost"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["costPerUnit"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["originalQuantity"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["currentQuantity"]],false],[8],[0,"\\n            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,6,["giftInKind"]]],null,{"statements":[[0,"                "],[1,[25,"t",["inventory.labels.giftInKindYes"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[1,[25,"t",["inventory.labels.giftInKindNo"],null],false],[0,"\\n"]],"parameters":[]}],[0,"            "],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["lotNumber"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[25,"date-format",[[19,6,["expirationDate"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["vendor"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,6,["invoiceNo"]],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[6]},null],[0,"      "],[8],[0,"\\n"]],"parameters":[]}],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"h3"],[7],[1,[25,"t",["inventory.labels.locations"],null],false],[8],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.location"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.aisleLocation"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canAdjustLocation"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"],[4,"each",[[20,["model","locations"]]],null,{"statements":[[4,"unless",[[19,5,["archived"]]],null,{"statements":[[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[9,"class","test-location-location"],[7],[1,[19,5,["location"]],false],[8],[0,"\\n              "],[6,"td"],[7],[1,[19,5,["aisleLocation"]],false],[8],[0,"\\n              "],[6,"td"],[9,"class","test-location-quantity"],[7],[1,[19,5,["quantity"]],false],[8],[0,"\\n"],[4,"if",[[20,["canAdjustLocation"]]],null,{"statements":[[0,"                "],[6,"td"],[7],[0,"\\n                  "],[6,"button"],[9,"class","btn btn-primary neutral"],[3,"action",[[19,0,[]],"showAdjustment",[19,5,[]]]],[7],[1,[25,"t",["inventory.labels.adjust"],null],false],[8],[0,"\\n                  "],[6,"button"],[9,"class","btn btn-primary btn-extra"],[3,"action",[[19,0,[]],"showTransfer",[19,5,[]]]],[7],[1,[25,"t",["inventory.labels.transfer"],null],false],[8],[0,"\\n"],[4,"unless",[[19,5,["quantity"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,5,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[5]},null],[0,"      "],[8],[0,"\\n"],[4,"if",[[20,["showTransactions"]]],null,{"statements":[[0,"        "],[6,"h3"],[7],[1,[25,"t",["inventory.labels.transactions"],null],false],[8],[0,"\\n        "],[6,"table"],[9,"class","table"],[7],[0,"\\n          "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["inventory.labels.dateCompleted"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["inventory.labels.transaction"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["inventory.labels.expense"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["inventory.labels.details"],null],false],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"if",[[20,["haveTransactions"]]],null,{"statements":[[4,"each",[[20,["transactions"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[7],[1,[25,"date-format",[[19,2,["dateCompleted"]]],null],false],[8],[0,"\\n                "],[6,"td"],[7],[1,[19,2,["quantity"]],false],[8],[0,"\\n                "],[6,"td"],[7],[1,[19,2,["transactionType"]],false],[8],[0,"\\n                "],[6,"td"],[7],[1,[19,2,["expenseAccount"]],false],[8],[0,"\\n                "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,2,["isAdjustment"]]],null,{"statements":[[4,"if",[[19,2,["haveReason"]]],null,{"statements":[[0,"                      "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.reason"],null],false],[8],[0," "],[1,[19,2,["reason"]],false],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,2,["patient"]]],null,{"statements":[[0,"                      "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.returned"],null],false],[8],[0," "],[1,[19,2,["deliveryDetails"]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                      "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.location"],null],false],[8],[0," "],[1,[19,2,["deliveryDetails"]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[19,2,["isFulfillment"]]],null,{"statements":[[0,"                    "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.cost"],null],false],[8],[0," "],[1,[19,2,["costPerUnit"]],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.quantity"],null],false],[8],[0," "],[1,[19,2,["quantityAtCompletion"]],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.pulled"],null],false],[8],[0,"\\n"],[4,"each",[[19,2,["locationsAffected"]]],null,{"statements":[[0,"                      "],[1,[19,4,["name"]],false],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[4]},null],[4,"if",[[19,2,["patient"]]],null,{"statements":[[0,"                      "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.prescription"],null],false],[8],[0," "],[1,[19,2,["deliveryDetails"]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                      "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.delivered"],null],false],[8],[0," "],[1,[19,2,["deliveryDetails"]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[19,2,["isTransfer"]]],null,{"statements":[[0,"                    "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.transferredFrom"],null],false],[8],[0,"\\n"],[4,"each",[[19,2,["locationsAffected"]]],null,{"statements":[[0,"                      "],[1,[19,3,["name"]],false],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[3]},null],[0,"                    "],[6,"strong"],[7],[1,[25,"t",["inventory.edit.transferredTo"],null],false],[8],[0," "],[1,[19,2,["deliveryDetails"]],false],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[2]},null]],"parameters":[]},{"statements":[[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[9,"colspan","4"],[7],[6,"span"],[9,"class","glyphicon glyphicon-refresh glyphicon-refresh-animate"],[7],[8],[0," "],[1,[25,"t",["inventory.messages.loading"],null],false],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]}],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/inventory/edit/template.hbs"}})}),define("hospitalrun/inventory/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{startKey:[],canAdd:Ember.computed(function(){return this.currentUserCan("add_inventory_request")}),canFulfill:Ember.computed(function(){return this.currentUserCan("fulfill_inventory")}),currentUserName:Ember.computed("",function(){return this.getUserName()})})}),define("hospitalrun/inventory/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{modelName:"inv-request",newButtonAction:Ember.computed(function(){return this.currentUserCan("add_inventory_request")?"newRequest":null}),newButtonText:(0,a.t)("buttons.newRequestPlus"),pageTitle:(0,a.t)("navigation.subnav.requests"),_getStartKeyFromItem:function(e){return["Requested",null,this._getPouchIdFromItem(e)]},_modelQueryParams:function(){var e=this.get("maxValue")
return{options:{startkey:["Requested",null,null],endkey:["Requested",e,e]},mapReduce:"inventory_request_by_status"}},actions:{fulfill:function(e){e.set("dateCompleted",new Date),this.transitionTo("inventory.request",e)}}})}),define("hospitalrun/inventory/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"lXIzp3tX",block:'{"symbols":["request"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.requestedOn"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["inventoryItem","name"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["quantity"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["dateRequested"]]],null],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canFulfill"]]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"fulfill",[19,1,[]]]],[7],[1,[25,"t",["labels.fulfill"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"or",[[20,["canFulfill"]],[25,"and",[[20,["canAdd"]],[25,"eq",[[19,1,["requestedBy"]],[20,["currentUserName"]]],null]],null]],null]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0," \\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["inventory.messages.noRequests"],null],false],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newRequest"]],[7],[0," "],[1,[25,"t",["inventory.messages.createRequest"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/index/template.hbs"}})}),define("hospitalrun/inventory/listing/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{canAddItem:Ember.computed(function(){return this.currentUserCan("add_inventory_item")}),canAddPurchase:Ember.computed(function(){return this.currentUserCan("add_inventory_purchase")}),canDeleteItem:Ember.computed(function(){return this.currentUserCan("delete_inventory_item")}),startKey:[]})}),define("hospitalrun/inventory/listing/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{modelName:"inventory",newButtonAction:Ember.computed(function(){return this.currentUserCan("add_inventory_item")?"newItem":null}),newButtonText:(0,a.t)("buttons.newItem"),pageTitle:(0,a.t)("inventory.labels.items"),_modelQueryParams:function(){return{mapReduce:"inventory_by_name"}},_getStartKeyFromItem:function(e){var t=this._getPouchIdFromItem(e)
return[e.get("name"),t]}})}),define("hospitalrun/inventory/listing/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Tq9VkOOZ",block:'{"symbols":["inventory"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["friendlyId",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.id"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["name",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.name"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["inventoryType",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.type"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["quantity",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.quantity"],null],false]],"parameters":[]},null],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["inventory.labels.location"],null],false],[8],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["crossReference",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["inventory.labels.xref"],null],false]],"parameters":[]},null],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[4,"unless",[[19,1,["isNew"]]],null,{"statements":[[0,"          "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["friendlyId"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["inventoryType"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["quantity"]],false],[0," "],[1,[19,1,["distributionUnit"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["displayLocations"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["crossReference"]],false],[8],[0,"\\n            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddPurchase"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"showAddPurchase",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["buttons.add"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddItem"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteItem"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[4,"link-to",["inventory.barcode",[19,1,[]]],[["class","bubbles"],["btn btn-default neutral",false]],{"statements":[[1,[25,"t",["buttons.barcode"],null],false]],"parameters":[]},null],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["messages.noItemsFound"],null],false],[0," "],[4,"if",[[20,["canAddItem"]]],null,{"statements":[[0," "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/listing/template.hbs"}})}),define("hospitalrun/inventory/purchase/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/unit-types"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{inventoryController:Ember.inject.controller("inventory"),cancelAction:"closeModal",canEditQuantity:Ember.computed("model.currentQuantity","model.originalQuantity",function(){var e=this.get("model.originalQuantity")
return!(this.get("model.currentQuantity")<e)}),warehouseList:Ember.computed.alias("inventoryController.warehouseList"),aisleLocationList:Ember.computed.alias("inventoryController.aisleLocationList"),inventoryUnitList:Ember.computed.alias("inventoryController.inventoryUnitList.value"),vendorList:Ember.computed.alias("inventoryController.vendorList"),lookupListsToUpdate:[{name:"aisleLocationList",property:"model.aisleLocation",id:"aisle_location_list"},{name:"vendorList",property:"model.vendor",id:"vendor_list"},{name:"warehouseList",property:"model.location",id:"warehouse_list"}],newPurchase:!1,updateQuantity:!1,updateCapability:"add_inventory_purchase",title:Ember.computed("model.isNew",function(){var e=this.get("intl")
return this.get("model.isNew")?e.t("inventory.titles.addPurchase"):e.t("inventory.titles.editPurchase")}),beforeUpdate:function(){var e=this.get("model.isNew")
return this.get("model").changedAttributes().originalQuantity&&(this.set("model.currentQuantity",this.get("model.originalQuantity")),e||this.set("updateQuantity",!0)),e&&this.set("newPurchase",!0),Ember.RSVP.Promise.resolve()},afterUpdate:function(e){this.get("newPurchase")?this.send("addPurchase",e):this.send("updatePurchase",e,!0)}})}),define("hospitalrun/inventory/purchase/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"tC5X80be",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[12,"inv-purchase",[1]],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/inventory/purchase/edit/template.hbs"}})}),define("hospitalrun/inventory/purchase/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"by7GXPLI",block:'{"symbols":["inventory"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["friendlyId",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.id"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["name",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.name"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["inventoryType",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.type"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["quantity",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.quantity"],null],false]],"parameters":[]},null],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["inventory.labels.location"],null],false],[8],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["crossReference",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["inventory.labels.xref"],null],false]],"parameters":[]},null],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[4,"unless",[[19,1,["isNew"]]],null,{"statements":[[0,"          "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["friendlyId"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["inventoryType"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["quantity"]],false],[0," "],[1,[19,1,["distributionUnit"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["displayLocations"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["crossReference"]],false],[8],[0,"\\n            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddPurchase"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"showAddPurchase",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["buttons.add"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddItem"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteItem"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[4,"link-to",["inventory.barcode",[19,1,[]]],[["class","bubbles"],["btn btn-extra",false]],{"statements":[[1,[25,"t",["buttons.barcode"],null],false]],"parameters":[]},null],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["messages.noItemsFound"],null],false],[0," "],[4,"if",[[20,["canAddItem"]]],null,{"statements":[[0," "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/purchase/template.hbs"}})}),define("hospitalrun/inventory/quick-add/controller",["exports","hospitalrun/inventory/edit/controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:(0,n.t)("inventory.titles.inventoryItem"),updateCapability:"add_inventory_item",actions:{cancel:function(){this.send("closeModal")}},beforeUpdate:function(){return this.get("model.skipSavePurchase")&&this.set("model.quantity",null),this._super()},afterUpdate:function(e){this.send("addedNewInventoryItem",e)}})})
define("hospitalrun/inventory/quick-add/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"0KHPubon",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[25,"t",["inventory.titles.quickAddTitle"],null],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-warning"],[9,"role","alert"],[7],[1,[25,"t",["inventory.messages.itemNotFound"],[["item","htmlSafe"],[[20,["model","name"]],true]]],false],[8],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[12,"inventory-basic",[1]],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/inventory/quick-add/template.hbs"}})}),define("hospitalrun/inventory/rank-select/component",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({rankOptions:[],prompt:" ",class:"col-sm-2 test-inv-rank",options:Ember.computed("rankOptions",function(){return t.default.selectValues(this.get("rankOptions"))}),init:function(){this._super.apply(this,arguments),this.set("rankOptions",Ember.A(["A","B","C"]))}})}),define("hospitalrun/inventory/rank-select/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"dqhqf5Ji",block:'{"symbols":[],"statements":[[1,[25,"component",[[20,["form","select"]]],[["label","property","content","class","prompt"],[[25,"t",["inventory.labels.rank"],null],[20,["property"]],[20,["options"]],[25,"concat",["form-input-group ",[20,["class"]]],null],[20,["prompt"]]]]],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/rank-select/template.hbs"}})}),define("hospitalrun/inventory/reports/controller",["exports","hospitalrun/controllers/abstract-report-controller","hospitalrun/mixins/inventory-adjustment-types","hospitalrun/mixins/location-name","hospitalrun/mixins/modal-helper","moment","hospitalrun/mixins/number-format","hospitalrun/utils/select-values"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,i.default,o.default,n.default,{inventoryController:Ember.inject.controller("inventory"),effectiveDate:null,endDate:null,expenseCategories:Ember.computed(function(){var e=this.get("intl")
return[e.t("inventory.labels.inventoryConsumed"),e.t("inventory.labels.giftUsage"),e.t("inventory.labels.inventoryObsolence")]}),expenseMap:null,filterLocation:null,grandCost:0,grandQuantity:0,locationSummary:null,reportType:"daysLeft",startDate:null,database:Ember.inject.service(),warehouseList:Ember.computed.map("inventoryController.warehouseList.value",r.default.selectValuesMap),reportColumns:Ember.computed(function(){var e=this.get("intl")
return{date:{label:e.t("labels.date"),include:!0,property:"date"},id:{label:e.t("labels.id"),include:!0,property:"inventoryItem.friendlyId"},name:{label:e.t("inventory.labels.name"),include:!0,property:"inventoryItem.name"},transactionType:{label:e.t("inventory.labels.adjustmentType"),include:!1,property:"transactionType"},expenseAccount:{label:e.t("inventory.labels.expense"),include:!1,property:"expenseAccount"},description:{label:e.t("labels.description"),include:!1,property:"inventoryItem.description"},type:{label:e.t("labels.type"),include:!0,property:"inventoryItem.inventoryType"},xref:{label:e.t("inventory.labels.crossReference"),include:!1,property:"inventoryItem.crossReference"},reorder:{label:e.t("inventory.labels.reorderPoint"),include:!1,property:"inventoryItem.reorderPoint",format:"_numberFormat"},price:{label:e.t("inventory.labels.salePricePerUnit"),include:!1,property:"inventoryItem.price",format:"_numberFormat"},quantity:{label:e.t("labels.quantity"),include:!0,property:"quantity",format:"_numberFormat"},consumedPerDay:{label:e.t("inventory.labels.consumptionRate"),include:!1,property:"consumedPerDay"},daysLeft:{label:e.t("inventory.labels.daysLeft"),include:!1,property:"daysLeft"},unit:{label:e.t("inventory.labels.distributionUnit"),include:!0,property:"inventoryItem.distributionUnit"},unitcost:{label:e.t("inventory.labels.unitCost"),include:!0,property:"unitCost",format:"_numberFormat"},total:{label:e.t("inventory.labels.totalCost"),include:!0,property:"totalCost",format:"_numberFormat"},gift:{label:e.t("inventory.labels.gift"),include:!0,property:"giftInKind"},locations:{label:e.t("inventory.labels.locations"),include:!0,property:"locations",format:"_addLocationColumn"},aisle:{label:e.t("inventory.labels.aisle"),include:!1,property:"locations",format:"_addAisleColumn"},vendor:{label:e.t("inventory.labels.vendor"),include:!1,property:"vendors"}}}),reportTypes:Ember.computed(function(){var e=this.get("intl")
return[{name:e.t("inventory.reports.daysSupply"),value:"daysLeft"},{name:e.t("inventory.reports.adjustment"),value:"detailedAdjustment"},{name:e.t("inventory.reports.purchaseDetail"),value:"detailedPurchase"},{name:e.t("inventory.reports.stockUsageDetail"),value:"detailedUsage"},{name:e.t("inventory.reports.stockTransferDetail"),value:"detailedTransfer"},{name:e.t("inventory.reports.expenseDetail"),value:"detailedExpense"},{name:e.t("inventory.reports.expiration"),value:"expiration"},{name:e.t("inventory.reports.invLocation"),value:"byLocation"},{name:e.t("inventory.reports.invValuation"),value:"valuation"},{name:e.t("inventory.reports.expenseSum"),value:"summaryExpense"},{name:e.t("inventory.reports.purchaseSum"),value:"summaryPurchase"},{name:e.t("inventory.reports.stockUsageSum"),value:"summaryUsage"},{name:e.t("inventory.reports.stockTransferSum"),value:"summaryTransfer"},{name:e.t("inventory.reports.finance"),value:"summaryFinance"}]}),hideLocationFilter:Ember.computed("reportType",function(){return"summaryFinance"===this.get("reportType")}),includeDate:Ember.computed("reportType",function(){var e=this.get("reportType")
return Ember.isEmpty(e)||0!==e.indexOf("detailed")?(this.set("reportColumns.date.include",!1),!1):(this.set("reportColumns.date.include",!0),!0)}),includeDaysLeft:Ember.computed("reportType",function(){return"daysLeft"===this.get("reportType")?(this.set("reportColumns.consumedPerDay.include",!0),this.set("reportColumns.daysLeft.include",!0),!0):(this.set("reportColumns.consumedPerDay.include",!1),this.set("reportColumns.daysLeft.include",!1),!1)}),includeCostFields:Ember.computed("reportType",function(){var e=this.get("reportType")
return"detailedTransfer"===e||"summaryTransfer"===e||"daysLeft"===e?(this.set("reportColumns.total.include",!1),this.set("reportColumns.unitcost.include",!1),!1):(this.set("reportColumns.total.include",!0),this.set("reportColumns.unitcost.include",!0),!0)}),includeExpenseAccount:Ember.computed("reportType",function(){switch(this.get("reportType")){case"detailedAdjustment":case"detailedTransfer":case"detailedUsage":return!0
case"detailedExpense":return this.set("reportColumns.expenseAccount.include",!0),!0
default:return this.set("reportColumns.expenseAccount.include",!1),!1}}),includeTransactionType:Ember.computed("reportType",function(){return"detailedAdjustment"===this.get("reportType")?(this.set("reportColumns.transactionType.include",!0),!0):(this.set("reportColumns.transactionType.include",!1),!1)}),showEffectiveDate:Ember.computed("reportType",function(){var e=this.get("reportType")
return"valuation"===e||"byLocation"===e?(this.set("startDate",null),Ember.isEmpty(this.get("endDate"))&&this.set("endDate",new Date),!0):(Ember.isEmpty(this.get("startDate"))&&this.set("startDate",new Date),!1)}),useFieldPicker:Ember.computed("reportType",function(){var e=this.get("reportType")
return"expiration"!==e&&"summaryFinance"!==e}),_addAisleColumn:function(e){if(!Ember.isEmpty(e))return e.map(function(e){if(e.name.indexOf(":")>-1)return e.name.split(":")[1]})},_addLocationColumn:function(e){if(!Ember.isEmpty(e)){var t=[]
return e.forEach(function(e){var n=void 0
n=0===e.name.indexOf("From:")?e.name:this._getWarehouseLocationName(e.name),t.includes(n)||t.push(n)}.bind(this)),t}},_addReportRow:function(e,t,n,a){!Ember.isEmpty(a)||Ember.isEmpty(e.inventoryItem)||Ember.isEmpty(e.inventoryItem.id)||(a={action:"viewInventory",model:e.inventoryItem.id}),this._super(e,t,n,a)},_addTotalsRow:function(e,t,n){n>0&&this._addReportRow({totalCost:e+this._numberFormat(t),quantity:e+this._numberFormat(n),unitCost:e+this._numberFormat(t/n)},!0)},_adjustLocation:function(e,t,n,a){var i=e.findBy("name",t)
Ember.isEmpty(i)&&(i={name:t,quantity:0},e.push(i)),a?i.quantity+=n:i.quantity-=n},_adjustPurchase:function(e,t,n,a){var i=e.findBy("id",t)
if(!Ember.isEmpty(i)){var s=i.calculatedQuantity
a?s+=n:s-=n,i.calculatedQuantity=s}},_calculateCosts:function(e,t){return Ember.isEmpty(e)||e.forEach(function(e){var n=this._calculateCostPerUnit(e),a=e.calculatedQuantity
t.quantity+=e.calculatedQuantity,t.totalCost+=a*n}.bind(this)),0===t.totalCost||0===t.quantity?t.unitCost=0:t.unitCost=t.totalCost/t.quantity,t},_calculateUsage:function(e,t){return Ember.isEmpty(e)||e.forEach(function(e){var n=this._calculateCostPerUnit(e),a=e.calculatedQuantity
t.quantity-=e.calculatedQuantity,t.totalCost-=a*n}.bind(this)),0===t.totalCost||0===t.quantity?t.unitCost=0:t.unitCost=t.totalCost/t.quantity,t},_calculateCostPerUnit:function(e){var t=e.purchaseCost,n=parseInt(e.originalQuantity)
return Ember.isEmpty(t)||Ember.isEmpty(n)?0:Number((t/n).toFixed(2))},_findInventoryItems:function(e,t,n,a){Ember.isEmpty(n)&&(n={})
var i=this.get("database")
return new Ember.RSVP.Promise(function(s,o){i.queryMainDB(e,t).then(function(e){var t=Object.keys(n),r=[]
Ember.isEmpty(e.rows)||e.rows.forEach(function(e){e.doc.inventoryItem&&!t.includes(e.doc.inventoryItem)&&(r.push(i.getPouchId(e.doc.inventoryItem,"inventory")),t.push(e.doc.inventoryItem))}),this._getInventoryItems(r,n).then(function(t){e.rows.forEach(function(e){var n=t[e.doc.inventoryItem]
if(!Ember.isEmpty(n)&&("purchaseObjects"!==a||n.purchases.includes(e.doc.id))){var i=n[a]
Ember.isEmpty(i)&&(i=[]),i.push(e.doc),n[a]=i}}),s(t)},o)}.bind(this),o)}.bind(this))},_findInventoryItemsByPurchase:function(e,t){return this._findInventoryItems({startkey:[e.startTime,"invPurchase_"],endkey:[e.endTime,"invPurchase_￿"],include_docs:!0},"inventory_purchase_by_date_received",t,"purchaseObjects")},_findInventoryItemsByRequest:function(e,t){return this._findInventoryItems({startkey:["Completed",e.startTime,"invRequest_"],endkey:["Completed",e.endTime,"invRequest_￿"],include_docs:!0},"inventory_request_by_status",t,"requestObjects")},_finishExpenseReport:function(e){var t=this.get("expenseCategories"),n=this.get("expenseMap"),a=this.get("intl")
t.forEach(function(t){var i=0,s=void 0,o=void 0
this._addReportRow({inventoryItem:{name:a.t("inventory.reports.rows.expensesFor")+t}}),n[t].expenseAccounts.forEach(function(n){"detailedExpense"===e&&n.reportRows.forEach(function(e){this._addReportRow(e)}.bind(this)),s=Ember.isEmpty(n.name)?a.t("inventory.reports.rows.noAccount"):n.name,o=a.t("inventory.reports.rows.subtotalFor",{category:t,account:s}),this._addReportRow({totalCost:o+this._numberFormat(n.total)},!0),i+=n.total}.bind(this)),o=a.t("inventory.reports.rows.totalFor",{var:t}),this._addReportRow({totalCost:o+this._numberFormat(i)},!0),this.incrementProperty("grandCost",i)}.bind(this)),this._addReportRow({totalCost:a.t("inventory.reports.rows.total")+this._numberFormat(this.get("grandCost"))},!0)},_finishLocationReport:function(){var e="",t=0,n=this.get("locationSummary"),a="",i=0,s=this.get("intl");(n=n.sortBy("name")).forEach(function(n){a=this._getWarehouseLocationName(n.name)
var o=s.t("inventory.reports.rows.totalFor",{var:e})
if(e!==a&&(this._addTotalsRow(o,t,i),i=0,t=0,e=a),this._includeLocation(a))for(var r in n.items)n.items[r].quantity>0&&(this._addReportRow({giftInKind:n.items[r].giftInKind,inventoryItem:n.items[r].item,quantity:n.items[r].quantity,locations:[{name:n.name}],totalCost:n.items[r].totalCost,unitCost:n.items[r].unitCost}),i+=this._getValidNumber(n.items[r].quantity),t+=this._getValidNumber(n.items[r].totalCost),this.incrementProperty("grandCost",this._getValidNumber(n.items[r].totalCost)),this.incrementProperty("grandQuantity",this._getValidNumber(n.items[r].quantity)))}.bind(this)),i>0&&this._addTotalsRow(s.t("inventory.reports.rows.totalFor",{var:a}),t,i)},_generateExpirationReport:function(){var e=0,t=this.get("database"),n=this.get("reportRows"),a=this._getDateQueryParams()
t.queryMainDB({startkey:[a.startTime,"invPurchase_"],endkey:[a.endTime,"invPurchase_￿"],include_docs:!0},"inventory_purchase_by_expiration_date").then(function(a){var i=[],o=[]
a.rows.forEach(function(e){e.doc.currentQuantity>0&&!Ember.isEmpty(e.doc.expirationDate)&&(i.push(e.doc),o.push(t.getPouchId(e.doc.inventoryItem,"inventory")))}.bind(this)),this._getInventoryItems(o).then(function(t){var a=this.get("intl")
i.forEach(function(a){var i=a.currentQuantity,o=new Date(a.expirationDate),r=t[a.inventoryItem]
r&&this._includeLocation(a.location)&&(n.addObject([r.friendlyId,r.name,i,r.distributionUnit,(0,s.default)(o).format("l"),this.formatLocationName(a.location,a.aisleLocation)]),e+=i)}.bind(this)),n.addObject(["","",a.t("inventory.reports.rows.total")+e,"",""]),this.set("showReportResults",!0),this.set("reportHeaders",[a.t("labels.id"),a.t("labels.name"),a.t("inventory.labels.currentQuantity"),a.t("inventory.labels.distributionUnit"),a.t("inventory.labels.expirationDate"),a.t("inventory.labels.location")]),this._generateExport(),this._setReportTitle(),this.closeProgressModal()}.bind(this))}.bind(this))},_generateFinancialSummaryReport:function(){var e=this._getDateQueryParams()
this._calculateBeginningBalance(e).then(function(t){this._generateSummaries(e).then(function(e){var n=this._numberFormat(t+e),a=this.get("intl")
t+e<0?this.get("reportRows").addObject([a.t("inventory.reports.rows.balanceEnd"),"","("+n+")"]):this.get("reportRows").addObject([a.t("inventory.reports.rows.balanceEnd"),"",n]),this.set("showReportResults",!0),this.set("reportHeaders",[a.t("inventory.reports.rows.category"),a.t("labels.type"),a.t("inventory.labels.total")]),this._generateExport(),this._setReportTitle(),this.closeProgressModal()}.bind(this),function(e){this._notifyReportError(this.get("intl").t("inventory.reports.rows.errInFinSum")+e)}.bind(this))}.bind(this))},_generateSummaries:function(e){return new Ember.RSVP.Promise(function(t,n){var a=0,i=this.get("intl")
this._findInventoryItemsByRequest(e,{}).then(function(s){this._findInventoryItemsByPurchase(e,s).then(function(e){var n={},s={},o={},r={}
if(this.get("adjustmentTypes").forEach(function(e){r[e.type]=[]}),Object.keys(e).forEach(function(t){if(!Ember.isEmpty(t)&&!Ember.isEmpty(e[t])){var a=e[t]
Ember.isEmpty(a.purchaseObjects)||a.purchaseObjects.forEach(function(e){n[a.inventoryType]=this._getValidNumber(n[a.inventoryType])+this._getValidNumber(e.purchaseCost)}.bind(this)),Ember.isEmpty(a.requestObjects)||a.requestObjects.forEach(function(e){e.adjustPurchases&&("Fulfillment"===e.transactionType?e.giftInKind?o[a.inventoryType]=this._getValidNumber(o[a.inventoryType])+this._getValidNumber(e.quantity*e.costPerUnit):s[a.inventoryType]=this._getValidNumber(s[a.inventoryType])+this._getValidNumber(e.quantity*e.costPerUnit):r[e.transactionType][a.inventoryType]=this._getValidNumber(r[e.transactionType][a.inventoryType])+this._getValidNumber(e.quantity*e.costPerUnit))}.bind(this))}}.bind(this)),Object.keys(n).length>0){var l=0
this.get("reportRows").addObject([i.t("inventory.labels.purchases"),"",""]),Object.keys(n).forEach(function(e){var t=this._getValidNumber(n[e])
l+=t,this.get("reportRows").addObject(["",e,this._numberFormat(t)])}.bind(this)),this.get("reportRows").addObject([i.t("inventory.reports.rows.totalPurchases"),"",this._numberFormat(l)]),a+=l}if(Object.keys(s).length>0||Object.keys(o).length>0){this.get("reportRows").addObject([i.t("inventory.reports.rows.consumed"),"",""])
var d=0
if(Object.keys(s).length>0){this.get("reportRows").addObject([i.t("inventory.reports.rows.consumedPuchases"),"",""])
var u=0
Object.keys(s).forEach(function(e){var t=this._getValidNumber(s[e])
u+=t,this.get("reportRows").addObject(["",e,"("+this._numberFormat(t)+")"])}.bind(this)),d+=u,this.get("reportRows").addObject([i.t("inventory.reports.rows.consumedPurchasesTotal"),"","("+this._numberFormat(u)+")"])}if(Object.keys(o).length>0){this.get("reportRows").addObject([i.t("inventory.reports.rows.consumedGik"),"",""])
var c=0
Object.keys(o).forEach(function(e){var t=this._getValidNumber(o[e])
c+=t,this.get("reportRows").addObject(["",e,"("+this._numberFormat(t)+")"])}.bind(this)),d+=c,this.get("reportRows").addObject([i.t("inventory.reports.rows.consumedGikTotal"),"","("+this._numberFormat(c)+")"])}this.get("reportRows").addObject([i.t("inventory.reports.rows.consumedTotal"),"","("+this._numberFormat(d)+")"]),a-=d}var p=0
this.get("reportRows").addObject([i.t("inventory.reports.rows.adjustments"),"",""]),Object.keys(r).forEach(function(e){Object.keys(r[e]).length>0&&(this.get("reportRows").addObject([e,"",""]),Object.keys(r[e]).forEach(function(t){var n=this._getValidNumber(r[e][t])
"Adjustment (Add)"===e||"Return"===e?(p+=n,this.get("reportRows").addObject(["",t,this._numberFormat(n)])):(p-=n,this.get("reportRows").addObject(["",t,"("+this._numberFormat(n)+")"]))}.bind(this)))}.bind(this)),p<0?this.get("reportRows").addObject([i.t("inventory.reports.rows.adjustmentsTotal"),"","("+this._numberFormat(p)+")"]):this.get("reportRows").addObject([i.t("inventory.reports.rows.adjustmentsTotal"),"",this._numberFormat(p)]),t(a+=p)}.bind(this),n)}.bind(this),n)}.bind(this))},_calculateBeginningBalance:function(e){return new Ember.RSVP.Promise(function(t,n){var a={startTime:null,endTime:e.startTime},i=0,s=this.get("intl")
this._findInventoryItemsByRequest(a,{}).then(function(e){this._findInventoryItemsByPurchase(a,e).then(function(e){Object.keys(e).forEach(function(t){if(!Ember.isEmpty(t)&&!Ember.isEmpty(e[t])){var n=e[t],a=n.purchaseObjects,s=n.requestObjects,o={inventoryItem:n,quantity:0,unitCost:0,totalCost:0}
Ember.isEmpty(a)||a.forEach(function(e){var t=e.originalQuantity
e.calculatedQuantity=t}),Ember.isEmpty(s)||s.forEach(function(e){var t,n=e.adjustPurchases,i=e.purchasesAffected,s=e.transactionType
t="Adjustment (Add)"===s||"Return"===s,n&&(Ember.isEmpty(i)||Ember.isEmpty(a)||i.forEach(function(e){this._adjustPurchase(a,e.id,e.quantity,t)}.bind(this)))}.bind(this)),Ember.isEmpty(a)||(o=this._calculateCosts(a,o),i+=this._getValidNumber(o.totalCost))}}.bind(this)),i<0?this.get("reportRows").addObject([s.t("inventory.reports.rows.balanceBegin"),"","("+this._numberFormat(i)+")"]):this.get("reportRows").addObject([s.t("inventory.reports.rows.balanceBegin"),"",this._numberFormat(i)]),t(i)}.bind(this),n)}.bind(this),n)}.bind(this))},_generateInventoryReport:function(){this.set("grandCost",0),this.set("grandQuantity",0),this.set("locationSummary",[])
var e=void 0,t=this.get("locationSummary"),n=this.get("reportType"),a=this._getDateQueryParams(),i=this.get("intl")
if("daysLeft"===n){var o=this.get("endDate"),r=this.get("startDate")
if(Ember.isEmpty(o)||Ember.isEmpty(r))return void this.closeProgressModal()
e=(0,s.default)(o).diff(r,"days")}this._findInventoryItemsByRequest(a,{}).then(function(o){this._findInventoryItemsByPurchase(a,o).then(function(a){switch(Object.keys(a).forEach(function(o){if(!Ember.isEmpty(a[o])){var r=a[o],l=r.purchaseObjects,d=r.requestObjects,u={giftInKind:"N",inventoryItem:r,quantity:0,unitCost:0,totalCost:0,locations:[],vendors:[]}
Ember.isEmpty(l)||l.forEach(function(e){var t=this.getDisplayLocationName(e.location,e.aisleLocation),n=e.originalQuantity
e.calculatedQuantity=n,!0===e.giftInKind&&(u.giftInKind="Y"),Ember.isEmpty(e.vendor)||u.vendors.includes(e.vendor)||u.vendors.push(e.vendor),this._adjustLocation(u.locations,t,n,!0)}.bind(this)),Ember.isEmpty(d)||d.forEach(function(e){var t,n=e.adjustPurchases,a=e.transactionType,i=e.locationsAffected,s=e.purchasesAffected
if(t="Adjustment (Add)"===a||"Return"===a,n)Ember.isEmpty(s)||Ember.isEmpty(l)||s.forEach(function(e){this._adjustPurchase(l,e.id,e.quantity,t)}.bind(this))
else if("Transfer"===a){var o=this.getDisplayLocationName(e.deliveryLocation,e.deliveryAisle)
this._adjustLocation(u.locations,o,e.quantity,!0)}i.forEach(function(e){this._adjustLocation(u.locations,e.name,e.quantity,t)}.bind(this))}.bind(this))
var c=0,p=0
switch(n){case"byLocation":u.locations.forEach(function(e){var n=t.findBy("name",this._getWarehouseLocationName(e.name))
Ember.isEmpty(n)?((n=Ember.copy(e)).items={},t.push(n)):n.quantity+=this._getValidNumber(e.quantity)
var a=this._calculateCosts(l,{quantity:0,totalCost:0})
n.items[r.id]={item:r,quantity:this._getValidNumber(e.quantity),giftInKind:u.giftInKind,totalCost:this._getValidNumber(a.unitCost)*this._getValidNumber(e.quantity),unitCost:this._getValidNumber(a.unitCost)}}.bind(this))
break
case"daysLeft":if(!Ember.isEmpty(d)&&this._hasIncludedLocation(u.locations)){var m=d.reduce(function(e,t){return"Fulfillment"===t.transactionType?e+this._getValidNumber(t.quantity):e}.bind(this),0)
u.quantity=this._getValidNumber(r.quantity),m>0?(u.consumedPerDay=this._numberFormat(m/e,!0),u.daysLeft=this._numberFormat(u.quantity/u.consumedPerDay)):(u.consumedPerDay=0===m?"0":"?"+m,u.daysLeft="?"),this._addReportRow(u)}break
case"detailedAdjustment":case"detailedTransfer":case"detailedUsage":case"detailedExpense":case"summaryExpense":Ember.isEmpty(d)||(d.forEach(function(e){if(this._includeTransaction(n,e.transactionType)&&this._hasIncludedLocation(e.locationsAffected)){var t,a=this.getDisplayLocationName(e.deliveryLocation,e.deliveryAisle),o=this._getValidNumber(e.quantity),r=this._getValidNumber(e.quantity)*this._getValidNumber(e.costPerUnit)
t=e.locationsAffected.map(function(e){return"detailedTransfer"===n?{name:i.t("inventory.reports.rows.transfer2",{source:e.name,target:a}).toString()}:{name:i.t("inventory.reports.rows.transfer1",{quantity:o,location:e.name}).toString()}}.bind(this))
var l={date:(0,s.default)(new Date(e.dateCompleted)).format("l"),expenseAccount:e.expenseAccount,giftInKind:u.giftInKind,inventoryItem:u.inventoryItem,quantity:e.quantity,transactionType:e.transactionType,locations:t,unitCost:e.costPerUnit,totalCost:r}
"detailedExpense"===n||"summaryExpense"===n?this._updateExpenseMap(e,l):(this._addReportRow(l),p+=this._getValidNumber(e.quantity),c+=this._getValidNumber(r))}}.bind(this)),"detailedExpense"!==n&&"summaryExpense"!==n&&(this._addTotalsRow(i.t("inventory.reports.rows.subtotal"),c,p),this.incrementProperty("grandCost",c),this.incrementProperty("grandQuantity",p)))
break
case"summaryTransfer":case"summaryUsage":!Ember.isEmpty(d)&&this._hasIncludedLocation(u.locations)&&(u.quantity=d.reduce(function(e,t){if(this._includeTransaction(n,t.transactionType)){var a=this._getValidNumber(t.quantity)*this._getValidNumber(t.costPerUnit)
return c+=a,e+this._getValidNumber(t.quantity)}return e}.bind(this),0),u.quantity>0&&(u.totalCost=c,u.unitCost=c/u.quantity,this._addReportRow(u),this.incrementProperty("grandCost",c),this.incrementProperty("grandQuantity",u.quantity)))
break
case"detailedPurchase":Ember.isEmpty(l)||(l.forEach(function(e){if(this._includeLocation(e.location)){var t="N"
!0===e.giftInKind&&(t="Y"),this._addReportRow({date:(0,s.default)(new Date(e.dateReceived)).format("l"),giftInKind:t,inventoryItem:u.inventoryItem,quantity:e.originalQuantity,unitCost:e.costPerUnit,totalCost:e.purchaseCost,locations:[{name:this.getDisplayLocationName(e.location,e.aisleLocation)}]}),c+=this._getValidNumber(e.purchaseCost),p+=this._getValidNumber(e.originalQuantity)}}.bind(this)),this._addTotalsRow(i.t("inventory.reports.rows.subtotal"),c,p),this.incrementProperty("grandCost",c),this.incrementProperty("grandQuantity",p))
break
case"summaryPurchase":Ember.isEmpty(l)||(u.locations=[],u.quantity=l.reduce(function(e,t){c+=this._getValidNumber(t.purchaseCost)
var n=this.getDisplayLocationName(t.location,t.aisleLocation)
return u.locations.findBy("name",n)||u.locations.push({name:this.getDisplayLocationName(t.location,t.aisleLocation)}),e+this._getValidNumber(t.originalQuantity)}.bind(this),0),this._hasIncludedLocation(u.locations)&&(u.unitCost=c/u.quantity,u.totalCost=c,this._addReportRow(u),this.incrementProperty("grandCost",c),this.incrementProperty("grandQuantity",u.quantity)))
break
case"valuation":!Ember.isEmpty(l)&&this._hasIncludedLocation(u.locations)&&(this._calculateCosts(l,u),this.incrementProperty("grandCost",this._getValidNumber(u.totalCost)),this.incrementProperty("grandQuantity",this._getValidNumber(u.quantity)),this._addReportRow(u))}}}.bind(this)),n){case"detailedExpense":case"summaryExpense":this._finishExpenseReport(n)
break
case"byLocation":this._finishLocationReport(),this._addTotalsRow(i.t("inventory.reports.rows.total"),this.get("grandCost"),this.get("grandQuantity"))
break
default:this._addTotalsRow(i.t("inventory.reports.rows.total"),this.get("grandCost"),this.get("grandQuantity"))}this._finishReport()}.bind(this),function(e){this._notifyReportError(i.t("inventory.reports.rows.errInFindPur")+e)}.bind(this))}.bind(this),function(e){this._notifyReportError(i.t("inventory.reports.rows.errInFindPur")+e)}.bind(this))},_getDateQueryParams:function(){var e=this.get("endDate"),t=this.get("maxValue"),n=this.get("startDate"),a=void 0
return Ember.isEmpty(e)||(t=(0,s.default)(e).endOf("day").toDate().getTime()),Ember.isEmpty(n)||(a=(0,s.default)(n).startOf("day").toDate().getTime()),{endTime:t,startTime:a}},_getInventoryItems:function(e,t){var n=this.get("database")
return new Ember.RSVP.Promise(function(a,i){Ember.isEmpty(t)&&(t={}),n.queryMainDB({keys:e,include_docs:!0}).then(function(e){e.rows.forEach(function(e){e.doc&&!0!==e.doc.archived&&(t[e.doc.id]=e.doc)}),a(t)},i)})},_getWarehouseLocationName:function(e){return e.indexOf(":")>-1?e.split(":")[0].trim():e},_hasIncludedLocation:function(e){var t=!1
return e.forEach(function(e){var n=this._getWarehouseLocationName(e.name)
this._includeLocation(n)&&(t=!0)}.bind(this)),t},_includeLocation:function(e){var t=this.get("filterLocation")
return Ember.isEmpty(t)||e===t},_includeTransaction:function(e,t){var n=0===e.indexOf("detailed"),a=void 0
if("detailedExpense"===e||"summaryExpense"===e)return!0
switch(t){case"Fulfillment":a=n?"detailedUsage":"summaryUsage"
break
case"Transfer":a=n?"detailedTransfer":"summaryTransfer"
break
default:a=n?"detailedAdjustment":"summaryAdjustment"}return e===a},_updateExpenseMap:function(e,t){var n=void 0,a=this.get("expenseMap"),i="Y"===t.giftInKind,s=!0
switch(e.transactionType){case"Fulfillment":case"Return":n=i?a["Gift In Kind Usage"]:a["Inventory Consumed"],"Return"===e.transactionType&&(s=!1)
break
case"Adjustment (Add)":case"Adjustment (Remove)":case"Return To Vendor":case"Write Off":n=a["Inventory Obsolence"],"Adjustment (Add)"===e.transactionType&&(s=!1)}if(!Ember.isEmpty(n)){var o=n.expenseAccounts.findBy("name",e.expenseAccount)
Ember.isEmpty(o)&&(o={name:e.expenseAccount,total:0,reportRows:[]},n.expenseAccounts.push(o)),o.reportRows.push(t)
var r=this._getValidNumber(e.quantity)*this._getValidNumber(e.costPerUnit)
s?(n.total+=r,o.total+=r):(n.total=n.total-r,o.total=o.total-r,t.totalCost=-1*t.totalCost)}},_validateDates:function(){var e=this.get("reportType")
return"byLocation"===e||"valuation"===e||this._validateDateInputs()},actions:{generateReport:function(){var e=this.get("reportRows"),t=this.get("reportType")
if(this._validateDates())switch(e.clear(),this.showProgressModal(),t){case"expiration":this._generateExpirationReport()
break
case"summaryFinance":this._generateFinancialSummaryReport()
break
case"detailedExpense":case"summaryExpense":var n=this.get("expenseCategories"),a={}
n.forEach(function(e){a[e]={total:0,expenseAccounts:[]}}),this.set("expenseMap",a),this._generateInventoryReport()
break
default:this._generateInventoryReport()}},viewInventory:function(e){this.store.find("inventory",e).then(function(e){e.set("returnTo","inventory.reports"),this.transitionToRoute("inventory.edit",e)}.bind(this))}}})}),define("hospitalrun/inventory/reports/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({pageTitle:(0,n.t)("inventory.titles.inventoryReport"),model:function(){return Ember.RSVP.resolve(Ember.Object.create({}))}})}),define("hospitalrun/inventory/reports/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"WaB/o3C4",block:'{"symbols":["reportHeader","form"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","content","id","optionValuePath","optionLabelPath","property","label"],["col-xs-6 form-input-group",[20,["reportTypes"]],"report-type","value","name","reportType",[25,"t",["inventory.reports.reportType"],null]]]],false],[0,"\\n"],[4,"unless",[[20,["hideLocationFilter"]]],null,{"statements":[[0,"          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-xs-6 form-input-group",[25,"t",["inventory.labels.location"],null],"filterLocation",[20,["warehouseList"]]," "]]],false],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["showEffectiveDate"]]],null,{"statements":[[0,"          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[19,0,[]],"endDate",[25,"t",["inventory.labels.dateEffective"],null],"col-sm-4"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[19,0,[]],"startDate",[25,"t",["inventory.labels.dateStart"],null],"col-sm-4 test-start-date"]]],false],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[19,0,[]],"endDate",[25,"t",["inventory.labels.dateEnd"],null],"col-sm-4 test-end-date"]]],false],[0,"\\n"]],"parameters":[]}],[0,"      "],[8],[0,"\\n"],[4,"if",[[20,["useFieldPicker"]]],null,{"statements":[[0,"        "],[6,"h3"],[7],[1,[25,"t",["inventory.reports.fields"],null],false],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n"],[4,"if",[[20,["includeDate"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","date","label"]],"reportColumns.date.include","col-xs-2"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","id","label"]],"reportColumns.id.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","name","label"]],"reportColumns.name.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","description","label"]],"reportColumns.description.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","type","label"]],"reportColumns.type.include","col-xs-2"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","quantity","label"]],"reportColumns.quantity.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","unit","label"]],"reportColumns.unit.include","col-xs-2"]]],false],[0,"\\n"],[4,"if",[[20,["includeCostFields"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","total","label"]],"reportColumns.total.include","col-xs-2"]]],false],[0,"\\n            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","unitcost","label"]],"reportColumns.unitcost.include","col-xs-2"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["includeDaysLeft"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","consumedPerDay","label"]],"reportColumns.consumedPerDay.include","col-xs-2"]]],false],[0,"\\n            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","daysLeft","label"]],"reportColumns.daysLeft.include","col-xs-2"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","price","label"]],"reportColumns.price.include","col-xs-2"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","reorder","label"]],"reportColumns.reorder.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","gift","label"]],"reportColumns.gift.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","locations","label"]],"reportColumns.locations.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","aisle","label"]],"reportColumns.aisle.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","xref","label"]],"reportColumns.xref.include","col-xs-2"]]],false],[0,"\\n\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","vendor","label"]],"reportColumns.vendor.include","col-xs-2"]]],false],[0,"\\n"],[4,"if",[[20,["includeExpenseAccount"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","expenseAccount","label"]],"reportColumns.expenseAccount.include","col-xs-2"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["includeTransactionType"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","transactionType","label"]],"reportColumns.transactionType.include","col-xs-2"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"]],"parameters":[2]},null],[0,"  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n    "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"generateReport"]],[7],[1,[25,"t",["inventory.reports.generate"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["showReportResults"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[1,[18,"reportTitle"],false],[1,[25,"nav-paging",null,[["paginationProps"],[[20,["paginationProps"]]]]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"each",[[20,["reportHeaders"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[0,"\\n              "],[1,[19,1,[]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"        "],[8],[0,"\\n        "],[12,"report-rows",[]],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"a"],[10,"href",[18,"csvExport"],null],[9,"target","_blank"],[10,"download",[26,[[18,"reportTitle"],".csv"]]],[9,"class","btn btn-primary"],[7],[1,[25,"t",["inventory.reports.export"],null],false],[8],[0,"\\n\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/inventory/reports/template.hbs"}})}),define("hospitalrun/inventory/request/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/fulfill-request","hospitalrun/mixins/inventory-locations"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{inventoryController:Ember.inject.controller("inventory"),inventoryItems:null,cancelAction:"allRequests",warehouseList:Ember.computed.alias("inventoryController.warehouseList"),aisleLocationList:Ember.computed.alias("inventoryController.aisleLocationList"),expenseAccountList:Ember.computed.alias("inventoryController.expenseAccountList"),inventoryList:Ember.computed("inventoryItems.[]",function(){var e=this.get("inventoryItems")
if(!Ember.isEmpty(e))return e.map(function(e){return e.doc})}),lookupListsToUpdate:[{name:"expenseAccountList",property:"model.expenseAccount",id:"expense_account_list"},{name:"aisleLocationList",property:"model.deliveryAisle",id:"aisle_location_list"},{name:"warehouseList",property:"model.deliveryLocation",id:"warehouse_list"}],canFulfill:Ember.computed("model.requestedItems.[]",function(){var e=this.get("model.requestedItems")
return Ember.isEmpty(e)&&this.currentUserCan("fulfill_inventory")}),isFulfilling:Ember.computed("isRequested","model.shouldFulfillRequest",function(){var e=this.get("canFulfill"),t=this.get("isRequested"),n=this.get("model.shouldFulfillRequest"),a=e&&(t||n)
return a?Ember.isEmpty(this.get("model.dateCompleted"))&&this.set("model.dateCompleted",new Date):this.set("model.dateCompleted"),a}),isRequested:Ember.computed("model.status",function(){return"Requested"===this.get("model.status")}),quantityLabel:Ember.computed("selectedInventoryItem",function(){var e=this.get("selectedInventoryItem")
return Ember.isEmpty(e)?this.get("intl").t("labels.quantity").toString():this.get("intl").t("inventory.labels.quantity",{unit:e.distributionUnit}).toString()}),showRequestedItems:Ember.computed("model.requestedItems.[]",function(){var e=this.get("model.requestedItems")
return!Ember.isEmpty(e)}),updateViaFulfillRequest:!1,updateButtonText:Ember.computed("model.isNew","isFulfilling",function(){return this.get("isFulfilling")?this.get("intl").t("buttons.fulfill"):this._super()}),updateCapability:"add_inventory_request",actions:{addInventoryItem:function(){var e=this.get("model"),t=e.get("inventoryItem"),n=e.get("requestedItems"),a=e.get("quantity")
e.validate().then(function(){if(e.get("isValid")&&!Ember.isEmpty(t)&&!Ember.isEmpty(a)){var i=Ember.Object.create({item:t.get("content"),quantity:a})
n.addObject(i),e.set("inventoryItem"),e.set("inventoryItemTypeAhead"),e.set("quantity"),this.set("selectedInventoryItem")}}.bind(this)).catch(function(){})},allRequests:function(){this.transitionToRoute("inventory.index")},removeItem:function(e){var t=this.get("model.requestedItems"),n=e.itemToRemove
t.removeObject(n),this.send("closeModal")},showRemoveItem:function(e){var t=this.get("intl").t("inventory.messages.removeItemRequest"),n=Ember.Object.create({itemToRemove:e}),a=this.get("intl").t("inventory.titles.removeItem")
this.displayConfirm(a,t,"removeItem",n)},update:function(e){this.beforeUpdate().then(function(){if(this.get("updateViaFulfillRequest"))this.updateLookupLists(),this.performFulfillRequest(this.get("model"),!1,!1,!0).then(this.afterUpdate.bind(this))
else{var t=this.get("model.isNew"),n=this.get("model.requestedItems")
if(t&&!Ember.isEmpty(n)){var a=this.get("model"),i=a.getProperties(["dateRequested","deliveryAisle","deliveryLocation","expenseAccount","requestedBy","status"]),s=[],o=[],r=[]
Ember.isEmpty(this.get("model.inventoryItem"))||Ember.isEmpty(this.get("model.quantity"))||r.push(a.save()),n.forEach(function(e){i.inventoryItem=e.get("item"),i.quantity=e.get("quantity")
var t=this.get("store").createRecord("inv-request",i)
s.push(t.get("inventoryItem")),o.push(t)}.bind(this)),Ember.RSVP.all(s,"Get inventory items for inventory requests").then(function(){o.forEach(function(e){r.push(e.save())}),Ember.RSVP.all(r,"Save batch inventory requests").then(function(){this.updateLookupLists(),this.afterUpdate()}.bind(this))}.bind(this))}else this.get("model").save().then(function(t){this.updateLookupLists(),e||this.afterUpdate(t)}.bind(this))}}.bind(this))}},afterUpdate:function(){this.get("updateViaFulfillRequest")?this.displayAlert(this.get("intl").t("inventory.titles.requestFulfilled"),this.get("intl").t("inventory.messages.requestFulfilled"),"allRequests"):this.displayAlert(this.get("intl").t("inventory.titles.requestUpdated"),this.get("intl").t("inventory.messages.requestUpdated"))},beforeUpdate:function(){return this.get("isFulfilling")?this.set("updateViaFulfillRequest",!0):this.set("updateViaFulfillRequest",!1),this.get("model.isNew")&&(this.set("model.dateRequested",new Date),this.set("model.requestedBy",this.get("model").getUserName()),this.get("isFulfilling")||this.set("model.status","Requested")),Ember.RSVP.resolve()}})}),define("hospitalrun/inventory/request/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:(0,n.t)("inventory.titles.editRequest"),modelName:"inv-request",newTitle:(0,n.t)("inventory.titles.addRequest"),database:Ember.inject.service(),getNewData:function(){return Ember.RSVP.resolve({transactionType:"Request",requestedItems:[]})},actions:{allRequests:function(e){this.controller.send("allRequests",e)},removeItem:function(e){this.controller.send("removeItem",e)}},setupController:function(e,t){this._super(e,t)
this.get("database").queryMainDB({startkey:"inventory_",endkey:"inventory_￿",include_docs:!0}).then(function(t){e.set("inventoryItems",t.rows)})}})}),define("hospitalrun/inventory/request/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"AxlGbhu+",block:'{"symbols":["form","requestedItem"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["isRequested"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.item"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","inventoryItem","name"]],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.quantityRequested"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","quantity"]],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.quantityOnHand"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","inventoryItem","quantity"]],false],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"inventory-typeahead",null,[["model","class","property","label","content","selection"],[[20,["model"]],"col-sm-8 test-inv-item","inventoryItemTypeAhead",[25,"t",["inventory.labels.inventoryItem"],null],[20,["inventoryList"]],[20,["selectedInventoryItem"]]]]],false],[0,"\\n\\n        "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"quantity",[20,["quantityLabel"]],"col-sm-3 test-inv-quantity"]]],false],[0,"\\n        "],[6,"div"],[9,"class","form-group col-sm-1"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[8],[0,"\\n          "],[6,"h4"],[9,"class","form-control-static"],[7],[0,"\\n            "],[6,"span"],[9,"class","glyphicon glyphicon-plus"],[3,"action",[[19,0,[]],"addInventoryItem"]],[7],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"if",[[20,["showRequestedItems"]]],null,{"statements":[[0,"        "],[6,"h3"],[7],[1,[25,"t",["inventory.labels.requestedItems"],null],false],[8],[0,"\\n        "],[6,"table"],[9,"class","table"],[7],[0,"\\n          "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"each",[[20,["model","requestedItems"]]],null,{"statements":[[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[7],[0,"\\n                "],[1,[19,2,["item","name"]],false],[0,"\\n              "],[8],[0,"\\n              "],[6,"td"],[9,"class","col-xs-2"],[7],[0,"\\n                "],[6,"div"],[9,"class","input-group"],[7],[0,"\\n                  "],[1,[25,"input",null,[["class","value"],["form-control",[19,2,["quantity"]]]]],false],[0,"\\n                  "],[6,"div"],[9,"class","input-group-addon"],[7],[1,[19,2,["item","distributionUnit"]],false],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n              "],[6,"td"],[7],[0,"\\n                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showRemoveItem",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.remove"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canFulfill"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label sr-only"],[7],[1,[25,"t",["inventory.labels.fulfillRequest"],null],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["inventory.labels.fulfillRequest"],null],"shouldFulfillRequest"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"deliveryLocation",[25,"t",["inventory.labels.deliveryLocation"],null],[20,["warehouseList"]],[20,["model","deliveryLocation"]],"test-delivery-location"]]],false],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"deliveryAisle",[25,"t",["inventory.labels.deliveryAisle"],null],[20,["aisleLocationList"]],[20,["model","deliveryAisle"]],"test-delivery-aisle"]]],false],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["inventory.labels.billTo"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]],"test-bill-to"]]],false],[0,"\\n"],[4,"if",[[20,["isFulfilling"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateCompleted",[25,"t",["labels.dateCompleted"],null],"col-sm-4"]]],false],[0,"\\n      "],[8],[0,"\\n      "],[1,[25,"inventory-location-picker",null,[["form","label","quantityRequested","locationList","selectedLocations","class"],[[19,1,[]],[25,"t",["inventory.labels.pullFrom"],null],[20,["model","quantity"]],[20,["model","inventoryItem","availableLocations"]],[20,["model","inventoryLocations"]],"inventory-location"]]],false],[0,"\\n      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label sr-only"],[7],[1,[25,"t",["inventory.labels.consumePurchases"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["inventory.labels.markAsConsumed"],null],"markAsConsumed"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/request/template.hbs"}})}),define("hospitalrun/inventory/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/mixins/fulfill-request","hospitalrun/mixins/inventory-id","hospitalrun/mixins/inventory-locations"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,{addCapability:"add_inventory_item",additionalButtons:Ember.computed(function(){if(this.currentUserCan(this.get("addCapability")))return[{buttonAction:"newInventoryBatch",buttonText:this.get("intl").t("navigation.subnav.inventoryReceivedPlus"),class:"btn btn-primary"}]}),additionalModels:[{name:"aisleLocationList",findArgs:["lookup","aisle_location_list"]},{name:"expenseAccountList",findArgs:["lookup","expense_account_list"]},{name:"inventoryTypeList",findArgs:["lookup","inventory_types"]},{name:"inventoryUnitList",findArgs:["lookup","unit_types"]},{name:"warehouseList",findArgs:["lookup","warehouse_list"]},{name:"vendorList",findArgs:["lookup","vendor_list"]}],currentItem:null,moduleName:"inventory",newButtonText:"+ new request",sectionTitle:"Inventory",actions:{addPurchase:function(e){var t=this.get("currentItem")
t.get("purchases").addObject(e),this.newPurchaseAdded(t,e).then(function(){t.updateQuantity(),t.save().then(function(){this.send("closeModal")}.bind(this))}.bind(this))},newInventoryBatch:function(){this.currentUserCan(this.get("addCapability"))&&this.transitionTo("inventory.batch","new")},newRequest:function(){this.transitionTo("inventory.request","new")},allItems:function(){this.transitionTo("inventory.listing")},showAddPurchase:function(e){var t=this.get("store").createRecord("inv-purchase",{dateReceived:new Date,distributionUnit:e.get("distributionUnit"),inventoryItem:e.get("id")})
this.set("currentItem",e),this.send("openModal","inventory.purchase.edit",t)}}})}),define("hospitalrun/inventory/search/controller",["exports","hospitalrun/inventory/listing/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/inventory/search/route",["exports","hospitalrun/routes/abstract-search-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({moduleName:"inventory",searchKeys:[{name:"crossReference",type:"contains"},{name:"description",type:"fuzzy"},{name:"friendlyId",type:"contains"},{name:"name",type:"fuzzy"}],searchModel:"inventory"})}),define("hospitalrun/inventory/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"RQ2AFTqa",block:'{"symbols":[],"statements":[[4,"search-listing",null,[["newButtonText","allButtonText"],[[25,"t",["inventory.labels.newItem"],null],[25,"t",["inventory.labels.allInventory"],null]]],{"statements":[[0,"  "],[12,"inventory/listing",[]],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/inventory/search/template.hbs"}})}),define("hospitalrun/inventory/transfer/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({inventoryController:Ember.inject.controller("inventory"),warehouseList:Ember.computed.alias("inventoryController.warehouseList"),aisleLocationList:Ember.computed.alias("inventoryController.aisleLocationList"),lookupListsToUpdate:[{name:"aisleLocationList",property:"model.transferAisleLocation",id:"aisle_location_list"},{name:"warehouseList",property:"model.transferLocation",id:"warehouse_list"}],title:(0,n.t)("inventory.titles.transfer"),updateButtonText:(0,n.t)("inventory.labels.transfer"),updateButtonAction:"transfer",updateCapability:"adjust_inventory_location",actions:{cancel:function(){this.send("closeModal")},transfer:function(){this.updateLookupLists(),this.send("transferItems",this.get("model"),!0)}}})}),define("hospitalrun/inventory/transfer/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"oxX4H4cR",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.item"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","transferItem","name"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.transferFrom"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","locationName"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["inventory.labels.quantityAvailable"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","quantity"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","class","property","label","list","selection"],[[19,1,[]],[20,["model"]],"required test-transfer-location","transferLocation",[25,"t",["inventory.labels.transferTo"],null],[20,["warehouseList"]],[20,["model","transferLocation"]]]]],false],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection"],[[19,1,[]],[20,["model"]],"transferAisleLocation",[25,"t",["inventory.labels.transferToAisle"],null],[20,["aisleLocationList"]],[20,["model","transferAisleLocation"]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","class","property","label"],[[20,["model"]],"required test-adjustment-quantity col-sm-3","adjustmentQuantity",[25,"t",["labels.quantity"],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateCompleted",[25,"t",["inventory.labels.dateTransferred"],null],"col-sm-4 required"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/inventory/transfer/template.hbs"}})}),define("hospitalrun/invoices/add-line-item/controller",["exports","hospitalrun/mixins/billing-categories","hospitalrun/mixins/is-update-disabled"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,n.default,{invoiceController:Ember.inject.controller("invoices"),billingCategoryList:Ember.computed.alias("invoiceController.billingCategoryList"),editController:Ember.inject.controller("invoices/edit"),title:"Add Line Item",updateButtonText:"Add",updateButtonAction:"add",showUpdateButton:!0,actions:{cancel:function(){this.send("closeModal")},add:function(){this.get("model").save().then(function(e){this.get("editController").send("addLineItem",e)}.bind(this))}},billingCategories:Ember.computed("billingCategoryList","defaultBillingCategories",function(){var e=this.get("defaultBillingCategories"),t=this.get("billingCategoryList")
return Ember.isEmpty(t)?Ember.Object.create({value:e}):t})})}),define("hospitalrun/invoices/add-line-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Ni839dZf",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["name",[25,"t",["labels.name"],null],"required"]]],false],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","property","className","label","list","selection"],[[19,1,[]],[20,["model"]],"category","required",[25,"t",["labels.category"],null],[20,["billingCategories"]],[20,["model","category"]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/add-line-item/template.hbs"}})}),define("hospitalrun/invoices/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:"Delete Invoice"})}),define("hospitalrun/invoices/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hTLHo1W2",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[],"parameters":[1]},null],[0,"\\n  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","displayInvoiceNumber"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/delete/template.hbs"}})}),define("hospitalrun/invoices/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","moment","hospitalrun/mixins/number-format","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/publish-statuses","hospitalrun/utils/select-values","uuid"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,i.default,s.default,{invoiceController:Ember.inject.controller("invoices"),expenseAccountList:Ember.computed.alias("invoiceController.expenseAccountList.value"),patientList:Ember.computed.alias("invoiceController.patientList"),pharmacyCharges:[],pricingProfiles:Ember.computed.map("invoiceController.pricingProfiles",o.default.selectObjectMap),supplyCharges:[],updateCapability:"add_invoice",wardCharges:[],additionalButtons:Ember.computed("model.isValid","model.status",function(){var e=[],t=this.get("model.isValid"),n=this.get("model.status")
return t&&"Draft"===n&&e.push({class:"btn btn-default default",buttonAction:"finalizeInvoice",buttonIcon:"glyphicon glyphicon-ok",buttonText:"Invoice Ready"}),e.push({class:"btn btn-default neutral",buttonAction:"printInvoice",buttonIcon:"glyphicon glyphicon-print",buttonText:"Print"}),e}),canAddCharge:Ember.computed(function(){return this.currentUserCan("add_charge")}),canAddPayment:Ember.computed(function(){return this.currentUserCan("add_payment")}),pharmacyExpenseAccount:Ember.computed("expenseAccountList.value",function(){var e=this.get("expenseAccountList")
if(!Ember.isEmpty(e))return e.find(function(e){if(e.toLowerCase().indexOf("pharmacy")>-1)return!0})}),actions:{addItemCharge:function(e){var t=e.get("details"),n=this.store.createRecord("line-item-detail",{id:r.default.v4()})
t.addObject(n)},addLineItem:function(e){this.get("model.lineItems").addObject(e),this.send("update",!0),this.send("closeModal")},deleteCharge:function(e){this._deleteObject(e.itemToDelete,e.deleteFrom)},deleteLineItem:function(e){this._deleteObject(e.itemToDelete,this.get("model.lineItems"))},finalizeInvoice:function(){var e=this.get("model"),t=e.get("payments"),n=[]
e.get("patient.payments").then(function(a){a.forEach(function(a){var i=a.get("invoice")
Ember.isEmpty(i)&&(a.set("invoice",e),n.push(a.save()),t.addObject(a))}.bind(this)),Ember.RSVP.all(n).then(function(){this.set("model.status","Billed"),this.send("update")}.bind(this))}.bind(this))},printInvoice:function(){this.transitionToRoute("print.invoice",this.get("model"))},removePayment:function(e){var t=this.get("model.payments")
e.itemToRemove.set("invoice"),t.removeObject(e.itemToRemove),this.send("update",!0),this.send("closeModal")},showAddLineItem:function(){var e=this.store.createRecord("billing-line-item",{id:r.default.v4()})
this.send("openModal","invoices.add-line-item",e)},showDeleteItem:function(e,t){this.send("showDeleteModal",e,Ember.Object.create({confirmAction:"deleteCharge",deleteFrom:t,title:"Delete Charge"}))},showDeleteLineItem:function(e){this.send("showDeleteModal",e,Ember.Object.create({confirmAction:"deleteLineItem",title:"Delete Line Item"}))},showDeleteModal:function(e,t){t=Ember.merge(t,Ember.Object.create({message:"Are you sure you want to delete "+e.get("name")+"?",itemToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")})),this.send("openModal","dialog",t)},showRemovePayment:function(e){var t=Ember.Object.create({itemToRemove:e})
this.displayConfirm("Remove Payment","Are you sure you want to remove this payment from this invoice?","removePayment",t)},toggleDetails:function(e){e.toggleProperty("showDetails")}},changePaymentProfile:function(){var e=this.get("model.patient"),t=this.get("model.paymentProfile")
!Ember.isEmpty(e)&&Ember.isEmpty(t)&&this.set("model.paymentProfile",e.get("paymentProfile"))}.observes("model.patient"),paymentProfileChanged:function(){var e=this._getValidNumber(this.get("model.paymentProfile.discountPercentage")),t=this.get("model.originalPaymentProfileId"),n=this.get("model.paymentProfile.id")
n!==t&&(this.get("model.lineItems").forEach(function(t){var a=0
if(t.get("details").forEach(function(e){var t=e.get("pricingItem.pricingOverrides")
if(!Ember.isEmpty(t)){var a=t.findBy("profile.id",n)
Ember.isEmpty(a)||Ember.set(e,"price",a.get("price"))}}.bind(this)),e>0){var i=t.get("total")
a=this._numberFormat(e/100*i,!0),t.set("discount",a)}}.bind(this)),this.set("model.originalPaymentProfileId",n))}.observes("model.paymentProfile"),visitChanged:function(){var e=this.get("model.visit"),t=this.get("model.lineItems")
if(!Ember.isEmpty(e)&&Ember.isEmpty(t)){this.set("model.originalPaymentProfileId")
var n=this.resolveVisitChildren()
Ember.RSVP.allSettled(n,"Resolved visit children before generating invoice").then(function(t){var n=this._resolveVisitDescendents(t,"charges")
if(Ember.isEmpty(n))this._generateLineItems(e,t),this.paymentProfileChanged()
else{var a="Reloaded charges before generating invoice"
Ember.RSVP.allSettled(n,a).then(function(n){var i=[]
n.forEach(function(e){if(!Ember.isEmpty(e.value)){var t=e.value.get("pricingItem")
Ember.isEmpty(t)||i.push(t.reload())}}),a="Reloaded pricing items before generating invoice",Ember.RSVP.allSettled(i,a).then(function(){this._generateLineItems(e,t),this.paymentProfileChanged()}.bind(this))}.bind(this))}}.bind(this),function(e){console.log("Error resolving visit children",e)})}}.observes("model.visit"),_addPharmacyCharge:function(e,t){var n=this
return e.getMedicationDetails(t).then(function(t){var a=e.get("quantity"),i=n.get("pharmacyCharges"),s=n.get("pharmacyExpenseAccount"),o=n.store.createRecord("line-item-detail",{id:r.default.v4(),name:t.name,quantity:a,price:t.price,department:"Pharmacy",expenseAccount:s})
i.addObject(o)})},_addSupplyCharge:function(e,t){var n=this.get("supplyCharges"),a=this._createChargeItem(e,t)
n.addObject(a)},_createChargeItem:function(e,t){return this.store.createRecord("line-item-detail",{id:r.default.v4(),name:e.get("pricingItem.name"),expenseAccount:e.get("pricingItem.expenseAccount"),quantity:e.get("quantity"),price:e.get("pricingItem.price"),department:t,pricingItem:e.get("pricingItem")})},_deleteObject:function(e,t){t.removeObject(e),e.get("isNew")||e.destroyRecord(),this.send("update",!0),this.send("closeModal")},_mapWardCharge:function(e){return this._createChargeItem(e,"Ward")},_completeBeforeUpdate:function(e,t,n){var a,i="inv"
e.incrementProperty("value",1),i+=(a=e.get("value"))<1e5?String("00000"+a).slice(-5):a,this.set("model.id",i),e.save().then(t,n)},_generateLineItems:function(e,t){var a=this,i=e.get("endDate"),s=t[0].value,o=t[1].value,l=void 0,d=void 0,u=this.get("model.lineItems"),c=t[2].value,p=t[3].value,m=e.get("startDate"),f=e.get("charges")
if(this.setProperties({pharmacyCharges:[],supplyCharges:[],wardCharges:[]}),!Ember.isEmpty(i)&&!Ember.isEmpty(m)){i=(0,n.default)(i),m=(0,n.default)(m)
var h=i.diff(m,"days")
h>1&&(l=this.store.createRecord("line-item-detail",{id:r.default.v4(),name:"Days",quantity:h}),(d=this.store.createRecord("billing-line-item",{id:r.default.v4(),category:"Hospital Charges",name:"Room/Accomodation"})).get("details").addObject(l),u.addObject(d))}var g=[]
c.forEach(function(e){g.push(this._addPharmacyCharge(e,"inventoryItem"))}.bind(this)),this.set("wardCharges",f.map(this._mapWardCharge.bind(this))),p.forEach(function(e){e.get("charges").forEach(function(e){e.get("medicationCharge")?g.push(this._addPharmacyCharge(e,"medication")):this._addSupplyCharge(e,"O.R.")}.bind(this))}.bind(this)),o.forEach(function(e){Ember.isEmpty(e.get("labType"))||this._addSupplyCharge(Ember.Object.create({pricingItem:e.get("labType"),quantity:1}),"Lab"),e.get("charges").forEach(function(e){this._addSupplyCharge(e,"Lab")}.bind(this))}.bind(this)),s.forEach(function(e){Ember.isEmpty(e.get("imagingType"))||this._addSupplyCharge(Ember.Object.create({pricingItem:e.get("imagingType"),quantity:1}),"Imaging"),e.get("charges").forEach(function(e){this._addSupplyCharge(e,"Imaging")}.bind(this))}.bind(this)),Ember.RSVP.all(g).then(function(){(d=a.store.createRecord("billing-line-item",{id:r.default.v4(),name:"Pharmacy",category:"Hospital Charges"})).get("details").addObjects(a.get("pharmacyCharges")),u.addObject(d),(d=a.store.createRecord("billing-line-item",{id:r.default.v4(),name:"X-ray/Lab/Supplies",category:"Hospital Charges"})).get("details").addObjects(a.get("supplyCharges")),u.addObject(d),(d=a.store.createRecord("billing-line-item",{id:r.default.v4(),name:"Ward Items",category:"Hospital Charges"})).get("details").addObjects(a.get("wardCharges")),u.addObject(d),d=a.store.createRecord("billing-line-item",{id:r.default.v4(),name:"Physical Therapy",category:"Hospital Charges"}),u.addObject(d),d=a.store.createRecord("billing-line-item",{id:r.default.v4(),name:"Others/Misc",category:"Hospital Charges"}),u.addObject(d),a.send("update",!0)})},_resolveVisitDescendents:function(e,t){var n=[]
return e.forEach(function(e){Ember.isEmpty(e.value)||e.value.forEach(function(e){var a=e.get(t)
Ember.isEmpty(a)||a.forEach(function(e){n.push(e.reload())})})}),n},beforeUpdate:function(){return new Ember.RSVP.Promise(function(e,t){var n=this.get("model.lineItems"),a=[]
n.forEach(function(e){e.get("details").forEach(function(e){a.push(e.save())}.bind(this)),a.push(e.save())}.bind(this)),Ember.RSVP.all(a,"Saved invoice children before saving invoice").then(function(){this.get("model.isNew")?this.store.find("sequence","invoice").then(function(n){this._completeBeforeUpdate(n,e,t)}.bind(this),function(){var n=this.get("store"),a=n.push(n.normalize("sequence",{id:"invoice",value:0}))
this._completeBeforeUpdate(a,e,t)}.bind(this)):e()}.bind(this),t)}.bind(this))},afterUpdate:function(){this.displayAlert("Invoice Saved","The invoice record has been saved.")}})}),define("hospitalrun/invoices/edit/route",["exports","hospitalrun/routes/abstract-edit-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:"Edit Invoice",modelName:"invoice",newTitle:"New Invoice",actions:{deleteCharge:function(e){this.controller.send("deleteCharge",e)},deleteLineItem:function(e){this.controller.send("deleteLineItem",e)},removePayment:function(e){this.controller.send("removePayment",e)}},afterModel:function(e){return new Ember.RSVP.Promise(function(t,n){var a=e.get("lineItems"),i=[]
a.forEach(function(e){i.push(e.reload())}),Ember.RSVP.all(i,"Reload billing line items for invoice").then(function(e){var a=[]
e.forEach(function(e){e.get("details").forEach(function(e){a.push(e.reload())})}),Ember.RSVP.all(a,"Reload billing line item details for invoice").then(t,n)},n)})},getNewData:function(){return Ember.RSVP.resolve({billDate:new Date,status:"Draft"})},setupController:function(e,t){t.set("originalPaymentProfileId",t.get("paymentProfile.id")),this._super(e,t)
var n=t.get("lineItems"),a=[]
n.forEach(function(e){e.get("details").forEach(function(e){var t=e.get("pricingItem")
Ember.isEmpty(t)||a.push(t.reload())})})}})}),define("hospitalrun/invoices/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"heiI2BHs",block:'{"symbols":["payment","categoryGroup","item","detail","account","form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","returnTo","returnToContext","disablePatientLink","class"],[[20,["model","patient"]],"invoices.edit",[20,["model","id"]],[20,["model","isNew"]],"clickable"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-xs-2"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.invoiceId"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","id"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"billDate",[25,"t",["labels.billDate"],null],"col-xs-2"]]],false],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"        "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"col-xs-4 required invoice-patient"]]],false],[0,"\\n        "],[1,[25,"component",[[19,6,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","selected","prompt"],["col-xs-4 required form-input-group invoice-visit",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[20,["model","visit"]],"Please select a visit"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.visit"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visit","visitDescription"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,6,["input"]]],[["property","label","class"],["externalInvoiceNumber",[25,"t",["billing.labels.externalInvoiceNumber"],null],"col-xs-3 external-invoice-no"]]],false],[0,"\\n      "],[1,[25,"component",[[19,6,["select"]]],[["label","property","content","optionValuePath","optionLabelPath","class","prompt","selected"],[[25,"t",["billing.labels.paymentProfile"],null],"paymentProfile",[20,["pricingProfiles"]],"selectObject","selectObject.name","col-xs-3 form-input-group"," ",[20,["model","paymentProfile"]]]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[6]},null],[0,"  "],[6,"form"],[9,"class","form-inline"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n          "],[1,[25,"t",["labels.lineItems"],null],false],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddLineItem"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["buttons.addLineItem"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n        "],[6,"table"],[9,"class","table"],[7],[0,"\\n          "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n            "],[6,"th"],[9,"class","col-xs-5"],[7],[1,[25,"t",["labels.description"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["billing.labels.actualCharges"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["labels.discount"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["billing.labels.insurance"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["billing.labels.hmoCom"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["labels.excess"],null],false],[8],[0,"\\n            "],[6,"th"],[9,"class","col-xs-2 text-right"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"each",[[20,["model","lineItemsByCategory"]]],null,{"statements":[[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[9,"class","col-xs-12"],[7],[0,"\\n                "],[6,"strong"],[7],[1,[19,2,["category"]],false],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n"],[4,"each",[[19,2,["items"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[9,"class","col-xs-5"],[7],[0,"\\n                  "],[6,"div"],[9,"class","input-group"],[7],[0,"\\n                    "],[6,"span"],[10,"class",[26,["input-group-addon glyphicon\\n                      ",[25,"if",[[19,3,["showDetails"]],"glyphicon-minus","glyphicon-plus"],null]]]],[3,"action",[[19,0,[]],"toggleDetails",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"strong"],[7],[1,[25,"input",null,[["class","value"],["form-control item-name",[19,3,["name"]]]]],false],[8],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-1 text-right item-total"],[7],[0,"\\n                  "],[1,[25,"number-format",[[19,3,["total"]]],null],false],[0,"\\n                "],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                  "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                    "],[1,[25,"input",null,[["class","value"],["form-control text-right item-discount",[19,3,["discount"]]]]],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                  "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                    "],[1,[25,"input",null,[["class","value"],["form-control text-right item-national-insurance",[19,3,["nationalInsurance"]]]]],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                  "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                    "],[1,[25,"input",null,[["class","value"],["form-control text-right item-private-insurance",[19,3,["privateInsurance"]]]]],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-1 text-right item-amount-owed"],[7],[1,[25,"number-format",[[19,3,["amountOwed"]]],null],false],[8],[0,"\\n                "],[6,"td"],[9,"class","col-xs-2"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteLineItem",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                      "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n              "],[8],[0,"\\n"],[4,"if",[[19,3,["showDetails"]]],null,{"statements":[[0,"                "],[6,"tr"],[7],[0,"\\n                  "],[6,"th"],[9,"colspan","2"],[9,"class","col-xs-6"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n                  "],[6,"th"],[9,"class","col-xs-1"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n                  "],[6,"th"],[9,"class","col-xs-1"],[7],[1,[25,"t",["labels.price"],null],false],[8],[0,"\\n                  "],[6,"th"],[9,"class","col-xs-1"],[7],[1,[25,"t",["labels.expenseTo"],null],false],[8],[0,"\\n                  "],[6,"th"],[9,"class","col-xs-1 text-right"],[7],[1,[25,"t",["labels.total"],null],false],[8],[0,"\\n                  "],[6,"th"],[9,"class","col-xs-2"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"addItemCharge",[19,3,[]]]],[7],[0,"\\n                        "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["admin.roles.capability.addCharge"],null],false],[0,"\\n                      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                  "],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[19,3,["details"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[9,"colspan","2"],[9,"class","col-xs-6 input-group"],[7],[0,"\\n                      "],[1,[25,"input",null,[["class","value"],["form-control detail-name",[19,4,["name"]]]]],false],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                        "],[1,[25,"input",null,[["class","value"],["form-control detail-quantity",[19,4,["quantity"]]]]],false],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n                        "],[1,[25,"input",null,[["class","value"],["form-control detail-price",[19,4,["price"]]]]],false],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n                      "],[6,"div"],[9,"class","form-input-group"],[7],[0,"\\n                        "],[6,"select"],[9,"class","form-control"],[10,"onchange",[25,"action",[[19,0,[]],[25,"mut",[[19,4,["expenseAccount"]]],null]],[["value"],["target.value"]]],null],[7],[0,"\\n"],[4,"each",[[20,["expenseAccountList"]]],null,{"statements":[[0,"                            "],[6,"option"],[10,"value",[19,5,[]],null],[10,"selected",[25,"eq",[[19,4,["expenseAccount"]],[19,5,[]]],null],null],[7],[1,[19,5,[]],false],[8],[0,"\\n"]],"parameters":[5]},null],[0,"                        "],[8],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"td"],[9,"class","col-xs-1 text-right detail-amount-owed"],[7],[0,"\\n                      "],[1,[25,"number-format",[[19,4,["amountOwed"]]],null],false],[0,"\\n                    "],[8],[0,"\\n                    "],[6,"td"],[9,"class","col-xs-2"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteItem",[19,4,[]],[19,3,["details"]]],[["bubbles"],[false]]],[7],[0,"\\n                          "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[4]},null]],"parameters":[]},null]],"parameters":[3]},null],[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[7],[0,"\\n                "],[6,"strong"],[7],[1,[25,"t",["labels.total"],null],false],[0," "],[1,[19,2,["category"]],false],[8],[0,"\\n              "],[8],[0,"\\n              "],[6,"td"],[9,"class","text-right category-group-total"],[7],[1,[25,"number-format",[[19,2,["total"]]],null],false],[8],[0,"\\n              "],[6,"td"],[9,"class","text-right category-group-discount"],[7],[1,[25,"number-format",[[19,2,["discount"]]],null],false],[8],[0,"\\n              "],[6,"td"],[9,"class","text-right category-group-national-insurance"],[7],[1,[25,"number-format",[[19,2,["nationalInsurance"]]],null],false],[8],[0,"\\n              "],[6,"td"],[9,"class","text-right category-group-private-insurance"],[7],[1,[25,"number-format",[[19,2,["privateInsurance"]]],null],false],[8],[0,"\\n              "],[6,"td"],[9,"class","text-right category-group-amount-owed"],[7],[1,[25,"number-format",[[19,2,["amountOwed"]]],null],false],[8],[0,"\\n              "],[6,"td"],[7],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[6,"strong"],[7],[1,[25,"t",["labels.total"],null],false],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right total"],[7],[1,[25,"number-format",[[20,["model","total"]]],null],false],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right discount"],[7],[1,[25,"number-format",[[20,["model","discount"]]],null],false],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right national-insurance"],[7],[1,[25,"number-format",[[20,["model","nationalInsurance"]]],null],false],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right private-insurance"],[7],[1,[25,"number-format",[[20,["model","privateInsurance"]]],null],false],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right final-patient-responsibility"],[7],[1,[25,"number-format",[[20,["model","finalPatientResponsibility"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[8],[0,"\\n          "],[8],[0,"\\n          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[6,"strong"],[7],[1,[25,"t",["billing.labels.paymentsDeposits"],null],false],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"colspan","4"],[7],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right paid-total"],[7],[0,"-"],[1,[25,"number-format",[[20,["model","paidTotal"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[8],[0,"\\n          "],[8],[0,"\\n          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[6,"strong"],[7],[1,[25,"t",["labels.grandTotal"],null],false],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"colspan","4"],[7],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right remaining-balance"],[7],[1,[25,"number-format",[[20,["model","remainingBalance"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"if",[[20,["model","paymentProfile"]]],null,{"statements":[[4,"if",[[20,["model","paymentProfile","setFee"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[9,"colspan","6"],[7],[1,[25,"t",["billing.messages.flatFeeMsg"],[["currency","setFee"],[[25,"t",["labels.currencySymbol"],null],[20,["model","paymentProfile","setFee"]]]]],false],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["model","paymentProfile","discountAmount"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[9,"colspan","6"],[7],[1,[25,"t",["billing.messages.flatDiscountMsg"],[["currency","discountAmount"],[[25,"t",["labels.currencySymbol"],null],[20,["model","paymentProfile","discountAmount"]]]]],false],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n        "],[1,[25,"t",["labels.remarks"],null],false],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n      "],[1,[25,"textarea",null,[["class","value"],["form-control",[20,["model","remarks"]]]]],false],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n        "],[1,[25,"t",["labels.payments"],null],false],[0,"\\n"],[4,"if",[[20,["canAddPayment"]]],null,{"statements":[[0,"          "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPayment",[20,["model"]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["admin.roles.capability.addPayment"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.amount"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["model","payments"]]],null,{"statements":[[0,"          "],[6,"tr"],[3,"action",[[19,0,[]],"showEditPayment",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["datePaid"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["amount"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["paymentType"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["notes"]],false],[8],[0,"\\n"],[4,"if",[[20,["canAddPayment"]]],null,{"statements":[[0,"              "],[6,"td"],[7],[0,"\\n                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditPayment",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"],[4,"if",[[19,1,["canRemovePayment"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showRemovePayment",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.remove"],null],false],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/edit/template.hbs"}})}),define("hospitalrun/invoices/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addPermission:"add_invoice",deletePermission:"delete_invoice",isCashier:Ember.computed(function(){return"Cashier"===this.currentUserRole()}),canAddPayment:Ember.computed(function(){return this.currentUserCan("add_payment")}),startKey:[],queryParams:["startKey","status"],actions:{printInvoice:function(e){this.transitionToRoute("print.invoice",e)},reviewInvoice:function(e){this.transitionToRoute("invoices.review",e)}}})}),define("hospitalrun/invoices/index/route",["exports","hospitalrun/routes/abstract-index-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({modelName:"invoice",pageTitle:"Invoice Listing",_getStartKeyFromItem:function(e){var t=e.get("billDateAsTime"),n=this._getPouchIdFromItem(e)
return[e.get("status"),t,n]},_modelQueryParams:function(e){var t=void 0,n=this._getMaxPouchId(),a=this.get("maxValue"),i=this._getMinPouchId(),s=e.status
return Ember.isEmpty(s)&&(s="Billed"),this.set("pageTitle",s+" Invoices"),t={options:{startkey:[s,null,i],endkey:[s,a,n]},mapReduce:"invoice_by_status"},"All"===s&&(delete t.options.startkey,delete t.options.endkey),t},queryParams:{startKey:{refreshModel:!0},status:{refreshModel:!0}}})}),define("hospitalrun/invoices/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"GtghwD2q",block:'{"symbols":["invoice"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.number"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.billDate"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.total"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.balanceDue"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[9,"class","invoice-number"],[7],[1,[19,1,["displayInvoiceNumber"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["billDate"]]],null],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["patient","displayName"]],false],[0," - "],[1,[19,1,["patient","displayPatientId"]],false],[0," "],[6,"br"],[7],[8],[1,[19,1,["visit","primaryDiagnoses"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["total"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["remainingBalance"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"unless",[[19,1,["paidFlag"]]],null,{"statements":[[4,"if",[[20,["showActions"]]],null,{"statements":[[4,"if",[[20,["canAddPayment"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-primary btn-extra"],[3,"action",[[19,0,[]],"showAddPayment",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["admin.roles.capability.addPayment"],null],false],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["isCashier"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"printInvoice",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-file-text"],[7],[8],[0," "],[1,[25,"t",["buttons.print"],null],false],[8],[0,"\\n                  "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"reviewInvoice",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-eye"],[7],[8],[0," "],[1,[25,"t",["buttons.review"],null],false],[8],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[20,["canAdd"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["buttons.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}]],"parameters":[]},null]],"parameters":[]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["billing.alerts.noInvoiceFound"],null],false],[0," "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["billing.buttons.createInvoice"],null],false],[8],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/index/template.hbs"}})}),define("hospitalrun/invoices/payment/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/patient-submodule"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{cancelAction:"closeModal",findPatientVisits:!1,invoiceController:Ember.inject.controller("invoices"),newPayment:!1,expenseAccountList:Ember.computed.alias("invoiceController.expenseAccountList"),patientList:Ember.computed.alias("invoiceController.patientList"),_finishUpdate:function(e,t){this.send("closeModal"),this.displayAlert(t,e)},currentPatient:Ember.computed("model.isNew","model.paymentType","model.invoice.patient",function(){return"Deposit"===this.get("model.paymentType")?this.get("model.patient"):this.get("model.invoice.patient")}),title:Ember.computed("model.isNew","model.paymentType",function(){var e=this.get("model.isNew"),t=this.get("model.paymentType")
return e?"Add "+t:"Edit "+t}),selectPatient:Ember.computed("model.isNew","model.paymentType",function(){var e=this.get("model.isNew"),t=this.get("model.paymentType")
return e&&"Deposit"===t}),beforeUpdate:function(){this.get("model.isNew")?this.set("newPayment",!0):this.set("newPayment",!1)
var e=this.get("currentPatient")
return this.set("model.charityPatient","Charity"===e.get("patientType")),Ember.RSVP.resolve()},afterUpdate:function(){this.get("model").save().then(function(e){if(!0===this.get("newPayment")){var t=this.get("currentPatient")
t.get("payments").then(function(n){n.addObject(e),t.save().then(function(){if("Deposit"===e.get("paymentType")){var n="A deposit of "+e.get("amount")+" was added for patient "+t.get("displayName")
this._finishUpdate(n,"Deposit Added")}else{var a=this.get("model.invoice")
a.addPayment(e),a.save().then(function(){var t="A payment of "+e.get("amount")+" was added to invoice "+a.get("id")
this._finishUpdate(t,"Payment Added")}.bind(this))}}.bind(this))}.bind(this))}else this.send("closeModal")}.bind(this))}})}),define("hospitalrun/invoices/payment/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Jce38Bsp",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText","updateButtonClass"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]],"update-payment-btn"]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","isNew"]]],null,{"statements":[[4,"if",[[20,["selectPatient"]]],null,{"statements":[[0,"        "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"required payment-patient"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","invoice","patient","displayName"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[0,"    "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"amount",[25,"t",["labels.amount"],null],"required payment-amount"]]],false],[0,"\\n    "],[1,[25,"date-picker",null,[["model","property","label","maxDate","class"],[[20,["model"]],"datePaid",[25,"t",["labels.datePaid"],null],"now","required"]]],false],[0,"\\n    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["labels.creditTo"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]]]]],false],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","form"],["notes",[25,"t",["labels.notes"],null],[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/payment/template.hbs"}})}),define("hospitalrun/invoices/review/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"kNPf/mwu",block:'{"symbols":["categoryGroup","item"],"statements":[[6,"div"],[9,"class","panel panel-primary invoices-review"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[6,"h5"],[9,"class","text-center"],[7],[0,"\\n      "],[1,[25,"t",["print.invoice.titles.patients"],null],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"h5"],[9,"class","text-center"],[7],[0,"\\n      "],[1,[25,"t",["print.invoice.titles.billingStatement"],null],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"table"],[7],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"colspan","2"],[9,"class","col-xs-8"],[7],[0,"\\n          "],[1,[25,"t",["print.invoice.labels.patientName"],null],false],[0," "],[1,[20,["model","patient","displayName"]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-4"],[7],[0,"\\n          "],[1,[25,"t",["print.invoice.labels.patientId"],null],false],[0," "],[1,[20,["model","patient","displayPatientId"]],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-5"],[7],[0,"\\n          "],[1,[25,"t",["print.invoice.labels.patientAge"],null],false],[0," "],[1,[20,["model","patient","age"]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-3"],[7],[0,"\\n          "],[1,[25,"t",["print.invoice.labels.dateAdmitted"],null],false],[1,[25,"date-format",[[20,["model","visit","startDate"]]],null],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-4"],[7],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-5"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-3"],[7],[1,[25,"t",["print.invoice.labels.dateDischarged"],null],false],[1,[25,"date-format",[[20,["model","visit","endDate"]]],null],false],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-4"],[7],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"colspan","3"],[9,"class","col-xs-12"],[7],[0,"\\n          "],[1,[25,"t",["print.invoice.labels.patientAddress"],null],false],[0," "],[1,[20,["model","patient","displayAddress"]],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.description"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","text-right"],[7],[1,[25,"t",["billing.labels.actualCharges"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","text-right"],[7],[1,[25,"t",["labels.discount"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","text-right"],[7],[1,[25,"t",["billing.labels.insurance"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","text-right"],[7],[1,[25,"t",["billing.labels.hmoCom"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","text-right"],[7],[1,[25,"t",["labels.excess"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model","lineItemsByCategory"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[9,"colspan","6"],[7],[0,"\\n            "],[6,"strong"],[7],[1,[19,1,["category"]],false],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[19,1,["items"]]],null,{"statements":[[0,"          "],[6,"tr"],[7],[0,"\\n            "],[6,"td"],[7],[0,"\\n              "],[1,[19,2,["name"]],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right"],[7],[0,"\\n              "],[1,[25,"number-format",[[19,2,["total"]]],null],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right"],[7],[0,"\\n              "],[1,[25,"number-format",[[19,2,["discount"]]],null],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right"],[7],[0,"\\n              "],[1,[25,"number-format",[[19,2,["nationalInsurance"]]],null],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right"],[7],[0,"\\n              "],[1,[25,"number-format",[[19,2,["privateInsurance"]]],null],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"td"],[9,"class","text-right"],[7],[1,[25,"number-format",[[19,2,["amountOwed"]]],null],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[7],[6,"strong"],[7],[1,[25,"t",["labels.total"],null],false],[0," "],[1,[19,1,["category"]],false],[8],[8],[0,"\\n          "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[19,1,["total"]]],null],false],[8],[8],[0,"\\n          "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[19,1,["discount"]]],null],false],[8],[8],[0,"\\n          "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[19,1,["nationalInsurance"]]],null],false],[8],[8],[0,"\\n          "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[19,1,["privateInsurance"]]],null],false],[8],[8],[0,"\\n          "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[19,1,["amountOwed"]]],null],false],[8],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[7],[6,"strong"],[7],[1,[25,"t",["labels.total"],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","total"]]],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","discount"]]],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","nationalInsurance"]]],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","privateInsurance"]]],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","amountOwed"]]],null],false],[8],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[7],[6,"strong"],[7],[1,[25,"t",["billing.labels.paymentsDeposits"],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"colspan","4"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[0,"-"],[1,[25,"number-format",[[20,["model","paidTotal"]]],null],false],[8],[0,"\\n        "],[6,"td"],[7],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[7],[6,"strong"],[7],[1,[25,"t",["labels.grandTotal"],null],false],[8],[8],[0,"\\n        "],[6,"td"],[9,"colspan","4"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","text-right"],[7],[6,"strong"],[7],[1,[25,"number-format",[[20,["model","remainingBalance"]]],null],false],[8],[8],[0,"\\n        "],[6,"td"],[7],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"table"],[7],[0,"\\n"],[4,"if",[[20,["model","visit","dischargeInfo"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[9,"class","col-xs-12"],[7],[0,"\\n            "],[1,[25,"t",["print.invoice.labels.dischargeNotes"],null],false],[0," "],[1,[20,["model","visit","dischargeInfo"]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["model","remarks"]]],null,{"statements":[[0,"        "],[6,"tr"],[7],[0,"\\n          "],[6,"td"],[9,"class","col-xs-12"],[7],[0,"\\n            "],[1,[25,"t",["print.invoice.labels.remarks"],null],false],[0," "],[1,[20,["model","remarks"]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-7"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-5"],[7],[1,[25,"t",["print.invoice.messages.whereConducted"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-8"],[7],[1,[25,"t",["print.invoice.labels.billedBy"],null],false],[0," "],[1,[20,["model","modifiedBy"]],false],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-4"],[7],[1,[25,"t",["print.invoice.labels.spacer"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-8"],[7],[1,[25,"t",["print.invoice.labels.billedDate"],null],false],[0," "],[1,[25,"date-format",[[20,["model","billDate"]]],null],false],[8],[0,"\\n        "],[6,"td"],[9,"class","text-center col-xs-4"],[7],[1,[25,"t",["print.invoice.titles.patientMember"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-8"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","col-xs-4"],[7],[1,[25,"t",["print.invoice.labels.spacer"],null],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","col-xs-8"],[7],[8],[0,"\\n        "],[6,"td"],[9,"class","text-center col-xs-4"],[7],[1,[25,"t",["print.invoice.titles.relContact"],null],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n    "],[4,"link-to",["invoices.index"],[["class"],["btn btn-default warning"]],{"statements":[[1,[25,"t",["buttons.returnButton"],null],false]],"parameters":[]},null],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/invoices/review/template.hbs"}})}),define("hospitalrun/invoices/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/mixins/modal-helper","hospitalrun/mixins/patient-list-route","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{addCapability:"add_invoice",currentScreenTitle:(0,i.t)("billing.currentScreenTitle"),editTitle:(0,i.t)("billing.editInvoice"),newTitle:(0,i.t)("billing.newInvoice"),moduleName:"invoices",newButtonText:(0,i.t)("billing.buttons.newInvoice"),sectionTitle:(0,i.t)("billing.invoiceTitle"),additionalButtons:Ember.computed(function(){if(this.currentUserCan("add_payment"))return[{class:"btn btn-default",buttonText:this.get("intl").t("billing.buttons.addDeposit"),buttonAction:"showAddDeposit"}]}),additionalModels:[{name:"billingCategoryList",findArgs:["lookup","billing_categories"]},{name:"expenseAccountList",findArgs:["lookup","expense_account_list"]},{name:"pricingProfiles",findArgs:["price-profile"]}],actions:{showAddDeposit:function(){var e=this.store.createRecord("payment",{paymentType:"Deposit",datePaid:new Date})
this.send("openModal","invoices.payment",e)},showAddPayment:function(e){var t=this.store.createRecord("payment",{invoice:e,paymentType:"Payment",datePaid:new Date})
this.send("openModal","invoices.payment",t)},showEditPayment:function(e){this.currentUserCan("add_payment")&&this.send("openModal","invoices.payment",e)}},subActions:Ember.computed(function(){var e=[{text:this.get("intl").t("billing.navigation.billed"),linkTo:"invoices.index",statusQuery:"Billed"}]
return this.currentUserCan("add_invoice")&&(e.push({text:this.get("intl").t("billing.navigation.drafts"),linkTo:"invoices.index",statusQuery:"Draft"}),e.push({text:this.get("intl").t("billing.navigation.allInvoices"),linkTo:"invoices.index",statusQuery:"All"})),this.currentUserCan("list_paid_invoices")&&e.push({text:this.get("intl").t("billing.navigation.paid"),linkTo:"invoices.index",statusQuery:"Paid"}),e})})}),define("hospitalrun/invoices/search/route",["exports","hospitalrun/routes/abstract-search-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({moduleName:"invoices",searchKeys:[{name:"externalInvoiceNumber",type:"contains"},{name:"patientInfo",type:"contains"}],searchModel:"invoice"})})
define("hospitalrun/invoices/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hP7+8xgD",block:'{"symbols":[],"statements":[[4,"search-listing",null,[["newButtonText","allButtonText"],["New Invoice","All Invoices"]],{"statements":[[0,"  "],[12,"invoices/index",[]],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/invoices/search/template.hbs"}})}),define("hospitalrun/labs/completed/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({startKey:[],showActions:!1})}),define("hospitalrun/labs/completed/labs-completed-list-item/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"tr",classNames:["clickable"],click:function(){this.sendAction("action",this.lab)}})}),define("hospitalrun/labs/completed/labs-completed-list-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Lz5/RFpt",block:'{"symbols":[],"statements":[[6,"td"],[9,"class","requested-date"],[7],[1,[25,"date-format",[[20,["lab","requestedDate"]]],null],false],[8],[0,"\\n"],[6,"td"],[9,"class","lab-date"],[7],[1,[25,"date-format",[[20,["lab","labDate"]]],null],false],[8],[0,"\\n"],[6,"td"],[9,"class","patient"],[7],[1,[20,["lab","patient","displayName"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","requested-by"],[7],[1,[20,["lab","requestedBy"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","lab-type"],[7],[1,[20,["lab","labType","name"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","result"],[7],[1,[20,["lab","result"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","notes"],[7],[1,[20,["lab","notes"]],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/completed/labs-completed-list-item/template.hbs"}})}),define("hospitalrun/labs/completed/route",["exports","hospitalrun/labs/index/route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({pageTitle:(0,n.t)("labs.completedTitle"),searchStatus:"Completed"})}),define("hospitalrun/labs/completed/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"YTuXGnCW",block:'{"symbols":["lab"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["model"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.dateCompleted"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labs.labels.labType"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.results"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[1,[25,"labs/completed/labs-completed-list-item",null,[["lab","action"],[[19,1,[]],"editItem"]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["labs.messages.noCompleted"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/completed/template.hbs"}})}),define("hospitalrun/labs/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/mixins/patient-submodule","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{title:(0,a.t)("labs.deleteTitle"),actions:{delete:function(){this.deleteChildFromVisit("labs")}}})}),define("hospitalrun/labs/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"1rZl1FO5",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.lab.request.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/delete/template.hbs"}})}),define("hospitalrun/labs/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/charge-actions","hospitalrun/mixins/patient-submodule"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.LAB_STATUS_COMPLETED=void 0
var i=e.LAB_STATUS_COMPLETED="Completed"
e.default=t.default.extend(n.default,a.default,{labsController:Ember.inject.controller("labs"),chargePricingCategory:"Lab",selectedLabType:null,canComplete:Ember.computed("selectedLabType.[]","model.labTypeName","isCompleted",function(){var e=this.get("model.isNew"),t=this.get("model.labTypeName"),n=this.get("selectedLabType"),a=this.get("isCompleted")
return(!e||!(Ember.isEmpty(t)||Ember.isArray(n)&&n.length>1))&&(this.currentUserCan("complete_lab")&&!a)}),actions:{completeLab:function(){this.set("model.status",i),this.get("model").validate().then(function(){this.get("model.isValid")&&(this.set("model.labDate",new Date),this.send("update"))}.bind(this)).catch(function(){})},update:function(){if(this.get("model.isNew")){var e=this.get("model"),t=this.get("selectedLabType")
Ember.isEmpty(this.get("model.status"))&&this.set("model.status","Requested"),this.set("model.requestedBy",e.getUserName()),this.set("model.requestedDate",new Date),Ember.isEmpty(t)?this.saveNewPricing(this.get("model.labTypeName"),"Lab","model.labType").then(function(){this.addChildToVisit(e,"labs","Lab").then(function(){this.saveModel()}.bind(this))}.bind(this)):this.getSelectedPricing("selectedLabType").then(function(t){Ember.isArray(t)?this.createMultipleRequests(t,"labType","labs","Lab"):(this.set("model.labType",t),this.addChildToVisit(e,"labs","Lab").then(function(){this.saveModel()}.bind(this)))}.bind(this))}else this.saveModel()}},additionalButtons:Ember.computed("canComplete","model.isValid",function(){var e=this.get("canComplete"),t=this.get("model.isValid"),n=this.get("intl")
if(t&&e)return[{buttonAction:"completeLab",buttonIcon:"glyphicon glyphicon-ok",class:"btn btn-primary on-white",buttonText:n.t("buttons.complete")}]}),pricingTypes:Ember.computed.alias("labsController.labPricingTypes"),pricingList:null,updateCapability:"add_lab",afterUpdate:function(e,t){var n=this.get("intl"),a=void 0,s=void 0,o=void 0
this.get("model.status")===i?(o=n.t("labs.alerts.requestCompletedTitle"),s=n.t("labs.alerts.requestCompletedMessage")):(o=n.t("labs.alerts.requestSavedTitle"),s=n.t("labs.alerts.requestSavedMessage")),t&&(a=this.get("cancelAction")),this.saveVisitIfNeeded(o,s,a),this.set("model.selectPatient",!1)},isCompleted:Ember.computed("model.status",function(){return this.get("model.status")===i}),showUpdateButton:Ember.computed("isCompleted",function(){return!this.get("isCompleted")&&this._super()})})}),define("hospitalrun/labs/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","hospitalrun/mixins/charge-route","moment","hospitalrun/mixins/patient-list-route","hospitalrun/macro"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,s.default,{editTitle:(0,o.t)("labs.editTitle"),modelName:"lab",newTitle:(0,o.t)("labs.newTitle"),pricingCategory:"Lab",customForms:Ember.inject.service(),actions:{returnToAllItems:function(){this.controller.send("returnToAllItems")},allItems:function(){this.controller.get("isCompleted")?this.transitionTo("labs.completed"):this.transitionTo("labs.index")}},getNewData:function(){var e={selectPatient:!0,requestDate:(0,i.default)().startOf("day").toDate(),customForms:Ember.Object.create()}
return this.get("customForms").setDefaultCustomForms(["lab"],e)}})}),define("hospitalrun/labs/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"jv+8Zvbu",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","selectPatient"]]],null,{"statements":[[0,"      "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"required test-patient-name"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","returnTo","returnToContext","disablePatientLink","class"],[[20,["model","patient"]],"labs.edit",[20,["model","id"]],[20,["model","isNew"]],"clickable"]]],false],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","prompt","selected"],["col-xs-3 required form-input-group test-visit-type",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[25,"t",["labs.labels.addNewVisit"],null],[20,["model","visit"]]]]],false],[0,"\\n      "],[8],[0,"\\n      "],[1,[25,"checkbox-or-typeahead",null,[["property","label","list","selection","optionLabelPath","typeAheadType","className","prompt","model"],["labTypeName",[25,"t",["labs.labels.labType"],null],[20,["objectTypeList"]],[20,["selectedLabType"]],"name","pricing","required test-lab-type"," ",[20,["model"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.visit"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visit","visitDate"]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-6"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labs.labels.labType"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","labType","name"]],false],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-9"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","requestedBy"]],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["canComplete"]]],null,{"statements":[[0,"      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["result",[25,"t",["labels.result"],null],"test-result-input"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[20,["isCompleted"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n            "],[6,"label"],[7],[1,[25,"t",["labels.result"],null],false],[8],[0,"\\n            "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","result"]],false],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"\\n"],[4,"if",[[20,["isCompleted"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","notes"]],false],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"expand-text",null,[["property","label","rows","form","class"],["notes",[25,"t",["labels.notes"],null],3,[19,1,[]],"js-lab-notes"]]],false],[0,"\\n"]],"parameters":[]}],[0,"    "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm","isReadonly"],[[20,["model"]],"lab",[19,1,[]],[20,["isCompleted"]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/edit/template.hbs"}})}),define("hospitalrun/labs/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{startKey:[],addPermission:"add_lab"})}),define("hospitalrun/labs/index/labs-edit-button/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"button",classNames:["btn","btn-default","neutral"]})}),define("hospitalrun/labs/index/labs-edit-button/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"1JgsNSkU",block:'{"symbols":[],"statements":[[4,"link-to",["labs.edit",[20,["lab"]]],null,{"statements":[[1,[25,"t",["labels.edit"],null],false]],"parameters":[]},null],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/index/labs-edit-button/template.hbs"}})}),define("hospitalrun/labs/index/labs-list-item/component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({tagName:"tr",classNames:["clickable"],click:function(){this.sendAction("action",this.lab)}})}),define("hospitalrun/labs/index/labs-list-item/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"8PYeq/mr",block:'{"symbols":[],"statements":[[6,"td"],[9,"class","requested-date"],[7],[1,[25,"date-format",[[20,["lab","requestedDate"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n"],[6,"td"],[9,"class","patient"],[7],[1,[20,["lab","patient","displayName"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","requested-by"],[7],[1,[20,["lab","requestedBy"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","lab-type"],[7],[1,[20,["lab","labType","name"]],false],[8],[0,"\\n"],[6,"td"],[9,"class","notes"],[7],[1,[20,["lab","notes"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"  "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"      "],[1,[25,"labs/index/labs-edit-button",null,[["lab"],[[20,["lab"]]]]],false],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/index/labs-list-item/template.hbs"}})}),define("hospitalrun/labs/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({modelName:"lab",pageTitle:(0,n.t)("labs.requestsTitle"),searchStatus:"Requested",_getStartKeyFromItem:function(e){var t=e.get("labDateAsTime"),n=this._getPouchIdFromItem(e),a=e.get("requestedDateAsTime")
return[this.get("searchStatus"),a,t,n]},_modelQueryParams:function(){var e=this._getMaxPouchId(),t=this.get("maxValue"),n=this._getMinPouchId(),a=this.get("searchStatus")
return{options:{startkey:[a,null,null,n],endkey:[a,t,t,e]},mapReduce:"lab_by_status"}}})}),define("hospitalrun/labs/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hRL40Lac",block:'{"symbols":["lab"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labs.labels.labType"],null],false],[8],[0,"\\n        "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[9,"class","col-xs-2"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[1,[25,"labs/index/labs-list-item",null,[["lab","action","showActions","canEdit"],[[19,1,[]],"editItem",[20,["showActions"]],[20,["canEdit"]]]]],false],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["labs.messages.noItemsFound"],null],false],[0," "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["labs.messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/labs/index/template.hbs"}})}),define("hospitalrun/labs/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addCapability:"add_lab",additionalModels:[{name:"labPricingTypes",findArgs:["lookup","lab_pricing_types"]}],allowSearch:!1,moduleName:"labs",newButtonText:(0,n.t)("labs.buttons.newButton"),sectionTitle:(0,n.t)("labs.sectionTitle")})}),define("hospitalrun/macro",["exports","ember-macro-helpers","ember-intl"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.t=void 0
e.t=function(){return(0,t.writable)(n.translationMacro.apply(void 0,arguments))}}),define("hospitalrun/medication/completed/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({showActions:!1,startKey:[]})}),define("hospitalrun/medication/completed/route",["exports","hospitalrun/macro","hospitalrun/medication/index/route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({modelName:"medication",pageTitle:Ember.computed("intl.locale",function(){return(0,t.t)("medication.titles.completedMedication")}),searchStatus:"Fulfilled"})}),define("hospitalrun/medication/completed/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"B7IQDEGN",block:'{"symbols":[],"statements":[[12,"medication/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/medication/completed/template.hbs"}})}),define("hospitalrun/medication/delete/controller",["exports","hospitalrun/macro","hospitalrun/controllers/abstract-delete-controller","hospitalrun/mixins/patient-submodule"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(a.default,{title:(0,t.t)("labels.delete_request"),actions:{delete:function(){this.deleteChildFromVisit("medication")}}})}),define("hospitalrun/medication/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"kPIGgsXM",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.medication.request.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/medication/delete/template.hbs"}})}),define("hospitalrun/medication/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/add-new-patient","hospitalrun/mixins/fulfill-request","hospitalrun/mixins/inventory-locations","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/user-session"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,s.default,o.default,{medicationController:Ember.inject.controller("medication"),expenseAccountList:Ember.computed.alias("medicationController.expenseAccountList"),canFulfill:Ember.computed(function(){return this.currentUserCan("fulfill_medication")}),isFulfilled:Ember.computed("model.status",function(){return"Fulfilled"===this.get("model.status")}),isFulfilling:Ember.computed("canFulfill","model.isRequested","model.shouldFulfillRequest",function(){var e=this.get("canFulfill"),t=this.get("model.isRequested"),n=this.get("model.shouldFulfillRequest"),a=e&&(t||n)
return this.get("model").set("isFulfilling",a),a}),isFulfilledOrRequested:Ember.computed("isFulfilled","model.isRequested",function(){return this.get("isFulfilled")||this.get("model.isRequested")}),prescriptionClass:Ember.computed("model.quantity",function(){var e=this.get("model.quantity")
if(Ember.isEmpty(e))return"required test-medication-prescription"}),quantityClass:Ember.computed("isFulfilling","model.prescription",function(){var e=this.get("model.prescription"),t="col-xs-3"
return(this.get("isFulfilling")||Ember.isEmpty(e))&&(t+=" required"),t+" test-quantity-input"}),quantityLabel:Ember.computed("isFulfilled",function(){var e=this.get("intl"),t=e.t("medication.labels.quantityRequested"),n=this.get("isFulfilled")
return this.get("isFulfilling")?t=e.t("medication.labels.quantityDispensed"):n&&(t=e.t("medication.labels.quantityDistributed")),t}),medicationList:[],updateCapability:"add_medication",afterUpdate:function(){var e=this.get("intl"),t=void 0,n=void 0
this.get("isFulfilled")?(t=e.t("medication.alerts.fulfilledTitle"),n="The medication request has been fulfilled.",this.set("model.selectPatient",!1)):(t=e.t("medication.alerts.savedTitle"),n=e.t("medication.alerts.savedMessage")),this.saveVisitIfNeeded(t,n)},beforeUpdate:function(){var e=this.get("isFulfilling"),t=this.get("model.isNew")
return t||e?new Ember.RSVP.Promise(function(n,a){var i=this.get("model")
i.validate().then(function(){i.get("isValid")?t?Ember.isEmpty(i.get("patient"))?(this.addNewPatient(),a({ignore:!0,message:"creating new patient first"})):(i.set("medicationTitle",i.get("inventoryItem.name")),i.set("priceOfMedication",i.get("inventoryItem.price")),i.set("status","Requested"),i.set("requestedBy",i.getUserName()),i.set("requestedDate",new Date),this.addChildToVisit(i,"medication","Pharmacy").then(function(){this.finishBeforeUpdate(e,n)}.bind(this),a)):this.finishBeforeUpdate(e,n):(this.send("showDisabledDialog"),a("invalid model"))}.bind(this)).catch(function(){this.send("showDisabledDialog"),a("invalid model")}.bind(this))}.bind(this)):Ember.RSVP.resolve()},finishBeforeUpdate:function(e,t){if(e){var n=this.get("model.inventoryLocations"),a=this.get("store").createRecord("inv-request",{expenseAccount:this.get("model.expenseAccount"),dateCompleted:new Date,inventoryItem:this.get("model.inventoryItem"),inventoryLocations:n,quantity:this.get("model.quantity"),transactionType:"Fulfillment",patient:this.get("model.patient"),markAsConsumed:!0})
this.performFulfillRequest(a,!1,!1,!0).then(function(){this.set("model.status","Fulfilled"),t()}.bind(this))}else t()},showUpdateButton:Ember.computed("updateCapability","isFulfilled",function(){return!this.get("isFulfilled")&&this._super()}),updateButtonText:Ember.computed("model.isNew","isFulfilling","model.hideFulfillRequest",function(){var e=this.get("intl")
return this.get("model.hideFulfillRequest")?e.t("buttons.dispense"):this.get("isFulfilling")?e.t("labels.fulfill"):this._super()})})}),define("hospitalrun/medication/edit/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","hospitalrun/mixins/fulfill-request","hospitalrun/mixins/inventory-locations","moment","hospitalrun/mixins/patient-list-route","uuid"],function(e,t,n,a,i,s,o,r,l){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(a.default,i.default,s.default,r.default,{editTitle:(0,t.t)("medication.titles.editMedicationRequest"),modelName:"medication",newTitle:(0,t.t)("medication.titles.newMedicationRequest"),database:Ember.inject.service(),getNewData:function(e){var t=this.get("idParam"),n={selectPatient:!0,prescriptionDate:(0,o.default)().startOf("day").toDate()}
return"dispense"===e[t]&&(n.shouldFulfillRequest=!0,n.hideFulfillRequest=!0),n.id=l.default.v4(),Ember.RSVP.resolve(n)},model:function(e){var t=this.get("idParam"),n=this._super(e)
return!Ember.isEmpty(t)&&"new"===e[t]||"dispense"===e[t]?Ember.isEmpty(e.forPatientId)?Ember.isEmpty(e.forVisitId)?this._createNewRecord(e):this._setVisitOnModel(n,e.forVisitId):this._setPatientOnModel(n,e.forPatientId):this._super(e)},setupController:function(e,t){this._super(e,t)
var n=t.get("inventoryItem.id"),a=t.get("patient")
Ember.isEmpty(n)&&this.get("database").queryMainDB({key:"Medication",include_docs:!0},"inventory_by_type").then(function(t){var n=t.rows.map(function(e){return e.doc})
e.set("medicationList",n)}),Ember.isEmpty(a)&&this._fetchPatientList(e)}})}),define("hospitalrun/medication/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"uaG0HAYn",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"unless",[[20,["model","selectPatient"]]],null,{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","returnTo","returnToContext","disablePatientLink","class"],[[20,["model","patient"]],"medication.edit",[20,["model","id"]],[20,["model","isNew"]],"clickable"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["model","selectPatient"]]],null,{"statements":[[0,"        "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"col-xs-6 required test-patient-input"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"        "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","prompt","selected"],["col-xs-4 required form-input-group test-add-visit",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[25,"t",["labels.addNewOutpatientVisit"],null],[20,["model","visit"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","form-group col-xs-3"],[7],[0,"\\n          "],[6,"label"],[7],[1,[25,"t",["labels.visit"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visit","visitDescription"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[8],[0,"\\n"],[4,"if",[[20,["isFulfilledOrRequested"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.medication"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","medicationName"]],false],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"inventory-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"inventoryItemTypeAhead",[25,"t",["labels.medication"],null],[20,["medicationList"]],[20,["selectedInventoryItem"]],"required test-medication-input"]]],false],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["isFulfilledOrRequested"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.prescriber"],null],false],[8],[0,"\\n        "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","requestedBy"]],false],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["isFulfilled"]]],null,{"statements":[[0,"      "],[1,[25,"static-text",null,[["label","value"],[[25,"t",["labels.prescription"],null],[20,["model","prescription"]]]]],false],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"static-text",null,[["label","class"],[[25,"t",["labels.prescriptionDate"],null],"col-xs-4"]],{"statements":[[0,"          "],[1,[25,"date-format",[[20,["model","prescriptionDate"]]],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[1,[25,"static-text",null,[["label","class","value"],[[20,["quantityLabel"]],"col-xs-3",[20,["model","quantity"]]]]],false],[0,"\\n        "],[1,[25,"static-text",null,[["label","class","value"],[[25,"t",["medication.labels.refills"],null],"col-xs-3",[20,["model","refills"]]]]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"expand-text",null,[["property","label","rows","class","form"],["prescription",[25,"t",["labels.prescription"],null],"3",[20,["prescriptionClass"]],[19,1,[]]]]],false],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"prescriptionDate",[25,"t",["labels.prescriptionDate"],null],"col-sm-4"]]],false],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","row"],[7],[0,"\\n        "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"quantity",[20,["quantityLabel"]],[20,["quantityClass"]]]]],false],[0,"\\n        "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["refills",[25,"t",["medication.labels.refills"],null],"col-xs-3"]]],false],[0,"\\n      "],[8],[0,"\\n"],[4,"unless",[[20,["model","hideFulfillRequest"]]],null,{"statements":[[4,"if",[[20,["model","isNew"]]],null,{"statements":[[4,"if",[[20,["canFulfill"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n              "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.fulfillRequest"],null],false],[8],[0,"\\n            "],[8],[0,"\\n            "],[1,[25,"component",[[19,1,["checkbox"]]],[["label","property"],[[25,"t",["labels.fulfillRequestNow"],null],"shouldFulfillRequest"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"parameters":[]},null],[4,"if",[[20,["isFulfilling"]]],null,{"statements":[[0,"        "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["labels.billTo"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]]]]],false],[0,"\\n        "],[1,[25,"inventory-location-picker",null,[["form","label","quantityRequested","locationList","selectedLocations","class"],[[19,1,[]],[25,"t",["labels.pullFrom"],null],[20,["model","quantity"]],[20,["model","inventoryItem","availableLocations"]],[20,["model","inventoryLocations"]],"inventory-location"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/medication/edit/template.hbs"}})}),define("hospitalrun/medication/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{startKey:[],canAdd:Ember.computed(function(){return this.currentUserCan("add_medication")}),showActions:Ember.computed(function(){return this.currentUserCan("fulfill_medication")})})}),define("hospitalrun/medication/index/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-index-route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({modelName:"medication",pageTitle:Ember.computed("intl.locale",function(){return(0,t.t)("medication.pageTitle")}),searchStatus:"Requested",_getStartKeyFromItem:function(e){var t=e.get("prescriptionDateAsTime"),n=this._getPouchIdFromItem(e),a=e.get("requestedDateAsTime")
return[this.get("searchStatus"),a,t,n]},_modelQueryParams:function(){var e=this._getMaxPouchId(),t=this.get("maxValue"),n=this._getMinPouchId(),a=this.get("searchStatus")
return{options:{startkey:[a,null,null,n],endkey:[a,t,t,e]},mapReduce:"medication_by_status"}}})})
define("hospitalrun/medication/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"nTxxgELr",block:'{"symbols":["medicationRequest"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["model"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.patient"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.prescriber"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.medication"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["prescriptionDate"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["patient","displayName"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["medicationName"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["quantity"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[0,"\\n              "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.fulfill"],null],false],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["messages.noItemsFound"],null],false],[0," "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["medication.messages.createNew"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/medication/index/template.hbs"}})}),define("hospitalrun/medication/return/controller",["exports","hospitalrun/macro","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/fulfill-request","hospitalrun/mixins/inventory-locations","hospitalrun/mixins/patient-submodule","hospitalrun/utils/select-values"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(a.default,i.default,s.default,{medicationController:Ember.inject.controller("medication"),medicationList:[],lookupListsToUpdate:[{name:"aisleLocationList",property:"model.aisleLocation",id:"aisle_location_list"},{name:"expenseAccountList",property:"model.expenseAccount",id:"expense_account_list"},{name:"warehouseList",property:"model.location",id:"warehouse_list"}],patientMedicationList:[],setNewMedicationList:!1,aisleLocationList:Ember.computed.alias("medicationController.aisleLocationList"),expenseAccountList:Ember.computed.alias("medicationController.expenseAccountList"),warehouseList:Ember.computed.alias("medicationController.warehouseList"),updateCapability:"add_medication",medicationChanged:function(){var e=this.get("model.medication")
if(Ember.isEmpty(e))this.set("model.inventoryItem")
else{var t=e.get("inventoryItem")
this.set("model.inventoryItemTypeAhead",t.get("name")+" - "+t.get("friendlyId")),this.set("model.inventoryItem",t)}Ember.run.later(function(){this.get("model").validate().catch(function(){})}.bind(this))}.observes("model.medication"),patientVisitsChanged:function(){var e=this.get("patientVisits")
Ember.isEmpty(e)||this.set("model.visit",e.get("firstObject"))}.observes("patientVisits"),showPatientMedicationList:Ember.computed("patientMedicationList","model.patient","model.visit",function(){var e=this.get("patientMedicationList")
return this.get("patientMedication"),!Ember.isEmpty(e)}),patientMedication:Ember.computed("setNewMedicationList","model.patient","model.visit",function(){var e=this.get("setNewMedicationList"),t=this.get("model.visit")
return e?this.set("setNewMedicationList",!1):Ember.isEmpty(t)||t.get("medication").then(function(e){e=e.filterBy("status","Fulfilled"),this.set("model.medication",e.get("firstObject")),this.set("patientMedicationList",e.map(o.default.selectObjectMap)),this.set("setNewMedicationList",!0)}.bind(this)),this.get("patientMedicationList")}),_finishUpdate:function(){var e=this.get("model.deliveryAisle"),t=this.get("model.deliveryLocation"),n=this.get("model.inventoryItem")
this._findOrCreateLocation(n,t,e).then(function(e){this.set("model.adjustPurchases",!0),this.set("model.inventoryLocations",[e]),this.set("model.markAsConsumed",!0),this.get("model.inventoryItem").then(function(){this.send("fulfillRequest",this.get("model"),!1,!0,!0)}.bind(this))}.bind(this))},actions:{doneFulfillRequest:function(){var e=this.get("intl")
this.updateLookupLists(),this.displayAlert(e.t("medication.alerts.returnedTitle"),e.t("medication.alerts.returnedMessage"),"allItems")},update:function(){var e=this.get("model.medication"),t=this.get("model.quantity")
Ember.isEmpty(e)?this._finishUpdate():e.reload().then(function(){e.decrementProperty("quantity",t),e.get("quantity")<0&&e.set("quantity",0),e.save().then(this._finishUpdate.bind(this))}.bind(this))}},updateButtonText:(0,t.t)("medication.returnMedication")})}),define("hospitalrun/medication/return/route",["exports","hospitalrun/macro","hospitalrun/medication/edit/route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({editTitle:(0,t.t)("medication.returnMedication"),modelName:"inv-request",newTitle:(0,t.t)("medication.returnMedication"),getNewData:function(){return Ember.RSVP.resolve({dateCompleted:new Date,selectPatient:!0,transactionType:"Return"})}})}),define("hospitalrun/medication/return/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"NkoYGTMI",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["showPatientMedicationList"]]],null,{"statements":[[0,"      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","selected"],["required form-input-group",[25,"t",["labels.medication"],null],"medication",[20,["patientMedication"]],"selectObject","selectObject.inventoryItem.name",[20,["model","medication"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"inventory-typeahead",null,[["model","property","label","content","selection","class","showQuantity"],[[20,["model"]],"inventoryItemTypeAhead",[25,"t",["labels.medication"],null],[20,["medicationList"]],[20,["selectedInventoryItem"]],"required test-medication-input",false]]],false],[0,"\\n"]],"parameters":[]}],[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["labels.patient"],null],[20,["patientList"]],[20,["selectedPatient"]],"col-xs-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","selected"],["col-xs-6 form-input-group",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[20,["model","visit"]]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"quantity",[25,"t",["medication.labels.quantityToReturn"],null],"col-xs-3 required test-medication-quantity"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"deliveryLocation",[25,"t",["medication.labels.returnLocation"],null],[20,["warehouseList"]],[20,["model","location"]],"col-xs-4"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"deliveryAisle",[25,"t",["medication.labels.returnAisle"],null],[20,["aisleLocationList"]],[20,["model","aisleLocation"]],"col-xs-4"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","rows","form"],["reason",[25,"t",["medication.labels.returnReason"],null],"3",[19,1,[]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateCompleted",[25,"t",["medication.labels.adjustmentDate"],null],"col-sm-4"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["medication.labels.creditToAccount"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]],"col-sm-8"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/medication/return/template.hbs"}})}),define("hospitalrun/medication/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-module-route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({addCapability:"add_medication",moduleName:"medication",newButtonText:(0,t.t)("medication.buttons.newButton"),sectionTitle:(0,t.t)("medication.sectionTitle"),additionalButtons:Ember.computed(function(){var e=this.get("intl"),t=[]
if(this.currentUserCan("fulfill_medication")&&t.push({buttonIcon:"octicon octicon-checklist",buttonAction:"dispenseMedication",buttonText:e.t("medication.buttons.dispenseMedication"),class:"btn btn-primary"}),this.currentUserCan(this.get("addCapability"))&&t.push({buttonIcon:"octicon octicon-mail-reply",buttonAction:"returnMedication",buttonText:e.t("medication.buttons.returnMedication"),class:"btn btn-primary"}),!Ember.isEmpty(t))return t}),additionalModels:[{name:"aisleLocationList",findArgs:["lookup","aisle_location_list"]},{name:"expenseAccountList",findArgs:["lookup","expense_account_list"]},{name:"sexList",findArgs:["lookup","sex"]},{name:"warehouseList",findArgs:["lookup","warehouse_list"]}],actions:{dispenseMedication:function(){this.currentUserCan("fulfill_medication")&&this.transitionTo("medication.edit","dispense")},returnMedication:function(){this.currentUserCan(this.get("addCapability"))&&this.transitionTo("medication.return","new")}}})}),define("hospitalrun/medication/search/route",["exports","hospitalrun/routes/abstract-search-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({moduleName:"medication",searchKeys:[{name:"medicationTitle",type:"fuzzy"},{name:"prescription",type:"contains"},{name:"requestedBy",type:"contains"}],searchModel:"medication"})}),define("hospitalrun/medication/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"sWVQVw83",block:'{"symbols":[],"statements":[[4,"search-listing",null,[["newButtonText","allButtonText"],[[25,"t",["buttons.newRequest"],null],[25,"t",["buttons.allRequests"],null]]],{"statements":[[0,"  "],[12,"medication/index",[]],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/medication/search/template.hbs"}})}),define("hospitalrun/mixins/active-link",["exports","ember-cli-active-link-wrapper/mixins/active-link"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/mixins/add-new-patient",["exports","hospitalrun/mixins/patient-id"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create(t.default,{customForms:Ember.inject.service(),addedNewPatient:!1,newPatientId:null,actions:{addedNewPatient:function(e){this.send("closeModal"),this.set("addedNewPatient",!0),this.set("model.patient",e),this.set("newPatientId"),this.send("update")}},addNewPatient:function(){var e=this,t=this.get("intl")
this.displayAlert(t.t("alerts.pleaseWait"),t.t("messages.newPatientHasToBeCreated")),this._getNewPatientId().then(function(t){var n=e.get("model.patientTypeAhead"),a=n.split(" "),i={customForms:Ember.Object.create(),friendlyId:t,patientFullName:n,requestingController:e}
return e.get("customForms").setDefaultCustomForms(["patient","socialwork"],i).then(function(){var t
a.length>=3?(i.firstName=a[0],i.middleName=a[1],i.lastName=a.splice(2,a.length).join(" ")):2===a.length?(i.firstName=a[0],i.lastName=a[1]):i.firstName=n,t=e.store.createRecord("patient",i),e.send("openModal","patients.quick-add",t)})})},_getNewPatientId:function(){var e=this.get("newPatientId")
return Ember.isEmpty(e)?new Ember.RSVP.Promise(function(e,t){this.generateFriendlyId("patient").then(function(t){this.set("newPatientId",t),e(t)}.bind(this),t)}.bind(this)):Ember.RSVP.resolve(e)}})}),define("hospitalrun/mixins/add-to-patient-route",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({queryParams:{forPatientId:{refreshModel:!1},forVisitId:{refreshModel:!1}},model:function(e){var t=Ember.get(this,"idParam"),n=this._super(e)
return"new"===e[t]?Ember.isEmpty(e.forPatientId)?Ember.isEmpty(e.forVisitId)?this._createNewRecord(e):this._setVisitOnModel(n,e.forVisitId):this._setPatientOnModel(n,e.forPatientId):n},_setPatientOnModel:function(e,t){var n=Ember.get(this,"store")
return e.then(function(e){return n.find("patient",t).then(function(n){return e.set("patient",n),e.set("returnToPatient",t),e.set("selectPatient",!1),e})})},_setVisitOnModel:function(e,t){var n=Ember.get(this,"store")
return e.then(function(e){return n.find("visit",t).then(function(n){return e.set("visit",n),e.set("returnToVisit",t),e.set("selectPatient",!1),e.set("patient",n.get("patient")),e})})}})}),define("hospitalrun/mixins/allergy-actions",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({openAllergyModal:function(e){Ember.set(e,"editController",this),this.send("openModal","allergy.edit",e)},savePatientAllergy:function(e,t){var n=this
Ember.get(e,"allergies").pushObject(t),e.save().then(function(){n.silentUpdate("closeModal")})},deletePatientAllergy:function(e,t){var n=this,a=Ember.get(e,"allergies")
t.destroyRecord().then(function(){a.removeObject(t),e.save().then(function(){n.send("closeModal")})})},actions:{editAllergy:function(e){this.openAllergyModal(e)},showAddAllergy:function(){var e=Ember.get(this,"store").createRecord("allergy")
this.openAllergyModal(e)}}})}),define("hospitalrun/mixins/appointment-statuses",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({appointmentStatusList:["Attended","Scheduled","Canceled","Missed"],appointmentStatuses:Ember.computed.map("appointmentStatusList",t.default.selectValuesMap),appointmentStatusesWithEmpty:Ember.computed(function(){return t.default.selectValues(this.get("appointmentStatusList"),!0)})})}),define("hospitalrun/mixins/billing-categories",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({defaultBillingCategories:["Hospital Charges"]})}),define("hospitalrun/mixins/blood-types",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({bloodTypes:["A+","A1+ (A1 +ve)","A-","A1- (A1 −ve)","A1B+ (A1B +ve)","A1B- (A1B −ve)","AB+","AB1+ (AB1 +ve)","AB1- (AB1 -ve)","AB-","A2+ (A2 +ve)","A2- (A2 −ve)","A2B+ (A2B +ve)","A2B- (A2B −ve)","AB2+ (AB2 +ve)","AB2- (AB1 +ve)","B+","B+ (B +ve)","B-","B- (B −ve)","B1+ (B1 +ve)","O+","O+ (O +ve)","O- (O −ve)","O-"].map(t.default.selectValuesMap)})}),define("hospitalrun/mixins/can-edit-requested",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({canEdit:Ember.computed("status",function(){return"Requested"===this.get("status")})})}),define("hospitalrun/mixins/charge-actions",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({chargePricingCategory:null,pricingList:null,pricingTypeForObjectType:null,pricingTypes:null,_createNewChargeRecord:function(e,t){return new Ember.RSVP.Promise(function(n,a){this.store.find("pricing",t).then(function(t){this.store.createRecord("proc-charge",{dateCharged:new Date,quantity:e,pricingItem:t}).save().then(function(e){this.get("model.charges").addObject(e),n()}.bind(this),a)}.bind(this),a)}.bind(this),"_createNewChargeRecord with pricingId:"+t)},actions:{addCharge:function(e){this.get("model.charges").addObject(e)
var t="addCharge_"+e.get("id")
e.get("medicationCharge")&&(t="addMedication_"+e.get("id")),this.silentUpdate("closeModal",t)},deleteCharge:function(e){var t=this,n=e.get("chargeToDelete")
this.get("model.charges").removeObject(n),n.destroyRecord().then(function(){t.silentUpdate("closeModal","deleteCharge")})},showAddCharge:function(){var e=this.get("store").createRecord("proc-charge",{dateCharged:new Date,quantity:1,pricingCategory:this.get("chargePricingCategory")})
this.send("openModal",this.get("chargeRoute"),e)},showEditCharge:function(e){e.set("itemName",e.get("pricingItem.name")),e.set("pricingCategory",this.get("chargePricingCategory")),this.send("openModal",this.get("chargeRoute"),e)},showDeleteCharge:function(e){this.send("openModal","dialog",Ember.Object.create({closeModalOnConfirm:!1,confirmAction:"deleteCharge",title:"Delete Charge Item",message:"Are you sure you want to delete this charged item?",chargeToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},setChargeQuantity:function(e,t){this.get("model").set(e,t)}},canAddCharge:Ember.computed(function(){return this.currentUserCan("add_charge")}),chargeRoute:null,findChargeForPricingItem:function(e,t){return t.find(function(t){var n=t.get("pricingItem.id")
return e.id===n})},objectTypeList:Ember.computed("pricingList","pricingTypeForObjectType","pricingTypeValues",function(){var e=this.get("pricingList"),t=this.get("userCanAddPricingTypes"),n=Ember.Object.create({value:[],userCanAdd:t})
return Ember.isEmpty(e)||n.set("value",e),n}),organizeByType:Ember.computed.alias("pricingTypes.organizeByType"),pricingTypeList:Ember.computed("pricingTypeValues","pricingTypeForObjectType","pricingList",function(){var e=this.get("pricingList"),t=this.get("pricingTypeValues"),n=this.get("pricingTypeForObjectType")
if(!Ember.isEmpty(t))return t=(t=t.filter(function(t){var a=!1
return Ember.isEmpty(e)||(a=!Ember.isEmpty(e.findBy("pricingType",t))),a&&t!==n})).sortBy("name")}),pricingTypeValues:Ember.computed.alias("pricingTypes.value"),createMultipleRequests:function(e,t,n,a){var i=e.get("firstObject"),s=this.get("model")
s.set(t,i),this.addChildToVisit(s,n,a).then(function(i){s.save().then(function(){this._finishCreateMultipleRequests(e,t,n,a,i)}.bind(this))}.bind(this))},_finishCreateMultipleRequests:function(e,t,n,a,i){var s={},o=this.get("model"),r=void 0,l=[],d=this.get("model.patient"),u=[]
o.eachAttribute(function(e){s[e]=o.get(e)}),e.forEach(function(e,n){n>0&&((r=this.store.createRecord(a.toLowerCase(),s)).set(t,e),r.set("patient",d),r.set("visit",i),l.push(r),u.push(r.save()))}.bind(this)),Ember.RSVP.all(u).then(function(){var e=[]
l.forEach(function(t){e.push(this.addChildToVisit(t,n,a))}.bind(this)),Ember.RSVP.all(e).then(function(e){this.afterUpdate(e,!0)}.bind(this))}.bind(this))},saveNewPricing:function(e,t,n){return new Ember.RSVP.Promise(function(a,i){var s=void 0,o=this.get("pricingTypeForObjectType");(s=this.store.createRecord("pricing",{name:e,category:t,pricingType:o})).save().then(function(e){this.get("pricingList").addObject({id:e.get("id"),name:s.get("name")}),this.set(n,s),a()}.bind(this),i)}.bind(this),"saveNewPricing for: "+e)},getSelectedPricing:function(e){var t=this.get(e)
return Ember.isEmpty(t)?Ember.RSVP.resolve():new Ember.RSVP.Promise(function(e,n){Ember.isArray(t)?this.store.findByIds("pricing",t).then(e,n):this.store.find("pricing",t.id).then(e,n)}.bind(this))},showAddCharge:Ember.computed("canAddCharge","organizeByType",function(){var e=this.get("canAddCharge"),t=this.get("organizeByType")
return!!e&&!t}),showEditCharges:Ember.computed("canAddCharge","organizeByType",function(){var e=this.get("canAddCharge"),t=this.get("organizeByType")
return!!e&&t}),showPricingTypeTabs:Ember.computed("pricingTypeList",function(){var e=this.get("pricingTypeList")
return!Ember.isEmpty(e)&&e.get("length")>1}),userCanAddPricingTypes:Ember.computed("pricingTypes",function(){var e=this.get("pricingTypes")
return!!Ember.isEmpty(e)||e.get("userCanAdd")}),updateCharges:function(){return this.get("organizeByType")?new Ember.RSVP.Promise(function(e,t){var n=this.get("model.charges"),a=[],i=this.get("model")
this.get("pricingList").forEach(function(e){var t=this.findChargeForPricingItem(e,i.get("charges")),s=i.get(e.id)
Ember.isEmpty(s)?t&&(n.removeObject(t),a.push(t.destroyRecord())):t?t.get("quantity")!==s&&(t.set("quantity",s),a.push(t.save())):a.push(this._createNewChargeRecord(s,e.id))}.bind(this)),Ember.RSVP.all(a,"Charges updated for current record: "+this.get("model.id")).then(e,t)}.bind(this),"updateCharges for current record: "+this.get("model.id")):Ember.RSVP.resolve()}})}),define("hospitalrun/mixins/charge-route",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({database:Ember.inject.service(),actions:{deleteCharge:function(e){this.controller.send("deleteCharge",e)}},pricingList:null,afterModel:function(){return new Ember.RSVP.Promise(function(e,t){var n=this.get("database"),a=n.getMaxPouchId("pricing"),i=n.getMinPouchId("pricing"),s=this.get("pricingCategory"),o={startkey:[s,null,null,i],endkey:[s,{},{},a],include_docs:!0}
n.queryMainDB(o,"pricing_by_category").then(function(t){var n=t.rows.map(function(e){return e.doc})
this.set("pricingList",n),e()}.bind(this)).catch(t)}.bind(this))},setupController:function(e,t){this._super(e,t),e.set("pricingList",this.get("pricingList"))}})}),define("hospitalrun/mixins/check-for-errors",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_checkForErrors:function(e){var t=this
return new Ember.RSVP.Promise(function(n,a){e.then(n,function(e){var n=Ember.get(t,"database")
a(n.handleErrorResponse(e))})})}})}),define("hospitalrun/mixins/custom-field-types",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({fieldTypeValues:["checkbox","radio","select","text","textarea"],fieldTypes:Ember.computed(function(){var e=this.get("intl")
return this.get("fieldTypeValues").map(function(t){return{id:t,value:e.t("admin.customForms.labels."+t)}}).sort(function(e,t){return Ember.compare(e.value.toString(),t.value.toString())})})})}),define("hospitalrun/mixins/custom-form-manager",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({customForms:Ember.inject.service(),formType:null,formsForType:null,openModalAction:"openModal",formsForSelect:Ember.computed("formsForType","usedForms",function(){var e=this.get("formsForType"),t=this.get("usedForms")
if(!Ember.isEmpty(e)){var n=e.filter(function(e){return!t.includes(e.get("id"))})
return n=n.map(function(e){return{id:e.get("id"),value:e.get("name")}})}}),formsToDisplay:Ember.computed("formsForType","model.customForms",function(){var e=this.get("formsForType"),t=this.get("model.customForms")
if(!Ember.isEmpty(t)&&!Ember.isEmpty(e))return Object.keys(t).map(function(t){return{form:e.findBy("id",t),propertyPrefix:"customForms."+t+"."}})}),showAddButton:Ember.computed("formsForSelect",function(){var e=this.get("formsForSelect")
return!Ember.isEmpty(e)}),usedForms:Ember.computed("model.customForms",function(){var e=this.get("model.customForms")
return Ember.isEmpty(e)?[]:Object.keys(e)}),initFormsForType:function(){var e=this,t=this.get("customForms"),n=this.get("formType")
t.getCustomForms([n]).then(function(t){e.isDestroyed||e.set("formsForType",t)})}})}),define("hospitalrun/mixins/date-format",["exports","moment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_dateFormat:function(e,n){if(Ember.isEmpty(n)&&(n="l"),!Ember.isEmpty(e))return(0,t.default)(e).format(n)},dateToTime:function(e){if(!Ember.isEmpty(e)&&e.getTime)return e.getTime()}})}),define("hospitalrun/mixins/diagnosis-actions",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({editDiagnosis:function(e){e.set("editController",this),this.send("openModal","diagnosis.edit",e)},actions:{deleteDiagnosis:function(e){var t=this
this.get("model.diagnoses").removeObject(e),e.set("archived",!0),e.save().then(function(){t.silentUpdate("closeModal")})},editDiagnosis:function(e){this.editDiagnosis(e)},showAddDiagnosis:function(){var e=this.get("store").createRecord("diagnosis",{date:new Date})
this.editDiagnosis(e)}}})}),define("hospitalrun/mixins/dob-days",["exports","moment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({convertDOBToText:function(e,n,a){var i=new Date,s=0,o=0,r=0
e&&(void 0===e.getFullYear&&(e=(0,t.default)(e,"LLL").toDate()),e.setHours(0,0,0,0),i.setHours(0,0,0,0),void 0!==e.getFullYear&&(s=i.getFullYear()-e.getFullYear(),(i.getMonth()<e.getMonth()||i.getMonth()===e.getMonth()&&i.getDate()<e.getDate())&&s--),e.getMonth&&(o=i.getMonth()-e.getMonth(),r=i.getDate()-e.getDate(),o<=0?r<0?o+=11:o<0&&(o+=12):r<0&&(o-=1)),e.getDate&&(r=i.getDate()-e.getDate())<0&&(r+=30))
var l={years:s,days:r,months:o},d=this.get("intl")
return n?s>0?d.t("dates.short",l):d.t("dates.shortOmitYears",l):a?s>1?d.t("dates.longOmitDaysPlural",l):1===s?d.t("dates.longOmitDays",l):d.t("dates.longOmitDaysYears",l):s>1?d.t("dates.longPlural",l):1===s?d.t("dates.long",l):d.t("dates.longOmitYears",l)}})}),define("hospitalrun/mixins/edit-panel-props",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=["actionForUpdateButton","additionalButtons","cancelButtonText","disabledAction","hideCancelButton","showUpdateButton","updateButtonAction","updateButtonIcon","updateButtonText"]
e.default=Ember.Mixin.create({additionalButtons:null,cancelButtonText:null,disabledAction:null,hideCancelButton:null,showUpdateButton:null,updateButtonAction:null,updateButtonIcon:null,updateButtonText:null,actionForUpdateButton:Ember.computed("disabledAction",function(){var e=this.get("disabledAction")
return Ember.isEmpty(e)||!1===e?"updateButtonAction":"disabledAction"}),editPanelProps:Ember.computed.apply(void 0,t.concat([function(){return this.getProperties(t)}]))})}),define("hospitalrun/mixins/filter-list",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({filterBy:null,filterValue:null,filteredBy:new Ember.Map,sortByDesc:null,sortByKey:null,filterList:function(e,t,n){var a=Ember.get(this,"filteredBy")
return Ember.isEmpty(t)&&Ember.isEmpty(a)?e:(Ember.isEmpty(t)||a.set(t,n),this.set("filteredBy",a),e.filter(function(e){var t=!0
return a.forEach(function(n,a){var i=e.get(a)
Ember.isEmpty(n)||(Ember.String.isHTMLSafe(n)?n=n.toString():n instanceof Date&&(n=n.getTime()),Ember.String.isHTMLSafe(i)?i=i.toString():i instanceof Date&&(i=i.getTime()),i!==n&&(t=!1))}),t}))},sortFilteredList:function(e){var t=Ember.get(this,"sortByDesc"),n=Ember.get(this,"sortByKey")
return Ember.isEmpty(e)||Ember.isEmpty(n)?e:e=e.toArray().sort(function(e,a){var i=e.get(n),s=a.get(n)
return"orderType"===n&&(i=i.toString(),s=s.toString()),t?Ember.compare(s,i):Ember.compare(i,s)})},actions:{filter:function(e,t){Ember.set(this,"filterBy",e),Ember.set(this,"filterValue",t)},sortByKey:function(e,t){this.setProperties({sortByDesc:t,sortByKey:e})}}})}),define("hospitalrun/mixins/friendly-id",["exports"],function(e){function t(e,t){return t<1e5&&(t=("00000"+t).slice(-5)),""+e+t}Object.defineProperty(e,"__esModule",{value:!0}),e.sequenceId=t,e.default=Ember.Mixin.create({database:Ember.inject.service(),sequenceName:null,sequenceView:null,generateFriendlyId:function(e){var t=this,n=Ember.get(this,"sequenceName")
return this.sequencePrefix().then(function(a){return t.store.find("sequence",n).then(function(n){return t._findUnusedId(n,a,e)}).catch(function(){var i=t.get("store")
return i.push(i.normalize("sequence",{id:n,value:1,prefix:a})).save().then(function(n){return t._findUnusedId(n,a,e)})})})},sequencePrefix:function(){var e=this,t=Ember.get(this,"sequenceName")
return this.store.find("sequence",t).then(function(e){return Ember.get(e,"prefix")}).catch(function(){var n=t
return n.indexOf("_")>-1&&(n=n.substr(n.indexOf("_")+1)),e._findNextPrefix(n,0)})},_findNextPrefix:function(e,t){var n=this
return t++,this._findSequenceByPrefix(e,t).then(function(a){return Ember.isEmpty(a.rows)?e.toLowerCase().substr(0,t):n._findNextSequence(e,t)}).catch(function(){return t})},_findSequenceByPrefix:function(e,t){var n=this.get("database"),a={key:e.toLowerCase().substr(0,t)}
return n.queryMainDB(a,"sequence_by_prefix")},_findUnusedId:function(e,n,a){var i,s,o=this,r=Ember.get(this,"database"),l=r.getMaxPouchId(a),d=Ember.get(this,"sequenceView")
i=e.get("value")
var u={startkey:[s=t(n,i),null],endkey:[s,l]}
return r.queryMainDB(u,d).then(function(t){return Ember.isEmpty(t.rows)?e.get("hasDirtyAttributes")?e.save().then(function(){return s}):s:(e.incrementProperty("value"),o._findUnusedId(e,n,a))})}})}),define("hospitalrun/mixins/fulfill-request",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({actions:{doneFulfillRequest:function(){},fulfillRequest:function(e,t,n,a){this.performFulfillRequest(e,t,n,a)}},performFulfillRequest:function(e,t,n,a){return new Ember.RSVP.Promise(function(i,s){var o=e.get("markAsConsumed"),r=e.get("transactionType")
"Request"===r&&(r=null),e.get("inventoryItem").then(function(l){o?(e.set("adjustPurchases",!0),Ember.isEmpty(r)&&e.set("transactionType","Fulfillment"),this._performFulfillment(e,l,n).then(function(){this._finishFulfillRequest(e,l,t,n,a),i()}.bind(this),s)):(e.set("adjustPurchases",!1),Ember.isEmpty(r)&&e.set("transactionType","Transfer"),this._finishFulfillRequest(e,l,t,n,a),i())}.bind(this),s)}.bind(this))},_findQuantity:function(e,t,n,a){var i=void 0,s=[],o=n.get("quantity"),r=parseInt(e.get("quantity")),l=r,d=[],u=0
if(a){var c=t.get("lastObject")
i=c.get("costPerUnit"),c.incrementProperty("currentQuantity",r),u+=i*l,d.push({id:c.get("id"),quantity:r}),s.addObject(c)}else{if(!t.any(function(e){var t=e.get("currentQuantity")
return!(e.get("expired")||t<=0)&&(i=e.get("costPerUnit"),!!a||(l>t?(u+=i*t,l-=t,d.push({id:e.get("id"),quantity:parseInt(t)}),t=0):(u+=i*l,t-=l,d.push({id:e.get("id"),quantity:parseInt(l)}),l=0),e.set("currentQuantity",t),s.addObject(e),0===l))}))return"Could not find any purchases that had the required quantity: "+r}return e.set("costPerUnit",(u/r).toFixed(2)),e.set("quantityAtCompletion",o),e.set("purchasesAffected",d),e.set("purchases",s),n.updateQuantity(),!0},_finishFulfillRequest:function(e,t,n,a,i){var s=e.get("inventoryLocations"),o=[],r=e.get("markAsConsumed"),l=[],d=parseInt(e.get("quantity")),u=e.get("purchases")
if(a){var c=s.get("firstObject")
c.incrementProperty("quantity",d),l.push(c.save()),o.push({name:c.get("locationName"),quantity:d})}else s.reduce(function(n,a){var i=e.get("deliveryLocation"),s=e.get("deliveryAisle"),d=parseInt(a.get("quantity"))
if(n>0)return r||(a.set("transferAisleLocation",s),a.set("transferLocation",i)),d>=n?(r?(a.decrementProperty("quantity",n),l.push(a.save())):(a.set("adjustmentQuantity",n),l.push(this.transferToLocation(t,a))),o.push({name:a.get("locationName"),quantity:n}),0):(r?(a.decrementProperty("quantity",d),l.push(a.save())):(a.set("adjustmentQuantity",d),l.push(this.transferToLocation(t,a))),o.push({name:a.get("locationName"),quantity:d}),n-d)}.bind(this),d)
e.set("locationsAffected",o),r&&u.forEach(function(e){l.push(e.save())}),Ember.RSVP.all(l,"Preliminary saving done for inventory fulfillment").then(function(){var a=[]
a.push(t.save()),e.set("status","Completed"),e.set("completedBy",e.getUserName()),a.push(e.save()),Ember.RSVP.all(a,"All saving done for inventory fulfillment").then(function(){this.send("doneFulfillRequest"),n&&this.send("closeModal"),i||this.transitionTo("inventory.index")}.bind(this))}.bind(this))},_performFulfillment:function(e,t,n){return new Ember.RSVP.Promise(function(a,i){var s=t.get("purchases"),o=t.get("quantity"),r=e.get("quantity")
if(n||o>=r){var l=this._findQuantity(e,s,t,n)
!0===l?a():i(l)}else i("The quantity on hand, "+o+" is less than the requested quantity of "+r+".")}.bind(this))}})}),define("hospitalrun/mixins/hospitalrun-version",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({version:"1.0.0-beta"})}),define("hospitalrun/mixins/incident-statuses",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=e.ACTIVE="Active",n=e.CLOSED="Closed",a=e.FOLLOW_UP="Followup",i=e.REPORTED="Reported"
e.default=Ember.Mixin.create({statusList:[t,n,a,i],getLocalizedStatus:function(e){return Ember.get(this,"intl").t("incident.labels.status"+e)}})}),define("hospitalrun/mixins/inventory-adjustment-types",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({intl:Ember.inject.service(),adjustmentTypes:Ember.computed(function(){var e=this.get("intl")
return[{name:e.t("inventory.labels.addAdjustmentType").toString(),type:"Adjustment (Add)"},{name:e.t("inventory.labels.removeAdjustmentType").toString(),type:"Adjustment (Remove)"},{name:e.t("inventory.labels.returnToVendorAdjustmentType").toString(),type:"Return To Vendor"},{name:e.t("inventory.labels.returnAdjustmentType").toString(),type:"Return"},{name:e.t("inventory.labels.writeOffAdjustmentType").toString(),type:"Write Off"}]})})})
define("hospitalrun/mixins/inventory-id",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({generateId:function(){var e=(new Date).getTime(),t=Math.floor(999*Math.random())+1
return Ember.RSVP.resolve(e.toString(36)+"_"+t.toString(36))}})}),define("hospitalrun/mixins/inventory-locations",["exports","uuid"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({aisleToFind:null,locationToFind:null,_addQuantityToLocation:function(e,t,n,a){return new Ember.RSVP.Promise(function(i,s){this._findOrCreateLocation(e,n,a).then(function(e){e.incrementProperty("quantity",t),e.save().then(i,s)})}.bind(this))},_findOrCreateLocation:function(e,n,a){return new Ember.RSVP.Promise(function(i,s){var o,r=e.get("locations")
if(this.set("aisleToFind",a),this.set("locationToFind",n),o=r.find(this.findLocation,this))i(o)
else{var l=this.get("store").createRecord("inv-location",{id:t.default.v4(),aisleLocation:a,location:n,quantity:0})
r.addObject(l),l.save().then(function(){i(l)},s)}}.bind(this))},findLocation:function(e){var t=e.get("aisleLocation"),n=this.get("aisleToFind"),a=e.get("location"),i=this.get("locationToFind")
if((Ember.isEmpty(t)&&Ember.isEmpty(n)||t===n)&&(Ember.isEmpty(a)&&Ember.isEmpty(i)||a===i))return!0},newPurchaseAdded:function(e,t){return new Ember.RSVP.Promise(function(n,a){var i=t.get("aisleLocation"),s=t.get("location"),o=parseInt(t.get("originalQuantity"))
this._addQuantityToLocation(e,o,s,i).then(n,a)}.bind(this))},saveLocation:function(e,t){return 0===e.get("quantity")?(t.get("locations").removeObject(e),e.destroyRecord()):e.save()},transferToLocation:function(e,t){var n=t.get("transferAisleLocation"),a=t.get("transferLocation"),i=parseInt(t.get("adjustmentQuantity"))
return new Ember.RSVP.Promise(function(s,o){this._addQuantityToLocation(e,i,a,n).then(function(){t.decrementProperty("quantity",i),t.save().then(s,o)},o)}.bind(this))}})}),define("hospitalrun/mixins/inventory-type-list",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({defaultInventoryTypes:["Medication","Supply"],inventoryTypes:Ember.computed("inventoryTypeList","defaultInventoryTypes",function(){var e=this.get("defaultInventoryTypes"),n=this.get("inventoryTypeList"),a=void 0
return a=Ember.isEmpty(n)?e:n,a=t.default.selectValues(a)})})}),define("hospitalrun/mixins/is-update-disabled",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({isUpdateDisabled:Ember.computed("model.isValid",function(){return!Ember.isNone(this.get("model.isValid"))&&!this.get("model.isValid")})})}),define("hospitalrun/mixins/location-name",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({getDisplayLocationName:function(e,t){var n=this.formatLocationName(e,t)
return Ember.isEmpty(n)&&(n="No Location"),n},formatLocationName:function(e,t){var n=""
return Ember.isEmpty(e)||(n+=e,Ember.isEmpty(t)||(n+=" : ")),Ember.isEmpty(t)||(n+=t),n},locationName:Ember.computed("location","aisleLocation",function(){var e=this.get("aisleLocation"),t=this.get("location")
return this.getDisplayLocationName(t,e)})})}),define("hospitalrun/mixins/map-oauth-params",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({mapOauthParams:function(e){return{config_consumer_key:e.k,config_consumer_secret:e.s1,config_oauth_token:e.t,config_token_secret:e.s2}}})}),define("hospitalrun/mixins/medication-details",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({getMedicationName:function(e){var t=this,n=this.get("medicationTitle")
if(!Ember.isEmpty(n))return n
var a=this.get(e)
a.then?a.then(function(e){Ember.isEmpty(e)||t.set("medicationTitle",e.get("name"))}).catch(function(e){console.log("error getting inventory item for medication name:",e)}):this.set("medicationTitle",a.get("name"))},getMedicationPrice:function(e){var t=this,n=this.get("priceOfMedication")
if(!Ember.isEmpty(n))return n
var a=this.get(e)
a.then?a.then(function(e){t.set("priceOfMedication",e.get("price"))}):this.set("priceOfMedication",a.get("price"))},getMedicationDetails:function(e){var t=this
return new Ember.RSVP.Promise(function(n){var a=t.get("medicationTitle"),i=t.get("priceOfMedication")
if(Ember.isEmpty(a)||Ember.isEmpty(i)){var s=t.get(e)
s.then?s.then(function(e){n({name:e.get("name"),price:e.get("price")})}):n({name:s.get("name"),price:s.get("price")})}else n({name:a,price:i})})},medicationTitle:t.default.attr("string"),priceOfMedication:t.default.attr("number"),rxNormIdentifier:t.default.attr("string")})}),define("hospitalrun/mixins/modal-helper",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({displayAlert:function(e,t,n,a,i){var s=this.get("intl"),o=Ember.Object.extend({updateButtonText:s.t("buttons.ok")}).create({cancelAction:i,hideCancelButton:!0,message:t,okAction:n,okContext:a,title:e,updateButtonAction:"ok"})
this.get("isComponent")?this.sendAction("openModal","dialog",o):this.send("openModal","dialog",o)},displayConfirm:function(e,t,n,a){var i=this.get("intl")
Ember.isEmpty(a)&&(a=Ember.Object.create()),a.set("confirmAction",n),a.set("title",e),a.set("message",t),a.set("updateButtonAction","confirm"),a.set("updateButtonText",i.t("buttons.ok")),this.send("openModal","dialog",a)}})}),define("hospitalrun/mixins/navigation",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({navItems:[{title:"Inventory",iconClass:"octicon-package",route:"inventory",capability:"inventory",subnav:[{title:"Requests",iconClass:"octicon-chevron-right",route:"inventory.index",capability:"add_inventory_request"},{title:"Items",iconClass:"octicon-chevron-right",route:"inventory.listing",capability:"inventory"},{title:"Inventory Received",iconClass:"octicon-plus",route:"inventory.batch",subroute:"new",capability:"add_inventory_item"},{title:"Reports",iconClass:"octicon-chevron-right",route:"inventory.reports",capability:"inventory"}]},{title:"Patients",iconClass:"octicon-organization",route:"patients",capability:"patients",subnav:[{title:"Patient Listing",iconClass:"octicon-chevron-right",route:"patients.index",capability:"patients"},{title:"Admitted Patients",iconClass:"octicon-chevron-right",route:"patients.admitted",capability:"patients"},{title:"Outpatient",iconClass:"octicon-chevron-right",route:"patients.outpatient",capability:"patients"},{title:"New Patient",iconClass:"octicon-plus",route:"patients.edit",subroute:"new",capability:"add_patient"},{title:"Reports",iconClass:"octicon-chevron-right",route:"patients.reports",capability:"patients"}]},{title:"Scheduling",iconClass:"octicon-calendar",route:"appointments",capability:"appointments",subnav:[{title:"Appointments This Week",iconClass:"octicon-chevron-right",route:"appointments.index",capability:"appointments"},{title:"Today's Appointments",iconClass:"octicon-chevron-right",route:"appointments.today",capability:"appointments"},{title:"Appointment Search",iconClass:"octicon-search",route:"appointments.search",capability:"appointments"},{title:"Appointments Calendar",iconClass:"octicon-calendar",route:"appointments.calendar",capability:"appointments"},{title:"Add Appointment",iconClass:"octicon-plus",route:"appointments.edit",subroute:"new",capability:"add_appointment"},{title:"Theater Schedule",iconClass:"octicon-calendar",route:"appointments.theater",capability:"appointments"},{title:"Schedule Surgery",iconClass:"octicon-plus",route:"appointments.edit",subroute:"newsurgery",capability:"add_appointment"}]},{title:"Imaging",iconClass:"octicon-device-camera",route:"imaging",capability:"imaging",subnav:[{title:"Requests",iconClass:"octicon-chevron-right",route:"imaging.index",capability:"imaging"},{title:"Completed",iconClass:"octicon-chevron-right",route:"imaging.completed",capability:"imaging"},{title:"New Request",iconClass:"octicon-plus",route:"imaging.edit",subroute:"new",capability:"add_imaging"}]},{title:"Medication",iconClass:"octicon-file-text",route:"medication",capability:"medication",subnav:[{title:"Requests",iconClass:"octicon-chevron-right",route:"medication.index",capability:"medication"},{title:"Completed",iconClass:"octicon-chevron-right",route:"medication.completed",capability:"medication"},{title:"New Request",iconClass:"octicon-plus",route:"medication.edit",subroute:"new",capability:"add_medication"},{title:"Dispense",iconClass:"octicon-checklist",route:"medication.edit",subroute:"dispense",capability:"fulfill_medication"},{title:"Return Medication",iconClass:"octicon-mail-reply",route:"medication.return",subroute:"new",capability:"add_medication"}]},{title:"Labs",iconClass:"octicon-microscope",route:"labs",capability:"labs",subnav:[{title:"Requests",iconClass:"octicon-chevron-right",route:"labs.index",capability:"labs"},{title:"Completed",iconClass:"octicon-chevron-right",route:"labs.completed",capability:"labs"},{title:"New Request",iconClass:"octicon-plus",route:"labs.edit",subroute:"new",capability:"add_lab"}]},{title:"Billing",iconClass:"octicon-credit-card",route:"invoices",capability:"invoices",subnav:[{title:"Invoices",iconClass:"octicon-chevron-right",route:"invoices.index",capability:"invoices"},{title:"New Invoice",iconClass:"octicon-plus",route:"invoices.edit",subroute:"new",capability:"invoices"},{title:"Prices",iconClass:"octicon-chevron-right",route:"pricing.index",capability:"pricing"},{title:"Price Profiles",iconClass:"octicon-chevron-right",route:"pricing.profiles",capability:"pricing"}]},{title:"Incident",iconClass:"octicon-package",route:"incident",capability:"incident",subnav:[{title:"Current Incidents",iconClass:"octicon-chevron-right",route:"incident.index",capability:"add_incident"},{title:"New Incident",iconClass:"octicon-plus",route:"incident.edit",subroute:"new",capability:"add_incident"},{title:"History",iconClass:"octicon-chevron-right",route:"incident.completed",capability:"add_incident"},{title:"Reports",iconClass:"octicon-chevron-right",route:"incident.reports",capability:"generate_incident_report"}]},{title:"Administration",iconClass:"octicon-person",route:"admin",capability:"admin",subnav:[{title:"Address Fields",iconClass:"octicon-chevron-right",route:"admin.address",capability:"update_config"},{title:"Custom Forms",iconClass:"octicon-chevron-right",route:"admin.custom-forms",capability:"update_config"},{title:"Incident Categories",iconClass:"octicon-chevron-right",route:"inc-category",capability:"add_incident_category"},{title:"Load DB",iconClass:"octicon-plus",route:"admin.loaddb",capability:"load_db"},{title:"Lookup Lists",iconClass:"octicon-chevron-right",route:"admin.lookup",capability:"update_config"},{title:"Text Replacements",iconClass:"octicon-plus",route:"admin.textreplace",capability:"update_config"},{title:"Print Header",iconClass:"octicon-chevron-right",route:"admin.print-header",capability:"update_config"},{title:"Users",iconClass:"octicon-chevron-right",route:"users",capability:"users"},{title:"New User",iconClass:"octicon-plus",route:"users.edit",subroute:"new",capability:"add_user"},{title:"User Roles",iconClass:"octicon-chevron-right",route:"admin.roles",capability:"define_user_roles"}]}],localizedNavItems:Ember.computed("navItems.[]","intl.locale",function(){var e=Ember.get(this,"intl")
return Ember.get(this,"navItems").map(function(t){var n="navigation."+Ember.String.camelize(t.title).toLowerCase(),a=e.t(n)
return Ember.set(t,"localizedTitle",a),Ember.set(t,"subnav",t.subnav.map(function(t){var n="navigation.subnav."+Ember.String.camelize(t.title),a=e.t(n)
return Ember.set(t,"localizedTitle",a),t})),t})}),findNavItemByRoute:function(e){for(var t=0;t<this.navItems.length;t++){if(Ember.isEqual(this.navItems[t].route,e))return this.navItems[t]
for(var n=0;n<this.navItems[t].subnav.length;n++)if(Ember.isEqual(this.navItems[t].subnav[n].route,e))return this.navItems[t].subnav[n]}return null}})}),define("hospitalrun/mixins/number-format",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_calculateTotal:function(e,t){var n
return n=(Ember.isArray(e)?e:this.get(e)).reduce(function(e,n){return e+this._getValidNumber(Ember.get(n,t))}.bind(this),0),this._numberFormat(n,!0)},_getValidNumber:function(e){return Ember.isEmpty(e)||isNaN(e)?0:Number(e)},_numberFormat:function(e,t){var n=void 0
if(!Ember.isEmpty(e)){if(isNaN(e))return
return n=Math.round(e)===e?Number(e).toString():this._round100(e).toFixed(2),t?Number(n):n.replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,")}},_validNumber:function(e){return!Ember.isEmpty(e)&&!isNaN(e)&&e>0},_round100:function(e){var t=100*e
return Math.round(t)/100}})}),define("hospitalrun/mixins/oauth-headers",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({getOAuthHeaders:function(e){return{"x-oauth-consumer-secret":e.config_consumer_secret,"x-oauth-consumer-key":e.config_consumer_key,"x-oauth-token-secret":e.config_token_secret,"x-oauth-token":e.config_oauth_token}}})}),define("hospitalrun/mixins/operative-plan-statuses",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=[e.COMPLETED_STATUS="completed",e.DROPPED_STATUS="dropped",e.PLANNED_STATUS="planned"]
e.default=Ember.Mixin.create({planStatuses:Ember.computed(function(){var e=this.get("intl")
return t.map(function(t){return{id:t,value:e.t("operativePlan.labels."+t+"Status")}}).sort(function(e,t){return Ember.compare(e.value.toString(),t.value.toString())})})})}),define("hospitalrun/mixins/pagination-props",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({paginationProps:Ember.computed("disableNextPage","disablePreviousPage","showFirstPageButton","showLastPageButton","showPagination",function(){return this.getProperties(["disableNextPage","disablePreviousPage","showFirstPageButton","showLastPageButton","showPagination"])})})}),define("hospitalrun/mixins/paging-actions",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({firstPage:"firstPage",lastPage:"lastPage",nextPage:"nextPage",previousPage:"previousPage",actions:{firstPage:function(){this.sendAction("firstPage")},lastPage:function(){this.sendAction("lastPage")},nextPage:function(){this.sendAction("nextPage")},previousPage:function(){this.sendAction("previousPage")}}})}),define("hospitalrun/mixins/patient-appointments",["exports","hospitalrun/mixins/pouchdb"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create(t.default,{getPatientAppointments:function(e){var t=e.get("id"),n=this.get("maxValue")
return this.store.query("appointment",{options:{startkey:[t,null,null,"appointment_"],endkey:[t,n,n,n]},mapReduce:"appointments_by_patient"})}})}),define("hospitalrun/mixins/patient-diagnosis",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_addDiagnosisToList:function(e,t){Ember.isEmpty(e)||Ember.isEmpty(t.findBy("description",e))&&t.addObject(e)},getDiagnoses:function(e,t,n){var a=this,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"diagnoses",s=[]
if(!Ember.isEmpty(e)){var o=e.get(i)
return o=o.filterBy("archived",!1),t&&(o=o.filterBy("active",!0)),n||(n=!1),(o=o.filterBy("secondaryDiagnosis",n)).forEach(function(e){a._addDiagnosisToList(e,s)}),s}}})}),define("hospitalrun/mixins/patient-id",["exports","hospitalrun/mixins/friendly-id"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create(t.default,{config:Ember.inject.service(),sequenceName:"patient",sequenceView:"patient_by_display_id",sequencePrefix:function(){return Ember.get(this,"config").getPatientPrefix()}})}),define("hospitalrun/mixins/patient-invoices",["exports","hospitalrun/mixins/pouchdb"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create(t.default,{getPatientInvoices:function(e){var t=e.get("id")
return this.store.query("invoice",{options:{key:t},mapReduce:"invoice_by_patient"})}})}),define("hospitalrun/mixins/patient-list-route",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({database:Ember.inject.service(),_fetchPatientList:function(e){this.get("database").queryMainDB({startkey:"patient_",endkey:"patient_￿",include_docs:!0}).then(function(t){if(t.rows){var n=t.rows.map(function(e){return e.doc})
e.set("patientList",n)}})},actions:{returnToPatient:function(){this.controller.send("returnToPatient"),this.controller.send("closeModal")},returnToVisit:function(){this.controller.send("returnToVisit")}},setupController:function(e,t){this._super(e,t),this._fetchPatientList(e)}})}),define("hospitalrun/mixins/patient-name",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({getPatientDisplayId:function(e){var t=Ember.get(e,"externalPatientId"),n=Ember.get(e,"friendlyId"),a=Ember.get(e,"id")
return Ember.isEmpty(n)?Ember.isEmpty(t)?a:t:n},getPatientDisplayName:function(e,t){var n=Ember.get(e,"firstName"),a=Ember.get(e,"lastName"),i=Ember.get(e,"middleName"),s=[]
return Ember.isEmpty(n)||s.push(n),Ember.isEmpty(i)||t||s.push(i),Ember.isEmpty(a)||s.push(a),s.join(" ")}})}),define("hospitalrun/mixins/patient-notes",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({canAddNote:function(){return this.currentUserCan("add_note")&&(!Ember.isEmpty(this.get("visits"))||!Ember.isEmpty(this.get("model.visits")))},canDeleteNote:function(){return this.currentUserCan("delete_note")},_computeNoteType:function(e){switch(e.get("visitType")){case"Admission":return Ember.isEmpty(e.get("procedures"))?"Pre-op":"Post-op"
case"Clinic":case"Followup":return"General"
default:return e.get("visitType")}},_setNoteType:function(){var e=this.get("model")
null==e.get("noteType")&&e.set("noteType",this._computeNoteType(e.get("visit")))}})}),define("hospitalrun/mixins/patient-submodule",["exports","ember-data","hospitalrun/mixins/patient-visits","hospitalrun/utils/select-values"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create(n.default,{findPatientVisits:!0,needToUpdateVisit:!1,patientList:null,selectedPatient:null,newVisitAdded:null,actions:{showPatient:function(e){this.transitionToRoute("patients.edit",e)},returnToAllItems:function(){this._cancelUpdate(),this.send("allItems")},returnToPatient:function(){this._cancelUpdate(),this.transitionToRoute("patients.edit",this.get("model.returnToPatient"))},returnToVisit:function(){this._cancelUpdate(),this.transitionToRoute("visits.edit",this.get("model.returnToVisit"))},selectedPatientChanged:function(e){var t=this
Ember.isEmpty(e)?(this.set("model.patient",null),this.patientSelected()):this.store.find("patient",e.id).then(function(e){t.set("model.patient",e),t.patientSelected(e),Ember.run.once(t,function(){this.get("model").validate().catch(function(){})})})}},addChildToVisit:function(e,t,n){return new Ember.RSVP.Promise(function(a,i){var s=this.get("model.visit")
Ember.isEmpty(s)?s=this.createNewVisit(n).then(function(n){this._finishAddChildToVisit(e,t,n,a,i)}.bind(this),i):this._finishAddChildToVisit(e,t,s,a,i)}.bind(this))},addDiagnosisToModelAndPatient:function(e){var t=this
this.get("model.diagnoses").addObject(e)
var n=this.get("model.patient.diagnoses")
if(n.any(function(t){return!0===t.get("active")&&t.get("diagnosis")===e.get("diagnosis")&&t.get("secondaryDiagnosis")===e.get("secondaryDiagnosis")}))this.silentUpdate("closeModal")
else{var a=this._copyDiagnosis(e)
a.save().then(function(){n.addObject(a),t.get("model.patient").save().then(function(){t.silentUpdate("closeModal")})})}},_finishAddChildToVisit:function(e,t,n,a,i){n.get(t).then(function(t){t.addObject(e),this.set("needToUpdateVisit",!0),a(n)}.bind(this),i)},cancelAction:Ember.computed("model.returnToPatient","model.returnToVisit",function(){var e=this.get("model.returnToPatient"),t=this.get("model.returnToVisit")
return Ember.isEmpty(t)?Ember.isEmpty(e)?"returnToAllItems":"returnToPatient":"returnToVisit"}),createNewVisit:function(e){return new Ember.RSVP.Promise(function(t,n){var a=this.get("model"),i=a.get("patient"),s=this.get("store").createRecord("visit",{startDate:new Date,endDate:new Date,outPatient:!0,patient:i,visitType:e})
a.set("visit",s),s.save().then(function(){s.reload().then(function(e){this.set("newVisitAdded",e),a.set("visit",e),t(e)}.bind(this),n)}.bind(this),n).catch(function(e){console.log("Error creating new visit"),n(e)}.bind(this))}.bind(this))},deleteChildFromVisit:function(e){var t=this,n=this.get("model")
n.set("archived",!0),this.removeChildFromVisit(n,e).then(function(){n.save().then(function(){n.unloadRecord(),t.send("closeModal")})})},getPatientDiagnoses:function(e,t){var n=this,a=e.get("diagnoses"),i=void 0
Ember.isEmpty(a)||(i=a.filterBy("active",!0).map(function(e){return n._copyDiagnosis(e)}))
var s=Ember.get(t,"diagnoses")
s.clear(),Ember.isEmpty(i)||s.addObjects(i)},patientId:Ember.computed.alias("model.patient.id"),patientSelected:function(){},patientVisits:Ember.computed("model.patient.id","newVisitAdded",function(){var e=this.get("model.patient"),n=void 0
return n=!Ember.isEmpty(e)&&this.get("findPatientVisits")?this.getPatientVisits(e):Ember.RSVP.resolve([]),t.default.PromiseArray.create({promise:n})}),patientProcedures:Ember.computed("patientVisits.[]",function(){var e=this,n=Ember.get(this,"model.patient")
return t.default.PromiseArray.create({promise:Ember.get(this,"patientVisits").then(function(t){return Ember.get(n,"operationReports").then(function(n){return e._getPatientProcedures(n,t)})})})}),patientVisitsForSelect:Ember.computed("patientVisits.[]",function(){return t.default.PromiseArray.create({promise:this.get("patientVisits").then(function(e){return e.map(a.default.selectObjectMap)})})}),removeChildFromVisit:function(e,t){return new Ember.RSVP.Promise(function(n,a){var i=[],s=this.get("model.visit")
i.addObjects(this.resolveVisitChildren()),Ember.RSVP.all(i,"Resolved visit children before removing "+t).then(function(){s.get(t).then(function(t){t.removeObject(e),s.save().then(n,a)}.bind(this),a)}.bind(this),a)}.bind(this))},resolveVisitChildren:function(){var e=[],t=this.get("model.visit")
return Ember.isEmpty(t)||(e.push(t.get("imaging")),e.push(t.get("labs")),e.push(t.get("medication")),e.push(t.get("procedures")),e.push(t.get("vitals")),e.push(t.get("reports"))),e},saveNewDiagnoses:function(){var e=this.get("model.diagnoses")
if(e=e.filterBy("isNew",!0),Ember.isEmpty(e))return Ember.RSVP.resolve()
var t=e.map(function(e){return e.save()})
return Ember.RSVP.all(t)},saveVisitIfNeeded:function(e,t,n){this.get("needToUpdateVisit")?this.get("model.visit").save().then(function(){this.set("needToUpdateVisit",!1),this.displayAlert(e,t,n)}.bind(this)):this.displayAlert(e,t,n)},visitId:Ember.computed.alias("model.visit.id"),visitsController:Ember.computed.alias("controllers.visits"),_copyDiagnosis:function(e){return this.store.createRecord("diagnosis",e.getProperties(["date","diagnosis","secondaryDiagnosis"]))}})}),define("hospitalrun/mixins/patient-visits",["exports","hospitalrun/mixins/pouchdb","hospitalrun/utils/visit-statuses","ember-data","moment"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0})
var s=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
e.default=Ember.Mixin.create(t.default,{getPatientVisits:function(e){var t=this.get("maxValue"),n=e.get("id")
return this.store.query("visit",{options:{startkey:[n,null,null,null,"visit_"],endkey:[n,t,t,t,t]},mapReduce:"visit_by_patient",debug:!0})},getPatientFutureAppointment:function(e,t){var n=Ember.get(e,"patient.id"),o=Ember.get(e,"startDate"),r=Ember.get(this,"maxValue"),l=this.store.query("appointment",{options:{startkey:[n,null,null,"appointment_"],endkey:[n,r,r,r]},mapReduce:"appointments_by_patient"}).then(function(e){var n=e.filter(function(e){var t=Ember.get(e,"startDate")
return t&&(0,i.default)(t).isAfter((0,i.default)(o),"day")}).sortBy("startDate")
return n.length?t?n.slice(0,3):s(n,1)[0]:null})
return t?a.default.PromiseArray.create({promise:l}):a.default.PromiseObject.create({promise:l})},_getVisitCollection:function(e,t){var n=[]
return Ember.isEmpty(e)||e.forEach(function(e){Ember.get(e,t).then(function(e){n.addObjects(e)})}),n},_getPatientProcedures:function(e,t){var n=this._getVisitCollection(t,"procedures")
return e.forEach(function(e){var t=Ember.get(e,"procedures"),a=Ember.get(e,"surgeryDate")
t.forEach(function(t){n.addObject({description:Ember.get(t,"description"),procedureDate:a,report:e})})}),n},checkoutVisit:function(e,t){var a=this
return e.set("status",t),e.set("endDate",new Date),e.save().then(function(i){return a.updatePatientVisitFlags(i).then(function(){var i=a.get("intl"),s={patientName:e.get("patient.displayName")},o=void 0,r=void 0
t===n.default.CHECKED_OUT?(o=i.t("visits.messages.checkedOut",s),r=i.t("visits.titles.checkedOut")):(o=i.t("visits.messages.discharged",s),r=i.t("visits.titles.discharged")),a.displayAlert(r,o)})})},updatePatientVisitFlags:function(e){var t=e.get("patient"),a=t.get("admitted"),i=t.get("checkedIn"),s=this.get("model.status")
return s!==n.default.ADMITTED||a?s!==n.default.CHECKED_IN||i?s===n.default.CHECKED_OUT&&i?this._updateUnlessVisitStatusExists(t,n.default.CHECKED_IN,"checkedIn"):s===n.default.DISCHARGED&&a?this._updateUnlessVisitStatusExists(t,n.default.ADMITTED,"admitted"):Ember.RSVP.resolve():(t.set("checkedIn",!0),t.save()):(t.set("admitted",!0),t.save())},_updateUnlessVisitStatusExists:function(e,t,n){return this.getPatientVisits(e).then(function(a){if(Ember.isEmpty(a.findBy("status",t)))return e.set(n,!1),e.save()})}})}),define("hospitalrun/mixins/payment-profiles",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({paymentProfiles:["Private","Discounted","Free"]})}),define("hospitalrun/mixins/pikaday-component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_picker:null,currentDate:null,dateSetAction:null,format:"l",maxDate:null,minDate:null,originalProperty:null,showTime:!1,yearRange:10,dateSet:function(){var e=Ember.get(this,"_picker").getDate(),t=Ember.get(this,"dateSetAction")
Ember.set(this,"currentDate",e),Ember.isEmpty(t)||this.sendAction("dateSetAction",e)},didInsertElement:function(){var e=this,t=Ember.get(this,"currentDate"),n=this.$("input")
n.on("input",function(){Ember.isEmpty(n.val())&&Ember.set(e,"currentDate",null)})
var a=null,i=this.getProperties("format","yearRange","showTime")
i.onSelect=this.dateSet.bind(this),Ember.isEmpty(Ember.get(this,"minDate"))||(i.minDate=Ember.get(this,"minDate"),"now"===i.minDate&&(i.minDate=new Date)),Ember.isEmpty(Ember.get(this,"maxDate"))||(i.maxDate=Ember.get(this,"maxDate"),"now"===i.maxDate&&(i.maxDate=new Date)),i.field=n[0],a=new Pikaday(i),Ember.run.next(this,function(){a.setDate(t)}),Ember.set(this,"_picker",a)},willDestroyElement:function(){var e=Ember.get(this,"_picker")
e&&e.destroy(),Ember.set(this,"_picker",null)}})}),define("hospitalrun/mixins/pouch-find-indexes",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({buildPouchFindIndexes:function(e){[{name:"inventory",fields:["data.crossReference","data.description","data.friendlyId","data.name"]},{name:"invoices",fields:["data.externalInvoiceNumber","data.patientInfo"]},{name:"patient",fields:["data.externalPatientId","data.firstName","data.friendlyId","data.lastName","data.phone"]},{name:"medication",fields:["data.prescription"]},{name:"pricing",fields:["data.name"]}].forEach(function(t){e.createIndex({index:{fields:t.fields,name:t.name}})})}})}),define("hospitalrun/mixins/pouchdb",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({maxValue:"￿"})}),define("hospitalrun/mixins/progress-dialog",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({progressDialog:null,progressDialogDefaults:{showProgress:!0,hideCancelButton:!0,hideUpdateButton:!0,progressBarValue:0,progressBarStyle:"width: 0%;"},progressInterval:500,progressMessage:null,progressTimer:null,progressTitle:null,scheduleProgress:function(e){return Ember.run.later(this,function(){e.apply(this),this.set("progressTimer",this.scheduleProgress(e))},this.get("progressInterval"))},updateProgressBar:function(){var e=this.get("progressDialog"),t=e.get("progressBarValue");(t+=10)>100&&(t=0),e.set("progressBarValue",t)
var n=Ember.String.htmlSafe("width: "+t+"%")
e.set("progressBarStyle",n)},closeProgressModal:function(){Ember.run.cancel(this.get("progressTimer")),this.send("closeModal")},showProgressModal:function(){var e=Ember.Object.create(this.get("progressDialogDefaults"))
e.progressBarStyle=Ember.String.htmlSafe(e.progressBarStyle),e.set("title",this.get("progressTitle")),e.set("message",this.get("progressMessage")),this.set("progressDialog",e),this.set("progressTimer",this.scheduleProgress(this.get("updateProgressBar"))),this.send("openModal","dialog",e)}})}),define("hospitalrun/mixins/publish-statuses",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({publishStatuses:["Draft","Published","Private","Archived"]})}),define("hospitalrun/mixins/result-validation",["exports","hospitalrun/macro"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({validations:{result:{acceptance:{accept:!0,if:function(e){if(!e.get("hasDirtyAttributes"))return!1
var t=e.get("status"),n=e.get("result")
return!("Completed"!==t||!Ember.isEmpty(n))},message:(0,t.t)("errors.result")}}}})})
define("hospitalrun/mixins/return-to",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({cancelAction:Ember.computed("returnTo",function(){var e=this.get("model.returnTo")
return Ember.isEmpty(e)?"allItems":"returnTo"})})}),define("hospitalrun/mixins/setup-user-role",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({setupUserRole:function(){var e=this.get("session"),t=e.get("data.authenticated.role")
return this.get("store").find("user-role",t.dasherize()).then(function(t){e.set("data.authenticated.userCaps",t.get("capabilities"))
var n=e.get("store"),a=e.get("data")
return n.persist(a),!0}).catch(function(){})}})}),define("hospitalrun/mixins/typeahead",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({_mapContentItems:function(){var e=this,n=this.get("content")
if(n){var a=n.filter(function(e){return!Ember.isEmpty(e)})
return a=n instanceof t.default.RecordArray?a.map(function(t){var n=t.getProperties(e.get("displayKey"))
return n[e.get("selectionKey")]=t,n}):a.map(function(t){var n={}
return n[e.get("displayKey")]=t,n})}return[]},mappedContent:Ember.computed("content",function(){return this._mapContentItems()}),contentChanged:Ember.observer("content.[]",function(){var e=this.get("bloodhound")
e&&(e.clear(),e.add(this._mapContentItems()))}),bloodhound:null,displayKey:"value",selectionKey:"value",hint:!0,highlight:!0,lastHint:null,limit:500,minlength:1,selectedItem:!1,inputElement:null,typeAhead:null,setOnBlur:!0,templates:null,selectedAction:null,_getSource:function(){var e=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.obj.whitespace(this.get("displayKey")),queryTokenizer:Bloodhound.tokenizers.whitespace,local:this.get("mappedContent")})
return e.initialize(),this.set("bloodhound",e),e.ttAdapter()},didInsertElement:function(){var e=this,t=this.$("input")
this.set("inputElement",t)
var n=t.typeahead({autoselect:!0,hint:this.get("hint"),highlight:this.get("highlight"),minLength:this.get("minlength")},{displayKey:this.get("displayKey"),limit:this.get("limit"),source:this._getSource(),templates:this.get("templates")})
this.set("typeAhead",n),n.on("typeahead:selected",function(t,n){e.itemSelected(n[e.get("selectionKey")])}),n.on("typeahead:autocompleted",function(t,n){e.itemSelected(n[e.get("selectionKey")])}),this.get("setOnBlur")&&(t.on("keyup",function(){var t=e.$(".tt-hint").val()
e.set("lastHint",t),e.set("selectedItem",!1)}),t.on("blur",function(t){var n=e.get("selection"),a=t.target.value.trim()
if(Ember.isEmpty(n)||(n.trim&&(n=n.trim()),e.set("selection",n)),!e.get("selectedItem")){var i=e.get("lastHint"),s=!1
Ember.isEmpty(i)&&(i=a,s=!0),Ember.isEmpty(a)||Ember.isEmpty(i)?Ember.isEmpty(a)&&e.itemSelected():e.get("bloodhound").search(i,function(o){o.length>0?s&&i.toLowerCase()!==o[0][e.get("displayKey")].toLowerCase()||(e.itemSelected(o[0][e.get("selectionKey")]),t.target.value=o[0][e.get("displayKey")],e.get("model").set(e.get("propertyName"),t.target.value)):a!==n&&e.itemSelected()})}}))},itemSelected:function(e){this.set("selection",e),this.set("selectedItem",!0)
var t=this.get("selectedAction")
Ember.isEmpty(t)||this.sendAction("selectedAction",e)},willDestroyElement:function(){this.get("inputElement").typeahead("destroy")}})}),define("hospitalrun/mixins/unit-types",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({defaultUnitList:["ampoule","bag","bottle","box","bundle","capsule","case","container","cream","each","gel","nebule","ointment","pack","pair","pallet","patch","pcs","pill","plastic","polyamp","roll","spray","suppository","suspension","set","syrup","tablet","tray","tube","vial"],unitList:Ember.computed("inventoryUnitList","defaultUnitList",function(){var e=this.get("defaultUnitList"),t=this.get("inventoryUnitList")
return Ember.isEmpty(t)?e:t}),unitListForSelect:Ember.computed.map("unitList",t.default.selectValuesMap)})}),define("hospitalrun/mixins/user-roles",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=e.PREDEFINED_USER_ROLES=[{name:"Data Entry",roles:["Data Entry","user"],defaultRoute:"patients.index"},{name:"Doctor",roles:["Doctor","user"],defaultRoute:"patients.index"},{name:"Finance",roles:["Finance","user"],defaultRoute:"invoices.index"},{name:"Finance Manager",roles:["Finance Manager","user"],defaultRoute:"invoices.index"},{name:"Hospital Administrator",roles:["Hospital Administrator","user"],defaultRoute:"invoices.index"},{name:"Inventory Manager",roles:["Inventory Manager","user"],defaultRoute:"inventory.index"},{name:"Imaging Technician",roles:["Imaging Technician","user"],defaultRoute:"imaging.index"},{name:"Lab Technician",roles:["Lab Technician","user"],defaultRoute:"labs.index"},{name:"Medical Records Officer",roles:["Medical Records Officer","user"],defaultRoute:"patients.index"},{name:"Nurse",roles:["Nurse","user"],defaultRoute:"patients.index"},{name:"Nurse Manager",roles:["Nurse Manager","user"],defaultRoute:"patients.index"},{name:"Patient Administration",roles:["Patient Administration","user"],defaultRoute:"patients.index"},{name:"Pharmacist",roles:["Pharmacist","user"],defaultRoute:"medication.index"},{name:"Social Worker",roles:["Social Worker","user"],defaultRoute:"patients.index"},{name:"System Administrator",roles:["System Administrator","admin","user"]},{name:"User Administrator",roles:["User Administrator","admin","user"],defaultRoute:"users"},{name:"Cashier",roles:["Cashier","user"],defaultRoute:"invoices.index"}]
e.default=Ember.Mixin.create({userRoles:t,findUserRole:function(e){return this.userRoles.findBy("name",e)}})}),define("hospitalrun/mixins/user-session",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({session:Ember.inject.service(),defaultCapabilities:{admin:["User Administrator","System Administrator","Quality"],add_allergy:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],appointments:["Data Entry","Finance","Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator","Cashier"],add_appointment:["Data Entry","Finance","Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator","Cashier"],add_charge:["Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],add_billing_diagnosis:["Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],add_diagnosis:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],add_medication:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Pharmacist","System Administrator"],add_operative_plan:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],add_operation_report:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],add_photo:["Data Entry","Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator"],add_patient:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator"],add_pricing:["Data Entry","Finance","Hospital Administrator","Medical Records Officer","System Administrator"],add_pricing_profile:["Data Entry","Finance","Hospital Administrator","Medical Records Officer","System Administrator"],add_lab:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Lab Technician","System Administrator"],add_imaging:["Data Entry","Doctor","Hospital Administrator","Imaging Technician","Medical Records Officer","System Administrator"],add_inventory_request:["Data Entry","Hospital Administrator","Inventory Manager","Medical Records Officer","Nurse Manager","Pharmacist","System Administrator"],add_inventory_item:["Data Entry","Hospital Administrator","Inventory Manager","Medical Records Officer","System Administrator"],add_inventory_purchase:["Data Entry","Hospital Administrator","Inventory Manager","Medical Records Officer","System Administrator"],add_invoice:["Data Entry","Hospital Administrator","Medical Records Officer","System Administrator","Cashier"],add_payment:["Hospital Administrator","Medical Records Officer","System Administrator","Cashier"],add_procedure:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","System Administrator"],add_socialwork:["Hospital Administrator","Medical Records Officer","Social Worker","System Administrator"],add_user:["User Administrator","System Administrator"],add_visit:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","Social Worker","System Administrator"],add_vitals:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","System Administrator"],add_report:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","System Administrator"],admit_patient:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","Social Worker","System Administrator"],adjust_inventory_location:["Hospital Administrator","Inventory Manager","Medical Records Officer","System Administrator"],billing:["Hospital Administrator","Finance","Finance Manager","System Administrator","Cashier"],cashier:["Cashier","System Administrator"],complete_imaging:["Imaging Technician","Medical Records Officer","System Administrator"],complete_lab:["Lab Technician","Medical Records Officer","System Administrator"],delete_appointment:["Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator"],delete_diagnosis:["Doctor","Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],delete_inventory_item:["Hospital Administrator","Inventory Manager","Medical Records Officer","System Administrator"],delete_imaging:["Doctor","Hospital Administrator","Medical Records Officer","System Administrator"],delete_invoice:["Hospital Administrator","System Administrator"],delete_lab:["Doctor","Hospital Administrator","Medical Records Officer","System Administrator"],delete_medication:["Doctor","Hospital Administrator","Medical Records Officer","System Administrator"],delete_photo:["Data Entry","Hospital Administrator","Medical Records Officer","Patient Administration","Social Worker","System Administrator"],delete_patient:["Hospital Administrator","Medical Records Officer","Patient Administration","System Administrator"],delete_pricing:["Finance","Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],delete_pricing_profile:["Finance","Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],delete_procedure:["Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","System Administrator"],delete_socialwork:["Hospital Administrator","Medical Records Officer","Social Worker","System Administrator"],delete_vitals:["Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","System Administrator"],delete_report:["Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","System Administrator"],delete_visit:["Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","Social Worker","System Administrator"],delete_user:["User Administrator","System Administrator"],discharge_patient:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","Social Worker","System Administrator"],edit_invoice:["Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],fulfill_inventory:["Hospital Administrator","Inventory Manager","Medical Records Officer","Pharmacist","System Administrator"],fulfill_medication:["Medical Records Officer","Pharmacist","System Administrator"],imaging:["Data Entry","Doctor","Hospital Administrator","Imaging Technician","Medical Records Officer","System Administrator"],invoices:["Hospital Administrator","Finance","Finance Manager","System Administrator","Cashier"],labs:["Data Entry","Doctor","Hospital Administrator","Lab Technician","Medical Records Officer","System Administrator"],list_paid_invoices:["Data Entry","Hospital Administrator","Medical Records Officer","System Administrator"],medication:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Pharmacist","System Administrator"],inventory:["Data Entry","Hospital Administrator","Inventory Manager","Medical Records Officer","Nurse Manager","Pharmacist","System Administrator"],load_db:["System Administrator"],override_invoice:["Hospital Administrator","System Administrator","Cashier"],query_db:["System Administrator"],patients:["Data Entry","Doctor","Finance","Finance Manager","Hospital Administrator","Imaging Technician","Lab Technician","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","Social Worker","System Administrator"],patient_reports:["Hospital Administrator","Patient Administration","System Administrator"],pricing:["Data Entry","Finance","Hospital Administrator","Medical Records Officer","System Administrator"],print_invoice:["Cashier","System Adminstrator"],review_invoice:["Cashier","System Administrator"],visits:["Data Entry","Doctor","Hospital Administrator","Medical Records Officer","Nurse Manager","Nurse","Patient Administration","Social Worker","System Administrator"],incident:["Hospital Staff","User Administrator","Quality","System Administrator"],add_incident:["Hospital Staff","User Administrator","Quality","System Administrator"],delete_incident:["Quality","System Administrator"],generate_incident_report:["User Administrator","Quality","System Administrator"],add_incident_category:["User Administrator","Quality","System Administrator"],delete_incident_category:["Quality","System Administrator"],manage_incidents:["Quality","System Administrator"],update_config:["System Administrator"],users:["User Administrator","System Administrator","Quality"],add_note:["Doctor","Medical Records Officer","Nurse","Nurse Manager","Patient Administration","System Administrator"],delete_note:["Medical Records Officer","Nurse Manager","Patient Administration","System Administrator"],define_user_roles:["System Administrator"]},_getUserSessionVars:function(){var e=this.get("session")
if(!Ember.isEmpty(e)&&e.get("isAuthenticated"))return e.get("data.authenticated")},currentUserRole:function(){var e=this._getUserSessionVars()
return Ember.isEmpty(e)||Ember.isEmpty(e.role)?null:e.role},currentUserCan:function(e){var t=this._getUserSessionVars()
if(!Ember.isEmpty(t)&&!Ember.isEmpty(t.role)){var n=this.get("session").get("data.authenticated.userCaps")
if(!Ember.isEmpty(n))return n.includes(e.camelize())
var a=this.get("defaultCapabilities")[e]
if(!Ember.isEmpty(a))return a.includes(t.role)}return!1},getUserName:function(e){var t=void 0,n=this._getUserSessionVars()
return Ember.isEmpty(n)||(e?t=n.name:Ember.isEmpty(n.displayName)?Ember.isEmpty(n.name)||(t=n.name):t=n.displayName),t}})}),define("hospitalrun/mixins/visit-types",["exports","hospitalrun/utils/select-values"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Mixin.create({defaultVisitTypes:["Admission","Clinic","Followup","Imaging","Lab","Pharmacy"],_getVisitTypes:function(e){var n=this.get("defaultVisitTypes"),a=this.get("visitTypesList"),i=void 0
return i=Ember.isEmpty(a)?n:a.get("value"),i=t.default.selectValues(i,e)},visitTypes:Ember.computed("visitTypesList","defaultVisitTypes",function(){return this._getVisitTypes()}),visitTypesWithEmpty:Ember.computed("visitTypesList","defaultVisitTypes",function(){return this._getVisitTypes(!0)})})}),define("hospitalrun/models/abstract",["exports","ember-data","ember-validations","ember-pouch","hospitalrun/mixins/user-session"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a.Model.extend(i.default,n.default,{session:Ember.inject.service(),archived:t.default.attr("boolean",{defaultValue:!1}),lastModified:t.default.attr("date"),modifiedBy:t.default.attr(),modifiedFields:t.default.attr(),loadedCustomForms:null,didLoad:function(){var e=this.get("customForms")
Ember.isEmpty(e)||(e=JSON.parse(JSON.stringify(e))),this.set("loadedCustomForms",e)},changedAttributes:function(){var e=this._super(),t=this.get("customForms"),n=this.get("loadedCustomForms")
Ember.isEmpty(t)||(Ember.isEmpty(n)&&(n={}),Object.keys(t).forEach(function(a){var i=n[a],s="customForms."+a
Ember.isEmpty(i)&&(i={})
var o=Ember.get(t,a)
Object.keys(o).forEach(function(t){var n=Ember.get(i,t),a=Ember.get(o,t)
n!=a&&(e[s+"."+t]=[n,a])})}))
return e},save:function(e){var t=void 0,n=this.changedAttributes(),a=new Date,i=this.get("modifiedFields"),s=this.get("session")
if(!s||!s.get("isAuthenticated"))return new Ember.RSVP.Promise(function(e,t){Ember.run(null,t,"ERROR you must be logged in to save")})
if(this.get("hasDirtyAttributes")&&!this.get("isDeleted")){for(t in Ember.isEmpty(i)&&(i={}),this.set("lastModified",a),n)i[t]=a
this.set("modifiedFields",i),this.set("modifiedBy",this.getUserName())}return this._super(e).catch(function(t){if(!Ember.isEmpty(e)&&e.retry)throw t
if(t.name&&t.name.indexOf&&t.name.indexOf("conflict")>-1)return this.rollbackAttributes(),this.reload().then(function(t){for(var a in n)t.set(a,n[a][1])
return Ember.isEmpty(e)&&(e={}),e.retry=!0,t.save(e)})
throw t}.bind(this))}})}),define("hospitalrun/models/add-diagnosis",["exports","ember-data","ember-validations","ember-pouch"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a.Model.extend(n.default,{diagnosis:t.default.attr("string"),validations:{diagnosis:{presence:!0}}})}),define("hospitalrun/models/allergy",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({name:n.default.attr("string"),icd9CMCode:n.default.attr("string"),icd10Code:n.default.attr("string"),patient:n.default.belongsTo("patient"),validations:{name:{presence:!0}}})}),define("hospitalrun/models/appointment",["exports","hospitalrun/models/abstract","ember-data","moment","hospitalrun/utils/patient-validation"],function(e,t,n,a,i){function s(e){if(!e.get("hasDirtyAttributes"))return!1
var t=e.get("allDay"),n=e.get("startDate"),a=e.get("endDate")
if(Ember.isEmpty(a)||Ember.isEmpty(n))return!0
if(t){if(a.getTime()<n.getTime())return!0}else if(a.getTime()<=n.getTime())return!0
return!1}Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({allDay:n.default.attr(),provider:n.default.attr("string"),location:n.default.attr("string"),appointmentType:n.default.attr("string"),startDate:n.default.attr("date"),endDate:n.default.attr("date"),notes:n.default.attr("string"),status:n.default.attr("string",{defaultValue:"Scheduled"}),patient:n.default.belongsTo("patient",{async:!1}),visits:n.default.hasMany("visit"),longDateFormat:"l h:mm A",shortDateFormat:"l",timeFormat:"h:mm A",_getDateSpan:function(e,t,n){return e.format(n)+" - "+t.format(n)},appointmentDate:Ember.computed("startDate",function(){return this.get("startDate")}),displayStatus:Ember.computed("status",function(){var e=this.get("status")
return Ember.isEmpty(e)&&(e="Scheduled"),e}),formattedAppointmentDate:Ember.computed("startDate","endDate",function(){var e=this.get("allDay"),t=(0,a.default)(this.get("endDate")),n="",i="",s=(0,a.default)(this.get("startDate"))
return s.isSame(t,"day")?(i=s.format(this.get("shortDateFormat")),e||(i+=" ",i+=this._getDateSpan(s,t,this.get("timeFormat")))):(n=e?this.get("shortDateFormat"):this.get("longDateFormat"),i=this._getDateSpan(s,t,n)),i}),validations:{appointmentDate:{presence:{if:function(e){return"Admission"!==e.get("appointmentType")}}},patientTypeAhead:i.default.patientTypeAhead,patient:{presence:!0},appointmentType:{presence:!0},startDate:{acceptance:{accept:!0,if:s,message:"Please select a start date earlier than the end date"}},endDate:{acceptance:{accept:!0,if:s,message:"Please select an end date later than the start date"}}}})}),define("hospitalrun/models/attachment",["exports","hospitalrun/models/photo","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=n.default.attr
e.default=t.default.extend({addedBy:a("string"),addedByDisplayName:a("string"),dateAdded:a("date"),title:a("string")})}),define("hospitalrun/models/billing-line-item",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/number-format"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{amountOwed:n.default.attr("number"),category:n.default.attr("string"),description:n.default.attr("string"),discount:n.default.attr("number"),name:n.default.attr("string"),nationalInsurance:n.default.attr("number"),privateInsurance:n.default.attr("number"),details:n.default.hasMany("line-item-detail",{async:!1}),amountOwedChanged:function(){Ember.run.debounce(this,function(){var e=this._getValidNumber(this.get("discount")),t=this._getValidNumber(this.get("nationalInsurance")),n=this._getValidNumber(this.get("privateInsurance")),a=this._getValidNumber(this.get("total"));(a=a-e-t-n)<0&&(a=0),this.get("isDestroyed")||this.set("amountOwed",this._numberFormat(a,!0))},500)}.observes("discount","nationalInsurance","privateInsurance","total"),detailTotals:Ember.computed.mapBy("details","amountOwed"),total:Ember.computed.sum("detailTotals"),validations:{category:{presence:!0},discount:{numericality:{allowBlank:!0}},nationalInsurance:{numericality:{allowBlank:!0}},name:{presence:!0},privateInsurance:{numericality:{allowBlank:!0}},total:{numericality:{allowBlank:!0}}}})}),define("hospitalrun/models/custom-field",["exports","ember-validations","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.Model.extend(t.default,{checkboxes:n.default.attr(),classNames:n.default.attr("string"),colSpan:n.default.attr("number"),includeOtherOption:n.default.attr("boolean"),label:n.default.attr("string"),otherOptionLabel:n.default.attr("string"),prompt:n.default.attr("string"),property:n.default.attr("string"),type:n.default.attr("string"),values:n.default.attr("string"),validations:{colSpan:{numericality:{allowBlank:!0,onlyInteger:!0}},label:{presence:!0},type:{presence:!0}}})}),define("hospitalrun/models/custom-form",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({alwaysInclude:n.default.attr("boolean"),columns:n.default.attr("number",{defaultValue:1}),fields:n.default.attr("custom-fields",{defaultValue:function(){return[]}}),formType:n.default.attr("string"),name:n.default.attr("string"),validations:{formType:{presence:!0},name:{presence:!0},columns:{numericality:{allowBlank:!0,onlyInteger:!0,lessThanOrEqualTo:12}}}})}),define("hospitalrun/models/diagnosis",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({active:n.default.attr("boolean",{defaultValue:!0}),date:n.default.attr("date"),diagnosis:n.default.attr("string"),secondaryDiagnosis:n.default.attr("boolean",{defaultValue:!1}),validations:{date:{presence:!0},diagnosis:{presence:!0}}})}),define("hospitalrun/models/family-info",["exports","ember-data","ember-validations","ember-pouch"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a.Model.extend(n.default,{age:t.default.attr("number"),civilStatus:t.default.attr("string"),education:t.default.attr("string"),income:t.default.attr("string"),insurance:t.default.attr("string"),name:t.default.attr("string"),occupation:t.default.attr("string"),relationship:t.default.attr("string"),validations:{age:{numericality:{allowBlank:!0}},name:{presence:!0}}})}),define("hospitalrun/models/imaging",["exports","hospitalrun/models/abstract","hospitalrun/mixins/can-edit-requested","hospitalrun/mixins/date-format","ember-data","hospitalrun/utils/patient-validation","hospitalrun/mixins/result-validation"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,o.default,{imagingDate:i.default.attr("date"),notes:i.default.attr("string"),radiologist:i.default.attr("string"),requestedBy:i.default.attr("string"),requestedDate:i.default.attr("date"),result:i.default.attr("string"),status:i.default.attr("string"),completedBy:i.default.attr("string"),charges:i.default.hasMany("proc-charge",{async:!1}),imagingType:i.default.belongsTo("pricing",{async:!1}),patient:i.default.belongsTo("patient",{async:!1}),visit:i.default.belongsTo("visit",{async:!1}),imagingDateAsTime:Ember.computed("imagingDate",function(){return this.dateToTime(this.get("imagingDate"))}),requestedDateAsTime:Ember.computed("requestedDate",function(){return this.dateToTime(this.get("requestedDate"))}),validations:{imagingTypeName:{presence:{if:function(e){if(e.get("isNew"))return!0},message:"Please select an imaging type"}},patientTypeAhead:s.default.patientTypeAhead,patient:{presence:!0}}})}),define("hospitalrun/models/inc-category",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({incidentCategoryName:n.default.attr("string"),incidentCategoryItems:n.default.attr()})}),define("hospitalrun/models/incident-note",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({givenBy:n.default.attr("string"),givenByDisplayName:n.default.attr("string"),description:n.default.attr("string"),dateRecorded:n.default.attr("date")})}),define("hospitalrun/models/incident",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/incident-statuses","moment","ember-validations"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0})
var o=n.default.attr,r=n.default.belongsTo,l=n.default.hasMany
e.default=t.default.extend(a.default,{categoryItem:o("string"),categoryName:o("string"),customForms:n.default.attr("custom-forms"),dateOfIncident:o("date"),department:o("string"),description:o("string"),friendlyId:o("string"),modifiedByDisplayName:n.default.attr("string"),notificationSend:o("boolean",{defaultValue:!1}),reportedBy:o("string"),reportedByDisplayName:o("string"),reportedDate:o("date"),reportedTo:o("string"),sentinelEvent:o("boolean"),status:o("string",{defaultValue:a.REPORTED}),incidentAttachments:l("attachment",{async:!0}),notes:l("incident-note",{async:!0}),patient:r("patient",{async:!1}),dateForFilter:Ember.computed("dateOfIncident",function(){var e=Ember.get(this,"dateOfIncident")
return(0,i.default)(e).startOf("day").toDate()}),localizedStatus:Ember.computed("status",function(){var e=Ember.get(this,"status")
return this.getLocalizedStatus(e)}),patientTypeAhead:Ember.computed("patient",{get:function(){var e=Ember.get(this,"patient")
return Ember.isEmpty(e)?Ember.get(this,"typeAheadPatientName"):Ember.get(e,"displayName")+" - "+Ember.get(e,"displayPatientId")},set:function(e,t){return Ember.set(this,"typeAheadPatientName",t),t}}),validations:{categoryName:{presence:!0},dateOfIncident:{presence:!0},department:{presence:!0},description:{presence:!0},patientTypeAhead:{inline:(0,s.validator)(function(){var e=Ember.get(this,"patientTypeAhead"),t=!0
if(!Ember.isEmpty(e)){var n=Ember.get(this,"patient.displayName")
if(Ember.isEmpty(n))t=!1
else{var a=e.substr(0,n.length).toLowerCase()
0!==n.toLowerCase().indexOf(a)&&(t=!1)}if(!t)return Ember.get(this,"intl").t("incident.messages.selectExistingPatient").toString()}})}}})}),define("hospitalrun/models/inv-location",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/location-name"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=t.default.extend(a.default,{quantity:n.default.attr("number"),location:n.default.attr("string"),aisleLocation:n.default.attr("string"),intl:Ember.inject.service(),locationNameWithQuantity:Ember.computed("locationName","quantity",function(){var e=this.get("quantity")
return this.get("locationName")+" ("+this.get("intl").t("inventory.labels.availableQuantity",{quantity:e})+")"}),validations:{adjustmentQuantity:{numericality:{greaterThan:0,messages:{greaterThan:"must be greater than 0"}},acceptance:{accept:!0,if:function(e){var t=e.get("adjustmentQuantity"),n=e.get("transactionType"),a=e.get("quantity")
return!(!Ember.isEmpty(t)&&!isNaN(t))||"Adjustment (Add)"!==n&&t>a},message:"Invalid quantity"}},dateCompleted:{presence:{message:"Please provide a date"}},transferLocation:{acceptance:{accept:!0,if:function(e){var t=e.get("transferLocation"),n=e.get("transferItem")
return!(Ember.isEmpty(n)||!Ember.isEmpty(t))},message:"Please select a location to transfer to"}}}})
e.default=i}),define("hospitalrun/models/inv-purchase",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/location-name","hospitalrun/mixins/number-format"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0})
var s=t.default.extend(a.default,i.default,{purchaseCost:n.default.attr("number"),lotNumber:n.default.attr("string"),dateReceived:n.default.attr("date"),originalQuantity:n.default.attr("number"),currentQuantity:n.default.attr("number"),expirationDate:n.default.attr("date"),expired:n.default.attr("boolean"),location:n.default.attr("string"),aisleLocation:n.default.attr("string"),giftInKind:n.default.attr("boolean"),inventoryItem:n.default.attr("string"),vendor:n.default.attr("string"),vendorItemNo:n.default.attr("string"),distributionUnit:n.default.attr("string"),invoiceNo:n.default.attr("string"),quantityGroups:n.default.attr({defaultValue:function(){return[]}}),costPerUnit:Ember.computed("purchaseCost","originalQuantity",function(){var e=this.get("purchaseCost"),t=parseInt(this.get("originalQuantity"))
return Ember.isEmpty(e)||Ember.isEmpty(t)||0===e||0===t?0:this._numberFormat(e/t,!0)}),validations:{purchaseCost:{numericality:!0},originalQuantity:{numericality:{greaterThanOrEqualTo:0}},vendor:{presence:!0}}})
e.default=s}),define("hospitalrun/models/inv-request",["exports","hospitalrun/models/abstract","hospitalrun/mixins/inventory-adjustment-types","ember-data","hospitalrun/mixins/location-name"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0})
var s=t.default.extend(n.default,i.default,{adjustPurchases:a.default.attr("boolean"),completedBy:a.default.attr("string"),costPerUnit:a.default.attr("number"),dateCompleted:a.default.attr("date"),dateRequested:a.default.attr("date"),deliveryAisle:a.default.attr("string"),deliveryLocation:a.default.attr("string"),expenseAccount:a.default.attr("string"),inventoryItem:a.default.belongsTo("inventory",{async:!0}),locationsAffected:a.default.attr(),markAsConsumed:a.default.attr("boolean",{defaultValue:!0}),patient:a.default.belongsTo("patient",{async:!1}),purchasesAffected:a.default.attr(),quantity:a.default.attr("number"),quantityAtCompletion:a.default.attr("number"),reason:a.default.attr("string"),requestedBy:a.default.attr("string"),status:a.default.attr("string"),transactionType:a.default.attr("string"),visit:a.default.belongsTo("visit",{async:!1}),deliveryLocationName:Ember.computed("deliveryAisle","deliveryLocation",function(){var e=this.get("deliveryAisle"),t=this.get("deliveryLocation")
return this.formatLocationName(t,e)}),deliveryDetails:Ember.computed("deliveryAisle","deliveryLocation","patient",function(){var e=this.get("deliveryLocationName"),t=this.get("patient")
return Ember.isEmpty(t)?e:t.get("displayName")}),haveReason:Ember.computed("reason",function(){return!Ember.isEmpty(this.get("reason"))}),isAdjustment:Ember.computed("transactionType",function(){var e=this.get("adjustmentTypes"),t=this.get("transactionType"),n=e.findBy("type",t)
return!Ember.isEmpty(n)}),isFulfillment:Ember.computed("transactionType",function(){return"Fulfillment"===this.get("transactionType")}),isTransfer:Ember.computed("transactionType",function(){return"Transfer"===this.get("transactionType")}),validations:{inventoryItemTypeAhead:{acceptance:{accept:!0,if:function(e){if(!e.get("hasDirtyAttributes"))return!1
var t=e.get("inventoryItem.name"),n=e.get("inventoryItemTypeAhead"),a=e.get("requestedItems")
return"Requested"!==e.get("status")&&(Ember.isEmpty(t)||Ember.isEmpty(n)?Ember.isEmpty(a):t!==n.substr(0,t.length))},message:"Please select a valid inventory item"}},quantity:{numericality:{greaterThan:0,messages:{greaterThan:"must be greater than 0"},if:function(e){var t=e.get("requestedItems")
return Ember.isEmpty(t)}},acceptance:{accept:!0,if:function(e){var t=e.get("isNew"),n=parseInt(e.get("quantity")),a=e.get("transactionType")
return"Return"!==a&&n>(t&&"Request"===a?e.get("inventoryItem.quantity"):e.get("inventoryLocation.quantity"))},message:"The quantity must be less than or equal to the number of available items."}}}})
e.default=s}),define("hospitalrun/models/inventory-batch",["exports","hospitalrun/models/abstract"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({haveInvoiceItems:function(){var e=this.get("invoiceItems")
return!Ember.isEmpty(e)},validations:{dateReceived:{presence:!0},inventoryItemTypeAhead:{presence:{unless:function(e){return e.haveInvoiceItems()}}},purchaseCost:{numericality:{greaterThan:0,messages:{greaterThan:"must be greater than 0"},unless:function(e){return e.haveInvoiceItems()}}},quantity:{numericality:{greaterThan:0,messages:{greaterThan:"must be greater than 0"},unless:function(e){return e.haveInvoiceItems()}}},vendor:{presence:!0}}})}),define("hospitalrun/models/inventory",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/location-name","hospitalrun/utils/item-condition"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0})
var s={if:function(e){return!Ember.get(e,"skipSavePurchase")&&Ember.get(e,"isNew")}}
e.default=t.default.extend(a.default,{crossReference:n.default.attr("string"),description:n.default.attr("string"),distributionUnit:n.default.attr("string"),friendlyId:n.default.attr("string"),inventoryType:n.default.attr("string"),keywords:n.default.attr(),name:n.default.attr("string"),price:n.default.attr("number"),quantity:n.default.attr("number"),rank:n.default.attr("string"),reorderPoint:n.default.attr("number"),locations:n.default.hasMany("inv-location",{async:!1}),purchases:n.default.hasMany("inv-purchase",{async:!1}),estimatedDaysOfStock:14,availableLocations:Ember.computed("locations.@each.quantity",function(){return Ember.get(this,"locations").filter(function(e){return Ember.get(e,"quantity")>0})}),displayLocations:Ember.computed("availableLocations",function(){var e=this,t=Ember.get(this,"availableLocations"),n=[]
return t.forEach(function(t){var a=Ember.get(t,"aisleLocation"),i=Ember.get(t,"location"),s=e.formatLocationName(i,a)
Ember.isEmpty(s)||n.push(s)}),n.toString()}),condition:Ember.computed("rank","estimatedDaysOfStock",function(){var e=Ember.get(this,"estimatedDaysOfStock"),t=(0,i.rankToMultiplier)(Ember.get(this,"rank"))
return(0,i.getCondition)(e,t)}),validations:{distributionUnit:{presence:!0},purchaseCost:{numericality:s},name:{presence:!0},quantity:{numericality:{validateIfNewItem:s,greaterThanOrEqualTo:0}},price:{numericality:{allowBlank:!0}},originalQuantity:{presence:s},reorderPoint:{numericality:{allowBlank:!0}},inventoryType:{presence:!0},vendor:{presence:s}},updateQuantity:function(){var e=Ember.get(this,"purchases").reduce(function(e,t){var n=0
return t.get("expired")||(n=t.get("currentQuantity")),e+n},0)
Ember.set(this,"quantity",e)}})}),define("hospitalrun/models/invoice",["exports","hospitalrun/models/abstract","hospitalrun/mixins/date-format","ember-data","hospitalrun/mixins/number-format","hospitalrun/utils/patient-validation"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,{billDate:a.default.attr("date"),externalInvoiceNumber:a.default.attr("string"),paidTotal:a.default.attr("number"),patientInfo:a.default.attr("string"),remarks:a.default.attr("string"),status:a.default.attr("string"),lineItems:a.default.hasMany("billing-line-item",{async:!1}),patient:a.default.belongsTo("patient",{async:!1}),paymentProfile:a.default.belongsTo("price-profile",{async:!1}),payments:a.default.hasMany("payment",{async:!1}),visit:a.default.belongsTo("visit",{async:!1}),addPayment:function(e){Ember.get(this,"payments").addObject(e),this.paymentAmountChanged()},billDateAsTime:Ember.computed("billDate",function(){return this.dateToTime(Ember.get(this,"billDate"))}),discountTotals:Ember.computed.mapBy("lineItemsByCategory","discount"),discount:Ember.computed.sum("discountTotals"),nationalInsuranceTotals:Ember.computed.mapBy("lineItemsByCategory","nationalInsurance"),nationalInsurance:Ember.computed.sum("nationalInsuranceTotals"),paidFlag:Ember.computed("status",function(){return"Paid"===Ember.get(this,"status")}),remainingBalance:Ember.computed("finalPatientResponsibility","paidTotal",function(){var e=Ember.get(this,"finalPatientResponsibility"),t=Ember.get(this,"paidTotal")
return this._numberFormat(e-t,!0)}),privateInsuranceTotals:Ember.computed.mapBy("lineItemsByCategory","privateInsurance"),privateInsurance:Ember.computed.sum("privateInsuranceTotals"),lineTotals:Ember.computed.mapBy("lineItems","total"),total:Ember.computed.sum("lineTotals"),displayInvoiceNumber:Ember.computed("externalInvoiceNumber","id",function(){var e=Ember.get(this,"externalInvoiceNumber"),t=Ember.get(this,"id")
return Ember.isEmpty(e)?t:e}),lineItemsByCategory:Ember.computed("lineItems.@each.amountOwed",function(){var e=Ember.get(this,"lineItems"),t=[]
return e.forEach(function(e){var n=Ember.get(e,"category"),a=t.findBy("category",n)
Ember.isEmpty(a)&&(a={category:n,items:[]},t.push(a)),a.items.push(e)}.bind(this)),t.forEach(function(e){e.amountOwed=this._calculateTotal(e.items,"amountOwed"),e.discount=this._calculateTotal(e.items,"discount"),e.nationalInsurance=this._calculateTotal(e.items,"nationalInsurance"),e.privateInsurance=this._calculateTotal(e.items,"privateInsurance"),e.total=this._calculateTotal(e.items,"total")}.bind(this)),t}),patientIdChanged:function(){if(!Ember.isEmpty(Ember.get(this,"patient"))){var e=Ember.get(this,"patient.displayName"),t=Ember.get(this,"patient.displayPatientId")
Ember.set(this,"patientInfo",e+" - "+t)}}.observes("patient.displayName","patient.id","patient.displayPatientId"),patientResponsibilityTotals:Ember.computed.mapBy("lineItems","amountOwed"),patientResponsibility:Ember.computed.sum("patientResponsibilityTotals"),finalPatientResponsibility:Ember.computed("patientResponsibility","paymentProfile",function(){var e=this._getValidNumber(this.get("paymentProfile.setFee")),t=this._getValidNumber(this.get("paymentProfile.discountAmount")),n=this._getValidNumber(this.get("patientResponsibility"))
return e>0?e<n?e:n:t>0?n-t>0?n-t:0:n}),paymentAmountChanged:function(){var e=Ember.get(this,"payments").filter(function(e){return!Ember.get(e,"isNew")})
if(0!==e.length){var t=e.reduce(function(e,t){return e+this._getValidNumber(t.get("amount"))}.bind(this),0)
Ember.set(this,"paidTotal",this._numberFormat(t,!0)),Ember.get(this,"remainingBalance")<=0&&Ember.set(this,"status","Paid")}}.observes("payments.[]","payments.@each.amount"),validations:{patientTypeAhead:s.default.patientTypeAhead,patient:{presence:!0},visit:{presence:!0}}})}),define("hospitalrun/models/lab",["exports","hospitalrun/models/abstract","hospitalrun/mixins/can-edit-requested","hospitalrun/mixins/date-format","ember-data","hospitalrun/utils/patient-validation","hospitalrun/mixins/result-validation"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,o.default,{customForms:i.default.attr("custom-forms"),labDate:i.default.attr("date"),notes:i.default.attr("string"),requestedBy:i.default.attr("string"),requestedDate:i.default.attr("date"),result:i.default.attr("string"),status:i.default.attr("string"),charges:i.default.hasMany("proc-charge",{async:!1}),labType:i.default.belongsTo("pricing",{async:!1}),patient:i.default.belongsTo("patient",{async:!1}),visit:i.default.belongsTo("visit",{async:!1}),labDateAsTime:Ember.computed("labDate",function(){return this.dateToTime(Ember.get(this,"labDate"))}),requestedDateAsTime:Ember.computed("requestedDate",function(){return this.dateToTime(Ember.get(this,"requestedDate"))}),validations:{labTypeName:{presence:{if:function(e){if(e.get("isNew"))return!0},message:"Please select a lab type"}},patientTypeAhead:s.default.patientTypeAhead,patient:{presence:!0}}})}),define("hospitalrun/models/line-item-detail",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/number-format"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{department:n.default.attr("string"),expenseAccount:n.default.attr("string"),name:n.default.attr("string"),price:n.default.attr("number"),quantity:n.default.attr("number"),total:n.default.attr("number"),pricingItem:n.default.belongsTo("pricing",{async:!1}),amountOwed:Ember.computed("price","quantity",function(){var e=Ember.get(this,"price"),t=Ember.get(this,"quantity"),n=0
return this._validNumber(e)&&this._validNumber(t)&&(n=this._numberFormat(e*t,!0)),n})})}),define("hospitalrun/models/lookup",["exports","ember-pouch","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=n.default.attr
e.default=t.Model.extend({organizeByType:a("boolean"),userCanAdd:a("boolean"),value:a("")})})
define("hospitalrun/models/medication",["exports","hospitalrun/models/abstract","hospitalrun/mixins/can-edit-requested","ember-data","hospitalrun/mixins/date-format","hospitalrun/mixins/medication-details"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,s.default,{notes:a.default.attr("string"),prescription:a.default.attr("string"),prescriptionDate:a.default.attr("date"),quantity:a.default.attr("number"),refills:a.default.attr("number"),requestedDate:a.default.attr("date"),requestedBy:a.default.attr("string"),status:a.default.attr("string"),inventoryItem:a.default.belongsTo("inventory",{async:!0}),patient:a.default.belongsTo("patient",{async:!1}),visit:a.default.belongsTo("visit",{async:!1}),isRequested:Ember.computed("status",function(){return"Requested"===Ember.get(this,"status")}),medicationName:Ember.computed("medicationTitle","inventoryItem",function(){return this.getMedicationName("inventoryItem")}),medicationPrice:Ember.computed("priceOfMedication","inventoryItem",function(){return this.getMedicationPrice("inventoryItem")}),prescriptionDateAsTime:Ember.computed("prescriptionDate",function(){return this.dateToTime(Ember.get(this,"prescriptionDate"))}),requestedDateAsTime:Ember.computed("requestedDate",function(){return this.dateToTime(Ember.get(this,"requestedDate"))}),validations:{prescription:{acceptance:{accept:!0,if:function(e){if(!Ember.get(e,"hasDirtyAttributes")||Ember.get(e,"isFulfilling"))return!1
var t=Ember.get(e,"prescription"),n=Ember.get(e,"quantity")
return Ember.isEmpty(t)&&Ember.isEmpty(n)},message:"Please enter a prescription or a quantity"}},inventoryItemTypeAhead:{acceptance:{accept:!0,if:function(e){if(!Ember.get(e,"hasDirtyAttributes")||!Ember.get(e,"isNew"))return!1
var t=Ember.get(e,"inventoryItem.name"),n=Ember.get(e,"inventoryItemTypeAhead")
return!(!Ember.isEmpty(t)&&!Ember.isEmpty(n))||t!==n.substr(0,t.length)},message:"Please select a valid medication"}},patientTypeAhead:{presence:{if:function(e){return Ember.get(e,"selectPatient")}}},quantity:{numericality:{allowBlank:!0,greaterThan:0,messages:{greaterThan:"must be greater than 0"}},presence:{if:function(e){return Ember.get(e,"isFulfilling")}},acceptance:{accept:!0,if:function(e){var t=Ember.get(e,"isFulfilling"),n=parseInt(Ember.get(e,"quantity"))
return!!t&&n>e.get("inventoryItem.quantity")},message:"The quantity must be less than or equal to the number of available medication."}},refills:{numericality:{allowBlank:!0}}}})}),define("hospitalrun/models/operation-report",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({additionalNotes:n.default.attr("string"),caseComplexity:n.default.attr("number"),customForms:n.default.attr("custom-forms"),procedures:n.default.attr("operative-procedures",{defaultValue:function(){return[]}}),operationDescription:n.default.attr("string"),surgeon:n.default.attr("string"),surgeryDate:n.default.attr("date"),preOpDiagnoses:n.default.hasMany("diagnosis"),diagnoses:n.default.hasMany("diagnosis"),operativePlan:n.default.belongsTo("operative-plan",{async:!0}),patient:n.default.belongsTo("patient",{async:!1}),validations:{caseComplexity:{numericality:{allowBlank:!0,onlyInteger:!0}},procedureDescription:{presence:{if:function(e){return Ember.isEmpty(Ember.get(e,"procedures"))}}}}})}),define("hospitalrun/models/operative-plan",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/operative-plan-statuses"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({additionalNotes:n.default.attr("string"),admissionInstructions:n.default.attr("string"),caseComplexity:n.default.attr("number"),customForms:n.default.attr("custom-forms"),operationDescription:n.default.attr("string"),procedures:n.default.attr("operative-procedures",{defaultValue:function(){return[]}}),status:n.default.attr("string",{defaultValue:a.PLANNED_STATUS}),surgeon:n.default.attr("string"),diagnoses:n.default.hasMany("diagnosis"),patient:n.default.belongsTo("patient",{async:!1}),isPlanned:Ember.computed("status",{get:function(){return Ember.get(this,"status")===a.PLANNED_STATUS}}),validations:{caseComplexity:{numericality:{allowBlank:!0,onlyInteger:!0}},procedureDescription:{presence:{if:function(e){return Ember.isEmpty(Ember.get(e,"procedures"))}}}}})}),define("hospitalrun/models/option",["exports","ember-pouch","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.Model.extend({value:n.default.attr("")})}),define("hospitalrun/models/override-price",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({price:n.default.attr("number"),profile:n.default.belongsTo("price-profile",{async:!1}),validations:{profile:{presence:!0},price:{numericality:!0}}})}),define("hospitalrun/models/patient-note",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({attribution:n.default.attr("string"),content:n.default.attr("string"),createdBy:n.default.attr("string"),date:n.default.attr("date"),noteType:n.default.attr(),patient:n.default.belongsTo("patient",{async:!1}),visit:n.default.belongsTo("visit",{async:!1}),authoredBy:Ember.computed("attribution","createdBy",function(){if(Ember.isEmpty(this.get("attribution")))return this.get("createdBy")
var e=this.get("intl")
return this.get("createdBy")+" "+e.t("patients.notes.onBehalfOfCopy")+" "+this.get("attribution")}),validations:{patient:{presence:!0},visit:{presence:!0},content:{presence:!0}}})}),define("hospitalrun/models/patient",["exports","hospitalrun/models/abstract","hospitalrun/mixins/dob-days","hospitalrun/utils/email-validation","ember-data","hospitalrun/mixins/patient-name"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,s.default,{admitted:i.default.attr("boolean",{defaultValue:!1}),additionalContacts:i.default.attr(),address:i.default.attr("string"),address2:i.default.attr("string"),address3:i.default.attr("string"),address4:i.default.attr("string"),bloodType:i.default.attr("string"),clinic:i.default.attr("string"),country:i.default.attr("string"),checkedIn:i.default.attr("boolean",{defaultValue:!1}),customForms:i.default.attr("custom-forms"),dateOfBirth:i.default.attr("date"),economicClassification:i.default.attr("string"),email:i.default.attr("string"),expenses:i.default.attr(),externalPatientId:i.default.attr("string"),familySupport1:i.default.attr("string"),familySupport2:i.default.attr("string"),familySupport3:i.default.attr("string"),familySupport4:i.default.attr("string"),familySupport5:i.default.attr("string"),friendlyId:i.default.attr("string"),familyInfo:i.default.attr(),firstName:i.default.attr("string"),sex:i.default.attr("string"),occupation:i.default.attr("string"),history:i.default.attr("string"),insurance:i.default.attr("string"),lastName:i.default.attr("string"),livingArrangement:i.default.attr("string"),middleName:i.default.attr("string"),notes:i.default.attr("string"),otherIncome:i.default.attr("string"),patientType:i.default.attr("string"),parent:i.default.attr("string"),phone:i.default.attr("string"),placeOfBirth:i.default.attr("string"),referredDate:i.default.attr("date"),referredBy:i.default.attr("string"),religion:i.default.attr("string"),socialActionTaken:i.default.attr("string"),socialRecommendation:i.default.attr("string"),status:i.default.attr("string"),allergies:i.default.hasMany("allergy",{async:!0}),diagnoses:i.default.hasMany("diagnosis",{async:!1}),operationReports:i.default.hasMany("operation-report",{async:!0}),operativePlans:i.default.hasMany("operative-plan",{async:!0}),payments:i.default.hasMany("payment",{async:!0}),paymentProfile:i.default.belongsTo("price-profile",{async:!1}),age:Ember.computed("dateOfBirth",function(){var e=Ember.get(this,"dateOfBirth")
return this.convertDOBToText(e)}),displayAddress:Ember.computed("address","address2","address3","address4",function(){var e=this.getProperties("address","address2","address3","address4"),t=""
for(var n in e)Ember.isEmpty(e[n])||(Ember.isEmpty(t)||(t+=", "),t+=e[n])
return t}),displayName:Ember.computed("firstName","lastName","middleName",function(){return this.getPatientDisplayName(this)}),displayPatientId:Ember.computed("id","externalPatientId","friendlyId",function(){return this.getPatientDisplayId(this)}),shortAge:Ember.computed("dateOfBirth",function(){var e=Ember.get(this,"dateOfBirth")
return this.convertDOBToText(e,!0)}),shortDisplayName:Ember.computed("firstName","lastName",function(){return this.getPatientDisplayName(this,!0)}),validations:{email:{format:{with:a.default.emailRegex,allowBlank:!0,message:"please enter a valid email address"}},firstName:{presence:!0},lastName:{presence:!0}}})}),define("hospitalrun/models/payment",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({amount:n.default.attr("number"),charityPatient:n.default.attr("boolean"),datePaid:n.default.attr("date"),expenseAccount:n.default.attr("string"),notes:n.default.attr("string"),paymentType:n.default.attr("string"),invoice:n.default.belongsTo("invoice",{async:!1}),canRemovePayment:Ember.computed("paymentType",function(){return"Deposit"===Ember.get(this,"paymentType")}),validations:{amount:{numericality:!0},datePaid:{presence:!0}}})}),define("hospitalrun/models/photo",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=n.default.attr,i=n.default.belongsTo
e.default=t.default.extend({caption:a("string"),coverImage:a("boolean"),files:a("attachments",{defaultValue:function(){return[]}}),fileName:a("string"),isImage:n.default.attr("boolean",{defaultValue:!1}),localFile:n.default.attr("boolean",{defaultValue:!1}),url:a("string"),patient:i("patient",{async:!1}),visit:i("visit",{async:!1}),procedure:i("procedure",{async:!1}),shortFileName:Ember.computed("fileName",function(){var e=Ember.get(this,"fileName")
return Ember.isEmpty(e)||(e=e.substr(e.lastIndexOf("/")+1)),e})})}),define("hospitalrun/models/price-profile",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({name:n.default.attr("string"),discountAmount:n.default.attr("number"),discountPercentage:n.default.attr("number"),setFee:n.default.attr("number"),validations:{name:{presence:!0},discountAmount:{numericality:{allowBlank:!0}},discountPercentage:{numericality:{allowBlank:!0}},setFee:{numericality:{allowBlank:!0}}}})}),define("hospitalrun/models/pricing",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({category:n.default.attr("string"),expenseAccount:n.default.attr("string"),name:n.default.attr("string"),price:n.default.attr("number"),pricingType:n.default.attr("string"),pricingOverrides:n.default.hasMany("override-price",{async:!1}),validations:{category:{presence:!0},name:{presence:!0},price:{numericality:!0}}})}),define("hospitalrun/models/proc-charge",["exports","hospitalrun/models/abstract","ember-data","hospitalrun/mixins/medication-details"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{quantity:n.default.attr("number"),dateCharged:n.default.attr("date"),medication:n.default.belongsTo("inventory",{async:!1}),pricingItem:n.default.belongsTo("pricing",{async:!1}),medicationCharge:Ember.computed("medication","newMedicationCharge",function(){var e=Ember.get(this,"medication"),t=Ember.get(this,"newMedicationCharge")
return!Ember.isEmpty(e)||!Ember.isEmpty(t)}),medicationName:Ember.computed("medication",function(){return this.get("medication.name")}),medicationPrice:Ember.computed("medication",function(){return this.get("medication.price")}),validations:{itemName:{presence:!0,acceptance:{accept:!0,if:function(e){if(!Ember.get(e,"medicationCharge")||!Ember.get(e,"hasDirtyAttributes"))return!1
var t=Ember.get(e,"inventoryItem.name"),n=Ember.get(e,"itemName")
return!(!Ember.isEmpty(t)&&!Ember.isEmpty(n))||t!==n.substr(0,t.length)},message:"Please select a valid medication"}},quantity:{numericality:{greaterThan:0,messages:{greaterThan:"must be greater than 0"}}}}})}),define("hospitalrun/models/procedure",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({anesthesiaType:n.default.attr("string"),anesthesiologist:n.default.attr("string"),assistant:n.default.attr("string"),description:n.default.attr("string"),cptCode:n.default.attr("string"),location:n.default.attr("string"),notes:n.default.attr("string"),physician:n.default.attr("string"),procedureDate:n.default.attr("date"),timeStarted:n.default.attr("string"),timeEnded:n.default.attr("string"),charges:n.default.hasMany("proc-charge",{async:!1}),visit:n.default.belongsTo("visit",{async:!1}),validations:{description:{presence:!0},oxygenHours:{numericality:{allowBlank:!0}},pacuHours:{numericality:{allowBlank:!0}},physician:{presence:!0},procedureDate:{presence:!0},display_procedureDate:{presence:{message:"Please select a valid date"}}}})}),define("hospitalrun/models/report",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({reportDate:n.default.attr("date"),customForms:n.default.attr("custom-forms"),reportType:n.default.attr("string"),visit:n.default.belongsTo("visit",{async:!1}),validations:{visit:{presence:!0},reportDate:{presence:!0}}})}),define("hospitalrun/models/sequence",["exports","ember-pouch","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.Model.extend({prefix:n.default.attr("string"),value:n.default.attr("number")})}),define("hospitalrun/models/social-expense",["exports","ember-data","ember-validations","ember-pouch"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a.Model.extend(n.default,{category:t.default.attr("string"),sources:t.default.attr("string"),cost:t.default.attr(),validations:{category:{presence:!0},cost:{numericality:!0}}})}),define("hospitalrun/models/text-expansion",["exports","ember-data","ember-validations","ember-pouch"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a.Model.extend(n.default,{from:t.default.attr("string"),to:t.default.attr("string"),validations:{from:{presence:!0},to:{presence:!0}}})}),define("hospitalrun/models/user-role",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({name:n.default.attr("string"),capabilities:n.default.attr(),navRoute:n.default.attr()})}),define("hospitalrun/models/user",["exports","ember-data","hospitalrun/utils/email-validation","ember-validations"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=t.default.Model.extend(a.default,{derived_key:t.default.attr("string"),deleted:t.default.attr("boolean"),displayName:t.default.attr("string"),email:t.default.attr("string"),iterations:t.default.attr(),name:t.default.attr("string"),password:t.default.attr("string"),password_scheme:t.default.attr("string"),password_sha:t.default.attr("string"),rev:t.default.attr("string"),roles:t.default.attr(),salt:t.default.attr("string"),userPrefix:t.default.attr("string"),displayRole:Ember.computed("roles",function(){var e=this.get("roles")
if(!Ember.isEmpty(e))return e[0]}),validations:{email:{format:{with:n.default.emailRegex,message:"Please, enter a valid email address"}}}})
e.default=i}),define("hospitalrun/models/visit",["exports","hospitalrun/models/abstract","ember-data","moment"],function(e,t,n,a){function i(e){if(!e.get("hasDirtyAttributes"))return!1
var t=e.get("startDate"),n=e.get("endDate")
return!Ember.isEmpty(n)&&!Ember.isEmpty(t)&&n.getTime()<t.getTime()}Object.defineProperty(e,"__esModule",{value:!0})
var s={CLEAR:"clear",PENDING:"pending"}
e.default=t.default.extend({customForms:n.default.attr("custom-forms"),dischargeInfo:n.default.attr("string"),endDate:n.default.attr("date"),examiner:n.default.attr("string"),hasAppointment:n.default.attr("boolean",{defaultValue:!1}),history:n.default.attr("string"),historySince:n.default.attr("string"),location:n.default.attr("string"),notes:n.default.attr("string"),outPatient:n.default.attr("boolean"),paymentState:n.default.attr("string",{defaultValue:s.PENDING}),primaryDiagnosis:n.default.attr("string"),primaryBillingDiagnosis:n.default.attr("string"),primaryBillingDiagnosisId:n.default.attr("string"),reasonForVisit:n.default.attr("string"),startDate:n.default.attr("date"),status:n.default.attr("string"),visitType:n.default.attr(),charges:n.default.hasMany("proc-charge",{async:!1}),diagnoses:n.default.hasMany("diagnosis",{async:!1}),imaging:n.default.hasMany("imaging",{async:!0}),labs:n.default.hasMany("lab",{async:!0}),medication:n.default.hasMany("medication",{async:!0}),patient:n.default.belongsTo("patient",{async:!1}),patientNotes:n.default.hasMany("patient-note",{async:!0}),procedures:n.default.hasMany("procedure",{async:!0}),vitals:n.default.hasMany("vital",{async:!0}),reports:n.default.hasMany("report",{async:!0}),diagnosisList:Ember.computed("diagnoses.[]",function(){return Ember.get(this,"diagnoses").map(function(e){return e.get("diagnosis")})}),hasAppointmentLabel:Ember.computed("hasAppointment",function(){var e=Ember.get(this,"hasAppointment"),t=Ember.get(this,"intl")
return!0===e?t.t("visits.labels.haveAppointment"):t.t("visits.labels.noAppointment")}),hasCompletedImaging:Ember.computed("imaging.@each.status",function(){return Ember.get(this,"imaging").isAny("status","Completed")}),hasCompletedLabs:Ember.computed("labs.@each.status",function(){return Ember.get(this,"labs").isAny("status","Completed")}),hasCompletedMedication:Ember.computed("medication.@each.status",function(){return Ember.get(this,"medication").isAny("status","Fulfilled")}),hasDoneOrders:Ember.computed("imaging.@each.status","labs.@each.status",function(){var e=Ember.get(this,"intl"),t=Ember.get(this,"imaging"),n=Ember.get(this,"labs")
return t.isAny("status","Requested")||n.isAny("status","Requested")?e.t("visits.labels.ordersNotDone"):e.t("visits.labels.haveDoneOrders")}),primaryDiagnoses:Ember.computed("diagnoses.[].secondaryDiagnosis",function(){return Ember.get(this,"diagnoses").filterBy("secondaryDiagnosis",!1).map(function(e){return e.get("diagnosis")}).join(", ")}),visitDate:Ember.computed("startDate","endDate",function(){var e=Ember.get(this,"endDate"),t=(0,a.default)(Ember.get(this,"startDate")),n=t.format("l")
return Ember.isEmpty(e)||t.isSame(e,"day")||(n+=" - "+(0,a.default)(e).format("l")),n}),visitDescription:Ember.computed("visitDate","visitType",function(){return Ember.get(this,"visitDate")+" ("+Ember.get(this,"visitType")+")"}),validations:{endDate:{acceptance:{accept:!0,if:i,message:"Please select an end date later than the start date"}},patientTypeAhead:{presence:{if:function(e){return Ember.get(e,"checkIn")&&!Ember.get(e,"hidePatientSelection")}}},paymentState:{acceptance:{accept:!0,if:function(e){return!Object.keys(s).some(function(t){return s[t]===e.get("paymentState")})}},presence:!0},startDate:{acceptance:{accept:!0,if:i,message:"Please select a start date earlier than the end date"},presence:!0},visitType:{presence:!0}}})}),define("hospitalrun/models/vital",["exports","hospitalrun/models/abstract","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({dateRecorded:n.default.attr("date"),dbp:n.default.attr("number"),heartRate:n.default.attr("number"),height:n.default.attr("string"),respiratoryRate:n.default.attr("number"),sbp:n.default.attr("number"),temperature:n.default.attr("number"),weight:n.default.attr("string"),validations:{temperature:{numericality:{allowBlank:!0}},sbp:{numericality:{allowBlank:!0}},dbp:{numericality:{allowBlank:!0}},heartRate:{numericality:{allowBlank:!0}},respiratoryRate:{numericality:{allowBlank:!0}}}})}),define("hospitalrun/patients/add-contact/controller",["exports","hospitalrun/mixins/is-update-disabled","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{patientsEdit:Ember.inject.controller("patients/edit"),editController:Ember.computed.alias("patientsEdit"),title:(0,n.t)("patients.titles.addContact"),updateButtonText:(0,n.t)("buttons.add"),updateButtonAction:"add",showUpdateButton:!0,actions:{cancel:function(){this.send("closeModal")},add:function(){var e=this.getProperties("name","phone","email","relationship")
this.get("editController").send("addContact",e),this.setProperties({name:"",phone:"",email:"",relationship:""})}}})}),define("hospitalrun/patients/add-contact/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"HE4e+tAX",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["labels.name"],null],"name"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["patients.labels.phone"],null],"phone"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["patients.labels.email"],null],"email"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["patients.labels.relationships"],null],"relationship"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/add-contact/template.hbs"}})}),define("hospitalrun/patients/admitted/controller",["exports","hospitalrun/patients/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({})}),define("hospitalrun/patients/admitted/route",["exports","hospitalrun/macro","hospitalrun/patients/index/route"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend({pageTitle:(0,t.t)("patients.titles.admittedPatients"),_modelQueryParams:function(){return{mapReduce:"patient_by_admission"}}})}),define("hospitalrun/patients/admitted/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/VKe9J76",block:'{"symbols":[],"statements":[[12,"patients/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/patients/admitted/template.hbs"}})}),define("hospitalrun/patients/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/mixins/patient-visits","hospitalrun/mixins/patient-appointments","hospitalrun/mixins/patient-invoices","hospitalrun/mixins/pouchdb","hospitalrun/mixins/progress-dialog","hospitalrun/macro","ember-concurrency"],function(e,t,n,a,i,s,o,r,l){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,s.default,o.default,a.default,{title:(0,r.t)("patients.titles.delete"),progressTitle:(0,r.t)("patients.titles.deletePatientRecord"),progressMessage:(0,r.t)("patients.messages.deletingPatient"),deleting:(0,l.taskGroup)(),deleteMany:function(e){return this.get("deleteManyTask").perform(e)},deleteManyTask:(0,l.task)(regeneratorRuntime.mark(function e(t){var n,a,i
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t){e.next=2
break}return e.abrupt("return")
case 2:return e.next=4,t
case 4:if(n=e.sent,!Ember.isEmpty(n)){e.next=7
break}return e.abrupt("return")
case 7:return a=this.get("deleteRecordTask"),i=[],n.forEach(function(e){i.push(a.perform(e))}),e.next=12,(0,l.all)(i,"async array deletion")
case 12:return e.abrupt("return",e.sent)
case 13:case"end":return e.stop()}},e,this)})).group("deleting"),deleteRecordTask:(0,l.task)(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.set("archived",!0),e.next=3,t.save()
case 3:return e.next=5,t.unloadRecord()
case 5:return e.abrupt("return",e.sent)
case 6:case"end":return e.stop()}},e,this)})).group("deleting"),deletePatient:function(){return this.get("deletePatientTask").perform()},deletePatientTask:(0,l.task)(regeneratorRuntime.mark(function e(){var t,n,a,i,s
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.get("model"),e.next=3,this.getPatientVisits(t)
case 3:return n=e.sent,e.next=6,this.getPatientInvoices(t)
case 6:return a=e.sent,e.next=9,this.getPatientAppointments(t)
case 9:return i=e.sent,e.next=12,t.get("payments")
case 12:return s=e.sent,e.next=15,(0,l.all)([this.deleteVisits(n),this.deleteInvoices(a),this.deleteMany(i),this.deleteMany(s)])
case 15:return e.next=17,t.destroyRecord()
case 17:return e.abrupt("return",e.sent)
case 18:case"end":return e.stop()}},e,this)})).group("deleting"),deleteVisits:function(e){return this.get("deleteVisitsTask").perform(e)},deleteVisitsTask:(0,l.task)(regeneratorRuntime.mark(function e(t){var n,a=this
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=[],t.forEach(function(e){var t=e.get("labs"),i=e.get("procedures"),s=e.get("imaging"),o=i.get("charges"),r=t.get("charges"),l=s.get("charges"),d=e.get("charges")
n.push(a.deleteMany(t)),n.push(a.deleteMany(r)),n.push(a.deleteMany(e.get("patientNotes"))),n.push(a.deleteMany(e.get("vitals"))),n.push(a.deleteMany(i)),n.push(a.deleteMany(o)),n.push(a.deleteMany(e.get("medication"))),n.push(a.deleteMany(s)),n.push(a.deleteMany(l)),n.push(a.deleteMany(d))}),e.next=4,(0,l.all)(n)
case 4:return e.next=6,this.deleteMany(t)
case 6:return e.abrupt("return",e.sent)
case 7:case"end":return e.stop()}},e,this)})).group("deleting"),deleteInvoices:function(e){return this.get("deleteInvoicesTask").perform(e)},deleteInvoicesTask:(0,l.task)(regeneratorRuntime.mark(function e(t){var n,a,i
return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t
case 2:return n=e.sent,e.next=5,(0,l.all)(n.mapBy("lineItems"))
case 5:return a=e.sent,e.next=8,(0,l.all)(a.mapBy("details"))
case 8:return i=e.sent,e.next=11,(0,l.all)([this.deleteMany(n),this.deleteMany(a),this.deleteMany(i)])
case 11:return e.abrupt("return",e.sent)
case 12:case"end":return e.stop()}},e,this)})).group("deleting"),deleteActionTask:(0,l.task)(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.send("closeModal"),this.showProgressModal(),e.next=4,this.deletePatient(t)
case 4:this.closeProgressModal(),this.send(this.get("afterDeleteAction"),t)
case 6:case"end":return e.stop()}},e,this)})).drop(),actions:{delete:function(e){this.get("deleteActionTask").perform(e)}}})}),define("hospitalrun/patients/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"lU08RQKP",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","shortDisplayName"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/delete/template.hbs"}})}),define("hospitalrun/patients/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/allergy-actions","hospitalrun/mixins/blood-types","hospitalrun/mixins/diagnosis-actions","hospitalrun/mixins/patient-id","hospitalrun/mixins/patient-notes","hospitalrun/mixins/return-to","hospitalrun/utils/select-values","hospitalrun/mixins/user-session","hospitalrun/utils/visit-statuses","hospitalrun/mixins/patient-visits"],function(e,t,n,a,i,s,o,r,l,d,u,c){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,r.default,d.default,s.default,o.default,c.default,{canAddAppointment:Ember.computed(function(){return this.currentUserCan("add_appointment")}),canAddContact:Ember.computed(function(){return this.currentUserCan("add_patient")}),canAddImaging:Ember.computed(function(){return this.currentUserCan("add_imaging")}),canAddLab:Ember.computed(function(){return this.currentUserCan("add_lab")}),canAddMedication:Ember.computed(function(){return this.currentUserCan("add_medication")}),canAddPhoto:Ember.computed(function(){var e=this.get("isFileSystemEnabled")
return this.currentUserCan("add_photo")&&e}),canAddSocialWork:Ember.computed(function(){return this.currentUserCan("add_socialwork")}),canAddVisit:Ember.computed(function(){return this.currentUserCan("add_visit")}),canDeleteAppointment:Ember.computed(function(){return this.currentUserCan("delete_appointment")}),canDeleteContact:Ember.computed(function(){return this.currentUserCan("add_patient")}),canDeleteImaging:Ember.computed(function(){return this.currentUserCan("delete_imaging")}),canDeleteLab:Ember.computed(function(){return this.currentUserCan("delete_lab")}),canDeleteMedication:Ember.computed(function(){return this.currentUserCan("delete_medication")}),canDeletePhoto:Ember.computed(function(){return this.currentUserCan("delete_photo")}),canDeleteSocialWork:Ember.computed(function(){return this.currentUserCan("delete_socialwork")}),canDeleteVisit:Ember.computed(function(){return this.currentUserCan("delete_visit")}),patientTypes:Ember.computed(function(){var e=Ember.get(this,"intl")
return["Charity","Private"].map(function(t){return e.t("patients.labels.patientType"+t)})}),config:Ember.inject.service(),filesystem:Ember.inject.service(),database:Ember.inject.service(),patientController:Ember.inject.controller("patients"),addressOptions:Ember.computed.alias("patientController.addressOptions"),address1Include:Ember.computed.alias("patientController.addressOptions.value.address1Include"),address1Label:Ember.computed.alias("patientController.addressOptions.value.address1Label"),address2Include:Ember.computed.alias("patientController.addressOptions.value.address2Include"),address2Label:Ember.computed.alias("patientController.addressOptions.value.address2Label"),address3Include:Ember.computed.alias("patientController.addressOptions.value.address3Include"),address3Label:Ember.computed.alias("patientController.addressOptions.value.address3Label"),address4Include:Ember.computed.alias("patientController.addressOptions.value.address4Include"),address4Label:Ember.computed.alias("patientController.addressOptions.value.address4Label"),clinicList:Ember.computed.alias("patientController.clinicList"),countryList:Ember.computed.alias("patientController.countryList"),diagnosisList:Ember.computed.alias("patientController.diagnosisList"),isFileSystemEnabled:Ember.computed.alias("filesystem.isFileSystemEnabled"),pricingProfiles:Ember.computed.map("patientController.pricingProfiles",l.default.selectObjectMap),sexList:Ember.computed.alias("patientController.sexList"),statusList:Ember.computed.alias("patientController.statusList"),haveAdditionalContacts:Ember.computed("model.additionalContacts",function(){var e=this.get("model.additionalContacts")
return!Ember.isEmpty(e)}),haveAddressOptions:Ember.computed("addressOptions",function(){var e=this.get("addressOptions")
return!Ember.isEmpty(e)}),lookupListsToUpdate:[{name:"countryList",property:"model.country",id:"country_list"},{name:"clinicList",property:"model.clinic",id:"clinic_list"},{name:"sexList",property:"model.sex",id:"sex"},{name:"statusList",property:"model.status",id:"patient_status_list"}],patientImaging:Ember.computed("model.visits.[].imaging",function(){return this.getVisitCollection("imaging")}),patientLabs:Ember.computed("model.visits.[].labs",function(){return this.getVisitCollection("labs")}),patientMedications:Ember.computed("model.visits.[].medication",function(){return this.getVisitCollection("medication")}),patientProcedures:Ember.computed("model.visits.[].procedures","model.operationReports.[].procedures",function(){var e=this.get("model.visits"),t=Ember.get(this,"model.operationReports")
return this._getPatientProcedures(t,e)}),showExpenseTotal:Ember.computed("model.expenses.[]",function(){var e=this.get("model.expenses")
return!Ember.isEmpty(e)}),totalExpenses:Ember.computed("model.expenses.@each.cost",function(){var e=this.get("model.expenses")
if(!Ember.isEmpty(e))return e.reduce(function(e,t){if(!Ember.isEmpty(t.cost))return e+parseInt(t.cost)},0)}),updateCapability:"add_patient",actions:{addAllergy:function(e){var t=Ember.get(this,"model")
this.savePatientAllergy(t,e)},addContact:function(e){var t=this.getWithDefault("model.additionalContacts",[]),n=this.get("model")
t.addObject(e),n.set("additionalContacts",t),this.send("update",!0),this.send("closeModal")},addDiagnosis:function(e){this.get("model.diagnoses").addObject(e),this.send("update",!0),this.send("closeModal")},returnToPatient:function(){this.transitionToRoute("patients.index")},addPhoto:function(e){this.get("model.photos").addObject(e),this.send("closeModal")},appointmentDeleted:function(e){this.get("model.appointments").removeObject(e),this.send("closeModal")},deleteAllergy:function(e){var t=Ember.get(this,"model")
this.deletePatientAllergy(t,e)},deleteContact:function(e){var t=e.get("contactToDelete")
this.get("model.additionalContacts").removeObject(t),this.send("update",!0)},deleteExpense:function(e){var t=e.get("expenseToDelete")
this.get("model.expenses").removeObject(t),this.send("update",!0)},deleteFamily:function(e){var t=e.get("familyToDelete")
this.get("model.familyInfo").removeObject(t),this.send("update",!0)},deletePhoto:function(e){var t=e.get("photoToDelete"),n=t.get("id"),a=this.get("model.photos"),i=t.get("fileName")
a.removeObject(t),t.destroyRecord().then(function(){var e=this.get("filesystem")
if(this.get("isFileSystemEnabled")){var t=this.get("database").getPouchId(n,"photo")
e.deleteFile(i,t)}}.bind(this))},editAppointment:function(e){this.get("canAddAppointment")&&(e.set("returnToPatient",this.get("model.id")),e.set("returnTo",null),this.transitionToRoute("appointments.edit",e))},editImaging:function(e){this.get("canAddImaging")&&e.get("canEdit")&&(e.set("returnToPatient",this.get("model.id")),this.transitionToRoute("imaging.edit",e))},editLab:function(e){this.get("canAddLab")&&e.get("canEdit")&&(e.setProperties("returnToPatient",this.get("model.id")),this.transitionToRoute("labs.edit",e))},editMedication:function(e){this.get("canAddMedication")&&e.get("canEdit")&&(e.set("returnToPatient",this.get("model.id")),this.transitionToRoute("medication.edit",e))},editOperativePlan:function(e){var t=this,n=e
Ember.isEmpty(n)?this._addChildObject("patients.operative-plan",function(e){e.controller.getPatientDiagnoses(t.get("model"),e.currentModel)}):(n.set("returnToVisit"),n.set("returnToPatient",this.get("model.id")),this.transitionToRoute("patients.operative-plan",n))},editOperationReport:function(e){e.set("returnToPatient",this.get("model.id")),this.transitionToRoute("patients.operation-report",e)},editPhoto:function(e){this.send("openModal","patients.photo",e)},editProcedure:function(e){this.get("canAddVisit")&&(e.set("patient",this.get("model")),e.set("returnToVisit"),e.set("returnToPatient",this.get("model.id")),this.transitionToRoute("procedures.edit",e))},editVisit:function(e){this.get("canAddVisit")&&(e.set("returnToPatient",this.get("model.id")),this.transitionToRoute("visits.edit",e))},newAppointment:function(){this._addChildObject("appointments.edit")},newImaging:function(){this._addChildObject("imaging.edit")},newLab:function(){this._addChildObject("labs.edit")},newMedication:function(){this._addChildObject("medication.edit")},newSurgicalAppointment:function(){var e=this
this.transitionToRoute("appointments.edit","newsurgery").then(function(t){t.currentModel.setProperties({patient:e.get("model"),returnToPatient:e.get("model.id"),selectPatient:!1})})},newVisit:function(){var e=this.get("model")
this.send("createNewVisit",e,!0)},showAddContact:function(){this.send("openModal","patients.add-contact",{})},showAddPhoto:function(){var e=this.get("store").createRecord("photo",{patient:this.get("model"),saveToDir:this.get("model.id")+"/photos/"})
e.set("editController",this),this.send("openModal","patients.photo",e)},showAddPatientNote:function(e){this.get("canAddNote")&&(Ember.isEmpty(e)&&(e=this.get("store").createRecord("patient-note",{patient:this.get("model"),createdBy:this.getUserName()})),this.send("openModal","patients.notes",e))},showDeleteAppointment:function(e){e.set("deleteFromPatient",!0),this.send("openModal","appointments.delete",e)},showDeleteContact:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deleteContact",title:this.get("intl").t("patients.titles.deleteContact"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"contact"}),contactToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeleteExpense:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deleteExpense",title:this.get("intl").t("patients.titles.deleteExpense"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"expense"}),expenseToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeleteFamily:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deleteFamily",title:this.get("intl").t("patients.titles.deleteFamilyMember"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"family member"}),familyToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeleteImaging:function(e){this.send("openModal","imaging.delete",e)},showDeleteLab:function(e){this.send("openModal","labs.delete",e)},showDeleteMedication:function(e){this.send("openModal","medication.delete",e)},showDeletePhoto:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deletePhoto",title:this.get("intl").t("patients.titles.deletePhoto"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"photo"}),photoToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeleteVisit:function(e){e.set("deleteFromPatient",!0),this.send("openModal","visits.delete",e)},showEditExpense:function(e){this._showEditSocial(e,"social-expense","expense")},showEditFamily:function(e){this._showEditSocial(e,"family-info","family-info")},updateExpense:function(e){this._updateSocialRecord(e,"expenses")},updateFamilyInfo:function(e){this._updateSocialRecord(e,"familyInfo")},visitDeleted:function(e){var t=this,n=this.get("model.visits"),a=this.get("model"),i=a.get("checkedIn"),s=a.get("admitted")
if(n.removeObject(e),s||i){var o=!1
s&&Ember.isEmpty(n.findBy("status",u.default.ADMITTED))&&(a.set("admitted",!1),o=!0),i&&Ember.isEmpty(n.findBy("status",u.default.CHECKED_IN))&&(a.set("checkedIn",!1),o=!0),!0===o?a.save().then(function(){return t.send("closeModal")}):this.send("closeModal")}else this.send("closeModal")}},_addChildObject:function(e,t){var n={queryParams:{forPatientId:this.get("model.id")}}
this.transitionToRoute(e,"new",n).then(function(e){t&&t(e)})},_showEditSocial:function(e,t,n){var a=void 0
a=Ember.isEmpty(e)?this.get("store").createRecord(t,{newRecord:!0}):this.get("store").push({data:{id:Ember.get(e,"id"),type:t,attributes:e}}),this.send("openModal","patients.socialwork."+n,a)},getVisitCollection:function(e){var t=this.get("model.visits")
return this._getVisitCollection(t,e)},_updateSocialRecord:function(e,t){var n=this.getWithDefault("model."+t,[]),a=e.get("isNew"),i=this.get("model"),s=e.serialize()
if(s.id=e.get("id"),a)n.addObject(Ember.Object.create(s))
else{var o=n.findBy("id",s.id)
Ember.setProperties(o,s)}i.set(t,n),this.send("update",!0),this.send("closeModal")},_updateSequence:function(e){var t=this,n=this.get("config"),a=e.get("friendlyId")
return n.getPatientPrefix().then(function(e){if(new RegExp("^"+e+"\\d{5}$").test(a))return t.store.find("sequence","patient").then(function(t){var n=t.get("value"),i=parseInt(a.slice(e.length))
if(i>n)return t.set("value",i),t.save()})})},beforeUpdate:function(){var e=this
return this.get("model.isNew")?this.generateFriendlyId("patient").then(function(t){e.model.set("friendlyId",t)}):Ember.RSVP.resolve()},afterUpdate:function(e){var t=this
this._updateSequence(e).then(function(){$(".message").show(),$(".message").text(t.get("intl").t("patients.messages.savedPatient",{displayName:e.get("shortDisplayName")})),$(".message").delay(3e3).fadeOut(100)})}})}),define("hospitalrun/patients/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/patient-visits","hospitalrun/mixins/patient-notes","hospitalrun/mixins/pouchdb","hospitalrun/macro"],function(e,t,n,a,i,s){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,a.default,{customForms:Ember.inject.service(),editTitle:(0,s.t)("patients.titles.edit"),modelName:"patient",newTitle:(0,s.t)("patients.titles.new"),photos:null,actions:{updateNote:function(e){e.get("visit").save().then(function(){})},appointmentDeleted:function(e){this.controller.send("appointmentDeleted",e)},returnToPatient:function(){this.controller.send("returnToPatient")},deleteContact:function(e){this.controller.send("deleteContact",e)},deleteExpense:function(e){this.controller.send("deleteExpense",e)},deleteFamily:function(e){this.controller.send("deleteFamily",e)},deletePhoto:function(e){this.controller.send("deletePhoto",e)},updateExpense:function(e){this.controller.send("updateExpense",e)},updateFamilyInfo:function(e){this.controller.send("updateFamilyInfo",e)},visitDeleted:function(e){this.controller.send("visitDeleted",e)}},getNewData:function(){var e=this.get("customForms"),t={customForms:Ember.Object.create()}
return e.setDefaultCustomForms(["patient","socialwork"],t)},setupController:function(e,t){var n=t.get("friendlyId"),a=t.get("externalPatientId"),i=this.get("maxValue"),s=t.get("id")
Ember.isEmpty(n)&&!Ember.isEmpty(a)&&t.set("friendlyId",a),this._super(e,t),this.getPatientVisits(t).then(function(e){t.set("visits",e)}),this.store.query("appointment",{options:{startkey:[s,null,null,"appointment_"],endkey:[s,i,i,i]},mapReduce:"appointments_by_patient"}).then(function(e){t.set("appointments",e)}),this.store.query("photo",{options:{key:s},mapReduce:"photo_by_patient"}).then(function(e){var n=[]
n.addObjects(e),t.set("photos",n)})}})})
define("hospitalrun/patients/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"MXnEWBmT",block:'{"symbols":["form","expense","info","visit","appointment","photo","additionalContact","visit","medication","lab","imaging","procedure"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton","bubbles"],[[20,["model"]],false,false]],{"statements":[[4,"unless",[[20,["isNewOrDeleted"]]],null,{"statements":[[0,"      "],[1,[25,"patient-summary",null,[["patient","patientProcedures","disablePatientLink","store","allowAddAllergy","allowAddDiagnosis","allowAddOperativePlan","diagnosisList"],[[20,["model"]],[20,["patientProcedures"]],true,[20,["store"]],true,true,true,[20,["diagnosisList"]]]]],false],[0,"\\n      "],[6,"ul"],[9,"class","nav nav-pills tab-nav"],[9,"role","tablist"],[7],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[9,"class","active"],[7],[6,"a"],[9,"href","#history"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","history-tab"],[7],[1,[25,"t",["patients.navigation.history"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#general"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","general-tab"],[7],[1,[25,"t",["patients.navigation.general"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#photos"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","photos-tab"],[7],[1,[25,"t",["patients.navigation.photos"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#appointments"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","appointments-tab"],[7],[1,[25,"t",["patients.navigation.appointments"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#visits"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","visits-tab"],[7],[1,[25,"t",["patients.navigation.visits"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#medication"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","medication-tab"],[7],[1,[25,"t",["patients.navigation.medication"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#imaging"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","imaging-tab"],[7],[1,[25,"t",["patients.navigation.imaging"],null],false],[8],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#labs"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","labs-tab"],[7],[1,[25,"t",["patients.navigation.labs"],null],false],[8],[8],[0,"\\n"],[4,"if",[[20,["canAddSocialWork"]]],null,{"statements":[[0,"          "],[6,"li"],[9,"role","presentation"],[7],[6,"a"],[9,"href","#social"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","social-tab"],[7],[1,[25,"t",["patients.navigation.socialWork"],null],false],[8],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[6,"div"],[9,"class","tab-content"],[7],[0,"\\n"],[4,"unless",[[20,["isNewOrDeleted"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane active"],[9,"id","history"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n"],[4,"if",[[20,["canAddNote"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading clearfix"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPatientNote"],[["bubbles","on"],[false,"click"]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["buttons.newNote"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n"],[4,"if",[[20,["model","visits"]]],null,{"statements":[[4,"each",[[20,["model","visits"]]],null,{"statements":[[0,"                  "],[6,"div"],[9,"class","patient-history-item"],[7],[0,"\\n                    "],[6,"div"],[9,"class","patient-history-heading clickable"],[3,"action",[[19,0,[]],"editVisit",[19,8,[]]]],[7],[0,"\\n                      "],[6,"span"],[9,"class","ph-visit-date"],[7],[1,[19,8,["visitDate"]],false],[8],[0,"\\n                      "],[6,"span"],[9,"class","ph-visit-type"],[7],[1,[19,8,["visitType"]],false],[8],[0,"\\n                    "],[8],[0,"\\n"],[4,"if",[[19,8,["procedures"]]],null,{"statements":[[0,"                      "],[6,"div"],[9,"class","ph-note-item"],[7],[0,"\\n                        "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"t",["labels.procedures"],null],false],[8],[0,"\\n"],[4,"each",[[19,8,["procedures"]]],null,{"statements":[[0,"                          "],[6,"div"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editProcedure",[19,12,[]]]],[7],[0,"\\n                            "],[6,"h5"],[9,"class","ph-note-heading"],[7],[0,"\\n                              "],[1,[25,"date-format",[[19,12,["procedureDate"]]],null],false],[0,":\\n                              "],[1,[19,12,["description"]],false],[0,"\\n                            "],[8],[0,"\\n                          "],[8],[0,"\\n"]],"parameters":[12]},null],[0,"                      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,8,["hasCompletedImaging"]]],null,{"statements":[[0,"                      "],[6,"div"],[9,"class","ph-note-item"],[7],[0,"\\n                        "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"t",["labels.imageOrders"],null],false],[8],[0,"\\n"],[4,"each",[[19,8,["imaging"]]],null,{"statements":[[4,"if",[[25,"eq",[[19,11,["status"]],"Completed"],null]],null,{"statements":[[0,"                            "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"date-format",[[19,11,["imagingDate"]]],null],false],[0,": "],[1,[19,11,["imagingType","name"]],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[11]},null],[0,"                      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,8,["hasCompletedLabs"]]],null,{"statements":[[0,"                      "],[6,"div"],[9,"class","ph-note-item"],[7],[0,"\\n                        "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"t",["labels.labOrders"],null],false],[8],[0,"\\n"],[4,"each",[[19,8,["labs"]]],null,{"statements":[[4,"if",[[25,"eq",[[19,10,["status"]],"Completed"],null]],null,{"statements":[[0,"                            "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"date-format",[[19,10,["labDate"]]],null],false],[0,": "],[1,[19,10,["labType","name"]],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[10]},null],[0,"                      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,8,["hasCompletedMedication"]]],null,{"statements":[[0,"                      "],[6,"div"],[9,"class","ph-note-item"],[7],[0,"\\n                        "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"t",["labels.medication"],null],false],[8],[0,"\\n"],[4,"each",[[19,8,["medication"]]],null,{"statements":[[4,"if",[[25,"eq",[[19,9,["status"]],"Fulfilled"],null]],null,{"statements":[[0,"                            "],[6,"h5"],[9,"class","ph-note-heading"],[7],[1,[25,"date-format",[[19,9,["prescriptionDate"]]],null],false],[0,": "],[1,[19,9,["medicationName"]],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[9]},null],[0,"                      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[8]},null]],"parameters":[]},{"statements":[[0,"                "],[1,[25,"t",["messages.noHistoryAvailable"],null],false],[0,"\\n"]],"parameters":[]}],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"div"],[9,"role","tabpanel"],[10,"class",[26,["tab-pane ",[25,"if",[[20,["isNewOrDeleted"]],"active"],null]]]],[9,"id","general"],[7],[0,"\\n        "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n            "],[6,"div"],[9,"class","row"],[7],[0,"\\n              "],[6,"div"],[9,"class","col-xs-12 col-sm-6"],[7],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["firstName",[25,"t",["patients.labels.firstName"],null],"form-input-group required test-first-name"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["lastName",[25,"t",["patients.labels.lastName"],null],"form-input-group required test-last-name"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["englishName",[25,"t",["patients.labels.englishName"],null],"form-input-group test-eng-name"]]],false],[0,"\\n                "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","class","list","selection"],[[19,1,[]],[20,["model"]],"sex",[25,"t",["patients.labels.sex"],null],"form-input-group",[20,["sexList"]],[20,["model","sex"]]]]],false],[0,"\\n                "],[1,[25,"date-picker",null,[["model","property","label","class","maxDate"],[[20,["model"]],"dateOfBirth",[25,"t",["patients.labels.dateOfBirth"],null],"form-input-group ","now"]]],false],[0,"\\n                "],[6,"div"],[9,"class","form-input-group"],[7],[0,"\\n                  "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.age"],null],false],[8],[0,"\\n                  "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","age"]],false],[8],[0,"\\n                "],[8],[0,"\\n                "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"nationality",[25,"t",["patients.labels.nationality"],null],[20,["countryList"]],[20,["model","nationality"]],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["occupation",[25,"t",["patients.labels.occupation"],null],"form-input-group"]]],false],[0,"\\n                "],[6,"div"],[9,"class","form-input-group"],[7],[0,"\\n                  "],[6,"label"],[7],[1,[25,"t",["patients.labels.patientType"],null],false],[8],[0,"\\n                  "],[6,"div"],[7],[0,"\\n                    "],[1,[25,"ext-radio",null,[["content","value","showInline"],[[20,["patientTypes"]],[20,["model","patientType"]],true]]],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class","disabled"],["healthcareScheme",[25,"t",["patients.labels.healthcareScheme"],null],"form-input-group","disabled"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class","disabled"],["registeredClinics",[25,"t",["patients.labels.registeredClinics"],null],"form-input-group","disabled"]]],false],[0,"\\n              "],[8],[0,"\\n              "],[6,"div"],[9,"class","col-xs-12 col-sm-6"],[7],[0,"\\n                "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"status",[25,"t",["patients.labels.status"],null],[20,["statusList"]],[20,["model","status"]],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["externalPatientId",[25,"t",["patients.labels.externalPatientId"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["clinicId",[25,"t",["patients.labels.clinicId"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["governmentId",[25,"t",["patients.labels.governmentId"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["select"]]],[["prompt","label","property","content","class"],[" ",[25,"t",["patients.labels.bloodType"],null],"bloodType",[20,["bloodTypes"]],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"clinic",[25,"t",["patients.labels.clinic"],null],[20,["clinicList"]],[20,["model","clinic"]],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["referredBy",[25,"t",["patients.labels.referredBy"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"referredDate",[25,"t",["patients.labels.referredDate"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["religion",[25,"t",["patients.labels.religion"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["parent",[25,"t",["patients.labels.parent"],null],"form-input-group"]]],false],[0,"\\n                "],[1,[25,"component",[[19,1,["select"]]],[["label","property","content","optionValuePath","optionLabelPath","prompt","class"],[[25,"t",["billing.labels.paymentProfile"],null],"paymentProfile",[20,["pricingProfiles"]],"selectObject","selectObject.name"," ","form-input-group"]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n"],[4,"if",[[20,["canAddContact"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n              "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddContact"],[["bubbles","on"],[false,"click"]]],[7],[0,"\\n                "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.addContact"],null],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n            "],[6,"div"],[9,"class","row"],[7],[0,"\\n              "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["phone",[25,"t",["patients.labels.phone"],null],"col-xs-12 col-sm-6"]]],false],[0,"\\n              "],[1,[25,"component",[[19,1,["input"]]],[["property","type","label","class"],["email","email",[25,"t",["labels.email"],null],"col-xs-12 col-sm-6"]]],false],[0,"\\n"],[4,"if",[[20,["haveAddressOptions"]]],null,{"statements":[[4,"if",[[20,["address1Include"]]],null,{"statements":[[0,"                  "],[1,[25,"component",[[19,1,["text"]]],[["label","property","rows","class"],[[20,["address1Label"]],"address",3,"col-xs-12 col-sm-6"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["address2Include"]]],null,{"statements":[[0,"                  "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[20,["address2Label"]],"address2","col-xs-12 col-sm-6"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["address3Include"]]],null,{"statements":[[0,"                  "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[20,["address3Label"]],"address3","col-xs-12 col-sm-6"]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["address4Include"]]],null,{"statements":[[0,"                  "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[20,["address4Label"]],"address4","col-xs-12 col-sm-6"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[0,"                "],[1,[25,"component",[[19,1,["text"]]],[["label","property","rows","class"],[[25,"t",["labels.address"],null],"address",3,"col-xs-12 col-sm-6"]]],false],[0,"\\n"]],"parameters":[]}],[0,"              "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"country",[25,"t",["labels.country"],null],[20,["countryList"]],[20,["model","country"]],"col-xs-12 col-sm-6"]]],false],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"if",[[20,["haveAdditionalContacts"]]],null,{"statements":[[0,"            "],[6,"h4"],[7],[1,[25,"t",["patients.titles.additionalContacts"],null],false],[8],[0,"\\n            "],[6,"table"],[9,"class","table"],[7],[0,"\\n              "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n                "],[6,"th"],[7],[1,[25,"t",["patients.labels.phone"],null],false],[8],[0,"\\n                "],[6,"th"],[7],[1,[25,"t",["labels.email"],null],false],[8],[0,"\\n                "],[6,"th"],[7],[1,[25,"t",["patients.labels.relationship"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canDeleteContact"]]],null,{"statements":[[0,"                  "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n"],[4,"each",[[20,["model","additionalContacts"]]],null,{"statements":[[0,"                "],[6,"tr"],[7],[0,"\\n                  "],[6,"td"],[7],[1,[19,7,["name"]],false],[8],[0,"\\n                  "],[6,"td"],[7],[1,[19,7,["phone"]],false],[8],[0,"\\n                  "],[6,"td"],[7],[1,[19,7,["email"]],false],[8],[0,"\\n                  "],[6,"td"],[7],[1,[19,7,["relationship"]],false],[8],[0,"\\n"],[4,"if",[[20,["canDeleteContact"]]],null,{"statements":[[0,"                    "],[6,"td"],[7],[0,"\\n                      "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteContact",[19,7,[]]],[["bubbles"],[false]]],[7],[0,"\\n                        "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n"]],"parameters":[7]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n        "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"patient",[19,1,[]]]]],false],[0,"\\n      "],[8],[0,"\\n"],[4,"unless",[[20,["isNewOrDeleted"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","photos"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPhoto"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.newPhoto"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"each",[[20,["model","photos"]]],null,{"statements":[[0,"                  "],[6,"div"],[9,"class","col-sm-4 col-md-3"],[7],[0,"\\n                    "],[6,"div"],[9,"class","thumbnail"],[3,"action",[[19,0,[]],"editPhoto",[19,6,[]]]],[7],[0,"\\n                      "],[1,[25,"photo-display",null,[["photo"],[[19,6,[]]]]],false],[0,"\\n                      "],[6,"div"],[9,"class","caption"],[7],[0,"\\n                        "],[1,[19,6,["caption"]],false],[0,"\\n                        "],[6,"p"],[7],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"                            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editPhoto",[19,6,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeletePhoto"]]],null,{"statements":[[0,"                            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeletePhoto",[19,6,[]]],[["bubbles"],[false]]],[7],[0,"\\n                              "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                        "],[8],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[6]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","appointments"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddAppointment"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"div"],[9,"class","right"],[7],[0,"\\n                  "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary"],[9,"data-test-selector","appointments-btn"],[3,"action",[[19,0,[]],"newAppointment"],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.newAppointment"],null],false],[0,"\\n                  "],[8],[0," \\n                  "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary"],[9,"data-test-selector","scheduleSurgery-btn"],[3,"action",[[19,0,[]],"newSurgicalAppointment"],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.scheduleSurgery"],null],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["visits.labels.examiner"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.location"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","appointments"]]],null,{"statements":[[0,"                  "],[6,"tr"],[10,"class",[26,[[25,"if",[[20,["canAddAppointment"]],"clickable"],null]]]],[3,"action",[[19,0,[]],"editAppointment",[19,5,[]]]],[7],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["formattedAppointmentDate"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["provider"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["location"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["appointmentType"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["displayStatus"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddAppointment"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editAppointment",[19,5,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteAppointment"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteAppointment",[19,5,[]]],[["bubbles"],[false]]],[7],[0,"\\n                          "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[5]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","visits"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddVisit"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"newVisit"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["patients.buttons.newVisit"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.startDate"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.endDate"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["visits.labels.diagnosis"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.provider"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.location"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","visits"]]],null,{"statements":[[0,"                  "],[6,"tr"],[10,"class",[26,[[25,"if",[[20,["canAddVisit"]],"clickable"],null]]]],[3,"action",[[19,0,[]],"editVisit",[19,4,[]]]],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,4,["startDate"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,4,["endDate"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["primaryDiagnoses"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["examiner"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["location"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,4,["visitType"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddVisit"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editVisit",[19,4,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteVisit"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteVisit",[19,4,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","medication"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddMedication"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"newMedication"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.newMedication"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[12,"patients/medication",[1]],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","imaging"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddImaging"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"newImaging"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["patients.buttons.newImaging"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[12,"patients/imaging",[1]],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","labs"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddLab"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"newLab"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["patients.buttons.newLab"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[12,"patients/labs",[1]],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"if",[[20,["canAddSocialWork"]]],null,{"statements":[[0,"          "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","social"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel"],[7],[0,"\\n              "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n                "],[6,"h4"],[7],[0,"\\n                  "],[1,[25,"t",["patients.titles.familyInformation"],null],false],[0,"\\n                  "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showEditFamily"],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["patients.buttons.addFamilyMember"],null],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"table"],[9,"class","table"],[7],[0,"\\n                  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.age"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.civilStatus"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.relationship"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.education"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.occupation"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.income"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.insurance"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n                  "],[8],[0,"\\n"],[4,"each",[[20,["model","familyInfo"]]],null,{"statements":[[0,"                    "],[6,"tr"],[7],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["name"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["age"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["civilStatus"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["relationship"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["education"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["occupation"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["income"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,3,["insurance"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[0,"\\n                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditFamily",[19,3,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canDeleteSocialWork"]]],null,{"statements":[[0,"                          "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteFamily",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                            "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                          "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                      "],[8],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"                "],[8],[0,"\\n                "],[6,"h4"],[7],[0,"\\n                  "],[1,[25,"t",["patients.titles.expenses"],null],false],[0,"\\n                  "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showEditExpense"],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.addExpense"],null],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n                "],[6,"table"],[9,"class","table"],[7],[0,"\\n                  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.category"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.sources"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["patients.labels.monthlyCost"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                  "],[8],[0,"\\n"],[4,"each",[[20,["model","expenses"]]],null,{"statements":[[0,"                    "],[6,"tr"],[7],[0,"\\n                      "],[6,"td"],[7],[1,[19,2,["category"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,2,["sources"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[1,[19,2,["cost"]],false],[8],[0,"\\n                      "],[6,"td"],[7],[0,"\\n                        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditExpense",[19,2,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canDeleteSocialWork"]]],null,{"statements":[[0,"                          "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteExpense",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                            "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                          "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                      "],[8],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[2]},null],[4,"if",[[20,["showExpenseTotal"]]],null,{"statements":[[0,"                    "],[6,"tr"],[7],[0,"\\n                      "],[6,"td"],[9,"colspan","2"],[7],[6,"b"],[7],[1,[25,"t",["patients.labels.totalMontlyExpense"],null],false],[8],[8],[0,"\\n                      "],[6,"td"],[7],[1,[18,"totalExpenses"],false],[8],[0,"\\n                      "],[6,"td"],[7],[8],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n                "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"socialwork",[19,1,[]]]]],false],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[6,"div"],[9,"class","alert alert-success message"],[9,"style","display:none;"],[7],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/patients/edit/template.hbs"}})}),define("hospitalrun/patients/imaging/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"4MSrCIfU",block:'{"symbols":["imaging"],"statements":[[6,"table"],[9,"class","table"],[7],[0,"\\n  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.imagingType"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["patients.labels.dateProcessed"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.result"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"each",[[20,["patientImaging"]]],null,{"statements":[[0,"    "],[6,"tr"],[10,"class",[26,[[25,"if",[[19,1,["canEdit"]],[25,"if",[[20,["canAddImaging"]],"clickable"],null]],null]]]],[3,"action",[[19,0,[]],"editImaging",[19,1,[]]]],[7],[0,"\\n      "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["requestedDate"]]],null],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["imagingType","name"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["imagingDate"]]],null],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["result"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["notes"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n      "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,1,["canEdit"]]],null,{"statements":[[4,"if",[[20,["canAddImaging"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editImaging",[19,1,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteImaging"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteImaging",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/imaging/template.hbs"}})}),define("hospitalrun/patients/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/patient-visits","hospitalrun/utils/visit-statuses"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{addPermission:"add_patient",deletePermission:"delete_patient",canAdmitPatient:Ember.computed(function(){return this.currentUserCan("admit_patient")}),canDischargePatient:Ember.computed(function(){return this.currentUserCan("discharge_patient")}),startKey:[],actions:{checkInPatient:function(e){this.send("createNewVisit",e)},checkoutPatient:function(e){this.editPatientVisitWithStatus(e,a.default.CHECKED_IN)},dischargePatient:function(e){this.editPatientVisitWithStatus(e,a.default.ADMITTED)}},editPatientVisitWithStatus:function(e,t){var n=this
this.getPatientVisits(e).then(function(e){var a=e.findBy("status",t)
a&&(a.set("endDate",new Date),n.transitionToRoute("visits.edit",a))})}})}),define("hospitalrun/patients/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro","hospitalrun/mixins/user-session"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,{modelName:"patient",newButtonAction:Ember.computed(function(){return this.currentUserCan("add_patient")?"newItem":null}),newButtonText:(0,n.t)("patients.buttons.newPatient"),pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("patients.titles.patientListing")}),_getStartKeyFromItem:function(e){return[e.get("displayPatientId"),this._getPouchIdFromItem(e)]},_modelQueryParams:function(){return{mapReduce:"patient_by_display_id"}}})}),define("hospitalrun/patients/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"+nJP7GkW",block:'{"symbols":["patient"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"thead"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["id",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.id"],null],false]],"parameters":[]},null],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["firstName",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["patients.labels.firstName"],null],false]],"parameters":[]},null],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["lastName",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["patients.labels.lastName"],null],false]],"parameters":[]},null],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["sex",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["patients.labels.sex"],null],false]],"parameters":[]},null],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["dateOfBirth",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["patients.labels.dob"],null],false]],"parameters":[]},null],[0,"\\n          "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["status",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[1,[25,"t",["labels.status"],null],false]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"tbody"],[7],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"          "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["displayPatientId"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["firstName"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["lastName"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["sex"]],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["dateOfBirth"]]],null],false],[8],[0,"\\n            "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"              "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,1,["admitted"]]],null,{"statements":[[4,"if",[[20,["canDischargePatient"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-primary info"],[3,"action",[[19,0,[]],"dischargePatient",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","glyphicon glyphicon-log-out"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.discharge"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[19,1,["checkedIn"]]],null,{"statements":[[4,"if",[[20,["canDischargePatient"]]],null,{"statements":[[0,"                      "],[6,"button"],[9,"class","btn btn-primary info"],[3,"action",[[19,0,[]],"checkoutPatient",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","glyphicon glyphicon-log-out"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.checkOut"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[20,["canAdmitPatient"]]],null,{"statements":[[0,"                      "],[6,"button"],[9,"class","btn btn-primary success admit"],[3,"action",[[19,0,[]],"checkInPatient",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","glyphicon glyphicon-log-in"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.checkIn"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}]],"parameters":[]}],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[9,"data-test-selector","no-patients-found"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["patients.messages.noPatientsFound"],null],false],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0," "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["patients.messages.createNewPatient"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/index/template.hbs"}})}),define("hospitalrun/patients/labs/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"YtXbzUpd",block:'{"symbols":["lab"],"statements":[[6,"table"],[9,"class","table"],[7],[0,"\\n  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.dateRequested"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labs.labels.labType"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["patients.labels.dateProcessed"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.result"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"each",[[20,["patientLabs"]]],null,{"statements":[[0,"    "],[6,"tr"],[10,"class",[26,[[25,"if",[[19,1,["canEdit"]],[25,"if",[[20,["canAddLab"]],"clickable"],null]],null]]]],[3,"action",[[19,0,[]],"editLab",[19,1,[]]]],[7],[0,"\\n      "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["requestedDate"]]],null],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["labType","name"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["labDate"]]],null],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["result"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["notes"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n      "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,1,["canEdit"]]],null,{"statements":[[4,"if",[[20,["canAddLab"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editLab",[19,1,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteLab"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteLab",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/labs/template.hbs"}})}),define("hospitalrun/patients/medication/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/vH333H2",block:'{"symbols":["medication"],"statements":[[6,"table"],[9,"class","table"],[7],[0,"\\n  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.status"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.prescription"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.requestedBy"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"each",[[20,["patientMedications"]]],null,{"statements":[[0,"    "],[6,"tr"],[10,"class",[26,[[25,"if",[[19,1,["canEdit"]],[25,"if",[[20,["canAddMedication"]],"clickable"],null]],null]]]],[3,"action",[[19,0,[]],"editMedication",[19,1,[]]]],[7],[0,"\\n      "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["prescriptionDate"]]],null],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["medicationName"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["prescription"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n      "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,1,["canEdit"]]],null,{"statements":[[4,"if",[[20,["canAddMedication"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editMedication",[19,1,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteMedication"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteMedication",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/medication/template.hbs"}})}),define("hospitalrun/patients/notes/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/is-update-disabled","moment","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/patient-notes","hospitalrun/mixins/user-session"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,o.default,i.default,s.default,{cancelAction:"closeModal",updateAction:"updateNote",moduleController:Ember.inject.controller("patients"),applicationController:Ember.inject.controller("application"),physicianList:Ember.computed.alias("moduleController.physicianList"),lookupListsToUpdate:[{name:"physicianList",property:"model.attribution",id:"physician_list"}],title:Ember.computed("model.patient.displayName",function(){return this.get("model.isNew")?this.get("intl").t("patients.notes.newNote")+" "+this.get("model.patient.displayName"):this.get("intl").t("patients.notes.newNote")+" "+(0,a.default)(this.get("model.date")).format("l")+" for "+this.get("model.patient.displayName")}),showSelectVisit:Ember.computed("applicationController.currentPath",function(){return"patients.edit"==this.get("applicationController.currentPath")}),updateCapability:"add_note",beforeUpdate:function(){return this._setNoteType(),this.set("model.date",new Date),this.set("model.createdBy",this.getUserName()),Ember.RSVP.Promise.resolve()},afterUpdate:function(){this.send(this.get("updateAction"),this.get("model")),this.send(this.get("cancelAction"))}})}),define("hospitalrun/patients/notes/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"HiKVuwbz",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"expand-text",null,[["label","property","rows","class","form"],[[25,"t",["labels.note"],null],"content",3,"test-note-content required form-input-group",[19,1,[]]]]],false],[0,"\\n"],[4,"if",[[20,["showSelectVisit"]]],null,{"statements":[[0,"      "],[1,[25,"component",[[19,1,["select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","prompt","selected"],["required form-input-group test-note-visit",[25,"t",["labels.visit"],null],"visit",[20,["patientVisitsForSelect"]],"selectObject","selectObject.visitDescription",[25,"t",["patients.notes.pleaseSelectAVisit"],null],[20,["model","visit"]]]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"attribution",[25,"t",["patients.notes.onBehalfOfLabel"],null],[20,["physicianList"]],[20,["attribution"]],"form-input-group test-note-attribution"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/notes/template.hbs"}})}),define("hospitalrun/patients/operation-report/controller",["exports","hospitalrun/patients/operative-plan/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({additionalButtons:null,lookupListsToUpdate:[{name:"physicianList",property:"model.assistant",id:"physician_list"},{name:"physicianList",property:"model.surgeon",id:"physician_list"},{name:"procedureList",property:"modelProcedures",id:"procedure_list"}],updateCapability:"add_operation_report",diagnosisList:Ember.computed.alias("patientController.diagnosisList"),_finishAfterUpdate:function(){var e=Ember.get(this,"intl"),t=e.t("operationReport.messages.reportSaved"),n=e.t("operationReport.titles.reportSaved")
this.displayAlert(n,t)},actions:{addDiagnosis:function(e){this.addDiagnosisToModelAndPatient(e)}}})}),define("hospitalrun/patients/operation-report/route",["exports","hospitalrun/patients/operative-plan/route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:(0,n.t)("operationReport.titles.editTitle"),modelName:"operation-report",newTitle:(0,n.t)("operationReport.titles.newTitle")})}),define("hospitalrun/patients/operation-report/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qrE4WriW",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"patient-summary",null,[["allowAddDiagnosis","diagnosisContainer","diagnosisList","disablePatientLink","patient"],[true,[20,["model"]],[20,["diagnosisList"]],true,[20,["model","patient"]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","patient-summary clearfix"],[7],[0,"\\n      "],[1,[25,"patient-diagnosis",null,[["diagnosisContainer","diagnosisProperty","primaryDiagnosisLabel","secondaryDiagnosisLabel"],[[20,["model"]],"preOpDiagnoses",[25,"t",["operationReport.labels.preOpPrimaryDiagnosis"],null],[25,"t",["operationReport.labels.preOpSecondaryDiagnosis"],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","class","form"],["operationDescription",[25,"t",["operationReport.labels.operationDescription"],null],"operation-description",[19,1,[]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"surgeryDate",[25,"t",["operationReport.labels.surgeryDate"],null],"form-input-group col-sm-4 surgery-date"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"col-sm-3","surgeon",[25,"t",["operationReport.labels.surgeon"],null],[20,["physicianList"]],[20,["model","surgeon"]],"operation-surgeon"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"col-sm-3","assistant",[25,"t",["operationReport.labels.assistant"],null],[20,["physicianList"]],[20,["model","assistant"]],"operation-assistant"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["caseComplexity",[25,"t",["operationReport.labels.caseComplexity"],null],"col-sm-2 case-complexity"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"operative-procedures",null,[["model","procedureList"],[[20,["model"]],[20,["procedureList"]]]]],false],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","form"],["additionalNotes",[25,"t",["operationReport.labels.additionalNotes"],null],[19,1,[]]]]],false],[0,"\\n    "],[1,[25,"upcoming-appointments",null,[["patient"],[[20,["model","patient"]]]]],false],[0,"\\n    "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"operativePlan",[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/operation-report/template.hbs"}})}),define("hospitalrun/patients/operative-plan/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/components/operative-procedures","hospitalrun/mixins/operative-plan-statuses","hospitalrun/mixins/patient-submodule"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0})
var s=["additionalNotes","caseComplexity","customForms","patient","procedures","operationDescription","surgeon"]
e.default=t.default.extend(a.default,i.default,{completedPlan:!1,lookupListsToUpdate:[{name:"physicianList",property:"model.surgeon",id:"physician_list"},{name:"procedureList",property:"modelProcedures",id:"procedure_list"}],newPlan:!1,updateCapability:"add_operative_plan",patientsController:Ember.inject.controller("patients"),physicianList:Ember.computed.alias("patientsController.physicianList"),procedureList:Ember.computed.alias("patientsController.procedureList"),additionalButtons:Ember.computed("model.{isNew,status}",function(){var e=Ember.get(this,"intl"),t=Ember.get(this,"model.isNew"),n=Ember.get(this,"model.status")
if(!t&&n!==a.COMPLETED_STATUS)return[{class:"btn btn-primary on-white",buttonAction:"completePlan",buttonIcon:"octicon octicon-check",buttonText:e.t("operativePlan.buttons.completePlan")}]}),modelProcedures:Ember.computed.map("model.procedures",function(e){return Ember.get(e,"description")}),afterUpdate:function(){var e=this
Ember.get(this,"newPlan")?Ember.get(this,"model.patient").save().then(this._finishAfterUpdate.bind(this)).then(function(){var t=Ember.get(e,"intl").t("operativePlan.titles.editTitle"),n={}
n.currentScreenTitle=t,e.send("setSectionHeader",n)}):this._finishAfterUpdate()},beforeUpdate:function(){var e=Ember.get(this,"model"),t=Ember.get(e,"isNew"),i=Ember.get(e,"status");((0,n.addProcedure)(e),Ember.set(this,"newPlan",t),i===a.COMPLETED_STATUS)?e.changedAttributes().status&&Ember.set(this,"completedPlan",!0):Ember.set(this,"completedPlan",!1)
return t?this.saveNewDiagnoses():Ember.RSVP.resolve()},_createOperationReport:function(){var e=this,t=Ember.get(this,"store"),n=Ember.get(this,"model"),a=n.getProperties.apply(n,s),i=Ember.get(n,"diagnoses"),o=Ember.get(n,"patient")
Ember.set(a,"operativePlan",n),Ember.set(a,"preOpDiagnosis",i),Ember.set(a,"surgeryDate",new Date),Ember.set(a,"returnToPatient",Ember.get(o,"id"))
var r=t.createRecord("operation-report",a)
this.getPatientDiagnoses(o,r),r.save().then(function(t){o.save().then(function(){var n=Ember.get(e,"intl"),a=n.t("operativePlan.messages.planCompleted"),i=n.t("operativePlan.titles.planCompleted")
e.displayAlert(i,a,"showOperationReport",t,"ok")})})},_finishAfterUpdate:function(){if(Ember.get(this,"completedPlan"))this._createOperationReport()
else{var e=Ember.get(this,"intl"),t=e.t("operativePlan.messages.planSaved"),n=e.t("operativePlan.titles.planSaved")
this.displayAlert(n,t)}},actions:{completePlan:function(){var e=Ember.get(this,"model")
Ember.set(e,"status",a.COMPLETED_STATUS),this.send("update")}}})}),define("hospitalrun/patients/operative-plan/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","moment","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{editTitle:(0,i.t)("operativePlan.titles.editTitle"),modelName:"operative-plan",newTitle:(0,i.t)("operativePlan.titles.newTitle"),customForms:Ember.inject.service(),database:Ember.inject.service(),getNewData:function(){var e=Ember.get(this,"customForms"),t={customForms:Ember.Object.create()}
return e.setDefaultCustomForms(["operativePlan"],t)},setupController:function(e,t){this._super(e,t)
var n=Ember.get(this,"database"),i=n.getMaxPouchId("appointment"),s=n.getMinPouchId("appointment"),o=Ember.get(t,"patient.id"),r=(0,a.default)().toDate().getTime(),l=(0,a.default)().add(10,"years").toDate().getTime()
this.store.query("appointment",{options:{startkey:[o,r,r,s],endkey:[o,l,l,i]},mapReduce:"appointments_by_patient"}).then(function(e){t.set("appointments",e)})},actions:{showOperationReport:function(e){this.transitionTo("patients.operation-report",e)}}})}),define("hospitalrun/patients/operative-plan/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"FA18lCxv",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"patient-summary",null,[["patient","disablePatientLink","diagnosisContainer"],[[20,["model","patient"]],true,[20,["model"]]]]],false],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","class","form"],["operationDescription",[25,"t",["operativePlan.labels.operationDescription"],null],"operation-description",[19,1,[]]]]],false],[0,"\\n    "],[1,[25,"operative-procedures",null,[["model","procedureList"],[[20,["model"]],[20,["procedureList"]]]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"col-sm-4","surgeon",[25,"t",["operativePlan.labels.surgeon"],null],[20,["physicianList"]],[20,["model","surgeon"]],"plan-surgeon"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["prompt","label","property","content","class"],[" ",[25,"t",["operativePlan.labels.status"],null],"status",[20,["planStatuses"]],"form-input-group col-sm-2 plan-status"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["caseComplexity",[25,"t",["operativePlan.labels.caseComplexity"],null],"col-sm-2 case-complexity"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","class","form"],["admissionInstructions",[25,"t",["operativePlan.labels.admissionInstructions"],null],"admission-instructions",[19,1,[]]]]],false],[0,"\\n    "],[1,[25,"expand-text",null,[["property","label","class","form"],["additionalNotes",[25,"t",["operativePlan.labels.additionalNotes"],null],"additional-notes",[19,1,[]]]]],false],[0,"\\n    "],[1,[25,"upcoming-appointments",null,[["patient"],[[20,["model","patient"]]]]],false],[0,"\\n    "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"operativePlan",[19,1,[]]]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/operative-plan/template.hbs"}})}),define("hospitalrun/patients/outpatient/controller",["exports","hospitalrun/mixins/filter-list","hospitalrun/mixins/modal-helper","hospitalrun/mixins/patient-visits","hospitalrun/utils/select-values","hospitalrun/mixins/user-session","hospitalrun/utils/visit-statuses","hospitalrun/mixins/visit-types"],function(e,t,n,a,i,s,o,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,n.default,a.default,i.default,s.default,r.default,{addPermission:"add_patient",deletePermission:"delete_patient",queryParams:["visitDate","visitLocation"],visitLocation:null,visitDate:null,canAddVisit:Ember.computed(function(){return this.currentUserCan("add_visit")}),hasAppointmentLabels:Ember.computed(function(){var e=this.get("intl")
return[e.t("visits.labels.haveAppointment"),e.t("visits.labels.noAppointment")]}),doneOrdersValues:Ember.computed(function(){var e=this.get("intl")
return[e.t("visits.labels.ordersNotDone"),e.t("visits.labels.haveDoneOrders")]}),locationList:Ember.computed.map("patientController.locationList.value",i.default.selectValuesMap).volatile(),patientNames:Ember.computed.map("model",function(e){return e.get("patient.shortDisplayName")}),patientController:Ember.inject.controller("patients"),sexList:Ember.computed.alias("patientController.sexList.value"),visitTypesList:Ember.computed.alias("patientController.visitTypesList"),visitTypesValues:Ember.computed.map("visitTypes",function(e){return e.value}),checkedInVisits:Ember.computed.filter("model.@each.status",function(e){return"Admission"!==e.get("visitType")&&e.get("status")===o.default.CHECKED_IN}),filteredVisits:Ember.computed("checkedInVisits","filterBy","filterValue","visitLocation",function(){var e=this.get("filterBy"),t=this.get("filterValue"),n=this.get("filteredBy"),a=this.get("visitLocation"),i=this.get("checkedInVisits")
return Ember.isEmpty(a)?n.delete("location"):n.set("location",a),this.filterList(i,e,t)}),sortedVisits:Ember.computed("filteredVisits","sortByKey","sortByDesc",function(){var e=this.get("filteredVisits")
return this.sortFilteredList(e)}),startKey:[],actions:{checkOut:function(e){var t=this.get("intl"),n={patientName:e.get("patient.displayName")},a=t.t("visits.messages.checkOut",n)
this.displayConfirm(t.t("visits.titles.checkOut"),a,"finishCheckOut",e)},editVisit:function(e){this.get("canAddVisit")&&(e.set("returnTo","patients.outpatient"),this.transitionToRoute("visits.edit",e))},finishCheckOut:function(e){this.checkoutVisit(e,o.default.CHECKED_OUT)},search:function(){var e=this.get("model.selectedVisitDate"),t=this.get("model.selectedLocation")
Ember.isEmpty(e)||this.set("visitDate",e.getTime()),Ember.isEmpty(t)?this.set("visitLocation",null):this.set("visitLocation",t)},patientCheckIn:function(){this.transitionToRoute("visits.edit","checkin").then(function(e){e.currentModel.setProperties({outPatient:!0,visitType:null,returnTo:"patients.outpatient"})})}}})}),define("hospitalrun/patients/outpatient/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/date-format","moment","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{database:Ember.inject.service(),itemsPerPage:null,modelName:"visit",newButtonAction:"patientCheckIn",newButtonText:(0,i.t)("patients.buttons.patientCheckIn"),selectedVisitDate:null,showingTodaysPatients:!0,pageTitle:Ember.computed("showingTodaysPatients","selectedVisitDate",function(){var e=this.get("intl")
if(this.get("showingTodaysPatients"))return e.t("patients.titles.todaysOutpatients")
var t=this._dateFormat(this.get("selectedVisitDate"))
return e.t("patients.titles.outpatientsForDate",{visitDate:t})}),queryParams:{visitDate:{refreshModel:!0},visitLocation:{refreshModel:!1}},_getStartKeyFromItem:function(e){return[e.get("displayPatientId"),"patient_"+e.get("id")]},_modelQueryParams:function(e){var t=this.get("database"),n=t.getMaxPouchId("visit"),i=t.getMinPouchId("visit"),s=e.visitDate;(s=Ember.isEmpty(s)?(0,a.default)():(0,a.default)(parseInt(s))).isSame((0,a.default)(),"day")?this.set("showingTodaysPatients",!0):(this.set("showingTodaysPatients",!1),this.set("selectedVisitDate",s.toDate()))
var o=s.endOf("day").valueOf()
return{mapReduce:"visit_by_date",options:{endkey:[o,o,n],startkey:[s.startOf("day").valueOf(),null,i]}}},model:function(e){var t=this
return this._super(e).then(function(n){var a=new Date
return Ember.isEmpty(e.visitDate)||a.setTime(e.visitDate),n.set("selectedVisitDate",a),n.set("display_selectedVisitDate",t._dateFormat(a)),n.set("selectedLocation",e.visitLocation),n})},actions:{finishCheckOut:function(e){this.controller.send("finishCheckOut",e)},patientCheckIn:function(){this.controller.send("patientCheckIn")}}})}),define("hospitalrun/patients/outpatient/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"3Wbj9VcH",block:'{"symbols":["visit","form"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-info"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"selectedVisitDate",[25,"t",["visits.labels.visitDate"],null],"col-sm-3 outpatient-date"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","property","label","content","prompt"],["col-sm-3 form-input-group outpatient-location","selectedLocation",[25,"t",["labels.location"],null],[20,["locationList"]]," "]]],false],[0,"\\n          "],[6,"div"],[9,"class","form-group col-sm-3"],[7],[0,"\\n            "],[6,"label"],[9,"class","control-label"],[7],[8],[0,"\\n            "],[6,"div"],[7],[0,"\\n              "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"search"]],[7],[1,[25,"t",["buttons.search"],null],false],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"table"],[9,"class","table outpatient-list"],[7],[0,"\\n    "],[6,"thead"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["patient.displayPatientId",[20,["sortByDesc"]],[20,["sortByKey"]]]],{"statements":[[1,[25,"t",["labels.id"],null],false]],"parameters":[]},null],[0,"\\n"],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterType","filterValues"],["patient.shortDisplayName",[20,["sortByDesc"]],[20,["sortByKey"]],"patient.shortDisplayName",[20,["filteredBy"]],"typeahead",[20,["patientNames"]]]],{"statements":[[0,"          "],[1,[25,"t",["labels.name"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterValues"],["patient.sex",[20,["sortByDesc"]],[20,["sortByKey"]],"patient.sex",[20,["filteredBy"]],[20,["sexList"]]]],{"statements":[[0,"          "],[1,[25,"t",["patients.labels.sex"],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["patient.dateOfBirth",[20,["sortByDesc"]],[20,["sortByKey"]]]],{"statements":[[1,[25,"t",["labels.age"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterValues"],["visitType",[20,["sortByDesc"]],[20,["sortByKey"]],"visitType",[20,["filteredBy"]],[20,["visitTypesValues"]]]],{"statements":[[1,[25,"t",["visits.labels.visitType"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["startDate",[20,["sortByDesc"]],[20,["sortByKey"]]]],{"statements":[[1,[25,"t",["visits.labels.checkInTime"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterValues"],["hasAppointmentLabel",[20,["sortByDesc"]],[20,["sortByKey"]],"hasAppointmentLabel",[20,["filteredBy"]],[20,["hasAppointmentLabels"]]]],{"statements":[[1,[25,"t",["visits.labels.appointment"],null],false]],"parameters":[]},null],[0,"\\n        "],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["examiner",[20,["sortByDesc"]],[20,["sortByKey"]]]],{"statements":[[1,[25,"t",["visits.labels.examiner"],null],false]],"parameters":[]},null],[0,"\\n"],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterValues"],["hasDoneOrders",[20,["sortByDesc"]],[20,["sortByKey"]],"hasDoneOrders",[20,["filteredBy"]],[20,["doneOrdersValues"]]]],{"statements":[[0,"          "],[1,[25,"t",["visits.labels.ordersDone"],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"tbody"],[7],[0,"\\n"],[4,"each",[[20,["sortedVisits"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editVisit",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["patient","displayPatientId"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["patient","shortDisplayName"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["patient","sex"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["patient","shortAge"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["visitType"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[25,"date-format",[[19,1,["startDate"]]],[["format"],["h:mm A"]]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1 text-center"],[7],[1,[19,1,["hasAppointmentLabel"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[1,[19,1,["examiner"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1 text-center"],[7],[1,[19,1,["hasDoneOrders"]],false],[8],[0,"\\n          "],[6,"td"],[9,"class","col-xs-1"],[7],[0,"\\n            "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"checkOut",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["visits.buttons.checkOut"],null],false],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/outpatient/template.hbs"}})}),define("hospitalrun/patients/photo/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addAction:"addPhoto",editTitle:(0,n.t)("patients.titles.editPhoto"),fileRequiredMessage:(0,n.t)("patients.messages.photoFileRequired"),modelName:"photo",newTitle:(0,n.t)("patients.titles.addPhoto"),newModel:!1,showFileRequired:!1,showUpdateButton:!0,database:Ember.inject.service(),filesystem:Ember.inject.service(),photoFileNotSet:Ember.computed("model.photoFile",function(){var e=Ember.get(this,"model"),t=Ember.get(e,"isNew"),n=Ember.get(e,"photoFile")
return t&&Ember.isEmpty(n)}),title:Ember.computed("model.isNew",function(){return Ember.get(this,"model.isNew")?Ember.get(this,"newTitle"):Ember.get(this,"editTitle")}),updateButtonAction:Ember.computed("photoFileNotSet",function(){return Ember.get(this,"photoFileNotSet")?"showFileRequired":(Ember.set(this,"showFileRequired",!1),"update")}),updateButtonClass:Ember.computed("photoFileNotSet",function(){if(Ember.get(this,"photoFileNotSet"))return"disabled-btn"}),afterUpdate:function(e){var t=this,n=Ember.get(this,"newModel"),a=Ember.get(e,"editController")
if(n){var i=Ember.get(e,"photoFile"),s=Ember.get(e,"saveToDir"),o=Ember.get(this,"filesystem"),r=Ember.get(this,"modelName"),l=Ember.get(this,"database").getPouchId(Ember.get(e,"id"),r)
o.addFile(i,s,l).then(function(n){e.setProperties({localFile:!0,fileName:n.fullPath,url:n.toURL()}),e.save().then(function(){a.send(Ember.get(t,"addAction"),e)}).catch(function(e){throw e})})}else this.send("closeModal")},beforeUpdate:function(){var e=Ember.get(this,"model"),t=Ember.get(e,"photoFile"),n=Ember.get(e,"isImage"),a=Ember.get(e,"isNew")
return Ember.set(this,"newModel",a),a&&e.setProperties({files:[Ember.Object.create({content_type:t.type,data:t,name:"file"})],isImage:n}),Ember.RSVP.resolve()},actions:{cancel:function(){this.send("closeModal")},showFileRequired:function(){Ember.set(this,"showFileRequired",!0)}}})}),define("hospitalrun/patients/photo/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"bsi0GTqB",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonClass","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonClass"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["property","label"],["caption",[25,"t",["patients.labels.caption"],null]]]],false],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[1,[25,"take-photo",null,[["form","photoFile","isImage"],[[19,1,[]],[20,["model","photoFile"]],[20,["model","isImage"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[20,["model","isImage"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","thumbnail"],[7],[0,"\\n          "],[6,"img"],[10,"alt",[20,["model","caption"]],null],[10,"src",[20,["model","url"]],null],[9,"class","img-responsive"],[7],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"a"],[10,"href",[20,["model","url"]],null],[9,"target","_blank"],[10,"download",[26,[[20,["model","shortFileName"]]]]],[9,"class","btn btn-default"],[7],[0,"\\n          "],[6,"span"],[9,"class","glyphicon glyphicon-download"],[9,"aria-hidden","true"],[7],[8],[0," "],[1,[25,"t",["patients.buttons.download"],null],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]}],[4,"if",[[20,["showFileRequired"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","alert alert-warning"],[9,"role","alert"],[7],[1,[18,"fileRequiredMessage"],false],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/photo/template.hbs"}})}),define("hospitalrun/patients/quick-add/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({sexList:Ember.computed.alias("model.requestingController.sexList"),title:(0,n.t)("patients.titles.new"),updateCapability:"add_patient",actions:{cancel:function(){this.send("closeModal")}},afterUpdate:function(e){this.get("model.requestingController").send("addedNewPatient",e)}})}),define("hospitalrun/patients/quick-add/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"fBUjS6A+",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-warning"],[9,"role","alert"],[7],[0,"\\n    "],[1,[25,"t",["patients.messages.notFoundQuickAdd"],[["patientFullName","htmlSafe"],[[20,["model","shortDisplayName"]],true]]],false],[0,"\\n  "],[8],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["friendlyId","Id","required col-sm-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["firstName","First Name","required col-sm-6"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["lastName","Last Name","required col-sm-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["englishName",[25,"t",["patients.labels.englishName"],null],"col-sm-6"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","class"],[[19,1,[]],[20,["model"]],"sex","Sex",[20,["sexList"]],[20,["model","sex"]],"col-sm-6 form-input-group"]]],false],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","maxDate","class"],[[20,["model"]],"dateOfBirth","Date of Birth","now","col-sm-6"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["phone",[25,"t",["patients.labels.phone"],null],"col-xs-12 col-sm-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["text"]]],[["label","property","rows","class"],[[25,"t",["labels.address"],null],"address",3,"col-xs-12 col-sm-6"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/quick-add/template.hbs"}})}),define("hospitalrun/patients/reports/controller",["exports","hospitalrun/controllers/abstract-report-controller","moment","hospitalrun/mixins/patient-diagnosis","hospitalrun/mixins/patient-visits","hospitalrun/utils/select-values","hospitalrun/mixins/visit-types"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(a.default,i.default,o.default,{patientsController:Ember.inject.controller("patients"),clinicList:Ember.computed.map("patientsController.clinicList.value",s.default.selectValuesMap),diagnosisList:Ember.computed.alias("patientsController.diagnosisList"),physicianList:Ember.computed.map("patientsController.physicianList.value",s.default.selectValuesMap),locationList:Ember.computed.map("patientsController.locationList.value",s.default.selectValuesMap),statusList:Ember.computed.map("patientsController.statusList.value",s.default.selectValuesMap),visitTypesList:Ember.computed.alias("patientsController.visitTypesList"),reportType:"detailedAdmissions",patientDetails:{},admissionReportColumns:Ember.computed(function(){var e=this.get("intl")
return{sex:{label:e.t("labels.sex"),include:!0,property:"sex"},total:{label:e.t("labels.total"),include:!0,property:"total",format:"_numberFormat"}}}),admissionDetailReportColumns:Ember.computed(function(){var e=this.get("intl")
return{id:{label:e.t("labels.id"),include:!0,property:"patientId"},name:{label:e.t("labels.name"),include:!0,property:"patientName"},admissionDate:{label:e.t("patients.labels.admissionDate"),include:!0,property:"admissionDate",format:"_dateTimeFormat"},dischargeDate:{label:e.t("patients.labels.dischargeDate"),include:!1,property:"dischargeDate",format:"_dateTimeFormat"},patientDays:{label:e.t("patients.labels.patientDays"),include:!1,property:"patientDays",format:"_numberFormat"}}}),diagnosticReportColumns:Ember.computed(function(){var e=this.get("intl")
return{type:{label:e.t("labels.type"),include:!0,property:"type"},total:{label:e.t("labels.total"),include:!0,property:"total",format:"_numberFormat"}}}),procedureDetailReportColumns:Ember.computed(function(){var e=this.get("intl")
return{id:{label:e.t("labels.id"),include:!0,property:"patient.displayPatientId"},name:{label:e.t("labels.name"),include:!0,property:"patient.displayName"},procedure:{label:e.t("visits.labels.procedure"),include:!0,property:"procedure"},procedureDate:{label:e.t("visits.labels.procedureDate"),include:!0,property:"procedureDate",format:"_dateTimeFormat"}}}),reportColumns:Ember.computed(function(){var e=this.get("intl")
return{visitDate:{label:e.t("visits.labels.visitDate"),include:!0,property:"visitDate"},visitType:{label:e.t("visits.labels.visitType"),include:!0,property:"visitType"},visitLocation:{label:e.t("labels.location"),include:!1,property:"location"},examiner:{label:e.t("visits.labels.examiner"),include:!0,property:"examiner"},name:{label:e.t("labels.name"),include:!0,property:"patient.displayName"},id:{label:e.t("labels.id"),include:!0,property:"patient.displayPatientId"},sex:{label:e.t("patients.labels.sex"),include:!0,property:"patient.sex"},dateOfBirth:{label:e.t("patients.labels.dateOfBirth"),include:!0,property:"patient.dateOfBirth",format:"_dateFormat"},age:{label:e.t("labels.age"),include:!1,property:"patient.age"},primaryDiagnosis:{label:e.t("patients.labels.primaryDiagnosis"),include:!1,property:"primaryDiagnosis"},secondaryDiagnoses:{label:e.t("patients.labels.secondaryDiagnosis"),include:!1,property:"additionalDiagnoses",format:"_diagnosisListToString"},procedures:{label:e.t("labels.procedures"),include:!1,property:"resolvedProcedures",format:"_procedureListToString"},contacts:{label:e.t("patients.labels.contacts"),include:!1,property:"patient",format:"_contactListToString"},referredBy:{label:e.t("patients.labels.referredBy"),include:!1,property:"patient.referredBy"},referredDate:{label:e.t("patients.labels.referredDate"),include:!1,property:"patient.referredDate",format:"_dateFormat"}}}),statusReportColumns:Ember.computed(function(){var e=this.get("intl")
return{id:{label:e.t("labels.id"),include:!0,property:"patient.displayPatientId"},name:{label:e.t("labels.name"),include:!0,property:"patient.displayName"},status:{label:e.t("labels.status"),include:!0,property:"patient.status"},primaryDiagnosis:{label:e.t("patients.labels.primaryDiagnosis"),include:!0,property:"patient",format:"_formatPrimaryDiagnosis"},secondaryDiagnoses:{label:e.t("patients.labels.secondaryDiagnosis"),include:!0,property:"patient",format:"_formatSecondaryDiagnosis"}}}),reportTypes:Ember.computed(function(){var e=this.get("intl")
return[{name:e.t("patients.titles.admissionsDetail"),value:"detailedAdmissions"},{name:e.t("patients.titles.admissionsSummary"),value:"admissions"},{name:e.t("patients.titles.diagnosticTesting"),value:"diagnostic"},{name:e.t("patients.titles.dischargesDetail"),value:"detailedDischarges"},{name:e.t("patients.titles.dischargesSummary"),value:"discharges"},{name:e.t("patients.titles.proceduresDetail"),value:"detailedProcedures"},{name:e.t("patients.titles.proceduresSummary"),value:"procedures"},{name:e.t("patients.titles.patientStatus"),value:"status"},{name:e.t("patients.titles.totalPatientDays"),value:"patientDays"},{name:e.t("patients.titles.totalPatientDaysDetailed"),value:"detailedPatientDays"},{name:e.t("patients.titles.visit"),value:"visit"}]}),isDischargeReport:Ember.computed("reportType",function(){return this.get("reportType").toLowerCase().indexOf("discharges")>-1}),isStatusReport:Ember.computed("reportType",function(){return"status"===this.get("reportType")&&(this.set("startDate",null),this.set("endDate",null),!0)}),isVisitReport:Ember.computed("reportType",function(){return"visit"===this.get("reportType")}),_addContactToList:function(e,t,n,a){var i=[]
Ember.isEmpty(t)&&Ember.isEmpty(e)||(Ember.isEmpty(e)||i.push(e),Ember.isEmpty(t)||i.push(t),a.push(n+i.join(", ")))},_addReportRow:function(e,t,n,a){if(Ember.isEmpty(a)&&!Ember.isEmpty(e.patient)){var i=null
i=e.get?e.get("patient.id"):e.patient.get("id"),Ember.isEmpty(i)||(a={action:"viewPatient",model:i})}this._super(e,t,n,a)},_addRowsByType:function(e,t,n,a){this._totalByType(e,t,n).forEach(function(e){this._addReportRow(e,!0,a)}.bind(this))},_addPatientProcedureRows:function(e,t){e.forEach(function(e){Ember.isEmpty(e.records)?this._addReportRow({procedure:"Total for "+e.type+": "+e.total},!0,t):e.records.forEach(function(n,a){this._addReportRow({patient:n.get("patient"),procedure:n.get("description"),procedureDate:n.get("procedureDate")},!1,t),a+1===e.records.length&&this._addReportRow({procedure:"Total for "+e.type+": "+e.total},!0,t)}.bind(this))}.bind(this))},_contactListToString:function(e){var t=e.get("additionalContacts"),n=void 0,a=[],i=e.get("email"),s=e.get("phone")
return this._addContactToList(s,i,"Primary: ",a),Ember.isEmpty(t)||t.forEach(function(e){n="",Ember.isEmpty(e.name)||Ember.isEmpty(e.relationship)||(Ember.isEmpty(e.name)||(n+=e.name),Ember.isEmpty(e.relationship)||(Ember.isEmpty(n)||(n+=" - "),n+=e.relationship),n+=": "),this._addContactToList(e.phone,e.email,n,a)}.bind(this)),a.join(";\n")},_dateTimeFormat:function(e){return this._dateFormat(e,"l h:mm A")},_diagnosisListToString:function(e){return this._listToString(e,"diagnosis","date")},_findDiagnosticsByDate:function(){var e=this.get("endDate"),t=this.get("startDate"),a={options:{},mapReduce:"imaging_by_status"},i=this.get("maxValue")
return new Ember.RSVP.Promise(function(s,o){a.options.startkey=["Completed",null,t.getTime(),null],Ember.isEmpty(e)||(e=(0,n.default)(e).endOf("day").toDate(),a.options.endkey=["Completed",i,e.getTime(),i]),this.store.query("imaging",a).then(function(e){var t={imaging:e}
a.mapReduce="lab_by_status",this.store.query("lab",a).then(function(e){t.labs=e,s(t)},o)}.bind(this),o)}.bind(this))},_findPatientsByStatus:function(){var e={options:{key:this.get("status")},mapReduce:"patient_by_status"}
return new Ember.RSVP.Promise(function(t,n){this.store.query("patient",e).then(t,n)}.bind(this))},_findProceduresByDate:function(){var e=this.get("endDate"),t=this.get("startDate"),a={options:{},mapReduce:"procedure_by_date"},i=this.get("maxValue")
return new Ember.RSVP.Promise(function(s,o){a.options.startkey=[t.getTime(),null],Ember.isEmpty(e)||(e=(0,n.default)(e).endOf("day").toDate(),a.options.endkey=[e.getTime(),i]),this.store.query("procedure",a).then(s,o)}.bind(this))},_findVisitsByDate:function(){var e=this.get("endDate"),t=this.get("startDate"),a={options:{},mapReduce:"visit_by_date"},i=this.get("isDischargeReport"),s=this.get("maxValue")
return i&&(a.mapReduce="visit_by_discharge_date"),new Ember.RSVP.Promise(function(i,o){var r=this.get("isDischargeReport")
a.options.startkey=[t.getTime(),null],Ember.isEmpty(e)||(e=(0,n.default)(e).endOf("day").toDate(),a.options.endkey=r?[e.getTime(),s]:[e.getTime(),s,s]),this.store.query("visit",a).then(i,o)}.bind(this))},_filterByLike:function(e,t,n){return e.filter(function(e){var t=e.get("field")
if(Ember.isEmpty(t))return!1
if(Ember.isArray(t)){var a=t.find(function(e){return this._haveLikeValue(e,n)}.bind(this))
return!Ember.isEmpty(a)}return this._haveLikeValue(t,n)})},_filterInPatientVisit:function(e){var t=e.get("outPatient"),n=e.get("status")
return!t&&!Ember.isEmpty(n)},_finishVisitReport:function(e){this._totalByType(e,"visitType","total").forEach(function(e){"total"===e.type?this._addReportRow({visitDate:"Total visits: "+e.total}):(e.records.forEach(function(e){this._addReportRow(e)}.bind(this)),this._addReportRow({visitDate:"Total for "+e.type+": "+e.total}))}.bind(this)),this._finishReport()},_formatPrimaryDiagnosis:function(e){var t=this.getDiagnoses(e,!0,!1)
return this._diagnosisListToString(t)},_formatSecondaryDiagnosis:function(e){var t=this.getDiagnoses(e,!0,!0)
return this._diagnosisListToString(t)},_generateAdmissionOrDischargeReport:function(e,t){var n=this,a=!1,i=void 0,s={},o=this.get("intl").t("patients.labels.sexNotEntered")
t.indexOf("detailed")>-1?(a=!0,(i=this.get("admissionDetailReportColumns")).patientDays.include=!1,i.dischargeDate.include="detailedDischarges"===t):i=this.get("admissionReportColumns"),(e=e.filter(this._filterInPatientVisit)).forEach(function(e){if(!this.get("isDischargeReport")||!Ember.isEmpty(e.get("endDate"))){var t={patient:e.get("patient"),patientId:e.get("patient.displayPatientId"),patientName:e.get("patient.displayName"),admissionDate:e.get("startDate"),dischargeDate:e.get("endDate")},n=e.get("patient.sex")
n||(n=o)
var a=s[n]
a||(a={count:0,rows:[]},s[n]=a),a.count++,a.rows.push(t)}}.bind(this))
var r=0,l=function(e){n._addReportRow(e,!1,i)}
for(var d in s)a?(s[d].rows.forEach(l),this._addReportRow({patientId:d+" Total: "+s[d].count},!0,i)):this._addReportRow({sex:d,total:s[d].count},!0,i),r+=s[d].count
this._addReportRow({patientId:"Grand Total: "+r},!0,i),this._finishReport(i)},_generateDiagnosticReport:function(){this._findDiagnosticsByDate().then(function(e){var t=this.get("diagnosticReportColumns")
this._addRowsByType(e.imaging,"imagingType.name","Total for imaging: ",t),this._addRowsByType(e.labs,"labType.name","Total for labs: ",t),this._finishReport(t)}.bind(this),function(e){this._notifyReportError("Error in _generateDiagnosticReport: "+e)}.bind(this))},_generatePatientDaysReport:function(e,t){e=e.filter(this._filterInPatientVisit)
var a=0===t.indexOf("detailed"),i=this.get("endDate"),s=void 0,o=(0,n.default)(this.get("startDate")).startOf("day")
a?((s=this.get("admissionDetailReportColumns")).patientDays.include=!0,s.dischargeDate.include=!0):s={total:{label:"Total",include:!0,property:"total",format:"_numberFormat"}},i=Ember.isEmpty(i)?(0,n.default)().endOf("day"):(0,n.default)(i).endOf("day")
var r=e.reduce(function(e,t){var r=t.get("endDate"),l=(0,n.default)(t.get("startDate")).startOf("day")
r=Ember.isEmpty(r)?(0,n.default)().endOf("day"):(0,n.default)(r).endOf("day"),l.isBefore(o)&&(l=o),r.isAfter(i)&&(r=i)
var d=r.diff(l,"days",!0)
return a&&this._addReportRow({patient:t.get("patient"),patientId:t.get("patient.displayPatientId"),patientName:t.get("patient.displayName"),admissionDate:t.get("startDate"),dischargeDate:t.get("endDate"),patientDays:this._numberFormat(d,!0)},!1,s),e+d}.bind(this),0)
a?this._addReportRow({patientDays:"Total: "+this._numberFormat(r,!0)},!0,s):this._addReportRow({total:this._numberFormat(r,!0)},!1,s),this._finishReport(s)},_generateProcedureReport:function(e){this._findProceduresByDate().then(function(t){var n=void 0
if(t=t.filter(function(e){var t=e.get("visit")
return!Ember.isEmpty(t)&&!Ember.isEmpty(t.get("patient.id"))&&!0!==t.get("patient.archived")}),0===e.indexOf("detailed")){n=this.get("procedureDetailReportColumns"),t.forEach(function(e){e.set("patient",e.get("visit.patient"))})
var a=this._totalByType(t,"description","all procedures")
this._addPatientProcedureRows(a,n),this._finishReport(n)}else n=this.get("diagnosticReportColumns"),this._addRowsByType(t,"description","Total procedures: ",n),this._finishReport(n)}.bind(this),function(e){this._notifyReportError("Error in _generateProcedureReport: "+e)}.bind(this))},_generateStatusReport:function(){this._findPatientsByStatus().then(function(e){var t=this.get("statusReportColumns"),n=e.sortBy("lastName","firstName")
this._getPatientVisits(n).then(function(e){e.forEach(function(e){this._addReportRow({patient:e},!1,t)}.bind(this)),this._finishReport(t)}.bind(this)).catch(function(e){this._notifyReportError("Error in _generateStatusReport: "+e)}.bind(this))}.bind(this)).catch(function(e){this._notifyReportError("Error in _generateStatusReport: "+e)}.bind(this))},_generateVisitReport:function(e){var t=this.get("reportColumns"),n=this.getProperties("examiner","visitDate","visitType","location","clinic","primaryDiagnosis","secondaryDiagnosis")
for(var a in n)if(!Ember.isEmpty(n[a]))switch(a){case"diagnosis":e=this._filterByLike(e,"diagnosisList",n[a])
break
default:e=e.filterBy(a,n[a])}if(t.procedures.include){var i={}
e.forEach(function(e){i[e.get("id")]=e.get("procedures")}),Ember.RSVP.hash(i).then(function(t){e.forEach(function(e){e.set("resolvedProcedures",t[e.get("id")])}),this._finishVisitReport(e)}.bind(this))}else this._finishVisitReport(e)},_getPatientVisits:function(e){return new Ember.RSVP.Promise(function(t,n){var a={}
e.forEach(function(e){a[e.get("id")]=this.getPatientVisits(e)}.bind(this)),Ember.RSVP.hash(a).then(function(n){e.forEach(function(e){e.set("visits",n[e.get("id")])}),t(e)},n)}.bind(this))},_haveLikeValue:function(e,t){return e.toLowerCase().indexOf(t.toLowerCase())>-1},_listToString:function(e,t,n){var a=[]
return Ember.isEmpty(e)||(a=e.map(function(e){return Ember.get(e,t)+" ( "+this._dateFormat(Ember.get(e,n))+")"}.bind(this))),a.join(",\n")},_totalByType:function(e,t,n){var a=0,i=[]
return e.forEach(function(e){var n=e.get(t),s=void 0
Ember.isEmpty(n)||(s=i.find(function(e){return e.type.trim().toLowerCase()===n.toLowerCase()}),Ember.isEmpty(s)&&(s={type:n.trim(),total:0,records:[]},i.push(s)),s.total++,s.records.push(e),a++)}),(i=i.sortBy("type")).push({type:n,total:a}),i},_procedureListToString:function(e){return this._listToString(e,"description","procedureDate")},_validateDates:function(){return"status"===this.get("reportType")||this._validateDateInputs()},actions:{generateReport:function(){if(this._validateDates()){var e=this.get("reportRows"),t=this.get("reportType")
switch(e.clear(),this.showProgressModal(),t){case"diagnostic":this._generateDiagnosticReport()
break
case"detailedProcedures":case"procedures":this._generateProcedureReport(t)
break
case"admissions":case"discharges":case"detailedAdmissions":case"detailedDischarges":case"detailedPatientDays":case"patientDays":case"visit":this._findVisitsByDate().then(function(e){switch(t){case"admissions":case"detailedAdmissions":case"detailedDischarges":case"discharges":this._generateAdmissionOrDischargeReport(e,t)
break
case"detailedPatientDays":case"patientDays":this._generatePatientDaysReport(e,t)
break
case"visit":this._generateVisitReport(e)}}.bind(this),function(e){this._notifyReportError("Error in _findVisitsByDate: "+e)}.bind(this))
break
case"status":this._generateStatusReport()}}},viewPatient:function(e){this.store.find("patient",e).then(function(e){e.set("returnTo","patients.reports"),this.transitionToRoute("patients.edit",e)}.bind(this))}}})}),define("hospitalrun/patients/reports/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({pageTitle:Ember.computed("intl.locale",function(){return(0,n.t)("patients.titles.patientReport")}),model:function(){return Ember.RSVP.resolve(Ember.Object.create({}))}})}),define("hospitalrun/patients/reports/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/woUwesw",block:'{"symbols":["reportHeader","form"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"      "],[6,"div"],[9,"class","row"],[9,"data-test-selector","select-report-type"],[7],[0,"\\n        "],[1,[25,"component",[[19,2,["select"]]],[["class","content","id","optionValuePath","optionLabelPath","property","label"],["form-input-group col-xs-6",[20,["reportTypes"]],"report-type","value","name","reportType",[25,"t",["inventory.reports.reportType"],null]]]],false],[0,"\\n      "],[8],[0,"\\n"],[4,"if",[[20,["isStatusReport"]]],null,{"statements":[[0,"        "],[1,[25,"component",[[19,2,["select"]]],[["property","label","class","content","prompt"],["status","Patient Status","form-input-group",[20,["statusList"]]," "]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"data-test-selector","select-report-start-date"],[7],[0,"\\n            "],[1,[25,"date-picker",null,[["model","property","label","class","maxDate"],[[19,0,[]],"startDate","Start Date","col-sm-4","now"]]],false],[0,"\\n          "],[8],[0,"\\n          "],[6,"div"],[9,"data-test-selector","select-report-end-date"],[7],[0,"\\n            "],[1,[25,"date-picker",null,[["model","property","label","class","maxDate"],[[19,0,[]],"endDate","End Date","col-sm-4","now"]]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["isVisitReport"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-sm-6 form-input-group","Visit Type","visitType",[20,["visitTypes"]]," "]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-sm-6 form-input-group","Examiner","examiner",[20,["physicianList"]]," "]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-sm-6 form-input-group","Location","location",[20,["locationList"]]," "]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["select"]]],[["class","label","property","content","prompt"],["col-sm-6 form-input-group","Clinic","clinic",[20,["clinicList"]]," "]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","form-group col-xs-12"],[7],[0,"\\n            "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list"],[[19,2,[]],[20,["model"]],"diagnosis","Diagnosis",[20,["diagnosisList"]]]]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n\\n        "],[6,"h3"],[7],[1,[25,"t",["inventory.reports.fields"],null],false],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","id","label"]],"reportColumns.id.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","name","label"]],"reportColumns.name.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","age","label"]],"reportColumns.age.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","contacts","label"]],"reportColumns.contacts.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","dateOfBirth","label"]],"reportColumns.dateOfBirth.include","col-xs-2"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","examiner","label"]],"reportColumns.examiner.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","sex","label"]],"reportColumns.sex.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","primaryDiagnosis","label"]],"reportColumns.primaryDiagnosis.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","procedures","label"]],"reportColumns.procedures.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","referredBy","label"]],"reportColumns.referredBy.include","col-xs-2"]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n          "],[6,"div"],[9,"class","col-xs-1"],[7],[8],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","referredDate","label"]],"reportColumns.referredDate.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","secondaryDiagnoses","label"]],"reportColumns.secondaryDiagnoses.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","visitDate","label"]],"reportColumns.visitDate.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","visitLocation","label"]],"reportColumns.visitLocation.include","col-xs-2"]]],false],[0,"\\n          "],[1,[25,"component",[[19,2,["checkbox"]]],[["label","property","class"],[[20,["reportColumns","visitType","label"]],"reportColumns.visitType.include","col-xs-2"]]],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[2]},null],[0,"  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n    "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"generateReport"]],[7],[1,[25,"t",["inventory.reports.generate"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["showReportResults"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n      "],[6,"h3"],[9,"class","panel-title"],[7],[1,[18,"reportTitle"],false],[1,[25,"nav-paging",null,[["paginationProps"],[[20,["paginationProps"]]]]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[6,"table"],[9,"class","table"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"each",[[20,["reportHeaders"]]],null,{"statements":[[0,"            "],[6,"th"],[7],[0,"\\n              "],[1,[19,1,[]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"        "],[8],[0,"\\n        "],[12,"report-rows",[]],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"a"],[10,"href",[18,"csvExport"],null],[9,"target","_blank"],[10,"download",[26,[[18,"reportTitle"],".csv"]]],[9,"class","btn btn-primary"],[7],[1,[25,"t",["inventory.reports.export"],null],false],[8],[0,"\\n\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/patients/reports/template.hbs"}})}),define("hospitalrun/patients/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/mixins/patient-id","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{addCapability:"add_patient",additionalModels:[{name:"addressOptions",findArgs:["option","address_options"]},{name:"clinicList",findArgs:["lookup","clinic_list"]},{name:"countryList",findArgs:["lookup","country_list"]},{name:"diagnosisList",findArgs:["lookup","diagnosis_list"]},{name:"locationList",findArgs:["lookup","visit_location_list"]},{name:"physicianList",findArgs:["lookup","physician_list"]},{name:"pricingProfiles",findArgs:["price-profile"]},{name:"procedureList",findArgs:["lookup","procedure_list"]},{name:"sexList",findArgs:["lookup","sex"]},{name:"socialCustomForms",queryArgs:["custom-form",{options:{key:"socialwork"},mapReduce:"custom_form_by_type"}]},{name:"statusList",findArgs:["lookup","patient_status_list"]},{name:"visitTypesList",findArgs:["lookup","visit_types"]}],actions:{createNewVisit:function(e,t){var n="checkin"
t&&(n="new"),this.transitionTo("visits.edit",n).then(function(n){t?n.currentModel.set("returnToPatient",e.get("id")):n.currentModel.set("returnTo","patients"),n.currentModel.set("patient",e),n.currentModel.set("hidePatientSelection",!0),n.controller.getPatientDiagnoses(e,n.currentModel)})}},newButtonText:(0,a.t)("patients.buttons.newPatient"),moduleName:"patients"})}),define("hospitalrun/patients/search/controller",["exports","hospitalrun/patients/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/patients/search/route",["exports","hospitalrun/routes/abstract-search-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({moduleName:"patients",searchKeys:[{name:"friendlyId",type:"contains"},{name:"externalPatientId",type:"contains"},{name:"firstName",type:"fuzzy"},{name:"lastName",type:"fuzzy"},{name:"phone",type:"contains"}],searchModel:"patient"})}),define("hospitalrun/patients/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"z9bcz28L",block:'{"symbols":[],"statements":[[4,"search-listing",null,[["newButtonText","allButtonText"],["New Patient","All Patients"]],{"statements":[[0,"  "],[12,"patients/index",[]],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/patients/search/template.hbs"}})}),define("hospitalrun/patients/socialwork/expense/controller",["exports","hospitalrun/mixins/is-update-disabled","hospitalrun/utils/select-values","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{patientsController:Ember.inject.controller("patients"),categoryTypes:["Clothing","Education","Electricity","Food","Fuel","Other","Rent","Transportation","Water"].map(n.default.selectValuesMap),editController:Ember.computed.alias("patientsController"),showUpdateButton:!0,title:(0,a.t)("patients.titles.socialWork"),updateButtonAction:"update",updateButtonText:Ember.computed("model.isNew",function(){return this.get("model.isNew")?this.get("intl").t("buttons.add"):this.get("intl").t("buttons.update")}),actions:{cancel:function(){this.send("closeModal")},update:function(){var e=this.get("model")
this.get("editController").send("updateExpense",e)}}})})
define("hospitalrun/patients/socialwork/expense/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2RFLGKn2",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["select"]]],[["label","property","class","content","prompt"],[[25,"t",["inventory.reports.rows.category"],null],"category","required form-input-group",[20,["categoryTypes"]]," "]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["label","property"],[[25,"t",["patients.labels.sources"],null],"sources"]]],false],[0,"\\n    "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["patients.labels.cost"],null],"cost","required"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/socialwork/expense/template.hbs"}})}),define("hospitalrun/patients/socialwork/family-info/controller",["exports","hospitalrun/mixins/is-update-disabled","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{patientsController:Ember.inject.controller("patients"),editController:Ember.computed.alias("patientsController"),showUpdateButton:!0,title:(0,n.t)("patients.titles.familyInfo"),updateButtonAction:"update",updateButtonText:Ember.computed("model.isNew",function(){return this.get("model.isNew")?this.get("intl").t("buttons.add"):this.get("intl").t("buttons.update")}),actions:{cancel:function(){this.send("closeModal")},update:function(){var e=this.get("model")
this.get("editController").send("updateFamilyInfo",e)}}})}),define("hospitalrun/patients/socialwork/family-info/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2TmUCx/8",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","hideUpdateButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["hideUpdateButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["labels.name"],null],"name","required col-xs-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["labels.age"],null],"age","col-xs-3"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["patients.labels.civilStatus"],null],"civilStatus","col-xs-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["patients.labels.relationship"],null],"relationship","col-xs-6"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["patients.labels.education"],null],"education","col-xs-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["patients.labels.occupation"],null],"occupation","col-xs-6"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["patients.labels.income"],null],"income","col-xs-6"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["patients.labels.insurance"],null],"insurance","col-xs-6"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/patients/socialwork/family-info/template.hbs"}})}),define("hospitalrun/pricing/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:"Delete Pricing Item"})}),define("hospitalrun/pricing/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/xeZI+qS",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","name"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/delete/template.hbs"}})}),define("hospitalrun/pricing/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/return-to","hospitalrun/utils/select-values"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
e.default=t.default.extend(n.default,{pricingController:Ember.inject.controller("pricing"),actions:{addOverride:function(e){this.get("model.pricingOverrides").addObject(e),this.send("update",!0),this.send("closeModal")},categoryChanged:function(e){var t=this.get("model"),n=t.get("pricingType")
if(t.set("category",e),!Ember.isEmpty(e))if("Imaging"===e)t.set("pricingType","Imaging Procedure")
else if("Lab"===e)t.set("pricingType","Lab Procedure")
else{var a=this.get("pricingTypes.value")
!Ember.isEmpty(a)&&a.includes(n)||t.set("pricingType")}},deleteOverride:function(e){var t=e.overrideToDelete
this.get("model.pricingOverrides").removeObject(t),t.destroyRecord().then(function(){this.send("update",!0),this.send("closeModal")}.bind(this))},editOverride:function(e){Ember.isEmpty(e)&&(e=this.store.createRecord("override-price")),this.send("openModal","pricing.override",e)},showDeleteOverride:function(e){var t=Ember.Object.create({overrideToDelete:e})
this.displayConfirm("Delete Override","Are you sure you want to delete this override?","deleteOverride",t)}},categories:["Imaging","Lab","Procedure","Ward"].map(a.default.selectValuesMap),expenseAccountList:Ember.computed.alias("pricingController.expenseAccountList"),procedurePricingTypes:Ember.computed.alias("pricingController.procedurePricingTypes"),wardPricingTypes:Ember.computed.alias("pricingController.wardPricingTypes"),lookupListsToUpdate:Ember.computed("model.category",function(){var e=this.get("model.category").toLowerCase(),t=[{name:"expenseAccountList",property:"model.expenseAccount",id:"expense_account_list"}]
return this.get("pricingTypeEditable")&&t.push({name:e+"PricingTypes",property:"model.pricingType",id:e+"_pricing_types"}),t}),pricingTypes:Ember.computed("model.category",function(){var e=this.get("model.category")
if(!Ember.isEmpty(e))return this.get(e.toLowerCase()+"PricingTypes")}),pricingTypeEditable:Ember.computed("model.category",function(){var e=this.get("model").get("category")
return"Imaging"!==e&&"Lab"!==e}),updateCapability:"add_pricing",afterUpdate:function(e){var t="The pricing record for "+e.get("name")+" has been saved."
this.displayAlert("Pricing Item Saved",t)}})}),define("hospitalrun/pricing/edit/route",["exports","hospitalrun/routes/abstract-edit-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:"Edit Pricing Item",modelName:"pricing",newTitle:"New Pricing Item",actions:{deleteOverride:function(e){this.controller.send("deleteOverride",e)}},getNewData:function(e){var t=e.pricing_id.substr(3),n=null
return Ember.isEmpty(t)&&(t="Imaging"),"Lab"===t?n="Lab Procedure":"Imaging"===t&&(n="Imaging Procedure"),Ember.RSVP.resolve({category:t,pricingType:n})},model:function(e){var t=this.get("idParam")
return Ember.isEmpty(t)||0!==e[t].indexOf("new")?this._super(e):this._createNewRecord(e)}})}),define("hospitalrun/pricing/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"FVsRHocQ",block:'{"symbols":["form","override"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["label","property","class"],[[25,"t",["labels.name"],null],"name","required price-name"]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["labels.price"],null],"price","required col-xs-2 price-amount"]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[19,1,[]],[20,["model"]],"expenseAccount",[25,"t",["labels.expenseTo"],null],[20,["expenseAccountList"]],[20,["model","expenseAccount"]],"col-xs-4 price-department"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["select"]]],[["class","content","optionValuePath","optionLabelPath","property","action","label"],["required col-xs-4 price-category form-input-group",[20,["categories"]],"value","id","category",[25,"action",[[19,0,[]],"categoryChanged"],null],[25,"t",["labels.category"],null]]]],false],[0,"\\n"],[4,"if",[[20,["pricingTypeEditable"]]],null,{"statements":[[0,"        "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","className","prompt"],[[19,1,[]],[20,["model"]],"pricingType",[25,"t",["labels.type"],null],[20,["pricingTypes"]],"col-xs-4 price-type form-input-group"," "]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"div"],[9,"class","col-xs-4 price-type form-input-group"],[7],[0,"\\n          "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n          "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","pricingType"]],false],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]}],[0,"    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n          "],[1,[25,"t",["billing.labels.pricingPanelOverrides"],null],false],[0,"\\n"],[4,"if",[[20,["showUpdateButton"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"editOverride"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["billing.buttons.addOverride"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n        "],[6,"table"],[9,"class","table"],[7],[0,"\\n          "],[6,"tbody"],[7],[0,"\\n            "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n              "],[6,"th"],[7],[1,[25,"t",["billing.labels.pricingProfile"],null],false],[8],[0,"\\n              "],[6,"th"],[7],[1,[25,"t",["labels.price"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showUpdateButton"]]],null,{"statements":[[0,"                "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"],[4,"each",[[20,["model","pricingOverrides"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[9,"class","override-profile"],[7],[1,[19,2,["profile","name"]],false],[8],[0,"\\n                "],[6,"td"],[7],[1,[19,2,["price"]],false],[8],[0,"\\n                "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["showUpdateButton"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editOverride",[19,2,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n                    "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteOverride",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                      "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0,"  "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/edit/template.hbs"}})}),define("hospitalrun/pricing/imaging/controller",["exports","hospitalrun/pricing/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/pricing/imaging/route",["exports","hospitalrun/pricing/index/route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({category:"Imaging",pageTitle:"Imaging Pricing",actions:{editItem:function(e){e.set("returnTo","pricing.imaging"),this.transitionTo("pricing.edit",e)}}})}),define("hospitalrun/pricing/imaging/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"0aymP9TH",block:'{"symbols":[],"statements":[[12,"pricing/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/pricing/imaging/template.hbs"}})}),define("hospitalrun/pricing/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addPermission:"add_pricing",deletePermission:"delete_pricing",showCategory:!0,startKey:[]})}),define("hospitalrun/pricing/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{category:null,modelName:"pricing",pageTitle:"All Pricing Items",_getStartKeyFromItem:function(e){var t=e.get("category"),n=this._getPouchIdFromItem(e)
return[t,e.get("name"),e.get("pricingType"),n]},_modelQueryParams:function(){var e=this.get("category"),t=this._getMaxPouchId(),n={mapReduce:"pricing_by_category"}
return Ember.isEmpty(e)||(n.options={startkey:[e,null,null,null],endkey:[e,{},{},t]}),n},actions:{newItem:function(){if(this.currentUserCan("add_pricing")){var e="new",t=this.routeName.split(".")
2===t.length&&"index"!==t[1]&&(e+=t[1].capitalize()),this.transitionTo("pricing.edit",e)}}}})}),define("hospitalrun/pricing/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qdjkt2Zi",block:'{"symbols":["pricingItem"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"if",[[20,["showCategory"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.category"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.price"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.expenseTo"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n"],[4,"if",[[20,["showCategory"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[1,[19,1,["category"]],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[6,"td"],[9,"class","price-name"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["price"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["pricingType"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["expenseAccount"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["billing.alerts.noPricingItems"],null],false],[0," "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/index/template.hbs"}})}),define("hospitalrun/pricing/lab/controller",["exports","hospitalrun/pricing/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/pricing/lab/route",["exports","hospitalrun/pricing/index/route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({category:"Lab",pageTitle:"Lab Pricing",actions:{editItem:function(e){e.set("returnTo","pricing.lab"),this.transitionTo("pricing.edit",e)}}})}),define("hospitalrun/pricing/lab/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Ccu6X3I9",block:'{"symbols":[],"statements":[[12,"pricing/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/pricing/lab/template.hbs"}})}),define("hospitalrun/pricing/override/controller",["exports","hospitalrun/mixins/is-update-disabled","hospitalrun/utils/select-values"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend(t.default,{pricingController:Ember.inject.controller("pricing"),actions:{cancel:function(){this.get("model").rollbackAttributes(),this.send("closeModal")},update:function(){var e=this.get("model.isNew"),t=this.get("model")
t.save().then(function(){e?this.get("editController").send("addOverride",t):this.send("closeModal")}.bind(this))}},editController:Ember.inject.controller("pricing/edit"),pricingProfiles:Ember.computed.map("pricingController.pricingProfiles",n.default.selectObjectMap),showUpdateButton:!0,title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?"Add Override":"Edit Override"}),updateButtonAction:"update",updateButtonText:Ember.computed("model.isNew",function(){return this.get("model.isNew")?"Add":"Update"})})}),define("hospitalrun/pricing/override/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"8bNGEJ2+",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["select"]]],[["label","property","content","optionValuePath","optionLabelPath","class","prompt"],[[25,"t",["billing.labels.pricingProfile"],null],"profile",[20,["pricingProfiles"]],"selectObject","selectObject.name","required form-input-group pricing-profile"," "]]],false],[0,"\\n    "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["labels.price"],null],"price","required pricing-override-price"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/override/template.hbs"}})}),define("hospitalrun/pricing/procedure/controller",["exports","hospitalrun/pricing/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/pricing/procedure/route",["exports","hospitalrun/pricing/index/route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({category:"Procedure",pageTitle:"Procedure Pricing",actions:{editItem:function(e){e.set("returnTo","pricing.procedure"),this.transitionTo("pricing.edit",e)}}})}),define("hospitalrun/pricing/procedure/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"RBTR1tZt",block:'{"symbols":[],"statements":[[12,"pricing/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/pricing/procedure/template.hbs"}})}),define("hospitalrun/pricing/profiles/controller",["exports","hospitalrun/controllers/abstract-paged-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addPermission:"add_pricing_profile",deletePermission:"delete_pricing_profile"})}),define("hospitalrun/pricing/profiles/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({actions:{cancel:function(){this.send("closeModal")}},afterUpdate:function(e){var t="The pricing profile "+e.get("name")+" has been saved."
this.displayAlert("Pricing Profile Saved",t,"refreshProfiles")},title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?"New Pricing Profile":"Edit Pricing Profile"})})}),define("hospitalrun/pricing/profiles/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"6H2M1zCs",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["name",[25,"t",["labels.name"],null],"required pricing-profile-name"]]],false],[0,"\\n    "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"discountPercentage",[25,"t",["pricing.labels.discountPercentage"],null],"pricing-profile-percentage"]]],false],[0,"\\n    "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"discountAmount",[25,"t",["pricing.labels.discountAmount"],null],"pricing-profile-discount"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["setFee",[25,"t",["pricing.labels.setFee"],null],"pricing-set-fee"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/profiles/edit/template.hbs"}})}),define("hospitalrun/pricing/profiles/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/modal-helper"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{category:null,modelName:"price-profile",pageTitle:"Pricing Profiles",actions:{editItem:function(e){this.send("openModal","pricing.profiles.edit",e)},deleteItem:function(e){var t=Ember.Object.create({itemToDelete:e})
this.displayConfirm("Delete Profile","Are you sure you want to delete this profile?","deletePricingProfile",t)},deletePricingProfile:function(e){e.itemToDelete.set("archived",!0),e.itemToDelete.save().then(function(){e.itemToDelete.unloadRecord()})},newItem:function(){var e=this.store.createRecord("price-profile")
this.send("openModal","pricing.profiles.edit",e)},refreshProfiles:function(){this.refresh()}}})}),define("hospitalrun/pricing/profiles/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"KeYZErV9",block:'{"symbols":["profile"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["billing.labels.discountAmount"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["billing.labels.discountPercentage"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["billing.labels.setFee"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"        "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[9,"class","pricing-profile-name"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["discountAmount"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["discountPercentage"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["setFee"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"            "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canEdit"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"p"],[7],[1,[25,"t",["billing.alerts.noPricingProfiles"],null],false],[0,". "],[4,"if",[[20,["canAdd"]]],null,{"statements":[[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["messages.createNewRecord"],null],false],[8]],"parameters":[]},null],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/pricing/profiles/template.hbs"}})}),define("hospitalrun/pricing/route",["exports","hospitalrun/routes/abstract-module-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addCapability:"add_pricing",additionalModels:[{name:"expenseAccountList",findArgs:["lookup","expense_account_list"]},{name:"procedurePricingTypes",findArgs:["lookup","procedure_pricing_types"]},{name:"pricingProfiles",findArgs:["price-profile"]},{name:"wardPricingTypes",findArgs:["lookup","ward_pricing_types"]}],allowSearch:!0,moduleName:"pricing",newButtonText:(0,n.t)("buttons.newItem"),sectionTitle:(0,n.t)("pricing.sectionTitle"),subActions:Ember.computed(function(){return[{text:this.get("intl").t("pricing.navigation.allPricingItems"),linkTo:"pricing.index"},{text:this.get("intl").t("pricing.navigation.imagePricing"),linkTo:"pricing.imaging"},{text:this.get("intl").t("pricing.navigation.labPricing"),linkTo:"pricing.lab"},{text:this.get("intl").t("pricing.navigation.procedurePricing"),linkTo:"pricing.procedure"},{text:this.get("intl").t("pricing.navigation.wardPricing"),linkTo:"pricing.ward"},{text:this.get("intl").t("pricing.navigation.pricingProfiles"),linkTo:"pricing.profiles"}]})})}),define("hospitalrun/pricing/search/controller",["exports","hospitalrun/patients/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/pricing/search/route",["exports","hospitalrun/routes/abstract-search-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({moduleName:"pricing",searchKeys:[{name:"name",type:"fuzzy"}],searchModel:"pricing"})})
define("hospitalrun/pricing/search/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"YE84vVB6",block:'{"symbols":[],"statements":[[4,"search-listing",null,[["newButtonText","allButtonText"],[[25,"t",["labels.newItem"],null],[25,"t",["labels.allItems"],null]]],{"statements":[[0,"  "],[12,"pricing/index",[]],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/pricing/search/template.hbs"}})}),define("hospitalrun/pricing/ward/controller",["exports","hospitalrun/pricing/index/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/pricing/ward/route",["exports","hospitalrun/pricing/index/route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({category:"Ward",pageTitle:"Ward Pricing",actions:{editItem:function(e){e.set("returnTo","pricing.ward"),this.transitionTo("pricing.edit",e)}}})}),define("hospitalrun/pricing/ward/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"WjaxyBwD",block:'{"symbols":[],"statements":[[12,"pricing/index",[]],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/pricing/ward/template.hbs"}})}),define("hospitalrun/print/invoice/controller",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({actions:{returnToInvoice:function(){this.transitionTo("invoices.edit",this.get("model"))}}})}),define("hospitalrun/print/invoice/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"VEUbrHrA",block:'{"symbols":[],"statements":[[4,"print-this",null,null,{"statements":[[0,"  "],[12,"invoices/review",[]],[0,"  \\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/print/invoice/template.hbs"}})}),define("hospitalrun/procedures/charge/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({cancelAction:"closeModal",newCharge:!1,newPricingItem:!1,requestingController:Ember.inject.controller("procedures/edit"),database:Ember.inject.service(),pricingList:Ember.computed.alias("requestingController.pricingList"),selectedItem:null,updateCapability:"add_charge",title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?this.get("intl").t("procedures.titles.addChargeItem"):this.get("intl").t("procedures.titles.editChargeItem")}),beforeUpdate:function(){var e=this
return this.set("newCharge",this.get("model.isNew")),new Ember.RSVP.Promise(function(t,n){var a=e.get("model"),i=a.get("pricingItem"),s=e.get("selectedItem")
if(Ember.isEmpty(s)||!Ember.isEmpty(i)&&s.id===i.get("id")){var o=!1,r=!1
Ember.isEmpty(i)?(i=e.store.createRecord("pricing",{name:a.get("itemName"),category:a.get("pricingCategory")}),o=!0,r=!0):i.get("name")!==a.get("itemName")&&(i.set("name",a.get("itemName")),r=!0),r?i.save().then(function(){var n=e.get("pricingList")
o?(n.addObject({id:i.get("id"),name:i.get("name")}),a.set("pricingItem",i)):n.findBy("id",i.get("id")).name=i.get("name")
t()},n):t()}else e.store.find("pricing",s.id).then(function(e){a.set("pricingItem",e),t()})})},afterUpdate:function(e){!0===this.get("newCharge")?this.get("requestingController").send("addCharge",e):this.send("closeModal")}})}),define("hospitalrun/procedures/charge/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"b4X6Q1gV",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"pricing-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"itemName",[25,"t",["inventory.labels.item"],null],[20,["pricingList"]],[20,["selectedItem"]],"required charge-item-name"]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["labels.quantity"],null],"quantity","col-xs-3 required"]]],false],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateCharged","Date Charged","col-xs-4 required"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/procedures/charge/template.hbs"}})}),define("hospitalrun/procedures/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/charge-actions","hospitalrun/mixins/patient-submodule"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{visitsController:Ember.inject.controller("visits"),filesystem:Ember.inject.service(),chargePricingCategory:"Procedure",chargeRoute:"procedures.charge",canAddPhoto:Ember.computed(function(){var e=this.get("isFileSystemEnabled")
return this.currentUserCan("add_photo")&&e}),canDeletePhoto:Ember.computed(function(){return this.currentUserCan("delete_photo")}),anesthesiaTypes:Ember.computed.alias("visitsController.anesthesiaTypes"),anesthesiologistList:Ember.computed.alias("visitsController.anesthesiologistList"),cptCodeList:Ember.computed.alias("visitsController.cptCodeList"),medicationList:null,physicianList:Ember.computed.alias("visitsController.physicianList"),procedureList:Ember.computed.alias("visitsController.procedureList"),procedureLocations:Ember.computed.alias("visitsController.procedureLocations"),lookupListsToUpdate:[{name:"anesthesiaTypes",property:"model.anesthesiaType",id:"anesthesia_types"},{name:"anesthesiologistList",property:"model.anesthesiologist",id:"anesthesiologists"},{name:"cptCodeList",property:"model.cptCode",id:"cpt_code_list"},{name:"physicianList",property:"model.assistant",id:"physician_list"},{name:"physicianList",property:"model.physician",id:"physician_list"},{name:"procedureList",property:"model.description",id:"procedure_list"},{name:"procedureLocations",property:"model.location",id:"procedure_locations"}],editController:Ember.inject.controller("visits/edit"),pricingList:null,pricingTypes:Ember.computed.alias("visitsController.procedurePricingTypes"),newProcedure:!1,isFileSystemEnabled:Ember.computed.alias("filesystem.isFileSystemEnabled"),title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?this.get("intl").t("procedures.titles.add"):this.get("intl").t("procedures.titles.edit")}),updateCapability:"add_procedure",actions:{addPhoto:function(e){this.get("model.photos").addObject(e),this.send("closeModal")},deletePhoto:function(e){var t=e.get("photoToDelete"),n=t.get("id"),a=this.get("model.photos"),i=t.get("fileName")
a.removeObject(t),t.destroyRecord().then(function(){var e=this.get("filesystem")
if(this.get("isFileSystemEnabled")){var t=this.get("database").getPouchId(n,"photo")
e.deleteFile(i,t)}}.bind(this))},editPhoto:function(e){this.send("openModal","patients.photo",e)},showAddPhoto:function(){var e=this.get("store").createRecord("photo",{patient:this.get("model.visit.patient"),procedure:this.get("model"),saveToDir:this.get("model.visit.patient.id")+"/photos/"})
e.set("editController",this),this.send("openModal","patients.photo",e)},showAddMedication:function(){var e=this.get("store").createRecord("proc-charge",{dateCharged:new Date,newMedicationCharge:!0,quantity:1})
this.send("openModal","procedures.medication",e)},showEditMedication:function(e){var t=this.get("medicationList").findBy("id",e.get("medication.id"))
e.set("itemName",t.name),this.send("openModal","procedures.medication",e)},showDeleteMedication:function(e){this.send("openModal","dialog",Ember.Object.create({closeModalOnConfirm:!1,confirmAction:"deleteCharge",title:this.get("intl").t("procedures.titles.deleteMedicationUsed"),name:this.get("intl").t("models.medication.names.singular"),message:this.get("intl").t("messages.delete_singular",{name:this.name}),chargeToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeletePhoto:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deletePhoto",title:this.get("intl").t("patients.titles.deletePhoto"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"photo"}),photoToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))}},beforeUpdate:function(){return new Ember.RSVP.Promise(function(e,t){this.updateCharges().then(function(){this.get("model.isNew")?this.addChildToVisit(this.get("model"),"procedures").then(e,t):e()}.bind(this),t)}.bind(this))},afterUpdate:function(){var e=this.get("intl").t("procedures.titles.saved"),t=this.get("intl").t("procedures.messages.saved")
this.saveVisitIfNeeded(e,t)}})}),define("hospitalrun/procedures/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","hospitalrun/mixins/charge-route","hospitalrun/macro"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,{editTitle:(0,i.t)("procedures.titles.edit"),modelName:"procedure",newTitle:(0,i.t)("procedures.titles.new"),pricingCategory:"Procedure",database:Ember.inject.service(),photos:null,getNewData:function(){return Ember.RSVP.resolve({procedureDate:new Date})},setupController:function(e,t){this._super(e,t)
this.get("database").queryMainDB({key:"Medication",include_docs:!0},"inventory_by_type").then(function(t){var n=t.rows.map(function(e){return e.doc})
e.set("medicationList",n)}),this.store.query("photo",{options:{key:Ember.get(t,"id")},mapReduce:"photo_by_procedure"}).then(function(e){var n=[]
n.addObjects(e),t.set("photos",n)})},actions:{deletePhoto:function(e){this.controller.send("deletePhoto",e)}}})}),define("hospitalrun/procedures/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"NyHGaDGP",block:'{"symbols":["form","photo","charge"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","hint"],[[19,1,[]],[20,["model"]],"required procedure-description","description","Procedure",[20,["procedureList"]],[20,["model","description"]],false]]],false],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-xs-6","cptCode","CPT Code",[20,["cptCodeList"]],[20,["model","cptCode"]]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-sm-3","location","Procedure Location",[20,["procedureLocations"]],[20,["model","location"]]]]],false],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"procedureDate","Procedure Date","col-sm-3 required"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["timeStarted","Time Started","col-sm-3"]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["timeEnded","Time Ended","col-sm-3"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-sm-4 required procedure-physician","physician","Physician",[20,["physicianList"]],[20,["model","physician"]]]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","prompt"],[[19,1,[]],[20,["model"]],"col-sm-4","assistant","Assistant",[20,["physicianList"]],[20,["model","assistant"]]," "]]],false],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-sm-4","anesthesiologist","Anesthesiologist",[20,["anesthesiologistList"]],[20,["model","anesthesiologist"]]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,1,[]],[20,["model"]],"col-sm-4","anesthesiaType","Anesthesia Type",[20,["anesthesiaTypes"]],[20,["model","anesthesiaTypes"]]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[1,[25,"expand-text",null,[["label","property","rows","class","form"],["Notes","notes",3,"procedure-notes",[19,1,[]]]]],false],[0,"\\n    "],[12,"item-charges",[1]],[0,"\\n    "],[6,"div"],[9,"class","panel detail-section medication-charges"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n          "],[1,[25,"t",["procedures.titles.medicationUsed"],null],false],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddMedication"],[["bubbles"],[false]]],[7],[0,"\\n              "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["procedures.buttons.addMedication"],null],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n        "],[6,"table"],[9,"class","table"],[7],[0,"\\n          "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["inventory.labels.item"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n            "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n          "],[8],[0,"\\n"],[4,"each",[[20,["model","charges"]]],null,{"statements":[[4,"if",[[19,3,["medicationCharge"]]],null,{"statements":[[0,"              "],[6,"tr"],[7],[0,"\\n                "],[6,"td"],[7],[1,[19,3,["medicationName"]],false],[8],[0,"\\n                "],[6,"td"],[9,"class","medication-charge-quantity"],[7],[1,[19,3,["quantity"]],false],[8],[0,"\\n                "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditMedication",[19,3,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                    "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteMedication",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n                      "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[3]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n          "],[1,[25,"t",["patients.navigation.photos"],null],false],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPhoto"],[["bubbles"],[false]]],[7],[0,"\\n              "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.newPhoto"],null],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n        "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"each",[[20,["model","photos"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","col-sm-4 col-md-3"],[7],[0,"\\n              "],[6,"div"],[9,"class","thumbnail"],[3,"action",[[19,0,[]],"editPhoto",[19,2,[]]]],[7],[0,"\\n                "],[1,[25,"photo-display",null,[["photo"],[[19,2,[]]]]],false],[0,"\\n                "],[6,"div"],[9,"class","caption"],[7],[0,"\\n                  "],[1,[19,2,["caption"]],false],[0,"\\n                  "],[6,"p"],[7],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"                      "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editPhoto",[19,2,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeletePhoto"]]],null,{"statements":[[0,"                      "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeletePhoto",[19,2,[]]],[["bubbles"],[false]]],[7],[0,"\\n                        "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                  "],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/procedures/edit/template.hbs"}})}),define("hospitalrun/procedures/medication/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({cancelAction:"closeModal",newCharge:!1,requestingController:Ember.inject.controller("procedures/edit"),medicationList:Ember.computed.alias("requestingController.medicationList"),updateCapability:"add_charge",title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?this.get("intl").t("procedures.titles.addMedicationUsed"):this.get("intl").t("procedures.titles.editMedicationUsed")}),beforeUpdate:function(){if(this.get("model.isNew")){this.set("newCharge",!0)
var e=this.get("model"),t=e.get("inventoryItem")
e.set("medication",t),e.set("medicationTitle",t.get("name")),e.set("priceOfMedication",t.get("price"))}return Ember.RSVP.Promise.resolve()},afterUpdate:function(e){this.get("newCharge")?this.get("requestingController").send("addCharge",e):this.send("closeModal")}})}),define("hospitalrun/procedures/medication/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"wB/DUjZY",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[1,[25,"inventory-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"itemName",[25,"t",["procedures.labels.medicationUsed"],null],[20,["medicationList"]],[20,["selectedInventoryItem"]],"medication-used"]]],false],[0,"\\n    "],[1,[25,"number-input",null,[["model","label","property","class"],[[20,["model"]],[25,"t",["labels.quantity"],null],"quantity","required medication-quantity"]]],false],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/procedures/medication/template.hbs"}})}),define("hospitalrun/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/router",["exports","hospitalrun/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=/\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/g,a=/(\/search)\/.+/,i=Ember.Router.extend({metrics:Ember.inject.service(),location:t.default.locationType,rootURL:t.default.rootURL,didTransition:function(){this._super.apply(this,arguments),this._trackPage()},_trackPage:function(){var e=this
Ember.run.scheduleOnce("afterRender",this,function(){var t=e.get("url").replace(n,"").replace(a,"$1"),i=e.getWithDefault("currentRouteName","unknown")
Ember.get(e,"metrics").trackPage({page:t,title:i})})}})
i.map(function(){this.route("admin",function(){this.route("address"),this.route("print-header"),this.route("custom-forms",function(){this.route("edit",{path:"/edit/:custom-form_id"})}),this.route("loaddb"),this.route("inc-category",{resetNamespace:!0},function(){this.route("edit",{path:"/edit/:inc-category_id"})}),this.route("lookup",{path:"/"}),this.route("textreplace"),this.route("users",{resetNamespace:!0},function(){this.route("edit",{path:"/edit/:user_id"})}),this.route("roles"),this.route("query"),this.route("visit-forms"),this.route("workflow")}),this.route("appointments",function(){this.route("edit",{path:"/edit/:appointment_id"}),this.route("search"),this.route("today"),this.route("calendar"),this.route("theater")}),this.route("finishgauth",{path:"/finishgauth/:s1/:s2/:k/:t/:i/:p"}),this.route("index",{path:"/"}),this.route("imaging",function(){this.route("completed"),this.route("edit",{path:"/edit/:imaging_id"})}),this.route("inventory",function(){this.route("barcode",{path:"/barcode/:inventory_id"}),this.route("edit",{path:"/edit/:inventory_id"}),this.route("batch",{path:"/batch/:inventory-batch_id"}),this.route("listing"),this.route("reports"),this.route("request",{path:"/request/:inv-request_id"}),this.route("search",{path:"/search/:search_text"})}),this.route("incident",function(){this.route("completed"),this.route("edit",{path:"/edit/:incident_id"}),this.route("reports")}),this.route("invoices",function(){this.route("review",{path:"/review/:invoice_id"}),this.route("edit",{path:"/edit/:invoice_id"}),this.route("search",{path:"/search/:search_text"})}),this.route("labs",function(){this.route("completed"),this.route("edit",{path:"/edit/:lab_id"})}),this.route("login"),this.route("medication",function(){this.route("completed"),this.route("edit",{path:"/edit/:medication_id"}),this.route("return",{path:"/return/:inv-request_id"}),this.route("search",{path:"/search/:search_text"})}),this.route("patients",function(){this.route("edit",{path:"/edit/:patient_id"}),this.route("reports"),this.route("admitted"),this.route("search",{path:"/search/:search_text"}),this.route("operative-plan",{path:"/operative-plan/:operative-plan_id"}),this.route("operation-report",{path:"/operation-report/:operation-report_id"}),this.route("outpatient")}),this.route("pricing",function(){this.route("imaging"),this.route("lab"),this.route("procedure"),this.route("ward"),this.route("edit",{path:"/edit/:pricing_id"}),this.route("search",{path:"/search/:search_text"}),this.route("profiles")}),this.route("print",function(){this.route("invoice",{path:"/invoice/:invoice_id"})}),this.route("visits",function(){this.route("edit",{path:"/edit/:visit_id"}),this.route("procedures",{resetNamespace:!0},function(){this.route("edit",{path:"/edit/:procedure_id"})}),this.route("reports",function(){this.route("edit",{path:"/edit/:report_id"})})})}),e.default=i}),define("hospitalrun/routes/abstract-edit-route",["exports","ember-simple-auth/mixins/authenticated-route-mixin"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,{editTitle:null,hideNewButton:!1,modelName:null,newTitle:null,_createNewRecord:function(e){return new Ember.RSVP.Promise(function(t){this.generateId().then(function(n){this.getNewData(e).then(function(e){var a=Ember.get(this,"modelName")
n&&(e.id=n),n&&this.store.hasRecordForId(a,n)?t(this.store.push(this.store.normalize(a,e))):t(this.store.createRecord(a,e))}.bind(this))}.bind(this))}.bind(this))},idParam:Ember.computed("modelName",function(){return Ember.get(this,"modelName")+"_id"}),generateId:function(){return Ember.RSVP.resolve(null)},getNewData:function(){return Ember.RSVP.resolve({})},getScreenTitle:function(e){return Ember.get(e,"isNew")?Ember.get(this,"newTitle"):Ember.get(this,"editTitle")},model:function(e){var t=Ember.get(this,"idParam")
return Ember.isEmpty(t)||"new"!==e[t]?this._super(e):this._createNewRecord(e)},setupController:function(e,t){var n={}
n.currentScreenTitle=this.getScreenTitle(t),Ember.get(this,"hideNewButton")&&(n.newButtonAction=null),this.send("setSectionHeader",n),this._super(e,t)}})}),define("hospitalrun/routes/abstract-index-route",["exports","ember-simple-auth/mixins/authenticated-route-mixin","hospitalrun/mixins/pouchdb","hospitalrun/mixins/progress-dialog"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(n.default,a.default,t.default,{database:Ember.inject.service(),filterParams:null,firstKey:null,hideNewButton:!1,itemsPerPage:25,modelName:null,newButtonAction:null,newButtonText:null,nextStartKey:null,pageTitle:null,_getFilterParams:function(e){var t=[],n=this.get("filterParams")
return Ember.isEmpty(n)||n.forEach(function(n){Ember.isEmpty(e[n])||t.push({name:n,value:e[n]})}),t},_getMaxPouchId:function(){return this.get("database").getMaxPouchId(this.get("modelName").camelize())},_getMinPouchId:function(){return this.get("database").getMinPouchId(this.get("modelName").camelize())},_getPouchIdFromItem:function(e){return this.get("database").getPouchId(e.get("id"),this.get("modelName").camelize())},_getStartKeyFromItem:function(e){return e.get("id")},_modelQueryParams:function(){return{}},model:function(e){return new Ember.RSVP.Promise(function(t,n){var a=this._getFilterParams(e),i=this.get("modelName"),s=this.get("itemsPerPage"),o=this._modelQueryParams(e)
Ember.isEmpty(e.sortKey)||(o.sortKey=e.sortKey,Ember.isEmpty(e.sortDesc)||(o.sortDesc=e.sortDesc)),Ember.isEmpty(a)||(o.filterBy=a),Ember.isEmpty(o.options)&&(o.options={}),Ember.isEmpty(s)||(o.options.limit=s+1),Ember.isEmpty(e.startKey)||(o.options.startkey=e.startKey),this.store.query(i,o).then(function(e){if(!Ember.isEmpty(s))if(e.get("length")>0&&this.set("firstKey",this._getStartKeyFromItem(e.get("firstObject"))),e.get("length")>s){var n=e.popObject()
this.set("nextStartKey",this._getStartKeyFromItem(n))}else this.set("nextStartKey")
t(e)}.bind(this),n)}.bind(this))},queryParams:{sortDesc:{refreshModel:!0},sortKey:{refreshModel:!0},startKey:{refreshModel:!0}},setupController:function(e,t){var n=this.getProperties("firstKey","nextStartKey")
e.setProperties(n)
var a={currentScreenTitle:this.get("pageTitle")}
this.get("hideNewButton")?a.newButtonAction=null:Ember.isEmpty(this.get("newButtonAction"))||(a.newButtonAction=this.get("newButtonAction")),Ember.isEmpty(this.get("newButtonText"))||(a.newButtonText=this.get("newButtonText")),this.send("setSectionHeader",a),this.closeProgressModal(),this._super(e,t)}})}),define("hospitalrun/routes/abstract-module-route",["exports","ember-simple-auth/mixins/authenticated-route-mixin","hospitalrun/mixins/user-session"],function(e,t,n){function a(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t]
return n}return Array.from(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(n.default,t.default,{addCapability:null,additionalModels:null,allowSearch:!0,currentScreenTitle:null,moduleName:null,newButtonText:null,sectionTitle:null,subActions:null,editPath:Ember.computed("moduleName",function(){return this.get("moduleName")+".edit"}),deletePath:Ember.computed("moduleName",function(){return this.get("moduleName")+".delete"}),newButtonAction:Ember.computed(function(){return this.currentUserCan(this.get("addCapability"))?"newItem":null}),searchRoute:Ember.computed("moduleName",function(){return"/"+this.get("moduleName")+"/search"}),actions:{allItems:function(){this.transitionTo(this.get("moduleName")+".index")},deleteItem:function(e){var t=this.get("deletePath")
this.send("openModal",t,e)},editItem:function(e){this.transitionTo(this.get("editPath"),e)},newItem:function(){this.currentUserCan(this.get("addCapability"))&&this.transitionTo(this.get("editPath"),"new")},setSectionHeader:function(e){this.controllerFor(this.get("moduleName")).setProperties(e)}},beforeModel:function(e){var t=this.get("moduleName")
return this.currentUserCan(t)?this._super(e):(this.transitionTo("index"),Ember.RSVP.reject("Not available"))},model:function(){return Ember.isEmpty(this.additionalModels)?Ember.RSVP.resolve():new Ember.RSVP.Promise(function(e,t){var n=this.additionalModels.map(function(e){var t,n,i
return e.queryArgs?(t=this.store).query.apply(t,a(e.queryArgs)):1===e.findArgs.length?(n=this.store).findAll.apply(n,a(e.findArgs)):(i=this.store).find.apply(i,a(e.findArgs))}.bind(this))
Ember.RSVP.allSettled(n,"All additional Models for "+this.get("moduleName")).then(function(t){t.forEach(function(e,t){"fulfilled"===e.state&&this.set(this.additionalModels[t].name,e.value)}.bind(this)),e()}.bind(this),t)}.bind(this),"Additional Models for "+this.get("moduleName"))},renderTemplate:function(){this.render("section")},setupController:function(e,t){var n=this.controllerFor("application")
!0===this.get("allowSearch")?(n.set("allowSearch",!0),n.set("searchRoute",this.get("searchRoute"))):n.set("allowSearch",!1)
var a=this.controllerFor(this.get("moduleName")),i=this.getProperties("additionalButtons","currentScreenTitle","newButtonAction","newButtonText","sectionTitle","subActions")
a.setProperties(i),Ember.isEmpty(this.additionalModels)||this.additionalModels.forEach(function(t){e.set(t.name,this.get(t.name))}.bind(this)),this._super(e,t)}})}),define("hospitalrun/routes/abstract-search-route",["exports","ember-simple-auth/mixins/authenticated-route-mixin","ember-data"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,{searchKeys:null,searchModel:null,searchText:null,_findByContains:function(e){var t=this.get("searchKeys"),n=this.get("searchModel"),a={containsValue:{value:e,keys:t}}
return this.store.query(n,a)},model:function(e){return new Ember.RSVP.Promise(function(t){var a=e.search_text
this.controllerFor("application").set("currentSearchText",a),this.set("searchText",a),this._findByContains(a).then(t,function(e){throw t(new n.default.AdapterPopulatedRecordArray),new Error(e)}.bind(this))}.bind(this))},setupController:function(e,t){this._super(e,t),Ember.isEmpty(t)?e.set("hasRecords",!1):e.set("hasRecords",t.get("length")>0),e.set("searchText",this.get("searchText")),this.controllerFor("application").closeProgressModal()
var n=this.controllerFor(this.get("moduleName")),a="Search Results for <i>"+Ember.Handlebars.Utils.escapeExpression(this.get("searchText"))+"</i>"
n.set("currentScreenTitle",a.htmlSafe())}})}),define("hospitalrun/routes/application",["exports","ember-simple-auth/mixins/application-route-mixin","hospitalrun/mixins/modal-helper","hospitalrun/mixins/setup-user-role","hospitalrun/utils/unauthorized-error","hospitalrun/services/language-preference","moment"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0})
var r=Ember.Route.extend(t.default,n.default,a.default,{database:Ember.inject.service(),config:Ember.inject.service(),session:Ember.inject.service(),languagePreference:Ember.inject.service(),shouldSetupUserRole:!0,actions:{closeModal:function(){this.render("empty",{outlet:"modal",into:"application"})},error:function(e,t){var n=this
if(e instanceof i.default){var a=this.get("intl"),s=a.t("application.messages.sessionExpired"),o=Ember.get(this,"session"),r=a.t("application.titles.sessionExpired")
if(Ember.isEmpty(t))this.displayAlert(r,s,"unauthorizeSession")
else{var l=o.get("store"),d=o.get("data"),u=void 0
u=t.targetName?t.targetName:t,Ember.set(d,"transitionAfterLogin",u),l.persist(d).then(function(){n.displayAlert(r,s,"unauthorizeSession")})}}else this._super(e)},openModal:function(e,t){t&&Ember.set(this.controllerFor(e),"model",t),this.renderModal(e)},unauthorizeSession:function(){var e=Ember.get(this,"session")
Ember.get(e,"isAuthenticated")&&e.invalidate()},updateModal:function(e,t){Ember.set(this.controllerFor(e),"model",t)}},beforeModel:function(){this.get("intl").setLocale(s.DEFAULT_LANGUAGE),o.default.locale(s.DEFAULT_LANGUAGE,{longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm",l:"DD/MM/YYYY",ll:"D MMMM YYYY",lll:"D MMMM YYYY HH:mm",llll:"dddd D MMMM YYYY HH:mm"}})},model:function(e,t){var n=this,a=Ember.get(this,"session"),i=a&&Ember.get(a,"isAuthenticated"),s=Ember.get(this,"config"),o=Ember.get(this,"database")
return s.setup().then(function(){var e=s.get("standAlone")
if("finishgauth"!==t.targetName&&"login"!==t.targetName){if(Ember.set(n,"shouldSetupUserRole",!0),i||e)return o.setup().catch(function(){a.invalidate()})}else{if("login"===t.targetName&&e)return o.createUsersDB()
"finishgauth"===t.targetName&&Ember.set(n,"shouldSetupUserRole",!1)}})},afterModel:function(){Ember.set(this.controllerFor("application"),"allowSearch",!1),$("#apploading").remove(),this.get("languagePreference").loadUserLanguagePreference()},renderModal:function(e){this.render(e,{into:"application",outlet:"modal"})},sessionAuthenticated:function(){var e=this
!0===Ember.get(this,"shouldSetupUserRole")&&this.setupUserRole()
var t=Ember.get(this,"session"),n=t.get("data"),a=Ember.get(n,"transitionAfterLogin")
if(Ember.isEmpty(a))this._super()
else{var i=t.get("store")
Ember.set(n,"transitionAfterLogin",null),i.persist(n).then(function(){e.transitionTo(a)})}this.get("languagePreference").loadUserLanguagePreference()},sessionInvalidated:function(){this._super(),this.get("languagePreference").setApplicationLanguage(s.DEFAULT_LANGUAGE)}})
e.default=r}),define("hospitalrun/routes/index",["exports","ember-simple-auth/mixins/authenticated-route-mixin","hospitalrun/mixins/navigation","hospitalrun/mixins/user-roles"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,n.default,a.default,{session:Ember.inject.service(),beforeModel:function(){var e=this.get("session")
if(!Ember.isEmpty(e)){var t=e.get("data.authenticated.role")
if(!Ember.isEmpty(t)){var n=this.findUserRole(t)
if(!Ember.isEmpty(n)&&!Ember.isEmpty(n.defaultRoute)){var a=this.findNavItemByRoute(n.defaultRoute)
if(!Ember.isEmpty(a))return this.transitionTo(a.route)}}}return this._super.apply(this,arguments)},afterModel:function(){this.controllerFor("application").set("allowSearch",!1)},actions:{createNewUser:function(){return this.transitionTo("users.edit","new")}}})}),define("hospitalrun/routes/login",["exports","ember-simple-auth/mixins/unauthenticated-route-mixin"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,{config:Ember.inject.service(),database:Ember.inject.service(),requireLogin:Ember.computed.alias("database.requireLogin"),standAlone:Ember.computed.alias("config.standAlone"),beforeModel:function(e){var t=Ember.get(this,"session")
if(!Ember.get(t,"isAuthenticated")){var n=Ember.get(this,"requireLogin")
return!0===Ember.get(this,"standAlone")&&!1===n?this.get("session").authenticate("authenticator:custom",{identification:"hradmin",password:"test"}):Ember.get(this,"config").useGoogleAuth().then(function(e){e&&window.location.replace("/auth/google")})}this._super(e)}})}),define("hospitalrun/serializers/application",["exports","ember-pouch"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.Serializer.extend()}),define("hospitalrun/serializers/user",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=t.default.JSONSerializer.extend({attrs:{rev:"_rev"},primaryKey:"_id",isNewSerializerAPI:!0,normalizeArrayResponse:function(e,t,n,a,i){var s=n.rows.map(function(e){return e.doc}.bind(this))
return this._super(e,t,s,a,i)},normalizeSaveResponse:function(e,t,n){return{data:{id:n.id,type:"user",attrs:{rev:n.rev}}}}})
e.default=n}),define("hospitalrun/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/services/config",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({configDB:null,database:Ember.inject.service(),session:Ember.inject.service(),languagePreference:Ember.inject.service(),sessionData:Ember.computed.alias("session.data"),standAlone:!1,needsUserSetup:!1,markUserSetupComplete:function(){if(!0===Ember.get(this,"needsUserSetup")){Ember.set(this,"needsUserSetup",!1)
var e=this.get("configDB")
return new Ember.RSVP.Promise(function(t,n){e.put({_id:"config_user_setup_flag",value:!1},function(e,a){e&&n(e),t(a)})})}return Ember.RSVP.resolve(!0)},setup:function(){var e=this.replicateConfigDB.bind(this),t=this.loadConfig.bind(this),n=this.createDB()
return this.set("configDB",n),window.ELECTRON&&this.set("standAlone",!0),!1===this.get("standAlone")?e(n).then(t):t()},createDB:function(){return new PouchDB("config")},replicateConfigDB:function(e){return new Ember.RSVP.Promise(function(t){var n=document.location.protocol+"//"+document.location.host+"/db/config"
e.replicate.from(n).then(t).catch(t)})},loadConfig:function(){var e=this.get("configDB"),t={include_docs:!0,keys:["config_consumer_key","config_consumer_secret","config_disable_offline_sync","config_external_search","config_oauth_token","config_token_secret","config_use_google_auth"]}
return new Ember.RSVP.Promise(function(n,a){e.allDocs(t,function(e,t){e&&(console.log("Could not get configDB configs:",e),a(e))
for(var i={},s=0;s<t.rows.length;s++)!t.rows[s].error&&t.rows[s].doc&&(i[t.rows[s].id]=t.rows[s].doc.value)
n(i)})},"getting configuration from the database")},getFileLink:function(e){var t=this.get("configDB")
return new Ember.RSVP.Promise(function(n,a){t.get("file-link_"+e,function(e,t){e&&a(e),n(t)})})},removeFileLink:function(e){var t=this.get("configDB")
return this.getFileLink(e).then(function(e){t.remove(e)})},saveFileLink:function(e,t){var n=this.get("configDB")
return new Ember.RSVP.Promise(function(a,i){n.put({fileName:e,_id:"file-link_"+t},function(e,t){e&&i(e),a(t)})})},saveOauthConfigs:function(e){var t=this.get("configDB"),n=Object.keys(e),a=[]
return this._getOauthConfigs(n).then(function(i){return n.forEach(function(n){var s=i.rows.findBy("key",n)
s&&s.doc?(s=s.doc).value=e[n]:s={_id:n,value:e[n]},a.push(t.put(s))}),Ember.RSVP.all(a)})},useGoogleAuth:function(){return this.getConfigValue("use_google_auth",!1)},getPatientPrefix:function(){return this.getConfigValue("patient_id_prefix","P")},getConfigDB:function(){return this.get("configDB")},getConfigValue:function(e,t){var n=this.get("configDB")
return new Ember.RSVP.Promise(function(a){n.get("config_"+e).then(function(e){Ember.run(null,a,e.value)}).catch(function(){Ember.run(null,a,t)})},"get "+e+" from config database")},_getOauthConfigs:function(e){var t={include_docs:!0,keys:e}
return this.get("configDB").allDocs(t)},getCurrentUser:function(){return this.get("sessionData").authenticated}})}),define("hospitalrun/services/cookies",["exports","ember-cookies/services/cookies"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/services/custom-forms",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({store:Ember.inject.service(),getCustomForms:function(e){return this.get("store").query("custom-form",{options:{keys:e},mapReduce:"custom_form_by_type"})},setDefaultCustomForms:function(e,t){return this.getCustomForms(e).then(function(e){return Ember.isEmpty(e)||e.forEach(function(e){Ember.get(e,"alwaysInclude")&&Ember.set(t,"customForms."+Ember.get(e,"id"),Ember.Object.create())}),t})}})}),define("hospitalrun/services/database",["exports","hospitalrun/utils/pouch-views","pouchdb-list","hospitalrun/mixins/oauth-headers","pouchdb-adapter-memory","hospitalrun/mixins/pouch-find-indexes","pouchdb-users","worker-pouch/client","hospitalrun/utils/unauthorized-error"],function(e,t,n,a,i,s,o,r,l){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend(a.default,s.default,{mainDB:null,oauthHeaders:null,requireLogin:!0,setMainDB:!1,usePouchFind:!1,usersDB:null,config:Ember.inject.service(),standAlone:Ember.computed.alias("config.standAlone"),createDB:function(e){var t=Ember.get(this,"standAlone")
if(!t&&e.config_external_search||Ember.set(this,"usePouchFind",!0),t){var n=this._createLocalDB()
return Ember.RSVP.resolve(n)}return this._createMainDB(e)},getDBInfo:function(){return Ember.get(this,"mainDB").info()},getDocFromMainDB:function(e){var t=this
return new Ember.RSVP.Promise(function(n,a){Ember.get(t,"mainDB").get(e,function(e,i){e?a(t.handleErrorResponse(e)):n(i)})},"getDocFromMainDB "+e)},getEmberId:function(e){var t=Ember.get(this,"mainDB").rel.parseDocID(e)
if(!Ember.isEmpty(t.id))return t.id},getMaxPouchId:function(e){return this.getPouchId({},e)},getMinPouchId:function(e){return this.getPouchId(null,e)},getPouchId:function(e,t){var n={type:t}
return Ember.isEmpty(e)||(n.id=e),Ember.get(this,"mainDB").rel.makeDocID(n)},getRemoteDBUrl:function(){return document.location.protocol+"//"+document.location.host+"/db/main"},handleErrorResponse:function(e){if(e.status||e.errors&&e.errors.length>0&&(e.status=parseInt(e.errors[0].status)),401===e.status||403===e.status){var t=JSON.stringify(e,null,2)
return new l.default(e,t)}return e},loadDBFromDump:function(e){var t=this
return new Ember.RSVP.Promise(function(n,a){PouchDB.plugin(i.default)
var s=new PouchDB("dbdump",{adapter:"memory"})
s.load(e).then(function(){var e=Ember.get(t,"mainDB")
s.replicate.to(e).on("complete",function(e){n(e)}).on("error",function(e){a(e)})},a)},"loadDBFromDump")},queryMainDB:function(e,t){var n=this
return new Ember.RSVP.Promise(function(a,i){var s=Ember.get(n,"mainDB")
t?s.query(t,e,function(e,t){e?i(n.handleErrorResponse(e)):(t.rows=n._mapPouchData(t.rows),a(t))}):s.allDocs(e,function(e,t){e?i(n.handleErrorResponse(e)):(t.rows=n._mapPouchData(t.rows),a(t))})},"queryMainDB")},setup:function(){var e=this
return PouchDB.plugin(n.default),Ember.get(this,"config").loadConfig().then(function(t){return e.createDB(t).then(function(n){if(Ember.set(e,"mainDB",n),Ember.set(e,"setMainDB",!0),Ember.get(e,"standAlone"))return e.createUsersDB()
e.setupSubscription(t)})})},setupSubscription:function(e){var t=this
if(!e.config_disable_offline_sync&&navigator.serviceWorker){var n=Ember.get(this,"config"),a=this._createLocalDB()
return n.getConfigValue("push_subscription").then(function(e){return Ember.isEmpty(e)?a.id().then(function(e){var n={id:e,remoteSeq:0}
return t._getPermissionAndSubscribe(n)}).then(function(){return t._requestSync()}):t._requestSync()})}},_askPermission:function(){return new Ember.RSVP.Promise(function(e,t){var n=Notification.requestPermission(function(t){e(t)})
n&&n.then(e,t)}).then(function(e){if("granted"!==e)throw new Error("We weren't granted permission.")
return e},"Ask for notification permisson")},_createLocalDB:function(e){var n=new PouchDB("localMainDB",e)
return(0,t.default)(n),this.buildPouchFindIndexes(n),n},_createMainDB:function(e){var t=this
return this._setOAuthHeaders(e),!e.config_disable_offline_sync&&navigator.serviceWorker?navigator.serviceWorker.ready.then(function(){return navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage?(PouchDB.adapter("worker",r.default),t._createLocalDB({adapter:"worker",worker:function(){return navigator.serviceWorker}})):t._createRemoteDB(e)}):this._createRemoteDB(e)},_createRemoteDB:function(e){var n=this.getRemoteDBUrl(),a=this._getOptions(e),i=new PouchDB(n,a)
return i.info().then(function(){return(0,t.default)(i),i}).catch(function(e){throw console.log("error with remote db:",JSON.stringify(e,null,2)),e})},_getNotificationPermissionState:function(){return navigator.permissions?navigator.permissions.query({name:"notifications"}).then(function(e){return e.state}):Ember.RSVP.resolve(Notification.permission)},_getPermissionAndSubscribe:function(e){var t=this
return new Ember.RSVP.Promise(function(n,a){navigator.serviceWorker.ready.then(function(i){return t._getNotificationPermissionState().then(function(s){return"granted"!==s?t._askPermission().then(function(){return t._subscribeUserToPush(i,e).then(n,a)}):t._subscribeUserToPush(i,e).then(n,a)})})},"Get notification permission and subscribe to push")},_urlBase64ToUint8Array:function(e){for(var t=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),n=window.atob(t),a=new Uint8Array(n.length),i=0;i<n.length;++i)a[i]=n.charCodeAt(i)
return a},_sendSubscriptionToServer:function(e,t){return new Ember.RSVP.Promise(function(n,a){return fetch("/save-subscription/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({dbInfo:t,subscription:e})}).then(function(e){if(!e.ok)throw new Error("Bad status code from server.")
return e.json()}).then(function(e){if(!0!==e.ok)throw new Error("There was a bad response from server.",JSON.stringify(e,null,2))
n(e)}).catch(a)},"Send push subscription to server")},_subscribeUserToPush:function(e,t){var n=this,a=Ember.get(this,"config")
return a.getConfigValue("push_public_key").then(function(i){if(i){var s={userVisibleOnly:!0,applicationServerKey:n._urlBase64ToUint8Array(i)}
return new Ember.RSVP.Promise(function(i,o){return e.pushManager.subscribe(s).then(function(e){var a=JSON.stringify(e)
return a=JSON.parse(a),n._sendSubscriptionToServer(a,t)}).then(function(e){return a.getConfigDB().put({_id:"config_push_subscription",value:e.id}).then(i,o)}).catch(o)})}},"Subscribe user to push service.")},_requestSync:function(){return new Ember.RSVP.Promise(function(e,t){var n=new MessageChannel
n.port1.onmessage=function(n){n.data.error?t(n.data.error):e(n.data)},navigator.serviceWorker.controller.postMessage("remotesync",[n.port2])},"Request offline sync")},createUsersDB:function(){var e=this
PouchDB.plugin(o.default)
var t=new PouchDB("_users")
return t.installUsersBehavior().then(function(){return Ember.set(e,"usersDB",t),t.allDocs().then(function(n){if(n.total_rows<2&&(Ember.set(e,"requireLogin",!1),0===n.total_rows))return t.put({_id:"org.couchdb.user:hradmin",type:"user",name:"hradmin",password:"test",roles:["System Administrator","admin","user"],userPrefix:"p1"})})})},_getOptions:function(e){var t={}
if(e){if(t.ajax={timeout:3e4},Ember.isEmpty(e.config_consumer_key)||Ember.isEmpty(e.config_consumer_secret)||Ember.isEmpty(e.config_oauth_token)||Ember.isEmpty(e.config_token_secret))throw Error("login required")
var n=Ember.get(this,"oauthHeaders")
t.ajax.headers=n}return t},_mapPouchData:function(e){var t=this,n=[]
return e&&(n=e.map(function(e){if(e.doc){var n={doc:e.doc.data}
return n.doc.id=t.getEmberId(e.id),n}return e})),n},_setOAuthHeaders:function(e){var t=this.getOAuthHeaders(e)
Ember.set(this,"oauthHeaders",t)}})}),define("hospitalrun/services/filesystem",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({config:Ember.inject.service(),filer:null,fileSystemSize:8589934592,_onError:function(e){console.log("Filer filesystem error: "+e)},_downloadFiles:function(){this.store.find("photo").then(function(e){e.forEach(function(e){this.downloadIfNeeded(e)}.bind(this))}.bind(this))},_downloadFileFromServer:function(e){var t=Ember.get(e,"fileName"),n=Ember.get(e,"id"),a=Ember.get(e,"url"),i=new XMLHttpRequest
Ember.isEmpty(a)||(i.open("GET",a,!0),i.responseType="blob",i.onload=function(){var e=new Blob([i.response])
this.addFile(e,t,n)}.bind(this),i.send())},setup:function(){var e=this.get("fileSystemSize"),t=new Filer
t.init({persistent:!0,size:e},function(){try{this.set("filer",t)}catch(e){}}.bind(this))},addFile:function(e,t,n){return new Ember.RSVP.Promise(function(a,i){var s=new Date,o=this.get("filer"),r=e.name||s.getTime(),l=t+r,d=this.get("config")
if(t.indexOf(".")>-1){l=t
var u=t.split("/")
r=u.pop(),t=u.join("/"),t+="/"}if(-1===l.indexOf("."))if(e.type){var c=e.type.split("/")
l+="."+c.pop()}else l+=".png"
this.fileExists(l).then(function(u){if(u&&(l=t+s.getTime()+r),Ember.isEmpty(o)&&i("Local filesystem unavailable, please use Google Chrome browser"),Ember.isEmpty(r)&&!Ember.isEmpty(e.type)){var c=e.type.split("/")
c.length>1&&(l+="."+c[1])}o.mkdir(t,!1,function(){o.write(l,{data:e,type:e.type},function(e){d.saveFileLink(l,n),a(e)},function(e){i(e)})},function(e){i(e)})}.bind(this))}.bind(this))},deleteFile:function(e,t){return new Ember.RSVP.Promise(function(n,a){var i=this.get("filer"),s=this.get("config")
try{i.ls(e,function(){i.rm(e,function(){s.removeFileLink(t),n()},a)},function(e){"NotFoundError"===e.name?n():a(e)})}catch(o){a(o)}}.bind(this))},downloadIfNeeded:function(e){var t=Ember.get(e,"fileName")
this.fileExists(t).then(function(t){t||this._downloadFileFromServer(e)}.bind(this))},fileExists:function(e){return new Ember.RSVP.Promise(function(t){this.get("filer").fs.root.getFile(e,{},function(){t(!0)},function(){t(!1)})}.bind(this))},fileToDataURL:function(e){return new Ember.RSVP.Promise(function(t){var n=new FileReader
n.onloadend=function(e){t(e.target.result)},n.readAsDataURL(e)})},fileToString:function(e){return new Ember.RSVP.Promise(function(t){var n=new FileReader
n.onloadend=function(e){t(e.target.result)},n.readAsText(e)})},isFileSystemEnabled:Ember.computed("filer",function(){var e=this.get("filer")
return!Ember.isEmpty(e)}),pathToFileSystemURL:function(e){return new Ember.RSVP.Promise(function(t){this.get("filer").fs.root.getFile(e,{},function(e){t(e.toURL())},function(){t()})}.bind(this))}})})
define("hospitalrun/services/intl",["exports","ember-intl/services/intl"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/services/keyboard",["exports","ember-keyboard/services/keyboard"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/services/language-preference",["exports","hospitalrun/config/environment","hospitalrun/utils/rtl-detect"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.DEFAULT_LANGUAGE=void 0
var a=e.DEFAULT_LANGUAGE=t.default.intl.defaultLocale||"en"
e.default=Ember.Service.extend({intl:Ember.inject.service(),config:Ember.inject.service(),loadUserLanguagePreference:function(){return Ember.RSVP.hash({user:this.getConfig().getCurrentUser(),preferences:this.fetchOrCreatePreferences()}).then(function(e){var t=e.user,n=e.preferences
return t&&t.name&&n[t.name]&&n[t.name].intl||a}).catch(function(){return a}).then(this.setApplicationLanguage.bind(this))},setApplicationLanguage:function(e){var t=this
return Ember.run(function(){return t.set("intl.locale",[e,a].uniq())}),document.body.dir=n.default.isRtlLang(e)?"rtl":"auto",e},saveUserLanguagePreference:function(e){var t=this
return this.setApplicationLanguage(e),Ember.RSVP.hash({user:this.getConfig().getCurrentUser(),preferences:this.fetchOrCreatePreferences().then(function(e){return e},function(){return{_id:"preferences"}})}).then(function(n){var a=n.user,i=n.preferences
return i[a.name]=i[a.name]||{},i[a.name].intl=e,t.getConfig().getConfigDB().put(i)}).catch(function(e){return Ember.Logger.error(e)})},fetchOrCreatePreferences:function(){return this.getConfig().getConfigDB().get("preferences")},getConfig:function(){return this.get("config")}})}),define("hospitalrun/services/lookup-lists",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Service.extend({lookupLists:{},store:Ember.inject.service(),getLookupList:function(e){return this.getLookupLists([e]).then(function(t){return t[e]})},getLookupLists:function(e){var t=this,n=Ember.get(this,"lookupLists"),a=Ember.get(this,"store"),i=e.filter(function(e){if(Ember.isEmpty(n[e]))return!0})
if(Ember.isEmpty(i))return Ember.RSVP.resolve(this._getLookupListsFromCache(e))
var s={}
return i.includes("incidentCategories")&&(s.incidentCategories=a.findAll("inc-category"),i.removeObject("incidentCategories")),Ember.isEmpty(i)||(s.lookup=a.query("lookup",{options:{keys:i}})),Ember.RSVP.hash(s).then(function(a){return Ember.isEmpty(a.incidentCategories)||(n.incidentCategories=a.incidentCategories.filterBy("archived",!1)),Ember.isEmpty(a.lookup)||i.forEach(function(e){n[e]=a.lookup.findBy("id",e)}),t._getLookupListsFromCache(e)})},resetLookupList:function(e){delete Ember.get(this,"lookupLists")[e]},_getIncidentCategories:function(){return Ember.get(this,"store").findAll("inc-category")},_getLookupListsFromCache:function(e){var t=Ember.get(this,"lookupLists"),n={}
return e.forEach(function(e){Ember.isEmpty(t[e])||(n[e]=t[e])}),n}})}),define("hospitalrun/services/metrics",["exports","ember-metrics/services/metrics"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/services/session",["exports","ember-simple-auth/services/session"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("hospitalrun/services/validations",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
var t=Ember.set
e.default=Ember.Service.extend({init:function(){t(this,"cache",{})}})}),define("hospitalrun/serviceworkers/google-analytics",[],function(){goog.offlineGoogleAnalytics.initialize()}),define("hospitalrun/serviceworkers/pouchdb-sync",[],function(){var _slicedToArray=function(){return function(e,t){if(Array.isArray(e))return e
if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,s=void 0
try{for(var o,r=e[Symbol.iterator]();!(a=(o=r.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(l){i=!0,s=l}finally{try{!a&&r.return&&r.return()}finally{if(i)throw s}}return n}(e,t)
throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()
function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t]
return n}return Array.from(e)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},allChanges={},configs=!1,syncingRemote=!1,configDB=new PouchDB("config"),localMainDB=new PouchDB("localMainDB"),lastServerSeq=void 0
function PouchError(e){Error.call(e.reason),this.status=e.status,this.name=e.error,this.message=e.reason,this.error=!0}function createError(e){var t=e.status||500
return e.name&&e.message&&("Error"!==e.name&&"TypeError"!==e.name||(-1!==e.message.indexOf("Bad special document member")?e.name="doc_validation":e.name="bad_request"),e={error:e.name,name:e.name,reason:e.message,message:e.message,status:t}),e}function safeEval(str){var target={}
return eval("target.target = ("+str+");"),target.target}function decodeArgs(e){var t=["filter","map","reduce"]
return e.forEach(function(e){"object"!==(void 0===e?"undefined":_typeof(e))||null===e||Array.isArray(e)||t.forEach(function(t){t in e&&null!==e[t]?"func"===e[t].type&&e[t].func&&(e[t]=safeEval(e[t].func)):delete e[t]})}),e}function postMessage(e,t){t.ports[0].postMessage(e)}function sendError(e,t,n,a){logDebug(" -> sendError",e,t,n),postMessage({type:"error",id:e,messageId:t,content:createError(n)},a)}function sendSuccess(e,t,n,a){logDebug(" -> sendSuccess",e,t),postMessage({type:"success",id:e,messageId:t,content:n},a)}function sendUpdate(e,t,n,a){logDebug(" -> sendUpdate",e,t),postMessage({type:"update",id:e,messageId:t,content:n},a)}function getCurrentDB(e){switch(e){case"localMainDB":return Promise.resolve(localMainDB)
case"hospitalrun-test-database":return Promise.resolve(new PouchDB("hospitalrun-test-database",{adapter:"memory"}))
default:return getRemoteDB()}}function dbMethod(e,t,n,a,i){var s=void 0
return getCurrentDB(e).then(function(o){return o?(s=o.adapter,o[t].apply(o,_toConsumableArray(a))):sendError(e,n,{error:"db not found"},i)}).then(function(a){switch(sendSuccess(e,n,a,i),t){case"put":case"bulkDocs":case"post":case"remove":case"removeAttachment":case"putAttachment":remoteSync()}}).catch(function(o){if("http"===s)return dbMethod("localMainDB",t,n,a,i)
sendError(e,n,o,i)})}function changes(e,t,n,a){var i=_slicedToArray(n,1)[0]
i&&"object"===(void 0===i?"undefined":_typeof(i))&&(i.returnDocs=!0,i.return_docs=!0),dbMethod(e,"changes",t,n,a)}function createDatabase(e,t,n,a){return sendSuccess(e,t,{ok:!0,exists:!0},a)}function getAttachment(e,t,n,a){return getCurrentDB(e).then(function(i){if(!i)return sendError(e,t,{error:"db not found"},a)
var s=_slicedToArray(n,3),o=s[0],r=s[1],l=s[2]
return"object"!==(void 0===l?"undefined":_typeof(l))&&(l={}),i.get(o,l).then(function(s){if(!s._attachments||!s._attachments[r])throw new PouchError({status:404,error:"not_found",reason:"missing"})
return i.getAttachment.apply(i,_toConsumableArray(n)).then(function(n){sendSuccess(e,t,n,a)})})}).catch(function(n){sendError(e,t,n,a)})}function destroy(e,t,n,a){if("hospitalrun-test-database"!==e)return sendError(e,t,{error:"permission denied"},a)
getCurrentDB(e).then(function(i){if(!i)return sendError(e,t,{error:"db not found"},a)
Promise.resolve().then(function(){return i.destroy.apply(i,_toConsumableArray(n))}).then(function(n){sendSuccess(e,t,n,a)}).catch(function(n){sendError(e,t,n,a)})})}function liveChanges(e,t,n,a){getCurrentDB(e).then(function(i){if(!i)return sendError(e,t,{error:"db not found"},a)
var s=i.changes(n[0])
allChanges[t]=s,s.on("change",function(n){sendUpdate(e,t,n,a)}).on("complete",function(n){s.removeAllListeners(),delete allChanges[t],sendSuccess(e,t,n,a)}).on("error",function(n){s.removeAllListeners(),delete allChanges[t],sendError(e,t,n,a)})})}function cancelChanges(e){var t=allChanges[e]
t&&t.cancel()}function onReceiveMessage(e,t,n,a,i){switch(t){case"createDatabase":return createDatabase(e,n,a,i)
case"id":return void sendSuccess(e,n,e,i)
case"info":case"put":case"allDocs":case"bulkDocs":case"post":case"get":case"remove":case"revsDiff":case"compact":case"viewCleanup":case"removeAttachment":case"putAttachment":case"query":return dbMethod(e,t,n,a,i)
case"changes":return changes(e,n,a,i)
case"getAttachment":return getAttachment(e,n,a,i)
case"liveChanges":return liveChanges(e,n,a,i)
case"cancelChanges":return cancelChanges(n)
case"destroy":return destroy(e,n,a,i)
default:return sendError(e,n,{error:"unknown API method: "+t},i)}}function handleMessage(e,t,n){onReceiveMessage(t,e.type,e.messageId,decodeArgs(e.args),n)}function getRemoteDB(){return setupConfigs().then(function(){var e={ajax:{headers:{},timeout:3e4}}
configs.config_consumer_secret&&configs.config_token_secret&&configs.config_consumer_key&&configs.config_oauth_token&&(e.ajax.headers["x-oauth-consumer-secret"]=configs.config_consumer_secret,e.ajax.headers["x-oauth-consumer-key"]=configs.config_consumer_key,e.ajax.headers["x-oauth-token-secret"]=configs.config_token_secret,e.ajax.headers["x-oauth-token"]=configs.config_oauth_token)
var t=self.location.protocol+"//"+self.location.host+"/db/main"
return new PouchDB(t,e)})}function remoteSync(e,t){return lastServerSeq=e,syncingRemote||!0===configs.config_disable_offline_sync?(syncingRemote&&logDebug("Skipping sync to: "+e+" because sync is in process"),Promise.resolve(!1)):(logDebug("Synching local db to remoteSequence: "+e+" at: "+new Date),syncingRemote=!0,getRemoteDB().then(function(e){return localMainDB.sync(e)}).then(function(e){return syncingRemote=!1,logDebug("local sync complete:",e,configs),fetch("/update-subscription/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscriptionId:configs.config_push_subscription,remoteSeq:e.pull.last_seq})}),!(e.pull.last_seq<lastServerSeq)||remoteSync(lastServerSeq)}).catch(function(e){if(syncingRemote=!1,logDebug("local sync error, register remote sync: "+new Date,e),t)throw e
self.registration.sync.register("remoteSync")}))}function setupConfigs(){return new Promise(function(e,t){configs?e():configDB.allDocs({include_docs:!0}).then(function(t){configs={},t.rows.forEach(function(e){configs[e.id]=e.doc.value}),e()},t)})}self.addEventListener("push",function(e){if(e.data){var t=e.data.json()
"couchDBChange"===t.type?(logDebug("Got couchDBChange pushed, attempting to sync to: "+t.seq),e.waitUntil(remoteSync(t.seq).then(function(e){logDebug("Response from sync "+JSON.stringify(e,null,2))}))):logDebug("Unknown push event has data and here it is: ",t)}}),self.addEventListener("message",function(e){if(logDebug("got message",e),"remotesync"!==e.data){if(e.data&&e.data.id&&e.data.args&&e.data.type&&e.data.messageId){var t=e.data.id
"close"===e.data.type||handleMessage(e.data,t,e)}}else remoteSync()}),self.addEventListener("sync",function(e){"remoteSync"===e.tag&&e.waitUntil(remoteSync(null,!0).catch(function(t){e.lastChance?logDebug("Sync failed for the last time, so give up for now.",t):logDebug("Sync failed, will try again later",t)}))})}),define("hospitalrun/session-stores/application",["exports","ember-simple-auth/session-stores/adaptive"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend()}),define("hospitalrun/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ffjruGIo",block:'{"symbols":[],"statements":[[4,"if",[[20,["session","isAuthenticated"]]],null,{"statements":[[0,"  "],[1,[25,"sidebar-nav",null,[["allowSearch","isShowingSettings","openModal","search"],[[25,"readonly",[[20,["allowSearch"]]],null],[25,"readonly",[[20,["isShowingSettings"]]],null],"openModal","search"]]],false],[0,"\\n"]],"parameters":[]},null],[1,[18,"outlet"],false],[0,"\\n"],[1,[25,"outlet",["modal"],null],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/application.hbs"}})}),define("hospitalrun/templates/charges-by-type",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"OvgJk00V",block:'{"symbols":["pricingType","index","pricingType","index"],"statements":[[4,"if",[[20,["showPricingTypeTabs"]]],null,{"statements":[[0,"  "],[6,"ul"],[9,"class","nav nav-pills tab-nav"],[9,"role","tablist"],[7],[0,"\\n"],[4,"each",[[20,["pricingTypeList"]]],null,{"statements":[[0,"      "],[1,[25,"charges-by-type-tab",null,[["pricingType","index"],[[19,3,[]],[19,4,[]]]]],false],[0,"\\n"]],"parameters":[3,4]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null],[6,"div"],[9,"class","tab-content"],[7],[0,"\\n"],[4,"each",[[20,["pricingTypeList"]]],null,{"statements":[[0,"    "],[1,[25,"price-list",null,[["canAddCharge","pricingType","index","pricingList","model"],[[20,["canAddCharge"]],[19,1,[]],[19,2,[]],[20,["pricingList"]],[20,["model"]]]]],false],[0,"\\n"]],"parameters":[1,2]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/charges-by-type.hbs"}})}),define("hospitalrun/templates/components/array-display",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2PzjnOoh",block:'{"symbols":["item"],"statements":[[4,"if",[[20,["isArray"]]],null,{"statements":[[4,"each",[[20,["content"]]],null,{"statements":[[0,"    "],[1,[19,1,[]],false],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},{"statements":[[0,"  "],[1,[18,"content"],false],[0,"\\n"]],"parameters":[]}]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/array-display.hbs"}})}),define("hospitalrun/templates/components/calendar-control",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"A3Mwv5rm",block:'{"symbols":[],"statements":[[1,[25,"full-calendar",null,[["events","dayClick","date","editable","eventAfterAllRender","eventClick","eventDrop","eventResize","groupByDateAndResource","groupByResource","header","height","resources","viewName","views"],[[20,["events"]],[20,["onDayClick"]],[20,["defaultDate"]],[20,["userCanEdit"]],[25,"action",[[19,0,[]],"handleRenderingComplete"],null],[20,["onEventClick"]],[20,["onEventDrop"]],[20,["onEventResize"]],[20,["groupByDateAndResource"]],[20,["groupByResource"]],[20,["calendarHeader"]],[20,["height"]],[20,["resources"]],[20,["defaultView"]],[20,["views"]]]]],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/calendar-control.hbs"}})}),define("hospitalrun/templates/components/charge-quantity",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"JQiwCgLk",block:'{"symbols":[],"statements":[[6,"label"],[9,"class","control-label"],[7],[1,[20,["pricingItem","name"]],false],[8],[0,"\\n"],[1,[25,"input",null,[["value","class"],[[20,["quantitySelected"]],"form-control"]]],false],[0,"\\n"],[6,"span"],[9,"class","help-block"],[7],[1,[18,"quantityHelp"],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/charge-quantity.hbs"}})}),define("hospitalrun/templates/components/charges-by-type-tab",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"LL3oXAQC",block:'{"symbols":[],"statements":[[6,"a"],[10,"href",[18,"tabHref"],null],[9,"role","tab"],[9,"data-toggle","pill"],[7],[1,[18,"pricingType"],false],[0," "],[1,[25,"t",["components.chargesByTypeTab.charges"],null],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/charges-by-type-tab.hbs"}})}),define("hospitalrun/templates/components/checkbox-or-typeahead",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"+5jabuRq",block:'{"symbols":["checkboxRow","checkbox"],"statements":[[4,"if",[[20,["userCanAdd"]]],null,{"statements":[[0,"  "],[12,"components/render-typeahead",[]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[6,"div"],[10,"class",[26,["required ",[25,"if",[[20,["errors"]],"has-error"],null]]]],[7],[0,"\\n    "],[6,"label"],[9,"class","control-label"],[7],[1,[18,"label"],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"each",[[20,["checkboxRows"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[6,"div"],[9,"class","checkbox col-xs-1"],[7],[8],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","checkbox col-xs-2"],[7],[0,"\\n          "],[6,"label"],[7],[0,"\\n            "],[1,[25,"action-checkbox",null,[["value","action"],[[19,2,["value"]],"checkboxChanged"]]],false],[1,[19,2,["label"]],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[1]},null],[4,"if",[[20,["errors"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","has-error"],[7],[0,"\\n      "],[6,"span"],[9,"class","help-block"],[7],[1,[18,"errors"],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/components/checkbox-or-typeahead.hbs"}})}),define("hospitalrun/templates/components/cross-icon-svg",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"7D7D46ds",block:'{"symbols":[],"statements":[[6,"svg"],[9,"class","cross-icon-svg"],[9,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[9,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[9,"x","0px"],[9,"y","0px"],[9,"viewBox","0 0 32 32"],[9,"enable-background","new 0 0 32 32"],[9,"xml:space","preserve","http://www.w3.org/XML/1998/namespace"],[7],[0,"\\n  "],[6,"polygon"],[9,"fill","#1ABC9C"],[9,"points","21.33,10.67 21.33,0 10.67,0 10.67,10.67 0,10.67 0,21.33 10.67,21.33 10.67,32 21.33,32\\n  21.33,21.33 32,21.33 32,10.67 "],[7],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/cross-icon-svg.hbs"}})}),define("hospitalrun/templates/components/custom-form-manager",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"QGdyU7tP",block:'{"symbols":["customForm"],"statements":[[4,"each",[[20,["formsToDisplay"]]],null,{"statements":[[0,"  "],[6,"h4"],[7],[1,[19,1,["form","name"]],false],[8],[0,"\\n  "],[1,[25,"custom-form",null,[["model","form","propertyPrefix","rapidForm","isReadonly"],[[20,["model"]],[19,1,["form"]],[19,1,["propertyPrefix"]],[20,["rapidForm"]],[20,["isReadonly"]]]]],false],[0,"\\n"]],"parameters":[1]},null],[4,"if",[[25,"and",[[20,["showAddButton"]],[25,"not",[[20,["isReadonly"]]],null]],null]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","row"],[7],[0,"\\n    "],[6,"div"],[9,"class","col-sm-2"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[0," "],[8],[0,"\\n      "],[6,"p"],[9,"class"," form-control-static"],[7],[0,"\\n        "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"addForm"],[["bubbles"],[false]]],[7],[0,"\\n          "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0,"\\n          "],[1,[25,"t",["components.customFormManager.buttons.addForm"],null],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/custom-form-manager.hbs"}})}),define("hospitalrun/templates/components/custom-form",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"o9Y6hsyU",block:'{"symbols":["row","field","split","checkbox"],"statements":[[4,"each",[[20,["fieldsByRow"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","row form-group"],[7],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[4,"if",[[25,"eq",[[19,2,["type"]],"radio"],null]],null,{"statements":[[0,"        "],[6,"div"],[10,"class",[26,["form-group ",[19,2,["displayClassNames"]]]]],[7],[0,"\\n          "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n"],[4,"unless",[[20,["isReadonly"]]],null,{"statements":[[0,"            "],[1,[25,"ext-radio",null,[["content","value","includeOtherOption","otherOptionLabel"],[[19,2,["mappedValues"]],[25,"get",[[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null]],null],[19,2,["includeOtherOption"]],[19,2,["otherOptionLabel"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"            "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"get",[[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null]],null],false],[8],[0,"\\n"]],"parameters":[]}],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[19,2,["type"]],"checkbox"],null]],null,{"statements":[[0,"        "],[6,"div"],[10,"class",[26,["form-group ",[19,2,["displayClassNames"]]]]],[7],[0,"\\n          "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n"],[4,"each",[[19,2,["values"]]],null,{"statements":[[0,"            "],[1,[25,"component",[[20,["rapidForm","checkbox"]]],[["model","label","property","disabled"],[[20,["model"]],[19,4,["label"]],[25,"concat",[[20,["propertyPrefix"]],[19,4,["property"]]],null],[20,["isReadonly"]]]]],false],[0,"\\n"]],"parameters":[4]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",[[19,2,["type"]],"textarea"],null]],null,{"statements":[[4,"unless",[[20,["isReadonly"]]],null,{"statements":[[0,"          "],[1,[25,"expand-text",null,[["model","label","property","class","form"],[[20,["model"]],[19,2,["label"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null],[19,2,["displayClassNames"]],[20,["rapidForm"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[6,"div"],[10,"class",[26,[[19,2,["displayClassNames"]]]]],[7],[0,"\\n            "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n            "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"get",[[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null]],null],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[25,"eq",[[19,2,["type"]],"text"],null]],null,{"statements":[[4,"unless",[[20,["isReadonly"]]],null,{"statements":[[0,"          "],[1,[25,"component",[[20,["rapidForm","input"]]],[["model","label","property","class"],[[20,["model"]],[19,2,["label"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null],[19,2,["displayClassNames"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[6,"div"],[10,"class",[26,[[19,2,["displayClassNames"]]]]],[7],[0,"\\n            "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n            "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"get",[[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null]],null],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[25,"eq",[[19,2,["type"]],"select"],null]],null,{"statements":[[4,"unless",[[20,["isReadonly"]]],null,{"statements":[[0,"          "],[1,[25,"component",[[20,["rapidForm","select"]]],[["label","model","property","content","class","prompt","optionValuePath","optionLabelPath"],[[19,2,["label"]],[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null],[19,2,["values"]],[25,"concat",["form-input-group ",[19,2,["displayClassNames"]]],null],[19,2,["prompt"]],"label","label"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[6,"div"],[10,"class",[26,[[19,2,["displayClassNames"]]]]],[7],[0,"\\n            "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n            "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"get",[[20,["model"]],[25,"concat",[[20,["propertyPrefix"]],[19,2,["property"]]],null]],null],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[25,"eq",[[19,2,["type"]],"header"],null]],null,{"statements":[[0,"        "],[6,"div"],[10,"class",[26,["form-group ",[19,2,["displayClassNames"]]]]],[7],[0,"\\n          "],[6,"label"],[7],[1,[19,2,["label"]],false],[8],[0,"\\n"],[4,"each",[[19,2,["values"]]],null,{"statements":[[0,"            "],[6,"br"],[7],[8],[0,"\\n            "],[6,"label"],[7],[1,[19,3,["label"]],false],[8],[0,"\\n"]],"parameters":[3]},null],[0,"        "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[2]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/custom-form.hbs"}})}),define("hospitalrun/templates/components/date-filter",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"/aIzeVja",block:'{"symbols":[],"statements":[[6,"input"],[9,"type","text"],[9,"class","form-control"],[7],[8],[0,"\\n"],[6,"span"],[9,"class","input-group-btn"],[7],[0,"\\n  "],[6,"button"],[9,"class","btn btn-default warning"],[9,"type","button"],[7],[0,"\\n    "],[6,"span"],[9,"class","octicon octicon-x"],[3,"action",[[19,0,[]],"clearFilter"]],[7],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/date-filter.hbs"}})}),define("hospitalrun/templates/components/date-picker",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"lg2Er/Zg",block:'{"symbols":[],"statements":[[1,[25,"date-picker-wrapper",null,[["model","originalProperty","property","showTime","label","minDate","maxDate","dateSetAction"],[[20,["model"]],[20,["property"]],[25,"concat",["display_",[20,["property"]]],null],[20,["showTime"]],[20,["label"]],[20,["minDate"]],[20,["maxDate"]],[25,"action",[[19,0,[]],"dateSetActionWrapper"],null]]]],false]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/date-picker.hbs"}})}),define("hospitalrun/templates/components/date-time-picker",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"UicEqsqt",block:'{"symbols":["form","item","item","item","item"],"statements":[[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"  "],[1,[25,"date-picker",null,[["model","property","label","class","dateSetAction"],[[19,0,[]],"dateTimePickerDate",[20,["label"]],[25,"concat",["col-sm-4 ",[20,["datePickerClass"]]],null],"dateChanged"]]],false],[0,"\\n"],[4,"unless",[[20,["isAllDay"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","form-input-group col-sm-3 required"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[9,"for","startTime"],[7],[1,[25,"t",["labels.startTime"],null],false],[8],[0,"\\n      "],[6,"div"],[9,"class","input-group"],[7],[0,"\\n        "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"startHourChanged"],[["value"],["target.value"]]],null],[9,"class","form-control start-hour"],[7],[0,"\\n"],[4,"each",[[20,["hourList"]]],null,{"statements":[[0,"            "],[6,"option"],[10,"value",[26,[[19,5,["value"]]]]],[10,"selected",[25,"is-equal",[[19,5,["value"]],[20,["startHour"]]],null],null],[7],[0,"\\n              "],[1,[19,5,["name"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[5]},null],[0,"        "],[8],[0,"\\n        "],[6,"div"],[9,"class","input-group-addon"],[7],[0,":"],[8],[0,"\\n        "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"startMinuteChanged"],[["value"],["target.value"]]],null],[9,"class","form-control start-minute"],[7],[0,"\\n"],[4,"each",[[20,["minuteList"]]],null,{"statements":[[0,"            "],[6,"option"],[10,"value",[26,[[19,4,["value"]]]]],[10,"selected",[25,"is-equal",[[19,4,["value"]],[20,["startMinute"]]],null],null],[7],[0,"\\n              "],[1,[19,4,["name"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[10,"class",[26,["form-input-group col-sm-3 required has-feedback ",[25,"if",[[20,["endTimeHasError"]],"has-error"],null]]]],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[9,"for","endTime"],[7],[1,[25,"t",["labels.endTime"],null],false],[8],[0,"\\n      "],[6,"div"],[9,"class","input-group"],[7],[0,"\\n        "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"endHourChanged"],[["value"],["target.value"]]],null],[9,"class","form-control end-hour"],[7],[0,"\\n"],[4,"each",[[20,["hourList"]]],null,{"statements":[[0,"            "],[6,"option"],[10,"value",[26,[[19,3,["value"]]]]],[10,"selected",[25,"is-equal",[[19,3,["value"]],[20,["endHour"]]],null],null],[7],[0,"\\n              "],[1,[19,3,["name"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"        "],[8],[0,"\\n        "],[6,"div"],[9,"class","input-group-addon"],[7],[0,":"],[8],[0,"\\n        "],[6,"select"],[10,"onchange",[25,"action",[[19,0,[]],"endMinuteChanged"],[["value"],["target.value"]]],null],[9,"class","form-control end-minute"],[7],[0,"\\n"],[4,"each",[[20,["minuteList"]]],null,{"statements":[[0,"            "],[6,"option"],[10,"value",[26,[[19,2,["value"]]]]],[10,"selected",[25,"is-equal",[[19,2,["value"]],[20,["endMinute"]]],null],null],[7],[0,"\\n              "],[1,[19,2,["name"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"if",[[20,["endTimeHasError"]]],null,{"statements":[[0,"        "],[6,"p"],[9,"class","help-block"],[7],[1,[25,"t",["appointments.messages.endTimeLaterThanStart"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/date-time-picker.hbs"}})}),define("hospitalrun/templates/components/edit-panel",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"amUBg3qb",block:'{"symbols":["button","&default"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[11,2],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"unless",[[20,["editPanelProps","hideCancelButton"]]],null,{"statements":[[4,"if",[[20,["editPanelProps","cancelButtonText"]]],null,{"statements":[[0,"        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"cancel"]],[7],[1,[20,["editPanelProps","cancelButtonText"]],false],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"cancel"]],[7],[1,[25,"t",["buttons.cancel"],null],false],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[4,"if",[[20,["editPanelProps","showUpdateButton"]]],null,{"statements":[[0,"      "],[6,"button"],[10,"class",[26,["btn btn-primary on-white ",[25,"if",[[20,["editPanelProps","disabledAction"]],"disabled-btn"],null]]]],[3,"action",[[19,0,[]],[20,["editPanelProps","actionForUpdateButton"]]]],[7],[0,"\\n"],[4,"if",[[20,["editPanelProps","updateButtonIcon"]]],null,{"statements":[[0,"          "],[6,"span"],[10,"class",[26,[[20,["editPanelProps","updateButtonIcon"]]]]],[7],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[1,[20,["editPanelProps","updateButtonText"]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"each",[[20,["editPanelProps","additionalButtons"]]],null,{"statements":[[0,"      "],[6,"button"],[10,"class",[26,[[19,1,["class"]]]]],[3,"action",[[19,0,[]],"fireButtonAction",[19,1,["buttonAction"]]]],[7],[0,"\\n"],[4,"if",[[19,1,["buttonIcon"]]],null,{"statements":[[0,"          "],[6,"span"],[10,"class",[26,[[19,1,["buttonIcon"]]]]],[7],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[1,[19,1,["buttonText"]],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/edit-panel.hbs"}})}),define("hospitalrun/templates/components/expand-text",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"AqSlcw/w",block:'{"symbols":[],"statements":[[1,[25,"component",[[20,["form","text"]]],[["label","property","rows"],[[20,["label"]],[20,["property"]],[20,["rows"]]]]],false],[0,"\\n"],[6,"div"],[9,"class","text-expansion-div"],[10,"style",[18,"expansionDivStyle"],null],[7],[1,[18,"expansionText"],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/expand-text.hbs"}})}),define("hospitalrun/templates/components/ext-radio",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"b+kzqrNo",block:'{"symbols":["radio"],"statements":[[4,"each",[[20,["content"]]],null,{"statements":[[0,"  "],[6,"label"],[10,"class",[18,"radioClass"],null],[7],[0,"\\n"],[4,"if",[[20,["haveLabel"]]],null,{"statements":[[0,"      "],[1,[25,"radio-button",null,[["value","checked"],[[19,1,["value"]],[20,["value"]]]]],false],[0," "],[1,[19,1,["label"]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[1,[25,"radio-button",null,[["value","checked"],[[19,1,[]],[20,["value"]]]]],false],[0," "],[1,[19,1,[]],false],[0,"\\n"]],"parameters":[]}],[0,"  "],[8],[0,"\\n"]],"parameters":[1]},null],[4,"if",[[20,["includeOtherOption"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","radio"],[7],[0,"\\n    "],[6,"label"],[7],[0,"\\n      "],[1,[25,"radio-button",null,[["value","checked"],[[20,["otherValue"]],[20,["value"]]]]],false],[0,"\\n      "],[1,[18,"otherOptionLabel"],false],[0," "],[1,[25,"input",null,[["value","class"],[[20,["otherValue"]],"form-control"]]],false],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/ext-radio.hbs"}})}),define("hospitalrun/templates/components/inventory-location-picker",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Zl/GrHdv",block:'{"symbols":["locationPicker"],"statements":[[4,"each",[[20,["locationPickers"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n    "],[6,"label"],[9,"class","control-label"],[7],[1,[19,1,["label"]],false],[8],[0,"\\n    "],[1,[25,"location-select",null,[["form","locationPicker"],[[20,["form"]],[19,1,[]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/inventory-location-picker.hbs"}})}),define("hospitalrun/templates/components/item-listing",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qYDi/OH+",block:'{"symbols":["&default"],"statements":[[1,[25,"nav-paging",null,[["paginationProps"],[[20,["paginationProps"]]]]],false],[0,"\\n"],[11,1],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/item-listing.hbs"}})}),define("hospitalrun/templates/components/language-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"UMgq/XId",block:'{"symbols":["lang"],"statements":[[6,"select"],[9,"tabindex","-1"],[9,"class","language-select"],[10,"onchange",[25,"action",[[19,0,[]],"selectLanguage"],[["value"],["target.value"]]],null],[7],[0,"\\n  "],[6,"option"],[9,"value",""],[9,"disabled",""],[7],[1,[25,"t",["navigation.actions.selectLanguage"],null],false],[8],[0,"\\n"],[4,"each",[[20,["languageOptions"]]],null,{"statements":[[0,"    "],[6,"option"],[10,"value",[19,1,["id"]],null],[10,"selected",[25,"eq",[[20,["selectedLanguage"]],[19,1,["id"]]],null],null],[7],[1,[19,1,["name"]],false],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/language-select.hbs"}})}),define("hospitalrun/templates/components/location-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"3W8VtDzX",block:'{"symbols":[],"statements":[[0,"  "],[1,[25,"component",[[20,["form","select"]]],[["model","property","content","class","optionValuePath","optionLabelPath","action"],[[19,0,[]],"locationPicker.selectedLocation",[20,["locationPicker","subLocationList"]],"form-input-group","selectObject","selectObject.locationNameWithQuantity",[20,["locationChange"]]]]],false]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/location-select.hbs"}})})
define("hospitalrun/templates/components/logo-dark-svg",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hjYUin6b",block:'{"symbols":[],"statements":[[6,"svg"],[9,"class","logo-svg"],[9,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[9,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[9,"x","0px"],[9,"y","0px"],[9,"viewBox","0 0 200 31.36"],[9,"enable-background","new 0 0 200 31.36"],[9,"xml:space","preserve","http://www.w3.org/XML/1998/namespace"],[7],[0,"\\n  "],[6,"g"],[7],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M51.29,25.59h-4.67V14.71H34.95v10.89h-4.67V0.69h4.67V11.4h11.68V0.69h4.67V25.59z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M61.71,7.65c1.32,0,2.52,0.21,3.59,0.64c1.07,0.42,1.99,1.03,2.75,1.81c0.76,0.78,1.34,1.73,1.76,2.86\\n        c0.41,1.13,0.62,2.38,0.62,3.77c0,1.4-0.21,2.66-0.62,3.79c-0.41,1.13-1,2.08-1.76,2.88c-0.76,0.79-1.67,1.4-2.75,1.83\\n        c-1.07,0.42-2.27,0.64-3.59,0.64c-1.32,0-2.52-0.21-3.6-0.64c-1.08-0.42-2-1.03-2.76-1.83c-0.76-0.79-1.36-1.75-1.77-2.88\\n        c-0.42-1.13-0.63-2.39-0.63-3.79c0-1.39,0.21-2.65,0.63-3.77c0.42-1.13,1.01-2.08,1.77-2.86c0.76-0.78,1.68-1.38,2.76-1.81\\n        C59.19,7.86,60.39,7.65,61.71,7.65z M61.71,22.58c1.47,0,2.56-0.49,3.26-1.48c0.71-0.99,1.06-2.43,1.06-4.34s-0.35-3.36-1.06-4.36\\n        c-0.71-1-1.79-1.5-3.26-1.5c-1.49,0-2.6,0.5-3.31,1.51c-0.71,1-1.07,2.45-1.07,4.35c0,1.89,0.36,3.34,1.07,4.33\\n        C59.11,22.08,60.21,22.58,61.71,22.58z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M83.4,11.37c-0.11,0.18-0.24,0.31-0.36,0.39c-0.13,0.07-0.29,0.11-0.48,0.11c-0.21,0-0.43-0.06-0.66-0.17\\n        c-0.24-0.11-0.51-0.24-0.82-0.39c-0.31-0.14-0.66-0.27-1.06-0.39c-0.4-0.11-0.86-0.17-1.4-0.17c-0.84,0-1.5,0.18-1.98,0.53\\n        c-0.48,0.36-0.72,0.82-0.72,1.39c0,0.38,0.12,0.7,0.37,0.96c0.25,0.26,0.57,0.49,0.98,0.68c0.41,0.2,0.87,0.37,1.39,0.53\\n        c0.52,0.15,1.04,0.32,1.58,0.51c0.54,0.18,1.07,0.39,1.58,0.63c0.52,0.24,0.98,0.53,1.39,0.9c0.41,0.36,0.73,0.8,0.98,1.3\\n        c0.25,0.51,0.37,1.11,0.37,1.83c0,0.85-0.16,1.63-0.47,2.35c-0.31,0.72-0.76,1.34-1.36,1.86c-0.6,0.52-1.33,0.93-2.21,1.22\\n        c-0.88,0.29-1.89,0.44-3.02,0.44c-0.61,0-1.2-0.05-1.78-0.16c-0.58-0.11-1.14-0.26-1.67-0.46c-0.53-0.2-1.03-0.42-1.48-0.69\\n        c-0.45-0.26-0.85-0.55-1.2-0.86l0.98-1.62c0.13-0.2,0.28-0.34,0.45-0.45c0.17-0.1,0.39-0.15,0.65-0.15c0.26,0,0.51,0.07,0.75,0.22\\n        c0.24,0.15,0.51,0.31,0.82,0.48c0.31,0.17,0.67,0.33,1.09,0.48c0.42,0.15,0.95,0.22,1.59,0.22c0.51,0,0.94-0.06,1.3-0.18\\n        c0.36-0.12,0.66-0.28,0.9-0.47c0.24-0.2,0.41-0.42,0.52-0.68c0.11-0.26,0.16-0.53,0.16-0.8c0-0.41-0.12-0.75-0.37-1.02\\n        c-0.25-0.26-0.57-0.49-0.98-0.69c-0.41-0.2-0.87-0.37-1.4-0.53c-0.52-0.15-1.06-0.32-1.6-0.51c-0.55-0.18-1.08-0.4-1.6-0.65\\n        c-0.52-0.25-0.99-0.56-1.4-0.94c-0.41-0.38-0.73-0.84-0.98-1.4c-0.25-0.55-0.37-1.22-0.37-2c0-0.72,0.14-1.41,0.43-2.07\\n        c0.29-0.65,0.71-1.23,1.27-1.71c0.56-0.49,1.25-0.88,2.08-1.17c0.83-0.29,1.79-0.44,2.88-0.44c1.22,0,2.33,0.2,3.32,0.6\\n        c1,0.4,1.83,0.93,2.5,1.58L83.4,11.37z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M86.58,31.36V7.92h2.6c0.28,0,0.51,0.06,0.71,0.19c0.2,0.13,0.32,0.32,0.38,0.59l0.34,1.64\\n        c0.71-0.82,1.53-1.48,2.45-1.98c0.92-0.51,2.01-0.76,3.25-0.76c0.96,0,1.85,0.2,2.64,0.6c0.8,0.4,1.49,0.98,2.07,1.75\\n        c0.58,0.76,1.03,1.71,1.34,2.82c0.32,1.12,0.47,2.4,0.47,3.85c0,1.32-0.18,2.54-0.53,3.67c-0.36,1.13-0.86,2.1-1.52,2.93\\n        c-0.66,0.83-1.46,1.47-2.39,1.94s-1.98,0.7-3.14,0.7c-1,0-1.85-0.15-2.54-0.46c-0.69-0.3-1.32-0.73-1.87-1.27v7.23H86.58z\\n        M94.85,10.95c-0.88,0-1.64,0.19-2.26,0.56c-0.63,0.37-1.21,0.9-1.75,1.58v7.92c0.48,0.6,1.01,1.01,1.58,1.25\\n        c0.57,0.24,1.18,0.35,1.83,0.35c0.64,0,1.23-0.12,1.75-0.36c0.52-0.24,0.96-0.61,1.33-1.1c0.36-0.49,0.64-1.12,0.84-1.87\\n        c0.2-0.75,0.29-1.64,0.29-2.66c0-1.03-0.08-1.91-0.25-2.63c-0.17-0.72-0.41-1.3-0.71-1.75c-0.31-0.45-0.69-0.78-1.13-0.98\\n        C95.92,11.06,95.41,10.95,94.85,10.95z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M109.85,2.77c0,0.37-0.07,0.71-0.22,1.03c-0.15,0.32-0.35,0.6-0.59,0.84c-0.25,0.24-0.54,0.43-0.87,0.58\\n        c-0.33,0.14-0.69,0.22-1.07,0.22c-0.37,0-0.71-0.07-1.04-0.22c-0.33-0.14-0.61-0.34-0.85-0.58c-0.24-0.24-0.43-0.52-0.58-0.84\\n        c-0.14-0.32-0.22-0.67-0.22-1.03c0-0.38,0.07-0.73,0.22-1.07c0.14-0.33,0.34-0.62,0.58-0.86c0.24-0.24,0.53-0.43,0.85-0.58\\n        c0.33-0.14,0.67-0.22,1.04-0.22c0.38,0,0.73,0.07,1.07,0.22c0.33,0.14,0.62,0.34,0.87,0.58c0.25,0.24,0.44,0.53,0.59,0.86\\n        C109.78,2.04,109.85,2.39,109.85,2.77z M109.22,7.92v17.67h-4.25V7.92H109.22z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M118.45,25.87c-1.53,0-2.7-0.43-3.53-1.3c-0.83-0.87-1.24-2.06-1.24-3.59v-9.87h-1.79\\n        c-0.23,0-0.43-0.07-0.59-0.22c-0.17-0.15-0.25-0.37-0.25-0.67V8.53l2.84-0.47l0.9-4.82c0.05-0.23,0.15-0.41,0.32-0.53\\n        c0.17-0.13,0.38-0.19,0.63-0.19h2.2v5.56h4.65v3.03h-4.65v9.58c0,0.55,0.14,0.98,0.41,1.29c0.28,0.31,0.64,0.46,1.1,0.46\\n        c0.26,0,0.48-0.03,0.66-0.09c0.18-0.06,0.33-0.13,0.47-0.2c0.13-0.07,0.25-0.14,0.35-0.2c0.1-0.06,0.21-0.09,0.31-0.09\\n        c0.13,0,0.23,0.03,0.31,0.09c0.08,0.06,0.17,0.16,0.26,0.28l1.27,2.07c-0.62,0.52-1.33,0.91-2.14,1.17\\n        C120.14,25.74,119.31,25.87,118.45,25.87z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M138.44,25.59h-1.91c-0.4,0-0.72-0.06-0.95-0.18c-0.23-0.12-0.4-0.36-0.52-0.73l-0.38-1.26\\n        c-0.45,0.4-0.89,0.75-1.32,1.06c-0.43,0.3-0.88,0.56-1.33,0.77c-0.46,0.21-0.95,0.36-1.46,0.47c-0.52,0.1-1.09,0.15-1.72,0.15\\n        c-0.75,0-1.44-0.1-2.07-0.3c-0.63-0.2-1.17-0.5-1.63-0.91c-0.45-0.4-0.81-0.9-1.06-1.5c-0.25-0.6-0.38-1.3-0.38-2.09\\n        c0-0.67,0.17-1.33,0.53-1.98c0.35-0.65,0.93-1.24,1.75-1.76c0.82-0.52,1.9-0.96,3.26-1.3c1.35-0.35,3.04-0.52,5.05-0.52v-1.04\\n        c0-1.19-0.25-2.07-0.75-2.65c-0.5-0.57-1.23-0.86-2.18-0.86c-0.69,0-1.26,0.08-1.72,0.24c-0.46,0.16-0.86,0.34-1.2,0.54\\n        c-0.34,0.2-0.65,0.38-0.94,0.54c-0.29,0.16-0.6,0.24-0.95,0.24c-0.29,0-0.53-0.07-0.74-0.22c-0.21-0.15-0.37-0.33-0.5-0.55\\n        l-0.77-1.36c2.03-1.86,4.48-2.79,7.35-2.79c1.03,0,1.95,0.17,2.76,0.51c0.81,0.34,1.5,0.81,2.06,1.41\\n        c0.56,0.6,0.99,1.32,1.28,2.16c0.29,0.84,0.44,1.76,0.44,2.76V25.59z M130.18,22.94c0.44,0,0.84-0.04,1.21-0.12\\n        c0.37-0.08,0.71-0.2,1.04-0.36c0.33-0.16,0.64-0.35,0.95-0.58c0.3-0.23,0.61-0.51,0.92-0.82V18.1c-1.24,0-2.28,0.08-3.11,0.23\\n        c-0.83,0.16-1.5,0.36-2.01,0.6c-0.51,0.24-0.86,0.53-1.08,0.85c-0.21,0.32-0.32,0.68-0.32,1.06c0,0.75,0.22,1.29,0.66,1.61\\n        C128.89,22.78,129.46,22.94,130.18,22.94z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#273647"],[9,"d","M145.78,0v25.59h-4.25V0H145.78z"],[7],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M152.86,14.18v11.41h-1.82V0.37h6.43c2.91,0,5.08,0.56,6.52,1.68c1.44,1.12,2.16,2.77,2.16,4.95\\n        c0,0.96-0.17,1.84-0.5,2.64c-0.33,0.8-0.81,1.49-1.43,2.09c-0.62,0.6-1.38,1.09-2.25,1.48c-0.88,0.39-1.87,0.64-2.98,0.76\\n        c0.29,0.18,0.54,0.42,0.77,0.71l8.68,10.91h-1.59c-0.19,0-0.35-0.04-0.49-0.11c-0.14-0.07-0.27-0.19-0.4-0.36l-8.07-10.23\\n        c-0.2-0.26-0.42-0.45-0.65-0.55c-0.23-0.11-0.59-0.16-1.08-0.16H152.86z M152.86,12.82h4.38c1.12,0,2.12-0.13,3-0.4\\n        c0.88-0.27,1.63-0.65,2.25-1.15c0.61-0.5,1.08-1.1,1.4-1.8c0.32-0.7,0.48-1.49,0.48-2.37c0-1.79-0.59-3.12-1.76-3.99\\n        c-1.18-0.87-2.89-1.3-5.13-1.3h-4.62V12.82z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M170.85,7.85v11.33c0,1.66,0.38,2.97,1.14,3.91c0.76,0.94,1.93,1.42,3.49,1.42c1.16,0,2.24-0.29,3.24-0.88\\n        c1-0.59,1.9-1.4,2.7-2.45V7.85h1.69v17.73h-0.93c-0.33,0-0.5-0.15-0.51-0.46l-0.16-2.64c-0.82,1.02-1.77,1.84-2.85,2.46\\n        c-1.08,0.62-2.28,0.93-3.6,0.93c-0.99,0-1.85-0.15-2.59-0.46c-0.74-0.31-1.35-0.75-1.84-1.34c-0.49-0.58-0.86-1.28-1.11-2.1\\n        c-0.25-0.82-0.37-1.75-0.37-2.78V7.85H170.85z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M186.06,25.58V7.85h0.93c0.31,0,0.49,0.15,0.53,0.45l0.16,2.67c0.81-1.02,1.75-1.84,2.82-2.47\\n        c1.08-0.62,2.27-0.94,3.59-0.94c0.97,0,1.83,0.15,2.58,0.46c0.74,0.31,1.36,0.75,1.84,1.34c0.49,0.58,0.86,1.28,1.1,2.1\\n        c0.25,0.82,0.37,1.75,0.37,2.78v11.33h-1.69V14.25c0-1.66-0.38-2.97-1.14-3.91c-0.76-0.94-1.92-1.42-3.49-1.42\\n        c-1.16,0-2.25,0.3-3.24,0.9c-1,0.6-1.89,1.42-2.67,2.47v13.29H186.06z"],[7],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"polygon"],[9,"fill","#1ABC9C"],[9,"points","16.68,9.03 16.68,0.69 8.34,0.69 8.34,9.03 0,9.03 0,17.36 8.34,17.36 8.34,25.7 16.68,25.7\\n        16.68,17.36 25.01,17.36 25.01,9.03 \\t\\t"],[7],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/logo-dark-svg.hbs"}})}),define("hospitalrun/templates/components/logo-svg",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"0oJAfB2p",block:'{"symbols":[],"statements":[[6,"svg"],[9,"class","logo-svg"],[9,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[9,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[9,"x","0px"],[9,"y","0px"],[9,"viewBox","0 0 200 31.36"],[9,"enable-background","new 0 0 200 31.36"],[9,"xml:space","preserve","http://www.w3.org/XML/1998/namespace"],[7],[0,"\\n  "],[6,"g"],[7],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M51.29,25.59h-4.67V14.71H34.95v10.89h-4.67V0.69h4.67V11.4h11.68V0.69h4.67V25.59z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M61.71,7.65c1.32,0,2.52,0.21,3.59,0.64c1.07,0.42,1.99,1.03,2.75,1.81c0.76,0.78,1.34,1.73,1.76,2.86\\n        c0.41,1.13,0.62,2.38,0.62,3.77c0,1.4-0.21,2.66-0.62,3.79c-0.41,1.13-1,2.08-1.76,2.88c-0.76,0.79-1.67,1.4-2.75,1.83\\n        c-1.07,0.42-2.27,0.64-3.59,0.64c-1.32,0-2.52-0.21-3.6-0.64c-1.08-0.42-2-1.03-2.76-1.83c-0.76-0.79-1.36-1.75-1.77-2.88\\n        c-0.42-1.13-0.63-2.39-0.63-3.79c0-1.39,0.21-2.65,0.63-3.77c0.42-1.13,1.01-2.08,1.77-2.86c0.76-0.78,1.68-1.38,2.76-1.81\\n        C59.19,7.86,60.39,7.65,61.71,7.65z M61.71,22.58c1.47,0,2.56-0.49,3.26-1.48c0.71-0.99,1.06-2.43,1.06-4.34s-0.35-3.36-1.06-4.36\\n        c-0.71-1-1.79-1.5-3.26-1.5c-1.49,0-2.6,0.5-3.31,1.51c-0.71,1-1.07,2.45-1.07,4.35c0,1.89,0.36,3.34,1.07,4.33\\n        C59.11,22.08,60.21,22.58,61.71,22.58z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M83.4,11.37c-0.11,0.18-0.24,0.31-0.36,0.39c-0.13,0.07-0.29,0.11-0.48,0.11c-0.21,0-0.43-0.06-0.66-0.17\\n        c-0.24-0.11-0.51-0.24-0.82-0.39c-0.31-0.14-0.66-0.27-1.06-0.39c-0.4-0.11-0.86-0.17-1.4-0.17c-0.84,0-1.5,0.18-1.98,0.53\\n        c-0.48,0.36-0.72,0.82-0.72,1.39c0,0.38,0.12,0.7,0.37,0.96c0.25,0.26,0.57,0.49,0.98,0.68c0.41,0.2,0.87,0.37,1.39,0.53\\n        c0.52,0.15,1.04,0.32,1.58,0.51c0.54,0.18,1.07,0.39,1.58,0.63c0.52,0.24,0.98,0.53,1.39,0.9c0.41,0.36,0.73,0.8,0.98,1.3\\n        c0.25,0.51,0.37,1.11,0.37,1.83c0,0.85-0.16,1.63-0.47,2.35c-0.31,0.72-0.76,1.34-1.36,1.86c-0.6,0.52-1.33,0.93-2.21,1.22\\n        c-0.88,0.29-1.89,0.44-3.02,0.44c-0.61,0-1.2-0.05-1.78-0.16c-0.58-0.11-1.14-0.26-1.67-0.46c-0.53-0.2-1.03-0.42-1.48-0.69\\n        c-0.45-0.26-0.85-0.55-1.2-0.86l0.98-1.62c0.13-0.2,0.28-0.34,0.45-0.45c0.17-0.1,0.39-0.15,0.65-0.15c0.26,0,0.51,0.07,0.75,0.22\\n        c0.24,0.15,0.51,0.31,0.82,0.48c0.31,0.17,0.67,0.33,1.09,0.48c0.42,0.15,0.95,0.22,1.59,0.22c0.51,0,0.94-0.06,1.3-0.18\\n        c0.36-0.12,0.66-0.28,0.9-0.47c0.24-0.2,0.41-0.42,0.52-0.68c0.11-0.26,0.16-0.53,0.16-0.8c0-0.41-0.12-0.75-0.37-1.02\\n        c-0.25-0.26-0.57-0.49-0.98-0.69c-0.41-0.2-0.87-0.37-1.4-0.53c-0.52-0.15-1.06-0.32-1.6-0.51c-0.55-0.18-1.08-0.4-1.6-0.65\\n        c-0.52-0.25-0.99-0.56-1.4-0.94c-0.41-0.38-0.73-0.84-0.98-1.4c-0.25-0.55-0.37-1.22-0.37-2c0-0.72,0.14-1.41,0.43-2.07\\n        c0.29-0.65,0.71-1.23,1.27-1.71c0.56-0.49,1.25-0.88,2.08-1.17c0.83-0.29,1.79-0.44,2.88-0.44c1.22,0,2.33,0.2,3.32,0.6\\n        c1,0.4,1.83,0.93,2.5,1.58L83.4,11.37z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M86.58,31.36V7.92h2.6c0.28,0,0.51,0.06,0.71,0.19c0.2,0.13,0.32,0.32,0.38,0.59l0.34,1.64\\n        c0.71-0.82,1.53-1.48,2.45-1.98c0.92-0.51,2.01-0.76,3.25-0.76c0.96,0,1.85,0.2,2.64,0.6c0.8,0.4,1.49,0.98,2.07,1.75\\n        c0.58,0.76,1.03,1.71,1.34,2.82c0.32,1.12,0.47,2.4,0.47,3.85c0,1.32-0.18,2.54-0.53,3.67c-0.36,1.13-0.86,2.1-1.52,2.93\\n        c-0.66,0.83-1.46,1.47-2.39,1.94s-1.98,0.7-3.14,0.7c-1,0-1.85-0.15-2.54-0.46c-0.69-0.3-1.32-0.73-1.87-1.27v7.23H86.58z\\n        M94.85,10.95c-0.88,0-1.64,0.19-2.26,0.56c-0.63,0.37-1.21,0.9-1.75,1.58v7.92c0.48,0.6,1.01,1.01,1.58,1.25\\n        c0.57,0.24,1.18,0.35,1.83,0.35c0.64,0,1.23-0.12,1.75-0.36c0.52-0.24,0.96-0.61,1.33-1.1c0.36-0.49,0.64-1.12,0.84-1.87\\n        c0.2-0.75,0.29-1.64,0.29-2.66c0-1.03-0.08-1.91-0.25-2.63c-0.17-0.72-0.41-1.3-0.71-1.75c-0.31-0.45-0.69-0.78-1.13-0.98\\n        C95.92,11.06,95.41,10.95,94.85,10.95z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M109.85,2.77c0,0.37-0.07,0.71-0.22,1.03c-0.15,0.32-0.35,0.6-0.59,0.84c-0.25,0.24-0.54,0.43-0.87,0.58\\n        c-0.33,0.14-0.69,0.22-1.07,0.22c-0.37,0-0.71-0.07-1.04-0.22c-0.33-0.14-0.61-0.34-0.85-0.58c-0.24-0.24-0.43-0.52-0.58-0.84\\n        c-0.14-0.32-0.22-0.67-0.22-1.03c0-0.38,0.07-0.73,0.22-1.07c0.14-0.33,0.34-0.62,0.58-0.86c0.24-0.24,0.53-0.43,0.85-0.58\\n        c0.33-0.14,0.67-0.22,1.04-0.22c0.38,0,0.73,0.07,1.07,0.22c0.33,0.14,0.62,0.34,0.87,0.58c0.25,0.24,0.44,0.53,0.59,0.86\\n        C109.78,2.04,109.85,2.39,109.85,2.77z M109.22,7.92v17.67h-4.25V7.92H109.22z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M118.45,25.87c-1.53,0-2.7-0.43-3.53-1.3c-0.83-0.87-1.24-2.06-1.24-3.59v-9.87h-1.79\\n        c-0.23,0-0.43-0.07-0.59-0.22c-0.17-0.15-0.25-0.37-0.25-0.67V8.53l2.84-0.47l0.9-4.82c0.05-0.23,0.15-0.41,0.32-0.53\\n        c0.17-0.13,0.38-0.19,0.63-0.19h2.2v5.56h4.65v3.03h-4.65v9.58c0,0.55,0.14,0.98,0.41,1.29c0.28,0.31,0.64,0.46,1.1,0.46\\n        c0.26,0,0.48-0.03,0.66-0.09c0.18-0.06,0.33-0.13,0.47-0.2c0.13-0.07,0.25-0.14,0.35-0.2c0.1-0.06,0.21-0.09,0.31-0.09\\n        c0.13,0,0.23,0.03,0.31,0.09c0.08,0.06,0.17,0.16,0.26,0.28l1.27,2.07c-0.62,0.52-1.33,0.91-2.14,1.17\\n        C120.14,25.74,119.31,25.87,118.45,25.87z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M138.44,25.59h-1.91c-0.4,0-0.72-0.06-0.95-0.18c-0.23-0.12-0.4-0.36-0.52-0.73l-0.38-1.26\\n        c-0.45,0.4-0.89,0.75-1.32,1.06c-0.43,0.3-0.88,0.56-1.33,0.77c-0.46,0.21-0.95,0.36-1.46,0.47c-0.52,0.1-1.09,0.15-1.72,0.15\\n        c-0.75,0-1.44-0.1-2.07-0.3c-0.63-0.2-1.17-0.5-1.63-0.91c-0.45-0.4-0.81-0.9-1.06-1.5c-0.25-0.6-0.38-1.3-0.38-2.09\\n        c0-0.67,0.17-1.33,0.53-1.98c0.35-0.65,0.93-1.24,1.75-1.76c0.82-0.52,1.9-0.96,3.26-1.3c1.35-0.35,3.04-0.52,5.05-0.52v-1.04\\n        c0-1.19-0.25-2.07-0.75-2.65c-0.5-0.57-1.23-0.86-2.18-0.86c-0.69,0-1.26,0.08-1.72,0.24c-0.46,0.16-0.86,0.34-1.2,0.54\\n        c-0.34,0.2-0.65,0.38-0.94,0.54c-0.29,0.16-0.6,0.24-0.95,0.24c-0.29,0-0.53-0.07-0.74-0.22c-0.21-0.15-0.37-0.33-0.5-0.55\\n        l-0.77-1.36c2.03-1.86,4.48-2.79,7.35-2.79c1.03,0,1.95,0.17,2.76,0.51c0.81,0.34,1.5,0.81,2.06,1.41\\n        c0.56,0.6,0.99,1.32,1.28,2.16c0.29,0.84,0.44,1.76,0.44,2.76V25.59z M130.18,22.94c0.44,0,0.84-0.04,1.21-0.12\\n        c0.37-0.08,0.71-0.2,1.04-0.36c0.33-0.16,0.64-0.35,0.95-0.58c0.3-0.23,0.61-0.51,0.92-0.82V18.1c-1.24,0-2.28,0.08-3.11,0.23\\n        c-0.83,0.16-1.5,0.36-2.01,0.6c-0.51,0.24-0.86,0.53-1.08,0.85c-0.21,0.32-0.32,0.68-0.32,1.06c0,0.75,0.22,1.29,0.66,1.61\\n        C128.89,22.78,129.46,22.94,130.18,22.94z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#FFFFFF"],[9,"d","M145.78,0v25.59h-4.25V0H145.78z"],[7],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M152.86,14.18v11.41h-1.82V0.37h6.43c2.91,0,5.08,0.56,6.52,1.68c1.44,1.12,2.16,2.77,2.16,4.95\\n        c0,0.96-0.17,1.84-0.5,2.64c-0.33,0.8-0.81,1.49-1.43,2.09c-0.62,0.6-1.38,1.09-2.25,1.48c-0.88,0.39-1.87,0.64-2.98,0.76\\n        c0.29,0.18,0.54,0.42,0.77,0.71l8.68,10.91h-1.59c-0.19,0-0.35-0.04-0.49-0.11c-0.14-0.07-0.27-0.19-0.4-0.36l-8.07-10.23\\n        c-0.2-0.26-0.42-0.45-0.65-0.55c-0.23-0.11-0.59-0.16-1.08-0.16H152.86z M152.86,12.82h4.38c1.12,0,2.12-0.13,3-0.4\\n        c0.88-0.27,1.63-0.65,2.25-1.15c0.61-0.5,1.08-1.1,1.4-1.8c0.32-0.7,0.48-1.49,0.48-2.37c0-1.79-0.59-3.12-1.76-3.99\\n        c-1.18-0.87-2.89-1.3-5.13-1.3h-4.62V12.82z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M170.85,7.85v11.33c0,1.66,0.38,2.97,1.14,3.91c0.76,0.94,1.93,1.42,3.49,1.42c1.16,0,2.24-0.29,3.24-0.88\\n        c1-0.59,1.9-1.4,2.7-2.45V7.85h1.69v17.73h-0.93c-0.33,0-0.5-0.15-0.51-0.46l-0.16-2.64c-0.82,1.02-1.77,1.84-2.85,2.46\\n        c-1.08,0.62-2.28,0.93-3.6,0.93c-0.99,0-1.85-0.15-2.59-0.46c-0.74-0.31-1.35-0.75-1.84-1.34c-0.49-0.58-0.86-1.28-1.11-2.1\\n        c-0.25-0.82-0.37-1.75-0.37-2.78V7.85H170.85z"],[7],[8],[0,"\\n      "],[6,"path"],[9,"fill","#1ABC9C"],[9,"d","M186.06,25.58V7.85h0.93c0.31,0,0.49,0.15,0.53,0.45l0.16,2.67c0.81-1.02,1.75-1.84,2.82-2.47\\n        c1.08-0.62,2.27-0.94,3.59-0.94c0.97,0,1.83,0.15,2.58,0.46c0.74,0.31,1.36,0.75,1.84,1.34c0.49,0.58,0.86,1.28,1.1,2.1\\n        c0.25,0.82,0.37,1.75,0.37,2.78v11.33h-1.69V14.25c0-1.66-0.38-2.97-1.14-3.91c-0.76-0.94-1.92-1.42-3.49-1.42\\n        c-1.16,0-2.25,0.3-3.24,0.9c-1,0.6-1.89,1.42-2.67,2.47v13.29H186.06z"],[7],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"g"],[7],[0,"\\n      "],[6,"polygon"],[9,"fill","#1ABC9C"],[9,"points","16.68,9.03 16.68,0.69 8.34,0.69 8.34,9.03 0,9.03 0,17.36 8.34,17.36 8.34,25.7 16.68,25.7\\n        16.68,17.36 25.01,17.36 25.01,9.03 \\t\\t"],[7],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/logo-svg.hbs"}})}),define("hospitalrun/templates/components/medication-allergy",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"vSSOU5MF",block:'{"symbols":["allergy","index"],"statements":[[4,"if",[[20,["showAllergies"]]],null,{"statements":[[0,"  "],[6,"label"],[9,"class","ps-info-label wide"],[7],[1,[25,"t",["allergies.labels.patientAllergy"],null],false],[8],[0,"\\n\\n"],[4,"if",[[20,["canAddAllergy"]]],null,{"statements":[[0,"  "],[6,"a"],[9,"class","clickable"],[3,"action",[[19,0,[]],"createNewAllergy"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0,"  "],[1,[25,"t",["allergies.buttons.addAllergy"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[6,"div"],[9,"class","ps-info-data-block allergy-list"],[7],[0,"\\n"],[4,"each",[[20,["patient","allergies"]]],null,{"statements":[[0,"      "],[4,"unless",[[25,"eq",[[19,2,[]],0],null]],null,{"statements":[[0,", "]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["canAddAllergy"]]],null,{"statements":[[0,"        "],[6,"a"],[9,"class","clickable allergy-button"],[3,"action",[[19,0,[]],"editAllergy",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[19,1,["name"]],false],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[6,"span"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[1,2]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/medication-allergy.hbs"}})}),define("hospitalrun/templates/components/menu-svg",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"6LFwpHnq",block:'{"symbols":[],"statements":[[6,"svg"],[9,"version","1.1"],[9,"class","icon-nav"],[9,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[9,"xmlns:xlink","http://www.w3.org/1999/xlink","http://www.w3.org/2000/xmlns/"],[9,"x","0px"],[9,"y","0px"],[9,"width","28px"],[9,"height","21px"],[9,"viewBox","0 0 28 21"],[9,"enable-background","new 0 0 28 21"],[9,"xml:space","preserve","http://www.w3.org/XML/1998/namespace"],[7],[0,"\\n  "],[6,"path"],[9,"fill-rule","evenodd"],[9,"clip-rule","evenodd"],[9,"fill","#FFFFFF"],[9,"d","M2.154,16.8h23.692C27.036,16.8,28,17.74,28,18.9\\n  c0,1.16-0.964,2.1-2.154,2.1H2.154C0.964,21,0,20.06,0,18.9C0,17.74,0.964,16.8,2.154,16.8z M2.154,8.4h23.692\\n  C27.036,8.4,28,9.34,28,10.5c0,1.16-0.964,2.1-2.154,2.1H2.154C0.964,12.6,0,11.66,0,10.5C0,9.34,0.964,8.4,2.154,8.4z M2.154,0\\n  h23.692C27.036,0,28,0.94,28,2.1c0,1.16-0.964,2.1-2.154,2.1H2.154C0.964,4.2,0,3.26,0,2.1C0,0.94,0.964,0,2.154,0z"],[7],[8],[0,"\\n"],[8]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/menu-svg.hbs"}})}),define("hospitalrun/templates/components/modal-dialog",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"NIX5o/0f",block:'{"symbols":["button","&default"],"statements":[[6,"div"],[9,"class","modal fade"],[7],[0,"\\n  "],[6,"div"],[9,"class","modal-dialog"],[7],[0,"\\n    "],[6,"div"],[9,"class","modal-content"],[7],[0,"\\n      "],[6,"div"],[9,"class","modal-header"],[7],[0,"\\n        "],[6,"button"],[9,"type","button"],[9,"class","close"],[9,"data-dismiss","modal"],[9,"aria-hidden","true"],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[8],[0,"\\n        "],[6,"h4"],[9,"class","modal-title"],[7],[1,[18,"title"],false],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","modal-body"],[7],[0,"\\n        "],[11,2],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","modal-footer"],[7],[0,"\\n"],[4,"unless",[[20,["hideCancelButton"]]],null,{"statements":[[0,"          "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"cancelAction"]],[7],[1,[18,"cancelBtnText"],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"unless",[[20,["hideUpdateButton"]]],null,{"statements":[[0,"          "],[6,"button"],[10,"class",[26,["btn btn-primary on-white ",[18,"updateButtonClass"]]]],[10,"disabled",[18,"isUpdateDisabled"],null],[3,"action",[[19,0,[]],"updateAction"]],[7],[1,[18,"updateButtonText"],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"each",[[20,["additionalButtons"]]],null,{"statements":[[0,"            "],[6,"button"],[10,"class",[26,[[19,1,["class"]]]]],[3,"action",[[19,0,[]],"fireButtonAction",[19,1,["buttonAction"]]]],[7],[0,"\\n"],[4,"if",[[19,1,["buttonIcon"]]],null,{"statements":[[0,"                "],[6,"span"],[10,"class",[26,[[19,1,["buttonIcon"]]]]],[7],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[1,[19,1,["buttonText"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/modal-dialog.hbs"}})}),define("hospitalrun/templates/components/nav-menu",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ZWrr1kKt",block:'{"symbols":["subnav"],"statements":[[4,"if",[[20,["show"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","category-title"],[3,"action",[[19,0,[]],"toggleContent"]],[7],[0,"\\n"],[4,"link-to",[[20,["nav","route"]]],[["class"],["primary-section-link nav-link"]],{"statements":[[0,"      "],[6,"span"],[10,"class",[26,["mega-octicon ",[20,["nav","iconClass"]]]]],[7],[8],[1,[20,["nav","localizedTitle"]],false],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"],[4,"if",[[20,["isShowing"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","category-sub-items"],[7],[0,"\\n"],[4,"each",[[20,["nav","subnav"]]],null,{"statements":[[4,"if",[[19,1,["show"]]],null,{"statements":[[0,"          "],[6,"div"],[3,"action",[[19,0,[]],"resetNav"]],[7],[0,"\\n"],[4,"if",[[19,1,["subroute"]]],null,{"statements":[[4,"link-to",[[19,1,["route"]],[19,1,["subroute"]]],[["class"],["category-sub-item nav-link"]],{"statements":[[0,"                "],[6,"span"],[10,"class",[26,["octicon ",[19,1,["iconClass"]]]]],[7],[8],[1,[19,1,["localizedTitle"]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"link-to",[[19,1,["route"]]],[["class"],["category-sub-item nav-link"]],{"statements":[[0,"                "],[6,"span"],[10,"class",[26,["octicon ",[19,1,["iconClass"]]]]],[7],[8],[1,[19,1,["localizedTitle"]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/nav-menu.hbs"}})}),define("hospitalrun/templates/components/nav-paging",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"DJGbfO6E",block:'{"symbols":[],"statements":[[4,"if",[[20,["paginationProps","showPagination"]]],null,{"statements":[[4,"if",[[20,["paginationProps","showFirstPageButton"]]],null,{"statements":[[0,"    "],[6,"button"],[9,"class","btn btn-default on-white"],[10,"disabled",[20,["paginationProps","disablePreviousPage"]],null],[3,"action",[[19,0,[]],"firstPage"]],[7],[0,"\\n      "],[6,"span"],[9,"class","glyphicon glyphicon-step-backward"],[7],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[6,"button"],[9,"class","btn btn-default on-white"],[10,"disabled",[20,["paginationProps","disablePreviousPage"]],null],[3,"action",[[19,0,[]],"previousPage"]],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-chevron-left"],[7],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"button"],[9,"class","btn btn-default on-white"],[10,"disabled",[20,["paginationProps","disableNextPage"]],null],[3,"action",[[19,0,[]],"nextPage"]],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-chevron-right"],[7],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["paginationProps","showLastPageButton"]]],null,{"statements":[[0,"    "],[6,"button"],[9,"class","btn btn-default on-white"],[10,"disabled",[20,["paginationProps","disableNextPage"]],null],[3,"action",[[19,0,[]],"lastPage"]],[7],[0,"\\n      "],[6,"span"],[9,"class","glyphicon glyphicon-step-forward"],[7],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/nav-paging.hbs"}})}),define("hospitalrun/templates/components/operative-procedures",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"vdeeXr5G",block:'{"symbols":["procedure"],"statements":[[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","hint"],[[20,["form"]],[20,["model"]],[25,"concat",[[25,"if",[[25,"not-eq",[[20,["haveProcedures"]],true],null],"required "],null],"procedure-description col-sm-10"],null],"procedureDescription",[25,"t",["components.operativeProcedures.labels.procedure"],null],[20,["procedureList"]],[20,["procedureDescription"]],false]]],false],[0,"\\n  "],[6,"div"],[9,"class","col-sm-2"],[7],[0,"\\n    "],[6,"label"],[9,"class","control-label"],[7],[0," "],[8],[0,"\\n    "],[6,"p"],[9,"class"," form-control-static"],[7],[0,"\\n      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"addProcedure"]],[7],[0,"\\n        "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["components.operativeProcedures.buttons.addProcedure"],null],false],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["haveProcedures"]]],null,{"statements":[[0,"  "],[6,"h4"],[7],[1,[25,"t",["components.operativeProcedures.titles.procedures"],null],false],[8],[0,"\\n  "],[6,"table"],[9,"class","table procedure-listing"],[7],[0,"\\n    "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["components.operativeProcedures.labels.procedure"],null],false],[8],[0,"\\n      "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"each",[[20,["model","procedures"]]],null,{"statements":[[0,"      "],[6,"tr"],[7],[0,"\\n        "],[6,"td"],[9,"class","procedure-description"],[7],[1,[19,1,["description"]],false],[8],[0,"\\n        "],[6,"td"],[7],[0,"\\n          "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteProcedure",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n            "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/operative-procedures.hbs"}})}),define("hospitalrun/templates/components/patient-diagnosis",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"R1BPqIi6",block:'{"symbols":["diagnosis","index","diagnosis","index"],"statements":[[4,"if",[[20,["showPrimaryDiagnoses"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group long-form hidden-print"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label wide"],[7],[1,[18,"primaryDiagnosisLabel"],false],[8],[0,"\\n"],[4,"if",[[20,["canAddDiagnosis"]]],null,{"statements":[[0,"        "],[6,"a"],[9,"class","clickable"],[3,"action",[[19,0,[]],"showAddDiagnosis"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.addDiagnosis"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"div"],[9,"class","ps-info-data-block"],[7],[0,"\\n"],[4,"each",[[20,["primaryDiagnoses"]]],null,{"statements":[[0,"          "],[4,"unless",[[25,"eq",[[19,4,[]],0],null]],null,{"statements":[[0,", "]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["canAddDiagnosis"]]],null,{"statements":[[0,"            "],[6,"a"],[9,"class","clickable primary-diagnosis"],[3,"action",[[19,0,[]],"editDiagnosis",[19,3,[]]],[["bubbles"],[false]]],[7],[0,"\\n              "],[1,[19,3,["diagnosis"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[19,3,["date"]]],null],false],[8],[0,")\\n            "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"            "],[6,"span"],[9,"class","primary-diagnosis"],[7],[0,"\\n              "],[1,[19,3,["diagnosis"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[19,3,["date"]]],null],false],[8],[0,")\\n            "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[3,4]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["haveSecondaryDiagnoses"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group long-form hidden-print"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label wide"],[7],[1,[18,"secondaryDiagnosisLabel"],false],[8],[0,"\\n      "],[6,"div"],[9,"class","ps-info-data-block"],[7],[0,"\\n"],[4,"each",[[20,["secondaryDiagnoses"]]],null,{"statements":[[0,"          "],[4,"unless",[[25,"eq",[[19,2,[]],0],null]],null,{"statements":[[0,", "]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["canAddDiagnosis"]]],null,{"statements":[[0,"            "],[6,"a"],[9,"class","clickable secondary-diagnosis"],[3,"action",[[19,0,[]],"editDiagnosis",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n              "],[1,[19,1,["diagnosis"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[19,1,["date"]]],null],false],[8],[0,")\\n            "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"            "],[6,"span"],[9,"class","secondary-diagnosis"],[7],[0,"\\n              "],[1,[19,1,["diagnosis"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[19,1,["date"]]],null],false],[8],[0,")\\n            "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[1,2]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/patient-diagnosis.hbs"}})}),define("hospitalrun/templates/components/patient-orders",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"uhrSd7vW",block:'{"symbols":["order"],"statements":[[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n"],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["requestedDate",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[0,"          "],[1,[25,"t",["labels.dateRequested"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["name",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[0,"          "],[1,[25,"t",["labels.name"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey","filterBy","filteredBy","filterValues"],["orderType",[20,["sortDesc"]],[20,["sortKey"]],"orderType",[20,["filteredBy"]],[20,["orderTypeFilters"]]]],{"statements":[[0,"          "],[1,[25,"t",["components.patientOrders.labels.orderType"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["status",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[0,"          "],[1,[25,"t",["labels.status"],null],false],[0,"\\n"]],"parameters":[]},null],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["dateProcessed",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[0,"          "],[1,[25,"t",["patients.labels.dateProcessed"],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"th"],[7],[1,[25,"t",["labels.result"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.notes"],null],false],[8],[0,"\\n"],[4,"sortable-column",null,[["sortBy","sortDesc","sortKey"],["requestedBy",[20,["sortDesc"]],[20,["sortKey"]]]],{"statements":[[0,"          "],[1,[25,"t",["labels.requestedBy"],null],false],[0,"\\n"]],"parameters":[]},null],[0,"        "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n      "],[8],[0,"\\n"],[4,"each",[[20,["sortedOrders"]]],null,{"statements":[[0,"        "],[6,"tr"],[3,"action",[[19,0,[]],"editOrder",[19,1,[]]]],[7],[0,"\\n          "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["requestedDate"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["orderType"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["status"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["dateProcessed"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["result"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["notes"]],false],[8],[0,"\\n          "],[6,"td"],[7],[1,[19,1,["requestedBy"]],false],[8],[0,"\\n          "],[6,"td"],[7],[0,"\\n"],[4,"if",[[19,1,["canEdit"]]],null,{"statements":[[0,"              "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editOrder",[19,1,[]]]],[7],[0,"\\n                "],[1,[25,"t",["labels.edit"],null],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[19,1,["canDelete"]]],null,{"statements":[[0,"              "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteOrder",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"if",[[20,["canAddImaging"]]],null,{"statements":[[0,"      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"newImaging"],[["bubbles"],[false]]],[7],[0,"\\n        "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["components.patientOrders.buttons.newImaging"],null],false],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddLab"]]],null,{"statements":[[0,"      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"newLab"],[["bubbles"],[false]]],[7],[0,"\\n        "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["components.patientOrders.buttons.newLab"],null],false],[0,"\\n      "],[8],[0,"\\n\\n"]],"parameters":[]},null],[4,"if",[[20,["canAddMedication"]]],null,{"statements":[[0,"      "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"newMedication"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["components.patientOrders.buttons.newMedication"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/patient-orders.hbs"}})}),define("hospitalrun/templates/components/patient-summary",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"6Po7SMrz",block:'{"symbols":["procedure","index"],"statements":[[6,"div"],[9,"class","clearfix"],[3,"action",[[19,0,[]],"linkToPatient"]],[7],[0,"\\n\\n  "],[6,"div"],[9,"class","ps-info-group patient-id"],[7],[0,"\\n    "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["labels.id"],null],false],[8],[0,"\\n    "],[6,"span"],[9,"class","ps-info-data"],[7],[1,[20,["patient","displayPatientId"]],false],[8],[0,"\\n  "],[8],[0,"\\n\\n  "],[6,"div"],[9,"class","ps-info-group patient-name"],[7],[0,"\\n    "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n    "],[6,"span"],[9,"class","ps-info-data"],[7],[1,[20,["patient","displayName"]],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["patient","sex"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["labels.sex"],null],false],[8],[0,"\\n      "],[6,"span"],[9,"class","ps-info-data"],[7],[1,[20,["patient","sex"]],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["patient","dateOfBirth"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["labels.age"],null],false],[8],[0,"\\n      "],[6,"span"],[9,"class","ps-info-data"],[7],[1,[20,["patient","age"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[20,["patient","dateOfBirth"]]],null],false],[8],[0,")"],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[1,[25,"patient-diagnosis",null,[["allowAddDiagnosis","diagnosisContainer","diagnosisList","hideInActiveDiagnoses"],[[20,["allowAddDiagnosis"]],[20,["diagnosisContainer"]],[20,["diagnosisList"]],[20,["hideInActiveDiagnoses"]]]]],false],[0,"\\n\\n"],[4,"if",[[20,["haveProcedures"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group long-form"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label wide"],[7],[1,[25,"t",["labels.procedures"],null],false],[8],[0,"\\n      "],[6,"div"],[9,"class","ps-info-data-block"],[7],[0,"\\n"],[4,"each",[[20,["patientProcedures"]]],null,{"statements":[[0,"          "],[4,"unless",[[25,"eq",[[19,2,[]],0],null]],null,{"statements":[[0,", "]],"parameters":[]},null],[0,"\\n          "],[6,"a"],[9,"class","clickable patient-procedure"],[3,"action",[[19,0,[]],"editProcedure",[19,1,[]]]],[7],[0,"\\n            "],[1,[19,1,["description"]],false],[0," ("],[6,"strong"],[7],[1,[25,"date-format",[[19,1,["procedureDate"]]],null],false],[8],[0,")\\n          "],[8],[0,"\\n"]],"parameters":[1,2]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n  "],[1,[25,"medication-allergy",null,[["patient","canAddAllergy"],[[20,["patient"]],[20,["canAddAllergy"]]]]],false],[0,"\\n\\n"],[4,"if",[[20,["canAddOperativePlan"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","ps-info-group long-form"],[7],[0,"\\n      "],[6,"label"],[9,"class","ps-info-label wide"],[7],[1,[25,"t",["patients.labels.operativePlan"],null],false],[8],[0,"\\n"],[4,"unless",[[20,["currentOperativePlan"]]],null,{"statements":[[0,"        "],[6,"a"],[9,"class","clickable"],[3,"action",[[19,0,[]],"addOperativePlan"],[["bubbles"],[false]]],[7],[0,"\\n          "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0,"\\n          "],[1,[25,"t",["patients.buttons.addOperativePlan"],null],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"div"],[9,"class","ps-info-data-block"],[7],[0,"\\n"],[4,"if",[[20,["currentOperativePlan"]]],null,{"statements":[[0,"          "],[6,"a"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editOperativePlan",[20,["currentOperativePlan"]]],[["bubbles"],[false]]],[7],[0,"\\n            "],[1,[25,"t",["patients.buttons.editOperativePlan"],null],false],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/patient-summary.hbs"}})}),define("hospitalrun/templates/components/photo-display",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ElY/333q",block:'{"symbols":[],"statements":[[4,"if",[[20,["photo","isImage"]]],null,{"statements":[[0,"  "],[6,"img"],[10,"alt",[26,[[20,["photo","caption"]]]]],[10,"src",[26,[[18,"photoUrl"]]]],[9,"class","img-responsive"],[7],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/photo-display.hbs"}})}),define("hospitalrun/templates/components/price-list",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"+Y1JKEPS",block:'{"symbols":["pricingList","price"],"statements":[[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n    "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n      "],[1,[25,"t",["components.priceList.charges"],[["pricingType"],[[20,["pricingType"]]]]],false],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n    "],[6,"table"],[9,"class","table table-bordered"],[7],[0,"\\n      "],[6,"tbody"],[7],[0,"\\n"],[4,"each",[[20,["pricingListByType"]]],null,{"statements":[[0,"          "],[6,"tr"],[7],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[0,"              "],[1,[25,"charge-quantity",null,[["pricingItem","model"],[[19,2,[]],[20,["model"]]]]],false],[0,"\\n"]],"parameters":[2]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/price-list.hbs"}})}),define("hospitalrun/templates/components/quantity-calc",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"cMZuqjzL",block:'{"symbols":["quantityGroup"],"statements":[[4,"each",[[20,["currentQuantityGroups"]]],null,{"statements":[[0,"  "],[1,[25,"quantity-conv",null,[["form","unit","firstQuantity","unitName","index","quantity","unitList"],[[20,["form"]],[19,1,["unit"]],[19,1,["firstQuantity"]],[19,1,["unitName"]],[19,1,["index"]],[19,1,["quantity"]],[20,["unitList"]]]]],false],[0,"\\n"]],"parameters":[1]},null],[4,"if",[[20,["showTotal"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","row"],[7],[0,"\\n    "],[6,"div"],[9,"class","col-xs-6"],[7],[0,"\\n      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[6,"label"],[7],[1,[25,"t",["components.quantityCalc.result"],[["targetUnit","calculated"],[[20,["targetUnit"]],[20,["calculated"]]]]],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/quantity-calc.hbs"}})}),define("hospitalrun/templates/components/quantity-conv",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"g/fQK/m3",block:'{"symbols":[],"statements":[[4,"unless",[[20,["firstQuantity"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","row"],[7],[0,"\\n    "],[6,"div"],[9,"class","col-xs-5"],[7],[0,"\\n      "],[6,"div"],[10,"class",[26,["form-group required ",[18,"quantityClass"]]]],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["components.quantityConv.conversion"],[["name"],[[20,["unitName"]]]]],false],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[6,"div"],[9,"class","col-xs-3"],[7],[0,"\\n    "],[6,"div"],[10,"class",[26,["form-group required ",[18,"quantityClass"]," test-inv-quantity"]]],[7],[0,"\\n      "],[1,[25,"component",[[20,["form","input"]]],[["model","property","label"],[[19,0,[]],"quantity",[25,"if",[[20,["firstQuantity"]],[25,"t",["labels.quantity"],null]],null]]]],false],[0,"\\n      "],[6,"span"],[9,"class","help-block"],[7],[1,[18,"quantityHelp"],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","col-xs-3"],[7],[0,"\\n    "],[6,"div"],[10,"class",[26,["form-group required ",[18,"unitClass"]]]],[7],[0,"\\n      "],[1,[25,"component",[[20,["form","select"]]],[["model","class","content","property","prompt","label"],[[19,0,[]],"form-input-group test-inv-unit required",[20,["unitListHash"]],"unit"," ",[25,"if",[[20,["firstQuantity"]],[25,"t",["components.quantityConv.unit"],null],""],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"span"],[9,"class","help-block"],[7],[1,[18,"unitHelp"],false],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/quantity-conv.hbs"}})}),define("hospitalrun/templates/components/render-typeahead",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"UI49dWfY",block:'{"symbols":[],"statements":[[4,"if",[[20,["usePricingTypeAhead"]]],null,{"statements":[[0,"  "],[1,[25,"pricing-typeahead",null,[["class","property","model","label","content","selection"],[[20,["className"]],[20,["property"]],[20,["model"]],[20,["label"]],[20,["content"]],[20,["selection"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[1,[25,"type-ahead",null,[["class","property","model","label","content","selection","setOnBlur","hint"],[[20,["className"]],[20,["property"]],[20,["model"]],[20,["label"]],[20,["content"]],[20,["selection"]],[20,["setOnBlur"]],[20,["hint"]]]]],false],[0,"\\n"]],"parameters":[]}]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/render-typeahead.hbs"}})}),define("hospitalrun/templates/components/role-select",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"bTXDSfWw",block:'{"symbols":["item"],"statements":[[6,"select"],[9,"class","form-control"],[10,"onchange",[25,"action",[[19,0,[]],"change"],null],null],[7],[0,"\\n"],[4,"if",[[20,["prompt"]]],null,{"statements":[[0,"    "],[6,"option"],[9,"disabled",""],[10,"selected",[25,"is-not",[[20,["selection"]]],null],null],[7],[0,"\\n      "],[1,[18,"prompt"],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"each",[[20,["content"]]],[["key"],["@identity"]],{"statements":[[0,"    "],[6,"option"],[10,"value",[26,[[25,"read-path",[[19,1,[]],[20,["optionLabelPath"]]],null]]]],[10,"selected",[25,"is-equal-array",[[19,1,["roles"]],[20,["selection"]]],null],null],[7],[0,"\\n      "],[1,[25,"read-path",[[19,1,[]],[20,["optionLabelPath"]]],null],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/role-select.hbs"}})}),define("hospitalrun/templates/components/search-listing",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"p7UM2rHn",block:'{"symbols":["&default"],"statements":[[6,"div"],[9,"class","panel panel-primary"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[11,1],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"],[6,"button"],[9,"class","btn btn-primary on-white"],[3,"action",[[19,0,[]],"allItems"]],[7],[1,[18,"allButtonText"],false],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/search-listing.hbs"}})}),define("hospitalrun/templates/components/select-or-typeahead",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"4ly1yRpR",block:'{"symbols":[],"statements":[[4,"if",[[20,["userCanAdd"]]],null,{"statements":[[0,"  "],[12,"components/render-typeahead",[]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[1,[25,"component",[[20,["form","select"]]],[["class","label","property","content","optionValuePath","optionLabelPath","selected","prompt"],[[25,"concat",["form-input-group ",[20,["className"]]],null],[20,["label"]],[20,["property"]],[20,["content"]],[20,["optionValuePath"]],[20,["optionLabelPath"]],[20,["selection"]],[20,["prompt"]]]]],false],[0,"\\n"]],"parameters":[]}]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/components/select-or-typeahead.hbs"}})}),define("hospitalrun/templates/components/sidebar-nav",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"97GL5MJK",block:'{"symbols":[],"statements":[[6,"nav"],[9,"class","view sidebar-nav hidden-print"],[9,"role","navigation"],[7],[0,"\\n  "],[12,"sidebar_nav/header",[]],[0,"\\n  "],[6,"div"],[9,"class","scroll-container"],[7],[0,"\\n    "],[12,"sidebar_nav/search",[]],[0,"\\n    "],[12,"sidebar_nav/primary_nav",[]],[0,"\\n    "],[12,"sidebar_nav/message",[]],[0,"\\n  "],[8],[0,"\\n"],[8]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/components/sidebar-nav.hbs"}})}),define("hospitalrun/templates/components/sortable-column",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ZNmo3Bbw",block:'{"symbols":["filterValue","&default"],"statements":[[6,"span"],[3,"action",[[19,0,[]],"sort"]],[7],[0,"\\n"],[4,"if",[[20,["sorted"]]],null,{"statements":[[0,"    "],[6,"span"],[10,"class",[26,["octicon ",[25,"if",[[20,["sortDesc"]],"octicon-triangle-down","octicon-triangle-up"],null]]]],[7],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"span"],[9,"class","octicon octicon-triangle-down inactive"],[7],[8],[0,"\\n"]],"parameters":[]}],[0,"  "],[11,2],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["filterBy"]]],null,{"statements":[[0,"  "],[6,"span"],[9,"class","dropdown"],[7],[0,"\\n    "],[6,"span"],[10,"class",[26,["glyphicon glyphicon-filter dropdown-toggle ",[25,"if",[[20,["filtered"]],"","inactive neutral"],null]]]],[9,"data-toggle","dropdown"],[9,"role","button"],[9,"aria-haspopup","true"],[9,"aria-expanded","false"],[7],[8],[0,"\\n    "],[6,"ul"],[9,"class","dropdown-menu"],[7],[0,"\\n"],[4,"if",[[25,"eq",[[20,["filterType"]],"typeahead"],null]],null,{"statements":[[0,"        "],[6,"li"],[7],[0,"\\n          "],[1,[25,"typeahead-filter",null,[["model","content"],[[20,["model"]],[20,["filterValues"]]]]],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[25,"eq",["list",[20,["filterType"]]],null]],null,{"statements":[[0,"        "],[6,"li"],[7],[0,"\\n          "],[6,"a"],[3,"action",[[19,0,[]],"filter"],[["bubbles"],[false]]],[7],[0,"\\n            "],[1,[25,"t",["components.sortableColumn.labels.selectAll"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["filterValues"]]],null,{"statements":[[0,"          "],[6,"li"],[7],[0,"\\n            "],[6,"a"],[3,"action",[[19,0,[]],"filter",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[19,1,[]],false],[8],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null],[4,"if",[[25,"eq",[[20,["filterType"]],"date"],null]],null,{"statements":[[0,"        "],[6,"li"],[7],[0,"\\n          "],[1,[18,"date-filter"],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/sortable-column.hbs"}})}),define("hospitalrun/templates/components/static-text",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"2bk+kvdp",block:'{"symbols":["&default"],"statements":[[6,"div"],[10,"class",[26,["form-group ",[18,"class"]]]],[7],[0,"\\n  "],[6,"label"],[9,"class","control-label"],[7],[1,[18,"label"],false],[8],[0,"\\n  "],[6,"p"],[9,"class","form-control-static"],[7],[0,"\\n"],[4,"if",[[20,["value"]]],null,{"statements":[[0,"      "],[1,[18,"value"],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[11,1],[0,"\\n"]],"parameters":[]}],[0,"  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/static-text.hbs"}})}),define("hospitalrun/templates/components/take-photo",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"MJ8sBXdr",block:'{"symbols":[],"statements":[[4,"if",[[20,["canCaptureVideo"]]],null,{"statements":[[0,"    "],[1,[25,"component",[[20,["form","select"]]],[["model","class","content","id","optionLabelPath","optionValuePath","property","label","action"],[[19,0,[]],"form-input-group",[20,["photoSources"]],"photo-source","label","value","photoSource",[20,["sourceChooserLabel"]],[25,"action",[[19,0,[]],"photoSourceChange"],null]]]],false],[0,"\\n"],[4,"if",[[20,["showCameraSelect"]]],null,{"statements":[[0,"      "],[1,[25,"component",[[20,["form","select"]]],[["model","action","class","content","id","label","optionLabelPath","optionValuePath","property"],[[19,0,[]],[25,"action",[[19,0,[]],"cameraChange"],null],"form-input-group",[20,["videoSources"]],"camera",[25,"t",["components.takePhoto.camera"],null],"label","id","selectedCamera"]]],false],[0,"\\n"]],"parameters":[]},null],[0,"  "],[6,"div"],[9,"class","camera panel panel-success"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[6,"div"],[9,"class","col-sm-4"],[7],[0,"\\n        "],[6,"h2"],[7],[1,[25,"t",["components.takePhoto.preview"],null],false],[8],[0,"\\n        "],[6,"video"],[7],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","col-sm-2"],[7],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","col-sm-4"],[7],[0,"\\n        "],[6,"h2"],[7],[1,[25,"t",["components.takePhoto.photo"],null],false],[8],[0,"\\n        "],[6,"canvas"],[9,"id","canvas"],[7],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n      "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"takePhoto"]],[7],[1,[25,"t",["components.takePhoto.takePhoto"],null],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["showFileUpload"]]],null,{"statements":[[0,"  "],[1,[25,"image-upload",null,[["label","property","selectedFile","isImage"],[[25,"t",["components.takePhoto.uploadFile"],null],"fileName",[20,["photoFile"]],[20,["isImage"]]]]],false],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/take-photo.hbs"}})}),define("hospitalrun/templates/components/typeahead-filter",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"yDOXSyll",block:'{"symbols":[],"statements":[[6,"input"],[9,"type","text"],[9,"class","form-control"],[7],[8],[0,"\\n"],[6,"span"],[9,"class","input-group-btn"],[7],[0,"\\n  "],[6,"button"],[9,"class","btn btn-default warning"],[9,"type","button"],[7],[0,"\\n    "],[6,"span"],[9,"class","octicon octicon-x"],[3,"action",[[19,0,[]],"clearFilter"]],[7],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/typeahead-filter.hbs"}})}),define("hospitalrun/templates/components/upcoming-appointments",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"8KcAnpEb",block:'{"symbols":["appointment"],"statements":[[6,"h4"],[7],[1,[25,"t",["components.upcomingAppointments.titles.upcomingAppointments"],null],false],[8],[0,"\\n"],[6,"table"],[9,"class","table"],[7],[0,"\\n  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["components.upcomingAppointments.labels.date"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["components.upcomingAppointments.labels.with"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["components.upcomingAppointments.labels.location"],null],false],[8],[0,"\\n    "],[6,"th"],[7],[1,[25,"t",["components.upcomingAppointments.labels.type"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"each",[[20,["appointments"]]],null,{"statements":[[0,"    "],[6,"tr"],[7],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["formattedAppointmentDate"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["provider"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["location"]],false],[8],[0,"\\n      "],[6,"td"],[7],[1,[19,1,["appointmentType"]],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/components/upcoming-appointments.hbs"}})}),define("hospitalrun/templates/empty",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"PeNqHcg7",block:'{"symbols":[],"statements":[],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/empty.hbs"}})}),define("hospitalrun/templates/error",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"EtgP6+AZ",block:'{"symbols":[],"statements":[[6,"section"],[9,"class","view error"],[7],[0,"\\n\\n  "],[6,"div"],[9,"class","view-top-bar"],[7],[0,"\\n    "],[6,"h1"],[9,"class","view-current-title"],[7],[1,[25,"t",["messages.sorry"],null],false],[8],[0,"\\n  "],[8],[0,"\\n\\n  "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n    "],[1,[18,"message"],false],[0,"\\n    "],[6,"pre"],[7],[0,"\\n      "],[1,[18,"stack"],false],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/error.hbs"}})}),define("hospitalrun/templates/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"hWHlz6YA",block:'{"symbols":[],"statements":[[6,"section"],[9,"class","view index"],[7],[0,"\\n  "],[6,"div"],[9,"class","view-top-bar"],[7],[0,"\\n    "],[6,"h1"],[9,"class","view-current-title"],[7],[1,[25,"t",["dashboard.title"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["standAlone"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[1,[25,"t",["dashboard.standalone_welcome"],[["htmlSafe"],[true]]],false],[0,"\\n"],[4,"if",[[20,["needsUserSetup"]]],null,{"statements":[[0,"        "],[6,"p"],[7],[1,[25,"t",["dashboard.needs_user_setup"],null],false],[8],[0,"\\n        "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-left"],[3,"action",[[19,0,[]],"newUser"]],[7],[0,"\\n          "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["buttons.newUser"],null],false],[0,"\\n        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/index.hbs"}})}),define("hospitalrun/templates/inv-purchase",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Clv8NjGw",block:'{"symbols":[],"statements":[[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"date-picker",null,[["model","property","label","class"],[[20,["model"]],"dateReceived",[25,"t",["inventory.labels.dateReceived"],null],"col-sm-4"]]],false],[0,"\\n  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["invoiceNo",[25,"t",["inventory.labels.invoiceNumber"],null],"col-sm-4"]]],false],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["canEditQuantity"]]],null,{"statements":[[0,"  "],[1,[25,"quantity-calc",null,[["form","calculated","targetUnit","quantityGroups","unitList"],[[20,["form"]],[20,["model","originalQuantity"]],[20,["model","distributionUnit"]],[20,["model","quantityGroups"]],[20,["unitList"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n    "],[6,"label"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n    "],[1,[25,"input",null,[["class","value","type","disabled"],["form-control",[20,["model","originalQuantity"]],"text",true]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]}],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"purchaseCost",[25,"t",["inventory.labels.purchaseCost"],null],"required col-sm-4 test-inv-cost"]]],false],[0,"\\n  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["lotNumber",[25,"t",["inventory.labels.serialNumber"],null],"col-sm-4"]]],false],[0,"\\n"],[8],[0,"\\n"],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"date-picker",null,[["model","property","label","minDate","class"],[[20,["model"]],"expirationDate",[25,"t",["inventory.labels.expirationDate"],null],"now","col-sm-4"]]],false],[0,"\\n"],[8],[0,"\\n"],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection","className"],[[20,["form"]],[20,["model"]],"vendor",[25,"t",["inventory.labels.vendor"],null],[20,["vendorList"]],[20,["model","vendor"]],"col-sm-6 required test-vendor"]]],false],[0,"\\n  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["vendorItemNo",[25,"t",["inventory.labels.vendorItemNumber"],null],"col-sm-6"]]],false],[0,"\\n"],[8],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"  "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection"],[[20,["form"]],[20,["model"]],"location",[25,"t",["inventory.labels.location"],null],[20,["warehouseList"]],[20,["model","location"]]]]],false],[0,"\\n  "],[1,[25,"select-or-typeahead",null,[["form","model","property","label","list","selection"],[[20,["form"]],[20,["model"]],"aisleLocation",[25,"t",["inventory.labels.aisleLocation"],null],[20,["aisleLocationList"]],[20,["model","aisleLocation"]]]]],false],[0,"\\n"]],"parameters":[]},null],[1,[25,"component",[[20,["form","checkbox"]]],[["label","property"],[[25,"t",["inventory.labels.gift"],null],"giftInKind"]]],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/inv-purchase.hbs"}})}),define("hospitalrun/templates/inventory-basic",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"B18oEzL6",block:'{"symbols":[],"statements":[[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","form-group col-sm-2"],[7],[0,"\\n      "],[6,"label"],[7],[1,[25,"t",["labels.id"],null],false],[8],[0,"\\n      "],[1,[25,"input",null,[["class","value","type","disabled"],["form-control test-item-id",[20,["model","friendlyId"]],"text",true]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["name",[25,"t",["labels.name"],null],"required  col-sm-6 test-inv-name"]]],false],[0,"\\n  "],[1,[25,"inventory/rank-select",null,[["property","form"],["rank",[20,["form"]]]]],false],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"    "],[6,"div"],[9,"class","form-group col-sm-2 test-inv-quantity"],[7],[0,"\\n      "],[6,"label"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","quantity"]],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[8],[0,"\\n\\n"],[1,[25,"expand-text",null,[["label","property","rows","form"],[[25,"t",["labels.description"],null],"description",1,[20,["form"]]]]],false],[0,"\\n"],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"component",[[20,["form","select"]]],[["label","property","content","class","prompt"],[[25,"t",["labels.type"],null],"inventoryType",[20,["inventoryTypes"]],"required col-sm-4 form-input-group test-inv-type"," "]]],false],[0,"\\n  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["crossReference",[25,"t",["inventory.labels.crossReference"],null],"col-sm-8 test-inv-cross"]]],false],[0,"\\n"],[8],[0,"\\n"],[6,"div"],[9,"class","row"],[7],[0,"\\n  "],[1,[25,"component",[[20,["form","input"]]],[["property","label","class"],["reorderPoint",[25,"t",["inventory.labels.reorderPoint"],null],"col-sm-3 test-inv-reorder"]]],false],[0,"\\n  "],[1,[25,"number-input",null,[["model","property","label","class"],[[20,["model"]],"price",[25,"t",["inventory.labels.salePricePerUnit"],null],"col-sm-3 test-inv-price"]]],false],[0,"\\n  "],[1,[25,"component",[[20,["form","select"]]],[["label","class","property","content","prompt"],[[25,"t",["inventory.labels.distributionUnit"],null],"col-sm-3 required form-input-group test-inv-dist-unit","distributionUnit",[20,["unitListForSelect"]]," "]]],false],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/inventory-basic.hbs"}})})
define("hospitalrun/templates/item-charges",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"oQuFEZyu",block:'{"symbols":["charge"],"statements":[[4,"if",[[20,["organizeByType"]]],null,{"statements":[[0,"  "],[12,"charges-by-type",[]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n"],[4,"unless",[[20,["hideChargeHeader"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n          "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n            "],[1,[25,"t",["headings.chargedItems"],null],false],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"              "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddCharge"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["buttons.addItem"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n      "],[6,"table"],[9,"class","table charge-items"],[7],[0,"\\n        "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["inventory.labels.item"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.quantity"],null],false],[8],[0,"\\n          "],[6,"th"],[7],[1,[25,"t",["labels.action"],null],false],[8],[0,"\\n        "],[8],[0,"\\n"],[4,"each",[[20,["model","charges"]]],null,{"statements":[[4,"unless",[[19,1,["medicationCharge"]]],null,{"statements":[[0,"            "],[6,"tr"],[7],[0,"\\n              "],[6,"td"],[7],[1,[25,"date-format",[[19,1,["dateCharged"]]],null],false],[8],[0,"\\n              "],[6,"td"],[9,"class","charge-item-name"],[7],[1,[19,1,["pricingItem","name"]],false],[8],[0,"\\n              "],[6,"td"],[7],[1,[19,1,["quantity"]],false],[8],[0,"\\n              "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditCharge",[19,1,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteCharge",[19,1,[]]],[["bubbles"],[false]]],[7],[0,"\\n                    "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"if",[[20,["hideChargeHeader"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"if",[[20,["canAddCharge"]]],null,{"statements":[[0,"          "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddCharge"],[["bubbles"],[false]]],[7],[0,"\\n            "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["buttons.addItem"],null],false],[0,"\\n          "],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]}]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/item-charges.hbs"}})}),define("hospitalrun/templates/loading",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"y1CKEVSe",block:'{"symbols":[],"statements":[[6,"div"],[9,"class","loading-notice"],[9,"role","alert"],[7],[0,"\\n  "],[6,"div"],[9,"class","wrapper"],[7],[0,"\\n    "],[6,"div"],[9,"class","spinner"],[7],[0,"\\n      "],[6,"div"],[9,"class","rect1"],[7],[8],[0,"\\n      "],[6,"div"],[9,"class","rect2"],[7],[8],[0,"\\n      "],[6,"div"],[9,"class","rect3"],[7],[8],[0,"\\n      "],[6,"div"],[9,"class","rect4"],[7],[8],[0,"\\n      "],[6,"div"],[9,"class","rect5"],[7],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"p"],[9,"class","loading-text"],[7],[1,[25,"t",["labels.loading"],null],false],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/loading.hbs"}})}),define("hospitalrun/templates/login",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"0RQr9ym6",block:'{"symbols":[],"statements":[[6,"div"],[9,"class","container"],[7],[0,"\\n  "],[6,"form"],[9,"class","form-signin"],[9,"role","form"],[3,"action",[[19,0,[]],"authenticate"],[["on"],["submit"]]],[7],[0,"\\n    "],[6,"div"],[9,"class","signin-logo"],[7],[0,"\\n      "],[12,"components/logo-dark-svg",[]],[0,"\\n    "],[8],[0,"\\n\\n    "],[6,"div"],[9,"class","signin-contents"],[7],[0,"\\n      "],[6,"h2"],[9,"class","form-signin-heading"],[7],[1,[25,"t",["login.messages.signIn"],null],false],[8],[0,"\\n"],[4,"if",[[20,["errorMessage"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","alert alert-danger form-signin-alert"],[9,"role","alert"],[7],[1,[25,"t",["login.messages.error"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["offlineError"]]],null,{"statements":[[0,"        "],[6,"div"],[9,"class","alert alert-danger form-signin-alert"],[9,"role","alert"],[7],[1,[25,"t",["login.messages.offlineError"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[1,[25,"input",null,[["id","value","placeholder","class"],["identification",[20,["identification"]],[25,"t",["login.labels.username"],null],"form-control"]]],false],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n        "],[1,[25,"input",null,[["id","type","value","placeholder","class"],["password","password",[20,["password"]],[25,"t",["login.labels.password"],null],"form-control"]]],false],[0,"\\n      "],[8],[0,"\\n\\n      "],[6,"button"],[9,"class","btn btn-lg btn-primary btn-block"],[9,"type","submit"],[7],[1,[25,"t",["login.labels.signIn"],null],false],[8],[0,"\\n\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"],[8],[0," "],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/login.hbs"}})}),define("hospitalrun/templates/report-rows",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"mZmuUsRf",block:'{"symbols":["reportRow","column","column"],"statements":[[4,"each",[[20,["currentReportRows"]]],null,{"statements":[[4,"if",[[19,1,["rowAction"]]],null,{"statements":[[0,"    "],[6,"tr"],[3,"action",[[19,0,[]],[19,1,["rowAction","action"]],[19,1,["rowAction","model"]]]],[7],[0,"\\n"],[4,"each",[[19,1,["row"]]],null,{"statements":[[0,"        "],[6,"td"],[7],[1,[25,"array-display",null,[["content"],[[19,3,[]]]]],false],[8],[0,"\\n"]],"parameters":[3]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"tr"],[7],[0,"\\n"],[4,"each",[[19,1,[]]],null,{"statements":[[0,"        "],[6,"td"],[7],[1,[25,"array-display",null,[["content"],[[19,2,[]]]]],false],[8],[0,"\\n"]],"parameters":[2]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/report-rows.hbs"}})}),define("hospitalrun/templates/section",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"ECBtQLOO",block:'{"symbols":["subAction","button"],"statements":[[6,"div"],[9,"class","panel panel-default"],[7],[0,"\\n  "],[6,"div"],[9,"class","panel-heading clearfix"],[7],[0,"\\n    "],[6,"div"],[9,"class","view-top-bar"],[7],[0,"\\n      "],[6,"h1"],[9,"class","view-current-title"],[7],[1,[18,"currentScreenTitle"],false],[8],[0,"\\n      "],[6,"div"],[9,"class","view-action-buttons"],[7],[0,"\\n"],[4,"if",[[20,["newButtonAction"]]],null,{"statements":[[0,"          "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],[20,["newButtonAction"]]]],[7],[1,[18,"newButtonText"],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["additionalButtons"]]],null,{"statements":[[4,"each",[[20,["additionalButtons"]]],null,{"statements":[[0,"            "],[6,"button"],[10,"class",[19,2,["class"]],null],[3,"action",[[19,0,[]],[19,2,["buttonAction"]]]],[7],[0,"\\n              "],[4,"if",[[20,["buttonIcon"]]],null,{"statements":[[6,"span"],[10,"class",[19,2,["buttonIcon"]],null],[7],[8]],"parameters":[]},null],[0,"\\n              "],[1,[19,2,["buttonText"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[2]},null]],"parameters":[]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n\\n    "],[6,"div"],[9,"class","view-sub-bar"],[7],[0,"\\n      "],[6,"ul"],[9,"class","nav nav-pills view-sub-nav"],[7],[0,"\\n"],[4,"each",[[20,["subActions"]]],null,{"statements":[[4,"if",[[19,1,["statusQuery"]]],null,{"statements":[[4,"active-link",null,null,{"statements":[[4,"link-to",[[19,1,["linkTo"]],[25,"query-params",null,[["status"],[[19,1,["statusQuery"]]]]]],null,{"statements":[[0,"                "],[1,[19,1,["text"]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"active-link",null,null,{"statements":[[0,"              "],[4,"link-to",[[19,1,["linkTo"]]],null,{"statements":[[1,[19,1,["text"]],false]],"parameters":[]},null],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}]],"parameters":[1]},null],[0,"      "],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n  "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n    "],[1,[18,"outlet"],false],[0,"\\n  "],[8],[0,"\\n"],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/section.hbs"}})}),define("hospitalrun/templates/sidebar_nav/header",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"S7FaeFZP",block:'{"symbols":[],"statements":[[6,"header"],[9,"class","sidebar-nav-header"],[7],[0,"\\n  "],[6,"a"],[9,"class","sidebar-nav-logo"],[9,"href","#"],[7],[0,"\\n    "],[12,"components/logo-svg",[]],[0,"\\n  "],[8],[0,"\\n  "],[6,"a"],[9,"href","#"],[10,"class",[26,["settings-trigger ",[25,"if",[[20,["isShowingSettings"]],"active"],null]]]],[3,"action",[[19,0,[]],"toggleSettings"]],[7],[0,"\\n    "],[6,"span"],[9,"class","mega-octicon octicon-gear"],[7],[8],[0,"\\n  "],[8],[0,"\\n"],[4,"if",[[20,["isShowingSettings"]]],null,{"statements":[[0,"    "],[6,"nav"],[9,"class","settings-nav"],[7],[0,"\\n"],[4,"if",[[20,["session","isAuthenticated"]]],null,{"statements":[[0,"        "],[6,"a"],[9,"href","#"],[9,"class","logout"],[3,"action",[[19,0,[]],"invalidateSession"]],[7],[1,[25,"t",["navigation.actions.logout"],null],false],[8],[0,"\\n        "],[1,[25,"language-select",null,[["onFinish"],[[25,"action",[[19,0,[]],"toggleSettings"],null]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"        "],[4,"link-to",["login"],null,{"statements":[[1,[25,"t",["navigation.actions.login"],null],false]],"parameters":[]},null],[0,"\\n"]],"parameters":[]}],[0,"      "],[6,"a"],[9,"href","#"],[3,"action",[[19,0,[]],"about"]],[7],[1,[25,"t",["navigation.about"],null],false],[8],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[]},null],[8],[0,"\\n"]],"hasEval":true}',meta:{moduleName:"hospitalrun/templates/sidebar_nav/header.hbs"}})}),define("hospitalrun/templates/sidebar_nav/message",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"71rjOj57",block:'{"symbols":[],"statements":[[6,"p"],[9,"class","sync-status"],[7],[1,[18,"syncStatus"],false],[8]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/sidebar_nav/message.hbs"}})}),define("hospitalrun/templates/sidebar_nav/primary_nav",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"P6rEzpnK",block:'{"symbols":["nav"],"statements":[[6,"div"],[9,"class","primary-nav"],[7],[0,"\\n"],[4,"each",[[20,["localizedNavItems"]]],null,{"statements":[[0,"    "],[1,[25,"nav-menu",null,[["nav","session"],[[19,1,[]],[20,["session"]]]]],false],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/sidebar_nav/primary_nav.hbs"}})}),define("hospitalrun/templates/sidebar_nav/search",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"jhMRDfc5",block:'{"symbols":[],"statements":[[4,"if",[[20,["allowSearch"]]],null,{"statements":[[0,"  "],[6,"div"],[9,"class","sidebar-nav-search sidebar-nav-section"],[9,"role","search"],[7],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[1,[25,"text-search",null,[["value","placeholder","class"],[[20,["searchText"]],[25,"t",["labels.search"],null],"form-control"]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default"],[7],[6,"span"],[9,"class","glyphicon glyphicon-search"],[7],[8],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/templates/sidebar_nav/search.hbs"}})}),define("hospitalrun/transforms/attachment",["exports","ember-pouch/transforms/attachment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/transforms/attachments",["exports","ember-pouch/transforms/attachments"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/transforms/custom-fields",["exports","ember-data","uuid"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.Transform.extend({store:Ember.inject.service(),deserialize:function(e){var t=this
return Ember.isEmpty(e)?e:e.map(function(e){return t.get("store").push({data:{id:n.default.v4(),type:"custom-field",attributes:e}})})},serialize:function(e){return Ember.isEmpty(e)?e:e.map(function(e){var t=e.serialize(),n=e.get("values")
if(!Ember.isEmpty(n)){var a=n.map(function(e){var t=Ember.get(e,"property"),n={label:Ember.get(e,"label")}
return Ember.isEmpty(t)||(n.property=t),n})
t.values=a}return t})}})}),define("hospitalrun/transforms/custom-forms",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.Transform.extend({store:Ember.inject.service(),deserialize:function(e){if(Ember.isEmpty(e))return e
var t=Object.keys(e),n=Ember.Object.create()
return t.forEach(function(t){n.set(t,Ember.Object.create(e[t]))}),n},serialize:function(e){return e}})}),define("hospitalrun/transforms/operative-procedures",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.Transform.extend({deserialize:function(e){return Ember.isEmpty(e)?[]:e.map(function(e){return{description:e}})},serialize:function(e){return Ember.isEmpty(e)?[]:e.map(function(e){return Ember.get(e,"description")})}})}),define("hospitalrun/translations/cn",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"地址标签1",address2Label:"地址标签2",address3Label:"地址标签3",address4Label:"地址标签4",addressLabel:"地址",editTitle:"地址选项",include1Label:"包括标签1",include2Label:"包括标签2",include3Label:"包括标签3",include4Label:"包括标签4",messages:{addressSaved:"地址选项已成功储存"},newTitle:"地址选项",titles:{optionsSaved:"选项已成功储存"}},addressOptions:"地址选项",customForms:{buttons:{addField:"新增栏位",moveDown:"往上移",moveUp:"往下移",newForm:"＋ 新表格",preview:"预览"},labels:{alwaysInclude:"总是包括",checkbox:"选项欄",colSpan:"欲展开之列数目",columns:"列",customForm:"自订表格",dischargeReportFormType:"出院报告",expenseTo:"支付者",formName:"表格名称",formType:"表格种类",header:"标题",incidentFormType:"事件",includeOtherOption:"包括其他选项",labFormType:"试验",label:"标签",newForm:"新增表格",opdReportFormType:"门诊病人报告",operativePlanFormType:"手术计画与报告",otherOptionLabel:"其他选项标签",patientFormType:"病患",property:"属性",radio:"单选按钮",select:"复选单",socialworkFormType:"社区服务",text:"文字",textarea:"放大文字",visitFormType:"探访"},messages:{formSaved:"{name}表格已成功储存"},titles:{checkboxValues:"选项欄资料",customForms:"自订表格",deleteForm:"删除自订表格",dropDownValues:"复选单资料",editCustomForm:"编辑自订表格",fields:"栏位",formSaved:"表格成功储存",headerValues:"标题文字",newCustomForm:"新增自订表格",radioValues:"单选按钮资料"}},header:{editTitle:"标题选项",facilityName:"设施名称",headerLabel:"标题",headerLine1:"标题第1行",headerLine2:"标题第2行",headerLine3:"标题第3行",logoURL:"商标网址",messages:{headerSaved:"标题选项已成功储存"},newTitle:"标题选项",titles:{optionsSaved:"选项已成功储存"}},loadDb:"启动数据库",loaddb:{displayAlertMessage:"请选择要开启的档案",displayAlertTitle:"选择开启档案",editTitle:"启动数据库",errorDisplayAlertMessage:"无法启动数据库。问题：{error}",errorDisplayAlertTitle:"启动时发生错误",progressMessage:"请等待数据库启动",progressTitle:"正在启动数据库"},lookup:{aisleLocationList:"库存通道位置",alertImportListMessage:"请选择要汇入的档案.",alertImportListSaveMessage:"查找列表已成功汇入",alertImportListSaveTitle:"名单成功汇入",alertImportListTitle:"请选择要汇入的档案",alertImportListUpdateMessage:"查找列表已成功储存",alertImportListUpdateTitle:"名单已储存",anesthesiaTypes:"麻醉种类",anesthesiologists:"麻醉师",billingCategories:"建筑类别",clinicList:"诊所地点",countryList:"国家",cptCodeList:"CPT 编码",diagnosisList:"诊断",edit:{template:{addTitle:"新增数值",editTitle:"编辑数值",labelTitle:"数值",updateButtonTextAdd:"增加",updateButtonTextUpdate:"编辑"}},expenseAccountList:"费用帐户",imagingPricingTypes:"影像价目类别",incidentDepartments:"事件部门",inventoryTypes:"库存类型",labPricingTypes:"试验定价类型",pageTitle:"查找列表",patientStatusList:"病患状态表",physicianList:"医师",procedureList:"程序",procedureLocations:"程序地点",procedurePricingTypes:"程序定价类型",radiologists:"放射科医生",titles:{deleteLookupValue:"删除数值"},unitTypes:"单位类型",vendorList:"供应商",visitLocationList:"探访地点",visitTypes:"探访类型",wardPricingTypes:"病房定价类型",warehouseList:"库存地点"},lookupLists:"查找列表",roles:{capability:{addAllergy:"新增过敏",addAppointment:"新增预约",addBillingDiagnosis:"增加计费诊断",addCharge:"增加收费",addDiagnosis:"增加诊断",addImaging:"增加影像",addIncident:"增加事件",addIncidentCategory:"增加事件种类",addInventoryItem:"增加库存项目",addInventoryPurchase:"增加库存购买",addInventoryRequest:"增加库存请求",addInvoice:"增加单据",addLab:"增加测试",addMedication:"增加药物",addNote:"增加笔记",addOperationReport:"增加程序报告",addOperativePlan:"增加程序类型",addPatient:"增加病患",addPayment:"新增付款",addPhoto:"增加照片",addPricing:"新增价錢",addPricingProfile:"新增定价概况",addProcedure:"新增程序",addSocialwork:"新增社区工作",addVisit:"新增探访",addVitals:"新增命脉资料",adjustInventoryLocation:"调整库存位置",admin:"行政",admitPatient:"接纳病患",appointments:"预约",billing:"计费",cashier:"出纳员",completeImaging:"完成影像",completeLab:"完成测试",defineUserRoles:"定义用戶角色",deleteAppointment:"删除预约",deleteDiagnosis:"删除诊断",deleteImaging:"删除影像",deleteIncident:"删除事件",deleteIncidentCategory:"删除事件类型",deleteInventoryItem:"删除库存项目",deleteInvoice:"删除单据",deleteLab:"删除测试",deleteMedication:"删除药物",deleteNote:"删除笔记",deletePatient:"删除病患",deletePhoto:"删除照片",deletePricing:"删除定价",deletePricingProfile:"删除定价概况",deleteProcedure:"删除程序",deleteSocialwork:"删除社会工作",deleteVisit:"删除拜访",deleteVitals:"删除命脉资料",dischargePatient:"让病患出院",editInvoice:"编辑单据",fulfillInventory:"滿足库存",fulfillMedication:"滿足药物",generateIncidentReport:"生成事件报告",imaging:"影像",incident:"事件",inventory:"库存",invoices:"单据",labs:"测试",listPaidInvoices:"显示付清单据",loadDb:"载入数据庫",manageIncidents:"管理事件",medication:"药物",overrideInvoice:"覆盖单据",patientReports:"病患报告",patients:"病患",pricing:"价錢",updateConfig:"更新设置",visits:"探访"},messages:{roleSaved:"{roleName}任务已成功储存"},titles:{roleSaved:"任务已成功储存"}},textReplacements:{createNew:"新增简码",existingRepl:"現有简码",noMatches:"'{term}' 沒有相對应的替代品",pageTitle:"简码",performExpand:"按 Enter 来用 '{to}' 取代 #{from}",possibleExpansions:"{possible} 可能的替代品",replDesc:"输入文字時，这些快捷键让您短的字句变成长的语句.",replaceWith:"用 ... 来取代",toReplace:"要取代之文字"},userRoles:"用戶角色",users:"用戶",visitForms:{labels:{followup:"跟进",form:"表格",initial:"初始",visitType:"探访类型"},titles:{visitForms:"探访表格"}},workflow:{admissionDepositLabel:"需要入院押金",clinicPrepaymentLabel:"需要诊所付款",editTitle:"流程选项",followupPrepaymentLabel:"需要跟进付款",messages:{optionsSaved:"流程选项已成功储存"},newTitle:"流程选项",outpatientImagingLabel:"需要门诊病人影像付款",outpatientLabLabel:"需要门诊病人测试付款",outpatientMedicationLabel:"需要门诊病人药物付款",titles:{optionsSaved:"选项已储存"},workflowLabel:"流程"}},alerts:{errorExclamation:"发生错误!!!",pleaseWait:"请稍候",reportError:"生成报告時发生错误",warningExclamation:"注意!!!"},allergies:{buttons:{addAllergy:"新增过敏"},labels:{allergyName:"名称",patientAllergy:"患者过敏"},titles:{addAllergy:"新增过敏",editAllergy:"编辑过敏"}},application:{messages:{sessionExpired:"请重新登入"},titles:{sessionExpired:"会话过期"}},appointments:{buttons:{newButton:"+ 新增预约",scheduleSurgery:"+ 预约手术"},calendarTitle:"预约行事历",currentScreenTitle:"预约列表",editTitle:"更改预约",labels:{noLocation:"无地点",selectedStartingDate:"显示在 ... 之后的预约"},messages:{appointmentSaved:"{patient}的预约已成功储存",endTimeLaterThanStart:"请选择一个开始时间之后的结束时间"},missed:"错过的预约",newTitle:"新增预约",searchTitle:"搜寻预约",sectionTitle:"预约",thisWeek:"本周预约",titles:{appointmentSaved:"预约已储存",editSurgicalAppointment:"更改手术预约",newSurgicalAppointment:"新增手术预约",theaterSchedule:"手术室时间表"},todayTitle:"本日预约"},billing:{alerts:{noInvoiceFound:"找无单据",noPricingItems:"找无定价项目",noPricingProfiles:"找无定价概况"},buttons:{addOverride:"新增覆盖",createInvoice:"建立单据?"},labels:{actualCharges:"实际收费",discountAmount:"折扣金额",discountPercentage:"折扣百分比",externalInvoiceNumber:"外部收据 #",hmoCom:"HMO/COM",insurance:"国家保险",paymentProfile:"付款资料",paymentsDeposits:"付款/存款",pricingPanelOverrides:"定价资料覆盖",pricingProfile:"定价资料",setFee:"设定费用"},messages:{flatDiscountMsg:"患者负责的基本费用已包含 {currency}{discountAmount} 的折扣.",flatFeeMsg:"患者负责 {currency}{setFee} 的基本费用."},navigation:{}},buttons:{add:"新增",addItem:"新增项目",addLineItem:"新增订单项目",addValue:"新增数值",addVisit:"新增探访",allRequests:"全部要求",barcode:"条码",cancel:"取消",clear:"清除",close:"关",complete:"完成",delete:"删除",dispense:"分发",edit:"编辑",filter:"筛选",fulfill:"履行",import:"输入",loadFile:"载入档案",newItem:"+ 新增项目",newNote:"新增笔记",newRequest:"新增要求",newRequestPlus:"+ 新增要求",newUser:"新增使用者",ok:"Ok",print:"列印",remove:"移除",returnButton:"返回",review:"检阅",search:"搜寻",showAll:"显示全部",showFewer:"显示部分",update:"更新"},components:{chargesByTypeTab:{charges:"收费"},customFormManager:{buttons:{addForm:"新增表格"}},dateTimePicker:{amHour:"上午{hour}",midnight:"午夜",noon:"中午",pmHour:"下午{hour}"},imageUpload:{messages:{selectValidImageFile:"请选择一个有效的照片"}},operativeProcedures:{buttons:{addProcedure:"新增程序"},labels:{procedure:"程序"},titles:{procedures:"程序"}},patientOrders:{buttons:{newImaging:"新增影像",newLab:"新增测试",newMedication:"新增药物"},labels:{imagingOrderType:"影像",labOrderType:"测试",medicationOrderType:"药物",orderType:"订購类型"}},priceList:{charges:"{pricingType} 收费"},quantityCalc:{result:"{targetUnit} 总和：{calculated}"},quantityConv:{conversion:"一个 {name} 含有?",unit:"单位"},sortableColumn:{labels:{selectAll:"(全选)"}},takePhoto:{camera:"相机",how:"想如何加入相片",labels:{takeAPicture:"拍張照片",uploadAFile:"上传档案"},photo:"照片",preview:"预览",takePhoto:"拍照片",uploadFile:"上传档案"},upcomingAppointments:{labels:{date:"日期",location:"地点",type:"种类",with:"与"},titles:{upcomingAppointments:"将来预约"}}},customForms:{buttons:{addForm:"加入表格"},labels:{formToAdd:"要加入之表格"},titles:{addCustomForm:"加入自订表格"}},dashboard:{needs_user_setup:"我们建议您建立使用者帐户",standalone_welcome:'<h4>感謝您下载 HospitalRun. </h4><p>您正在使用 HospitalRun 的独立模式. 这个模式支援多个使用者在一台电脑. 这對于下列是理想的:</p><ul><li>评估 HospitalRun 以开发伺服器.</li><li>使用平台来支援仅需单一设備(电脑)的诊所.</li></ul><p>如果您\'考虑架构一个数台设備(电脑)的HospitalRun, 我们 <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">正在试着开发功能</a> 让您从这单一设置升级到一般的雲端/伺服器设置.</p>',title:"欢迎来到 HospitalRun!"},dates:{long:"{years} 年 {months} 月 {days} 日",longOmitDays:"{years} 年 {months} 月",longOmitDaysPlural:"{years} 年 {months} 月",longOmitDaysYears:"{months} 月",longOmitYears:"{months} 月 {days} 日",longPlural:"{years} 年 {months} 月 {days} 日",short:"{years}年 {months}月 {days}日",shortOmitYears:"{months}月 {days}日"},diagnosis:{labels:{activeDiagnosis:"現行诊断",date:"日期",diagnosis:"诊断",secondaryDiagnosis:"次要诊断"},titles:{addDiagnosis:"新增诊断",editDiagnosis:"编辑诊断"}},errors:{accepted:"必须要接受",blank:"不能空白",confirmation:"不符合 {attribute}",empty:"不能空白",equalTo:"必须等于 {count}",even:"必须是偶数",exclusion:"已保存",greaterThan:"必须大于 {count}",greaterThanOrEqualTo:"必须大于或等于 {count}",inclusion:"不在名单內",invalid:"不符合要求",invalidNumber:"不是有效数字",lessThan:"必须小于 {count}",lessThanOrEqualTo:"必须小于或等于 {count}",notANumber:"不是一个数字",notAnInteger:"必须是一个整数",odd:"必须是奇数",otherThan:"不能等于 {count}",present:"必须是空白",result:"请先输入一个结果",tooLong:"字数太长 (不能超过 {count} 字数)",tooShort:"字数太短 (不能低于 {count} 字数)",wrongLength:"字数不對 (必须等于 {count} 字数)"},headings:{chargedItems:"收费项目"},imaging:{alerts:{completedMessage:"影像要求已完成",completedTitle:"影像要求完成",savedMessage:"影像要求已储存",savedTitle:"影像要求已储存"},buttons:{newButton:"+ 新增影像"},labels:{addNewVisit:"--新增探访--",completedBy:"完成者",radiologist:"放射科医师",requestedNotes:"要求的笔记",resultNotes:"结果笔记"},messages:{noCompleted:"找不到已完成的项目"},pageTitle:"影像要求",sectionTitle:"影像",titles:{completedImaging:"已完成影像",editTitle:"编辑影像要求",newTitle:"新增影像要求"}},incident:{buttons:{add:"新增",addForm:"+ 新增表格",addItem:"新增表格",cancel:"取消",delete:"删除",download:"下载",edit:"编辑",export:"输出报告",generateRep:"生成报告",newAttachment:"+ 新增附件",newCategory:"+ 新增类型",newIncident:"+ 新增事件",newNote:"+ 新增笔记"},labels:{actions:"作用",addedBy:"由...添加",category:"类型",categoryItem:"类型表格",date:"日期",dateRecorded:"纪录日期",department:"部门",description:"事件描述",endDate:"结束日期",givenBy:"由...提供",howToAddAttachment:"您想如何增加附件?",incidentDate:"事件日期",incidentId:"事件 ID",item:"项目",lastUpdated:"上一次更新",note:"笔记",patientId:"患者 Id",patientImpacted:"影響患者",reportType:"报告种类",reportedBy:"由...报告",reportedDate:"报告日期",reportedTo:"事件已报告给 (Full Name)",sentinelEvent:"突发事件",startDate:"开始日期",status:"状态",statusActive:"現行",statusClosed:"完成",statusFollowup:"跟进",statusReported:"已报告",title:"标题",total:"总和",updatedBy:"由...更新"},messages:{attachmentFileRequired:"储存附件前请先上传档案或拍張照片",createNew:"新增事件?",createNewIncidentCategory:"新增事件类型?",fillIn:"填入上述选项以计算分数",incidentCategorySaved:"{name} 类型已成功储存.",noClosedIncidents:"找不到已完成的事件.",noIncidentCategoriesFound:"找不到事件类型.",noIncidents:"找不到事件.",saved:"事件报告已成功储存.",selectExistingPatient:"请选择一个現有的患者或不要填写此字段."},titles:{addAttachment:"加入附件",addCategoryItem:"加入类型项目",addNote:"加入笔记",attachments:"附件",closed:"已完成事件",current:"當前",deleteAttachment:"删除附件",deleteIncident:"删除事件",deleteIncidentCategory:"删除事件类型",deleteItem:"删除项目",deleteNote:"删除笔记",editAttachment:"编辑附件",editIncident:"编辑事件",editIncidentCategory:"编辑事件类型",editNote:"编辑笔记",general:"一般信息",history:"历史",incidentCategories:"事件类型",incidentCategoryItem:"事件类型项目",incidentCategoryName:"事件类型名称",incidentCategorySaved:"事件类型已储存",incidentSaved:"事件已储存",incidents:"事件",incidentsByCategory:"按类型显示事件",incidentsByDepartment:"按部门显示事件",newIncident:"新增事件",newIncidentCategory:"新增事件类型",notes:"笔记",reports:"报告"}},inventory:{edit:{cost:"单位价:",delivered:"传递给:",location:"调整地点:",prescription:"处方给:",pulled:"来源:",quantity:"完成数量:",reason:"原因:",returned:"患者给回:",transferredFrom:"从...转来:",transferredTo:"转去:"},labels:{action:"行动",add:"加入",addAdjustmentType:"加入",adjust:"调整",adjustmentDate:"调整日期",adjustmentFor:"为...调整",adjustmentType:"调整种类",aisle:"通道",aisleLocation:"通道地点",allInventory:"全部清单",allItems:"全部项目",availableQuantity:"{quantity} 可用",billTo:"记帐到",consumePurchases:"消费购买",consumptionRate:"消费率",cost:"费用",costPerUnit:"单位价",crossReference:"交叉引用",currentQuantity:"現前数量",dateCompleted:"完成日期",dateEffective:"生效日期",dateEnd:"结束日期",dateReceived:"收到日期",dateStart:"开始日期",dateTransferred:"转移日期",daysLeft:"剩余天数",deleteItem:"删除项目",deliveryAisle:"发送通道",deliveryLocation:"发送地点",details:"细节",distributionUnit:"分配单位",editItem:"编辑项目",expense:"记帐到",expirationDate:"截止日期",fulfillRequest:"实现需求",fulfillRequestNow:"現在实现需求",gift:"礼物",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"礼物用途",inventoryConsumed:"库存消耗",inventoryItem:"库存项目",inventoryObsolence:"库存报废",invoiceItems:"单据项目",invoiceLineItem:"单据单項",invoiceNumber:"单据号码",item:"项目",itemNumber:"项目号码",items:"项目",location:"地点",locations:"地点",markAsConsumed:"标记为已消耗",name:"名称",newItem:"新增项目",originalQuantity:"原本数量",print:"列印",printBarcode:"列印条码",printer:"列印机",pullFrom:"从...拉入",purchaseCost:"购买价格",purchaseInfo:"购买资料",purchases:"购买",quantity:"数目 ({unit})",quantityAvailable:"可提供之数目",quantityOnHand:"現有数目",quantityRequested:"要求数目",rank:"级別",reason:"原因",remove:"移除",removeAdjustmentType:"移除",reorderPoint:"订貨點",requestedItems:"要求项目",returnAdjustmentType:"退回",returnToVendorAdjustmentType:"退回给供应商",salePricePerUnit:"銷售单位价",save:"储存",serialNumber:"序列号",total:"总和",totalCost:"总价码",totalReceived:"总收入: {total}",transaction:"交易",transactions:"交易",transfer:"调动",transferFrom:"从...调动",transferTo:"调动到目的地",transferToAisle:"调动到通道地点",unit:"单位",unitCost:"单位价",vendor:"供应商",vendorItemNumber:"供应商项目編号",writeOffAdjustmentType:"注销",xref:"外部参照"},messages:{adjust:"请调整适当地区的数目以解释误差 {difference}.",createRequest:"加入新需求？",itemNotFound:"找不到库存项目 <strong>{item}</strong>.<br>如果要加入新的库存项目, 请填入以下资料.<br>或选择取消以返回.",loading:"载入交易...",noItems:"找无项目.",noRequests:"找无要求.",purchaseSaved:"库存购买已成功储存.",quantity:"总数目 <strong>({quantity})</strong> 不吻合地点的总数目 <strong>({locationQuantity})</strong>.",removeItem:"确定要从库存中移除此项目？",removeItemRequest:"确定要从要求中移除此项目？",requestFulfilled:"库存要求已完成.",requestUpdated:"库存要求已更新.",warning:"加入前请填入必要的栏位 (有 * 标註) 並更正错误."},reports:{adjustment:"详细的调整",daysSupply:"库存能支援天数",expenseDetail:"详细的费用",expenseSum:"费用概要",expiration:"截止日期",export:"输出报告",fields:"要包括之栏位",finance:"财政概要",generate:"生成报告",invLocation:"按地点显示库存",invValuation:"库存计价",purchaseDetail:"购买详细资料",purchaseSum:"购买概要",reportType:"报告种类",rows:{adjustments:"调整",adjustmentsTotal:"总调整",balanceBegin:"初期结余",balanceEnd:"最終结余",category:"类别",consumed:"已消耗",consumedGik:"已消耗GiK",consumedGikTotal:"已消耗GiK总和",consumedPuchases:"已消耗购买",consumedPurchasesTotal:"已消耗购买总和",consumedTotal:"已消耗总和",errInFinSum:"生成财政概况报告時发生错误: ",errInFindPur:"依购买搜寻库存项目時发生错误: ",errInFindReq:"依要求搜寻库存项目時发生错误: ",expensesFor:"...的费用: ",noAccount:"(沒有帐户)",subtotal:"小计: ",subtotalFor:"小计：{category} - {account}: ",total:"总和: ",totalFor:"{var}总和: ",totalPurchases:"购买总和",transfer1:"{quantity}来自{location}",trasnfer2:"从: {source} 到: {target}"},stockTransferDetail:"库存传递详细资料",stockTransferSum:"库存传递概要",stockUsageDetail:"详细库存使用资料",stockUsageSum:"库存使用概要",titleDateRange:"{name} 报告 {startDate} - {endDate}",titleSingleDate:"{name} 报告 {date}"},titles:{addPurchase:"加入购买",addRequest:"新增需求",adjustment:"调整",editPurchase:"编辑购买",editRequest:"编辑需求",inventoryItem:"新增库存项目",inventoryReport:"库存报告",purchaseSaved:"库存购买已储存",quickAddTitle:"新增库存项目",removeItem:"移除项目",requestFulfilled:"需求已滿足",requestUpdated:"需求已更新",transfer:"搬迁项目",warning:"警告!!!!!"}},labels:{action:"行动",actions:"行动",addNewOutpatientVisit:"--加入门诊病人探访--",address:"地址",age:"年龄",allDay:"整天",allItems:"所有项目",amount:"数目",anesthesia:"麻醉",assisting:"助理",balanceDue:"余額到期",billDate:"收费日期",billTo:"跟...收费",category:"类别",completed:"已完成",country:"国家",cptcode:"CPT 代码",creditTo:"归于",currencySymbol:"$",date:"日期",dateCompleted:"完成日期",dateOfBirth:"出生年月日",dateOfBirthShort:"生日",datePaid:"付款日期",dateRequested:"要求的日期",delete:"删除",deleteRequest:"删除要求",deleteUser:"删除使用者",department:"部门",description:"描述",discount:"折扣",displayName:"显示名称",docRead:"已讀文件",docWritten:"已填文件",edit:"编辑",editUser:"编辑使用者",email:"电子邮件",endDate:"结束日期",endTime:"结束时间",excess:"过量",expenseTo:"由...付费",fileLoadSuccessful:"成功载入档案",fileName:"档案名称",fileToLoad:"档案载入",from:"来自",fulfill:"实现",fulfillRequest:"实现需求",fulfillRequestNow:"現在实现需求",fulfilled:"已实现",grandTotal:"累计",id:"Id",imageOrders:"图像订制",imagingType:"影像种类",importFile:"载入档案",invoiceId:"单据ID",labOrders:"指定试验",lineItems:"订单项目",loading:"正在载入",location:"地点",lookupType:"查找种类",medication:"药物",name:"名称",newItem:"+ 新增项目",newUser:"新增使用者",note:"笔记",notes:"笔记",number:"数字",on:"上",password:"密码",patient:"患者",payments:"付款",physician:"医师",prescriber:"处方师",prescription:"处方",prescriptionDate:"处方日期",price:"价格",print:"列印",procedures:"程序",provider:"提供者",pullFrom:"从...拉入",quantity:"数目",remarks:"备注",requestedBy:"要求者",requestedOn:"要求的日期",requests:"要求",result:"结果",results:"结果",role:"角色(任务)",search:"搜寻",sex:"性別",startDate:"开始日期",startTime:"开始时间",status:"状态",takenBy:"由...采取",to:"给",total:"总和",type:"种类",userCanAddNewValue:"使用者可加入数值",username:"用戶名",value:"数值",view:"检视",visit:"探访",with:"与"},labs:{alerts:{requestCompletedMessage:"测试要求已完成.",requestCompletedTitle:"测试要求已完成",requestSavedMessage:"测试要求已储存.",requestSavedTitle:"测试要求已储存"},buttons:{newButton:"+ 新增测试"},completedTitle:"已完成的测试",deleteTitle:"删除要求",editTitle:"编辑测试要求",labels:{addNewVisit:"--加入新探访--",labType:"测试种类"},messages:{createNewRecord:"加入新纪录?",noCompleted:"找无已完成的项目.",noItemsFound:"找无测试."},newTitle:"新增测试要求",requestsTitle:"测试要求",sectionTitle:"测试"},languageName:"简体中文",loading:{messages:{0:"飞行最快的蝴蝶可以达到每小時12英里. 有些飞蛾能达到每小時25英里的飞行速度!",1:"貓头鹰是唯一能识別蓝色的鸟类.",10:"舌头是您体內唯一仅附在最后端的肌肉.",11:"骆驼有三个眼皮来防护风吹砂.",2:"貓可以发出超过一百种声音，狗只能发出十种.",3:"人类說话時运用了72个不同的肌肉.",4:"非洲上的语言超过一千种.",5:"Erythrophobe 这个詞形容一个容易脸红的人.",6:"世上最常见的恐惧症是怕痛的恐惧.",7:"當您站立不动的時候，您的身体运用了300个肌肉来平衡自己.",8:"特定青蛙能在被结冻又解冻后继续生存.",9:"人体的眼睛从出生就保持同样的大小, 但鼻子和耳朵會一直持续成长."},progressBar:{progress:"{progressBarValue}% 完成"}},login:{labels:{password:"密码",signIn:"登入",username:"用戶名"},messages:{error:"用戶名或密码不正確.",offlineError:"离线時无法登入. 请连上网路后再试.",signIn:"请登入"}},medication:{alerts:{fulfilledTitle:"药物要求完成",returnedMessage:"药物已标记为退還.",returnedTitle:"退還药物",savedMessage:"药物纪录已储存.",savedTitle:"药物要求已储存"},buttons:{dispenseMedication:"发放配药",newButton:"+ 新增要求",returnMedication:"退還药物"},labels:{adjustmentDate:"调整日期",creditToAccount:"归于...帐户",quantityDispensed:"分配数量",quantityDistributed:"分发数量",quantityRequested:"要求数量",quantityToReturn:"要還的数量",refills:"充值",returnAisle:"退還通道",returnLocation:"退還地点",returnReason:"退還原因/备注"},messages:{createNew:"新增药物要求?"},pageTitle:"药物要求",returnMedication:"退還药物",sectionTitle:"药物",titles:{completedMedication:"完成药物",editMedicationRequest:"编辑药物要求",newMedicationRequest:"新增药物要求"}},messages:{createNewRecord:"建立新纪录?",createNewUser:"建立新使用者?",delete:"确定要删除 {name}?",delete_plural:"确定要删除这些 {name}?",delete_singular:"确定要删除 {name}?",forAuthorizedPersons:"这报告只提供给特定授权人.",newPatientHasToBeCreated:"必须建立一个新的患者...请稍候..",noHistoryAvailable:"沒有历史.",noItemsFound:"找无项目.",noNotesAvailable:"沒有其他的其他的临床报告可提供给此次探访.",noUsersFound:"找无使用者.",onBehalfOf:"代表",reportError:"生成报告時发生错误. 请通报错误给系統管理员.",requiredFieldsCorrectErrors:"加入前请填入必要的栏位 (有 * 标註) 並更正错误.",saveActionException:"尝试储存時发生错误: {message}",sorry:"抱歉，发生错误...",userHasBeenSaved:"使用者已储存.",userSaved:"使用者已储存"},models:{appointment:{labels:{allDay:"整天",appointmentDate:"日期",appointmentType:"种类",endDate:"结束日期",location:"地点",notes:"笔记",patient:"患者",provider:"与",startDate:"开始日期",status:"状态",type:"种类"},names:{plural:"预约",singular:"预约"}},attachment:{names:{plural:"附件",singular:"附件"}},form:{names:{plural:"表格",singular:"表格"}},imaging:{names:"影像",request:{plural:"影像要求",singular:"影像要求"}},incident:{names:{plural:"事件",singular:"事件"}},item:{names:{plural:"项目",singular:"项目"}},lab:{names:{plural:"测试",singular:"测试"},request:{plural:"测试要求",singular:"测试要求"}},medication:{names:{plural:"药物",singular:"药物"},request:{plural:"药物要求",singular:"药物要求"}},note:{names:{plural:"笔记",singular:"笔记"}},patient:{labels:{name:"名称"},names:{singular:"患者"}},procedure:{names:{plural:"程序",singular:"程序"}},user:{names:{plural:"使用者",singular:"使用者"}},visit:{names:{plural:"探访",singular:"探访"}},vital:{names:{plural:"命脉资料",singular:"命脉资料"}}},navigation:{about:"关于HospitalRun",actions:{login:"登入",logout:"登出",selectLanguage:"选择语言"},administration:"行政",billing:"计费",imaging:"影像",incident:"事件",inventory:"库存",labs:"测试",medication:"药物",messages:{logoutFailed:"現在无法登出. 离线時无法登出."},patients:"患者",scheduling:"调度",subnav:{actions:"动作",addAppointment:"新增预约",addressFields:"地址栏位",admittedPatients:"收入患者",appointmentSearch:"搜寻预约",appointmentsCalendar:"预约行事曆",appointmentsThisWeek:"本周预约",cashier:"收銀员",completed:"已完成",currentIncidents:"現行事件",customForms:"自订表格",dispense:"配药",history:"历史",incidentCategories:"事件类别",inventoryReceived:"收到的库存",inventoryReceivedPlus:"+ 收到的库存",invoices:"清单",items:"项目",loadDB:"启动数据库",lookupLists:"查找列表",newIncident:"新增事件",newInvoice:"新增清单",newPatient:"新增患者",newRequest:"新增要求",newUser:"新增使用者",outpatient:"门诊病人",patientListing:"患者名单",priceProfiles:"价格概况",prices:"价格",printHeader:"列印标题",reports:"报告",requests:"要求",returnMedication:"退還药物",scheduleSurgery:"排定手术",textReplacements:"短代码",theaterSchedule:"手术室时间表","today'sAppointments":"本日预约",userRoles:"使用者角色(任务)",users:"使用者",workflow:"工作流程"},titles:{logoutFailed:"登出失敗"}},operationReport:{labels:{additionalNotes:"其他备注",assistant:"助理",caseComplexity:"案件复杂度",operationDescription:"程序描述",preOpPrimaryDiagnosis:"程序前主要诊断",preOpSecondaryDiagnosis:"程序前次要诊断",surgeon:"手术师",surgeryDate:"手术日期"},messages:{reportSaved:"程序报告已成功储存."},titles:{editTitle:"编辑程序报告",newTitle:"新增程序报告",reportSaved:"报告已储存"}},operativePlan:{buttons:{completePlan:"完成计划"},labels:{additionalNotes:"其他备注",admissionInstructions:"入院后指导",caseComplexity:"案件复杂度",completedStatus:"已完成",droppedStatus:"被取消",operationDescription:"程序描述",plannedStatus:"已计划",status:"状态",surgeon:"手术师"},messages:{planCompleted:"程序计划已完成. 您将被导向程序报告.",planSaved:"程序计划已储存."},titles:{editTitle:"编辑程序计划",newTitle:"新增程序计划",planCompleted:"计划已完成",planSaved:"计划已储存"}},patients:{buttons:{addContact:"新增联络人",addExpense:"新增费用",addFamilyMember:"新增家庭成员",addOperativePlan:"新增程序计划",backToPatients:"回到患者名单",download:"下载",editOperativePlan:"現有程序计划",newAppointment:"新增预约",newImaging:"新增影像",newLab:"新增测试",newMedication:"新增药物",newPatient:"+ 新增患者",newPhoto:"新增照片",newVisit:"新增探访",patientCheckIn:"患者登记",scheduleSurgery:"安排手术时间"},labels:{admissionDate:"入院日期",admit:"收入患者",bloodType:"血型",caption:"說明",civilStatus:"公民身份",clinic:"诊所地点",contacts:"联络人",cost:"费用",dateOfBirth:"出生年月日",dateProcessed:"处理日期",dischargeDate:"出院日期",dob:"生日",education:"學歷",email:"电子邮件",externalPatientId:"外部患者 Id",firstName:"名",income:"收入",insurance:"保险",lastName:"姓",middleName:"中间名",monthlyCost:"月费",occupation:"职业",operativePlan:"程序计划",parent:"家长/监护人",patientDays:"患者天数",patientType:"患者类型",patientTypeCharity:"慈善机构",patientTypePrivate:"私人",phone:"电话",placeOfBirth:"出生地点",primaryDiagnosis:"主要诊断",referredBy:"由...推荐",referredDate:"推荐日期",relationship:"与患者的关係",relationships:"关係",religion:"宗教",secondaryDiagnosis:"次要诊断",sex:"性別",sexNotEntered:"性別空白",sources:"来源",status:"患者状态",totalMontlyExpense:"总共月费"},messages:{areYouSureDelete:"确定要删除 {object}?",createNewPatient:"建立新的患者报告?",deletingPatient:"正在删除患者与其所拥有的资料",noPatientsFound:"找无患者.",notFoundQuickAdd:"找不到患者 <strong>{patientFullName}</strong>. 若您想建立新患者, 请填入以下资料. 或选择取消以返回.",photoFileRequired:"储存照片前请先上传档案或拍張照片.",savedPatient:"患者的 {displayName} 资料已成功储存."},navigation:{appointments:"预约",general:"取消",history:"历史",imaging:"影像",labs:"测试",medication:"药物",photos:"照片",socialWork:"社区工作",visits:"探访"},notes:{newNote:"为...新增备注",onBehalfOfCopy:"代表",onBehalfOfLabel:"代表",pleaseSelectAVisit:"请选择一个探访",updateNote:"从...更新资料"},titles:{addContact:"新增联络人",addPhoto:"新增照片",additionalContacts:"其他联络人",admissionsDetail:"入院细节",admissionsSummary:"入院概要",admittedPatients:"入院患者",delete:"删除患者",deleteContact:"删除联络人",deleteExpense:"删除费用",deleteFamilyMember:"删除家庭成员",deletePatientRecord:"删除患者纪录",deletePhoto:"删除照片",diagnosticTesting:"诊断测试",dischargesDetail:"出院细节",dischargesSummary:"出院概要",edit:"编辑患者",editPhoto:"编辑照片",expenses:"费用",familyInfo:"家庭资料",familyInformation:"家庭资料",new:"新增患者",outpatientsForDate:"{visitDate} 的门诊病人",patient:"患者报告",patientListing:"患者名单",patientReport:"患者报告",patientStatus:"患者状态",proceduresDetail:"程序细节",proceduresSummary:"程序概要",savedPatient:"患者已储存",socialWork:"费用",todaysOutpatients:"擁本日门诊病人",totalPatientDays:"总和患者天数",totalPatientDaysDetailed:"总和患者天数(细节)",visit:"探访"}},pricing:{labels:{discountAmount:"折扣金额",discountPercentage:"折扣百分比",setFee:"设定费用"},navigation:{}},print:{invoice:{labels:{billedBy:"由...收费:",billedDate:"收费日期:",dateAdmitted:"入院:",dateDischarged:"出院:",dischargeNotes:"出院备注:",patientAddress:"地址:",patientAge:"年龄:",patientId:"患者 #:",patientName:"患者姓名:",remarks:"备注:",spacer:"__________________________________________"},messages:{whereConducted:"接产中扣了..."},titles:{billingStatement:"帐单",patientMember:"患者成员",patients:"患者",relContact:"关係/联络电话"}}},procedures:{buttons:{addMedication:"新增药物"},labels:{medicationUsed:"使用之药物"},messages:{saved:"程序纪录已储存."},titles:{addChargeItem:"新增收费项目",addMedicationUsed:"新增使用药物",deleteChargeItem:"删除收费项目",deleteMedicationUsed:"新增使用药物",edit:"编辑程序",editChargeItem:"编辑收费项目",editMedicationUsed:"编辑使用药物",medicationUsed:"使用药物",new:"新增程序",saved:"程序已储存"}},reports:{labels:{admissionDate:"入院日期",allProcedures:"已完成所有程序",completedBy:"由...完成",dischargeDate:"出院日期",examiner:"审查者",images:"照片",labs:"测试",location:"探访地点",medications:"药物",nextAppointment:"下个预约",nextAppointments:"下个预约",notes:{author:"作者",date:"日期",title:"备注"},operativePlan:{description:"程序描述",instructions:"入院后指导",procedures:"已计划程序",title:"程序计划"},primaryDiagnosis:"主要诊断",procedures:"程序",secondaryDiagnosis:"次要诊断",visitDate:"探访日期",visitType:"探访类别"},messages:{delete:"确定要删除此报告?",saved:"报告已成功储存."},titles:{dischargeReport:"出院报告",newDischargeReport:"新增出院报告",newOPDReport:"新增OPD报告",opdReport:"OPD报告",saved:"报告已储存"}},user:{plusNewUser:"+ 新增使用者",usersPageTile:"使用者名单"},visits:{buttons:{addDiagnosis:"新增诊断",checkIn:"报到",checkOut:"退房",discharge:"出院",newAppointment:"新增预约",newDischargeReport:"新增出院报告",newOPDReport:"新增OPD报告",newProcedure:"新增程序",newVitals:"新增命脉资料"},labels:{appointment:"预约",authoredBy:"由...創作",checkInTime:"报到",checkOutTime:"退房",createNewPatient:"建立新患者",diagnosis:"诊断",examiner:"审查者",finalDiagnosis:"最后诊断",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"已完成订单",ordersNotDone:"N",patientToCheckIn:"要报到之患者",procedure:"程序",procedureDate:"程序日期",reasonForVisit:"探访原因",reportType:"报告类型",status:"探访状态",statusAdmitted:"收入医院",statusCheckedIn:"已报到",statusCheckedOut:"已离開",statusDischarged:"已出院",visitDate:"探访日期",visitInformation:"探访资料",visitType:"探访类型"},messages:{checkOut:"确定要把 {patientName} 退房?",checkedOut:"{patientName} 已被准許离開.",discharged:"{patientName} 已出院.",patientCheckedIn:"{patientName} 已报到.",patientCreatedAndCheckedIn:"{patientName} 已建立並报到.",visitAndPatientSaved:"探访与患者纪录已储存.",visitSaved:"探访纪录已储存."},navigation:{charges:"收费",notes:"备注",orders:"订購",procedures:"程序",reports:"报告",vitals:"命脉资料"},titles:{additionalDiagnoses:"其他诊断",checkOut:"患者离開",checkedIn:"患者报到",checkedOut:"患者退房",discharged:"患者出院",editVisit:"编辑探访",newVisit:"新增探访",patientCheckIn:"患者报到",visitSaved:"探访已储存"}},vitals:{labels:{dateRecorded:"纪录之日期",dbp:"出生年月日",heartRate:"心率",height:"身高",respiratoryRate:"呼吸频率",sbp:"SBP",temperature:"体溫",weight:"体重"}}}}),define("hospitalrun/translations/de",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Adresse 1 Kennzeichen",address2Label:"Adresse 2 Kennzeichen",address3Label:"Adresse 3 Kennzeichen",address4Label:"Adresse 4 Kennzeichen",addressLabel:"Adresse",editTitle:"Adressoptionen",include1Label:"Einbezug 1 Kennzeichen",include2Label:"Einbezug 2 Kennzeichen",include3Label:"Einbezug 3 Kennzeichen",include4Label:"Einbezug 4 Kennzeichen",messages:{addressSaved:"Die Adressoptionen wurden gespeichert"},newTitle:"Adressoptionen",titles:{optionsSaved:"Optionen gespeichert"}},addressOptions:"Adressoptionen",customForms:{buttons:{addField:"Feld hinzufügen",moveDown:"Nach unten verschieben",moveUp:"Nach oben verschieben",newForm:"+ neues Formular",preview:"Vorschau"},labels:{alwaysInclude:"Immer einbeziehen",checkbox:"Checkbox",colSpan:"Spaltenanzahl zum Fusionieren",columns:"Spalten",customForm:"Benutzerdefiniertes Formular",dischargeReportFormType:"Entlassungsbericht",expenseTo:"Spesen an",formName:"Formularname",formType:"Formulartyp",header:"Kopfzeile",incidentFormType:"Vorfall",includeOtherOption:"Andere Optionen einbeziehen",labFormType:"Labor",label:"Beschriftung",newForm:"Neues Formular",opdReportFormType:"Ambulanter Bericht",operativePlanFormType:"Operativer Plan und Bericht",otherOptionLabel:"Andere Option Beschriftung",patientFormType:"Patient",property:"Eigenschaft",radio:"Option",select:"Auswahl",socialworkFormType:"Sozialarbeit",text:"Text",textarea:"Langer Text",visitFormType:"Visite"},messages:{formSaved:"Das {name} Formular wurde gespeichert."},titles:{checkboxValues:"Checkboxwerte",customForms:"Benutzerdefinierte Formulare",deleteForm:"Benutzerdefiniertes Formular löschen",dropDownValues:"Auswahlboxwerte",editCustomForm:"Benutzerdefiniertes Formular bearbeiten",fields:"Felder",formSaved:"Formular gespeichert",headerValues:"Kopfzeilenwerte",newCustomForm:"Neues benutzerdefiniertes Formular",radioValues:"Optionsfeldwerte"}},header:{editTitle:"Kopfzeilenoptionen",facilityName:"Name der Einrichtung",headerLabel:"Kopfzeile",headerLine1:"Kopfzeile 1",headerLine2:"Kopfzeile 2",headerLine3:"Kopfzeile 3",logoURL:"Logo-URL",messages:{headerSaved:"Die Kopfzeilenoptionen wurden gespeichert."},newTitle:"Kopfzeilenoptionen",titles:{optionsSaved:"Optionen gespeichert"}},loadDb:"Datenbank laden",loaddb:{displayAlertMessage:"Bitte wählen Sie eine Datei zum Laden aus.",displayAlertTitle:"Datei zum Laden auswählen",editTitle:"Datenbank laden",errorDisplayAlertMessage:"Die Datenbank konnte nicht importiert werden. Der Fehler war: {error}",errorDisplayAlertTitle:"Fehler beim Laden",progressMessage:"Bitte warten Sie, bis die Datenbank geladen ist.",progressTitle:"Datenbank laden"},lookup:{aisleLocationList:"Gänge-Verzeichnis",alertImportListMessage:"Bitte wählen Sie eine Datei zum Importieren.",alertImportListSaveMessage:"Die Nachschlageliste wurde importiert.",alertImportListSaveTitle:"Liste importiert",alertImportListTitle:"Datei zum Import auswählen",alertImportListUpdateMessage:"Die Nachschlageliste wurde gespeichert.",alertImportListUpdateTitle:"Liste gespeichert",anesthesiaTypes:"Anästhesiearten",anesthesiologists:"Anästhesiologe",billingCategories:"Abrechnungskategorien",clinicList:"Kliniken",countryList:"Länder",cptCodeList:"CPT Codes",diagnosisList:"Diagnosen",edit:{template:{addTitle:"Wert hinzufügen",editTitle:"Wert bearbeiten",labelTitle:"Wert",updateButtonTextAdd:"Hinzufügen",updateButtonTextUpdate:"Aktualisieren"}},expenseAccountList:"Spesenkonten",imagingPricingTypes:"Bildgebungs-Preiskategorien",incidentDepartments:"Vorfallsabteilungen",inventoryTypes:"Inventartypen",labPricingTypes:"Labor-Preiskategorien",pageTitle:"Nachschlageliste",patientStatusList:"Patientenstatus",physicianList:"Ärzte",procedureList:"Behandlungen",procedureLocations:"Behandlungsorte",procedurePricingTypes:"Behandlungs-Preiskategorien",radiologists:"Radiologen",titles:{deleteLookupValue:"Wert löschen"},unitTypes:"Einheiten",vendorList:"Anbieter",visitLocationList:"Einsatzorte",visitTypes:"Arten der Visite",wardPricingTypes:"Krankenstations-Preiskategorien",warehouseList:"Warenhaus"},lookupLists:"Nachschlagelisten",roles:{capability:{addAllergy:"Allergie hinzufügen",addAppointment:"Termin hinzufügen",addBillingDiagnosis:"Abrechnungsdiagnose hinzufügen",addCharge:"Gebühr hinzufügen",addDiagnosis:"Diagnose hinzufügen",addImaging:"Bildgebung hinzufügen",addIncident:"Vorfall hinzufügen",addIncidentCategory:"Vorfallkategorie hinzufügen",addInventoryItem:"Inventargegenstand hinzufügen",addInventoryPurchase:"Inventarkauf",addInventoryRequest:"Inventaranfrage",addInvoice:"Rechnung hinzufügen",addLab:"Labor hinzufügen",addMedication:"Medikation hinzufügen",addNote:"Notiz hinzufügen",addOperationReport:"Operationsbericht hinzufügen",addOperativePlan:"Betriebsplan hinzufügen",addPatient:"Patient hinzufügen",addPayment:"Bezahlung hinzufügen",addPhoto:"Foto hinzufügen",addPricing:"Preisfindung hinzufügen",addPricingProfile:"Preisprofil hinzufügen",addProcedure:"Behandlung hinzufügen",addSocialwork:"Sozialarbeit hinzufügen",addVisit:"Besuch hinzufügen",addVitals:"Vitalitäten hinzufügen",adjustInventoryLocation:"Lagerort anpassen",admin:"Administration",admitPatient:"Patient zulassen",appointments:"Termine",billing:"Abrechnung",cashier:"Kassierer",completeImaging:"Bildgebung abschließen",completeLab:"Labor abschließen",defineUserRoles:"Nutzerrollen definieren",deleteAppointment:"Termin löschen",deleteDiagnosis:"Diagnose löschen",deleteImaging:"Bildgebung löschen",deleteIncident:"Vorfall löschen",deleteIncidentCategory:"Vorfallkategorie löschen",deleteInventoryItem:"Inventargegenstand löschen",deleteInvoice:"Rechnung löschen",deleteLab:"Labor löschen",deleteMedication:"Medikation löschen",deleteNote:"Notiz löschen",deletePatient:"Patient löschen",deletePhoto:"Foto löschen",deletePricing:"Preisfindung löschen",deletePricingProfile:"Preisprofil löschen",deleteProcedure:"Behandlung löschen",deleteSocialwork:"Sozialarbeit löschen",deleteVisit:"Visite löschen",deleteVitals:"Vitalwert löschen",dischargePatient:"Patient entlassen",editInvoice:"Rechnung bearbeiten",fulfillInventory:"Bestand füllen",fulfillMedication:"Medikamente füllen",generateIncidentReport:"Vorfallbericht erzeugen",imaging:"Bildgebung",incident:"Vorfall",inventory:"Inventar",invoices:"Rechnungen",labs:"Labore",listPaidInvoices:"Bezahlte Rechnungen auflisten",loadDb:"Datenbank laden",manageIncidents:"Vorfälle verwalten",medication:"Medikation",overrideInvoice:"Rechnung überschreiben",patientReports:"Patientenbericht",patients:"Patienten",pricing:"Preisfindung",updateConfig:"Konfigurationen updaten",visits:"Visiten"},messages:{roleSaved:"Die {roleName} Rolle wurde gespeichert."},titles:{roleSaved:"Rolle gespeichert"}},textReplacements:{createNew:"Neues Kürzel erstellen",existingRepl:"Bestehende Kürzel",noMatches:"Keine Ersetzungen stimmen mit '{term}' überein",pageTitle:"Kürzel",performExpand:"Enter drücken, um #{from} mit '{to}' zu ersetzen",possibleExpansions:"Mögliche Ersetzungen: {possible}",replDesc:"Wenn Text eingegeben wird, ermöglichen diese Shortcuts das Ersetzen von kurzen Zeichenketten mit längeren Sätzen.",replaceWith:"Ersetzen mit",toReplace:"Zu ersetzender Text"},userRoles:"Nutzerrollen",users:"Benutzer",visitForms:{labels:{followup:"Folgebesuch",form:"Formular",initial:"Erstbesuch",visitType:"Visitenarten"},titles:{visitForms:"Visitenformulare"}},workflow:{admissionDepositLabel:"Einzahlung erforderlich",clinicPrepaymentLabel:"Vorauszahlung der Klinik erforderlich",editTitle:"Workflow-Optionen",followupPrepaymentLabel:"Folgebesuch Vorauszahlung erforderlich",messages:{optionsSaved:"Die Workflow-Optionen wurden gespeichert"},newTitle:"Workflow-Optionen",outpatientImagingLabel:"Ambulante Bildgebung Vorauszahlung erforderlich",outpatientLabLabel:"Ambulantes Labor Vorauszahlung erforderlich",outpatientMedicationLabel:"Ambulate Medikation Vorauszahlung erforderlich",titles:{optionsSaved:"Optionen gespeichert"},workflowLabel:"Workflow"}},alerts:{errorExclamation:"Fehler!!!!",pleaseWait:"Bitte warten",reportError:"Fehler bei der Berichtsgenerierung",warningExclamation:"Warnung!!!!"},allergies:{buttons:{addAllergy:"Allergie hinzufügen"},labels:{allergyName:"Name",patientAllergy:"Patientenallergien"},titles:{addAllergy:"Allergie hinzufügen",editAllergy:"Allergie bearbeiten"}},application:{messages:{sessionExpired:"Ihre Session ist abgelaufen. Bitte loggen Sie sich erneut ein."},titles:{sessionExpired:"Session abgelaufen"}},appointments:{buttons:{newButton:"+ neuer Termin",scheduleSurgery:"+ Chirurgie ansetzen"},calendarTitle:"Terminkalender",currentScreenTitle:"Terminliste",editTitle:"Termin bearbeiten",labels:{noLocation:"Kein Ort",selectedStartingDate:"Termine währenddessen oder danach anzeigen"},messages:{appointmentSaved:"Der Termin für {patient} wurde gespeichert.",endTimeLaterThanStart:"Bitte wählen Sie eine Endzeit nach der Startzeit aus."},missed:"Verpasste Termine",newTitle:"Neuer Termin",searchTitle:"Termin suchen",sectionTitle:"Termine",thisWeek:"Termine diese Woche",titles:{appointmentSaved:"Termin gespeichert",editSurgicalAppointment:"Chirurgie Termin bearbeiten",newSurgicalAppointment:"Neuer Chirurgie Termin",theaterSchedule:"Operationssaal Zeitplan"},todayTitle:"Heutige Termine"},billing:{alerts:{noInvoiceFound:"Keine Rechnung gefunden",noPricingItems:"Kein Preisfindungselemente gefunden.",noPricingProfiles:"Keine Preisprofile gefunden."},buttons:{addOverride:"Überschreibung hinzufügen",createInvoice:"Rechnung erstellen?"},labels:{actualCharges:"Tatsächliche Gebühren",discountAmount:"Rabattbetrag",discountPercentage:"Rabattprozentsatz",externalInvoiceNumber:"Externe Rechnungsnummer",hmoCom:"HMO/COM",insurance:"Staatliche Versicherung",paymentProfile:"Zahlungsprofil",paymentsDeposits:"Zahlungen / Einlagen",pricingPanelOverrides:"Preisprofilüberschreibung",pricingProfile:"Preisprofil",setFee:"Festgelegte Gebühren"},messages:{flatDiscountMsg:"Für die finanzielle Verantwortung des Patienten gilt ein pauschaler Rabatt von {discountAmount}{currency}",flatFeeMsg:"Es gibt eine Pauschalgebühr für die finanzielle Verantwortung des Patienten über {setFee}{currency}"},navigation:{}},buttons:{add:"Hinzufügen",addItem:"Element hinzufügen",addLineItem:"Einzelposten hinzufügen",addValue:"Wert hinzufügen",addVisit:"Visite hinzufügen",allRequests:"Alle Anfragen",barcode:"Barcode",cancel:"Abbrechen",clear:"Löschen",close:"Schließen",complete:"Abschließen",delete:"Entfernen",dispense:"Verteilen",edit:"Bearbeiten",filter:"Filtern",fulfill:"Erfüllen",import:"Importieren",loadFile:"Datei laden",newItem:"+ neues Element",newNote:"Neue Notiz",newRequest:"Neue Anfrage",newRequestPlus:"+ neue Anfrage",newUser:"Neuer Benutzer",ok:"Okay",print:"Drucken",remove:"Entfernen",returnButton:"Zurück",review:"Überprüfen",search:"Suchen",showAll:"Alle Anzeigen",showFewer:"Weniger Anzeigen",update:"Aktualisieren"},components:{chargesByTypeTab:{charges:"Gebühren"},customFormManager:{buttons:{addForm:"Formular hinzufügen"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Mitternacht",noon:"Mittag",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Bitte wählen Sie eine Bilddatei aus."}},operativeProcedures:{buttons:{addProcedure:"Behandlung hinzufügen"},labels:{procedure:"Behandlung"},titles:{procedures:"Behandlungen"}},patientOrders:{buttons:{newImaging:"Neue Bildgebung",newLab:"Neues Labor",newMedication:"Neue Medikation"},labels:{imagingOrderType:"Bildgebung",labOrderType:"Labor",medicationOrderType:"Medikation",orderType:"Auftragsart"}},priceList:{charges:"{pricingType} Gebühren"},quantityCalc:{result:"Gesamt: {calculated} {targetUnit}"},quantityConv:{conversion:"Was enthält 1 {name}?",unit:"Einheit"},sortableColumn:{labels:{selectAll:"(Alle Auswählen)"}},takePhoto:{camera:"Kamera",how:"Wie wollen Sie ein Foto hinzufügen?",labels:{takeAPicture:"Foto machen",uploadAFile:"Foto hochladen"},photo:"Foto",preview:"Vorschau",takePhoto:"Foto machen",uploadFile:"Datei hochladen"},upcomingAppointments:{labels:{date:"Datum",location:"Ort",type:"Typ",with:"Mit"},titles:{upcomingAppointments:"Kommende Termine"}}},customForms:{buttons:{addForm:"Formular hinzufügen"},labels:{formToAdd:"Formular zum Hinzufügen"},titles:{addCustomForm:"Benutzerdefiniertes Formular hinzufügen"}},dashboard:{needs_user_setup:"Wir empfehlen Ihnen einen Nutzeraccount einzurichten.",standalone_welcome:'<h4>Vielen Dank, dass Sie HospitalRun heruntergeladen haben</h4><p>HospitalRun läuft im Standalone Modus. Dieser Modus erlaubt es Ihnen mehrere Nutzer auf einer einzelnen Desktop/Laptop Instanz von HospitalRun anzulegen. Dies ist ideal, um:</p><ul><li>HospitalRun zu evaluieren</li><li>die Platform in einer Klinik oder Einrichtung zu nutzen, in der eine einzelne Instanz ausreichend ist.</li></ul><p>Sollten Sie überlegen HospitalRun auf einem Server einzurichten, wir <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">arbeiten an Features</a>, die Ihnen den Umstieg ermöglichen.</p>',title:"Willkommen bei HospitalRun!"},dates:{long:"{years} Jahr {months} Monate {days} Tage",longOmitDays:"{years} Jahr {months} Monate",longOmitDaysPlural:"{years} Jahre {months} Monate",longOmitDaysYears:"{months} Monate",longOmitYears:"{months} Monate {days} Tage",longPlural:"{years} Jahre {months} Monate {days} Tage",short:"{years}a {months}m {days}d",shortOmitYears:"{months}m {days}d"},diagnosis:{labels:{activeDiagnosis:"Aktive Diagnose",date:"Datum",diagnosis:"Diagnose",secondaryDiagnosis:"Sekundär Diagnose"},titles:{addDiagnosis:"Diagnose hinzufügen",editDiagnosis:"Diagnose bearbeiten"}},errors:{accepted:"muss akzeptiert werden",blank:"darf nicht leer sein",confirmation:"stimmt nicht mit {attribute} überein",empty:"darf nicht leer sein",equalTo:"muss gleich {count} sein",even:"muss gerade sein",exclusion:"ist reserviert",greaterThan:"muss größer als {count} sein",greaterThanOrEqualTo:"muss größer oder gleich {count} sein",inclusion:"ist nicht in der Liste enthalten",invalid:"ist ungültig",invalidNumber:"keine gültige Nummer",lessThan:"muss weniger als {count} sein",lessThanOrEqualTo:"muss weniger oder gleich {count} sein",notANumber:"ist keine Nummer",notAnInteger:"muss eine Zahl sein",odd:"muss ungerade sein",otherThan:"muss anders als {count} sein",present:"muss leer sein",result:"Bitte geben Sie ein Ergebnis ein",tooLong:"ist zu lang (Maximum ist {count} Zeichen)",tooShort:"ist zu kurz (Minimum ist {count} Zeichen)",wrongLength:"hat eine falsche Länge (Länge muss {count} Zeichen sein)"},headings:{chargedItems:"Berechnete Elemente"},imaging:{alerts:{completedMessage:"Die Anfrage zur Bildgebung wurde abgeschlossen.",completedTitle:"Bildgebungs-Anfrage gestellt",savedMessage:"Die Anfrage zur Bildgebung wurde gespeichert.",savedTitle:"Bildgebungs-Anfrage gespeichert"},buttons:{newButton:"+ Neue Bildgebung"},labels:{addNewVisit:"--Neue Visite hinzufügen--",radiologist:"Radiologe"},messages:{noCompleted:"Keine erledigten Einträge gefunden."},pageTitle:"Anfrage zur Bildgebung",sectionTitle:"Bildgebung",titles:{completedImaging:"Erledigte Bildgebung",editTitle:"Bildgebungs-Anfrage bearbeiten",newTitle:"Neue Bildgebungs-Anfrage"}},incident:{buttons:{add:"Hinzufügen",addForm:"+ Formular hinzufügen",addItem:"Element hinzufügen",cancel:"Abbrechen",delete:"Löschen",download:"Herunterladen",edit:"Bearbeiten",export:"Exportieren",generateRep:"Bericht erzeugen",newAttachment:"+ neuer Anhang",newCategory:"+ neue Kategorie",newIncident:"+ neuer Vorfall",newNote:"+ neue Notiz"},labels:{actions:"Aktionen",addedBy:"Hinzugefügt von",category:"Kategorie",categoryItem:"Kategorie",date:"Datum",dateRecorded:"Aufzeichnungsdatum",department:"Abteilung",description:"Beschreibung",endDate:"Endzeit",givenBy:"Gegeben durch",howToAddAttachment:"Wie wollen Sie ein Anhang hinzufügen?",incidentDate:"Datum des Vorfalls",incidentId:"Vorfalls-ID",item:"Element",lastUpdated:"Zuletzt aktualisiert",note:"Notiz",patientId:"Patienten-ID",patientImpacted:"Patient betroffen",reportType:"Berichtsart",reportedBy:"Berichtet von",reportedDate:"Gemeldetes Datum",reportedTo:"Vorfall gemeldet an (vollständiger Name)",sentinelEvent:"Sentinel-Ereignis",startDate:"Startdatum",status:"Status",statusActive:"Aktiv",statusClosed:"Geschlossen",statusFollowup:"Folgebesuch",statusReported:"Gemeldet",title:"Titel",total:"Gesamt",updatedBy:"Geändert durch"},messages:{attachmentFileRequired:"Bitte laden Sie eine Datei hoch oder nehmen Sie ein Foto auf bevor Sie den Anhang speichern.",createNew:"Neuen Vorfall anlegen?",createNewIncidentCategory:"Neue Vorfallkategorie anlegen?",fillIn:"Füllen Sie die obigen Optionen aus, um das Ergebnis zu berechnen.",incidentCategorySaved:"Die Kategorie {name} wurde gespeichert.",noClosedIncidents:"Keine geschlossenen Vorfälle gefunden.",noIncidentCategoriesFound:"Keine Vorfallkategorien gefunden.",noIncidents:"Keine Vorfälle gefunden.",saved:"Der Vorfallsbericht wurde gespeichert.",selectExistingPatient:"Bitte wählen Sie einen existierenden Patienten aus oder lassen Sie das Feld leer."},titles:{addAttachment:"Anhang hinzufügen",addCategoryItem:"Kategorie hinzufügen",addNote:"Notiz hinzufügen",attachments:"Anhänge",closed:"Geschlossene Vorfälle",current:"Aktuell",deleteAttachment:"Anhang löschen",deleteIncident:"Vorfall löschen",deleteIncidentCategory:"Vorfallkategorie löschen",deleteItem:"Eintrag löschen",deleteNote:"Notiz löschen",editAttachment:"Anhang bearbeiten",editIncident:"Vorfall bearbeiten",editIncidentCategory:"Vorfallkategorie bearbeiten",editNote:"Notiz bearbeiten",general:"Allgemeine Informationen",history:"Verlauf",incidentCategories:"Vorfallkategorien",incidentCategoryItem:"Vorfallkategorie",incidentCategoryName:"Vorfallkategoriename",incidentCategorySaved:"Vorfallkategorie gespeichert",incidentSaved:"Vorfall gespeichert",incidents:"Vorfälle",incidentsByCategory:"Vorfälle nach Kategorie",incidentsByDepartment:"Vorfälle nach Abteilung",newIncident:"Neuer Vorfall",newIncidentCategory:"Neue Vorfallskategorie",notes:"Notizen",reports:"Bericht"}},inventory:{edit:{cost:"Kosten pro Einheit:",delivered:"Geliefert An:",location:"Ort angepasst:",prescription:"Rezept für:",pulled:"Gezogen aus:",quantity:"Menge bei Fertigstellung:",reason:"Grund:",returned:"Rückgabe durch Patient:",transferredFrom:"Übertragen von:",transferredTo:"Übertragen nach:"},labels:{action:"Aktion",add:"Hinzufügen",addAdjustmentType:"Hinzufügen",adjust:"Anpassen",adjustmentDate:"Anpassungsdatum",adjustmentFor:"Anpassung für",adjustmentType:"Anpassungsart",aisle:"Gang",aisleLocation:"Gang Ort",allInventory:"Gesamtes Inventar",allItems:"Gesamte Artikel",availableQuantity:"{quantity} verfügbar",billTo:"Rechnung an",consumePurchases:"Verbrauchseinkauf",consumptionRate:"Verbrauchsrate",cost:"Kosten",costPerUnit:"Kosten pro Einheit",crossReference:"Querverweis",currentQuantity:"Aktuelle Menge",dateCompleted:"Fertigstellungsdatum",dateEffective:"Gültigkeitsdatum",dateEnd:"Enddatum",dateReceived:"Empfangsdatum",dateStart:"Startdatum",dateTransferred:"Übertragungsdatum",daysLeft:"Verbleibende Tage",deleteItem:"Gelöschte Elemente",deliveryAisle:"Lieferungsgang",deliveryLocation:"Lieferort",details:"Details",distributionUnit:"Verteiler",editItem:"Element bearbeiten",expense:"Spesen an",expirationDate:"Verfallsdatum",fulfillRequest:"Anfragen",fulfillRequestNow:"Jetzt Anfragen",gift:"Art des Geschenks",giftInKindNo:"N",giftInKindYes:"J",giftUsage:"Geschenk in Verwendung",inventoryConsumed:"Inventar verbraucht",inventoryItem:"Inventarelement",inventoryObsolence:"Inventarveralterung",invoiceItems:"Rechnungsposten",invoiceLineItem:"Einzelpostenrechnung",invoiceNumber:"Rechnungsnummer",item:"Element",itemNumber:"Elementnummer",items:"Elemente",location:"Ort",locations:"Orte",markAsConsumed:"Als verbraucht kennzeichnen",name:"Name",newItem:"Neues Element",originalQuantity:"Originalmenge",print:"Drucken",printBarcode:"Barcode drucken",printer:"Drucker",pullFrom:"Gezogen von",purchaseCost:"Kaufkosten",purchaseInfo:"Informationen zum Kauf",purchases:"Käufe",quantity:"Anzahl ({unit})",quantityAvailable:"Verfügbare Menge",quantityOnHand:"Vorliegende Menge",quantityRequested:"Angeforderte Menge",rank:"Rang",reason:"Grund",remove:"Entfernen",removeAdjustmentType:"Entfernen",reorderPoint:"Meldebestand",requestedItems:"Angeforderte Artikel",returnAdjustmentType:"Rückgabe",returnToVendorAdjustmentType:"Rückgabe an den Verkäufer",salePricePerUnit:"Verkauf Preis pro Einheit",save:"Speichern",serialNumber:"Ordnungs-/Chargennummer",total:"Gesamt",totalCost:"Gesamtkosten",totalReceived:"Insgesamt erhalten: {total}",transaction:"Transaktion",transactions:"Transaktionen",transfer:"Übertragung",transferFrom:"Übertragen von",transferTo:"An Übertragungsort",transferToAisle:"Übertragen an Gang Ort",unit:"Einheit",unitCost:"Kosten pro Einheit",vendor:"Lieferant",vendorItemNumber:"Lieferantennummer",writeOffAdjustmentType:"Abschreiben",xref:"XRef"},messages:{adjust:"Bitte passen Sie die Mengen an den entsprechenden Standorten an, um den Unterschied von {difference} zu berücksichtigen.",createRequest:"Neue Anfrage erstellen?",itemNotFound:"Der Inventargegenstand <strong>{item}</strong> konnte nicht gefunden werden.<br>Falls Sie einen neuen Inventargegenstand anlegen wollen, füllen Sie die nachfolgenden Informationen aus.<br> Andernfalls drücken Sie den Abbrechen-Button.",loading:"Lade Transaktionen...",noItems:"Keine Elemente gefunden.",noRequests:"Keine Anfragen gefunden.",purchaseSaved:"Die Inventurkäufe wurden erfolgreich gespeichert.",quantity:"Die Gesamtanzahl <strong>({quantity})</strong> stimmt nicht mit der Gesamtanzahl der Standorte <strong>({locationQuantity})</strong> überein.",removeItem:"Sind Sie sicher, dass Sie diesen Artikel von der Rechnung löschen wollen?",removeItemRequest:"Sind Sie sicher, dass Sie diesen Artikel von der Anfrage löschen wollen?",requestFulfilled:"Die Inventaranforderung wurde erfüllt.",requestUpdated:"Die Inventaranforderung wurde aktualisiert.",warning:"Bitte füllen Sie alle Pflichtfelder (markiert mit einem *) aus und beheben Sie die Fehler vor dem Hinzufügen."},reports:{adjustment:"Detaillierte Anpassung",daysSupply:"Tage, die der Vorrat im Lager verbleibt",expenseDetail:"Detaillierte Spesen",expenseSum:"Zusammenfassung Spesen",expiration:"Haltbarkeitsdatum",export:"Bericht exportieren",fields:"Einzubeziehende Felder",finance:"Finanzübersicht",generate:"Bericht erzeugen",invLocation:"Inventar nach Standort",invValuation:"Inventur",purchaseDetail:"Kaufdetails",purchaseSum:"Kaufzusammenfassung",reportType:"Berichtsart",rows:{adjustments:"Anpassungen",adjustmentsTotal:"Gesamtanpassungen",balanceBegin:"Anfangsbestand",balanceEnd:"Endbestand",category:"Kategorie",consumed:"Verbrauch",consumedGik:"GiK-Verbrauch",consumedGikTotal:"Gesamtverbrauch GiK",consumedPuchases:"Anschaffungen Verbrauch",consumedPurchasesTotal:"Gesamtverbrauch Anschaffungen",consumedTotal:"Gesamtverbrauch",errInFinSum:"Fehler in _generateFinancialSummaryReport: ",errInFindPur:"Fehler in _findInventoryItemsByPurchase: ",errInFindReq:"Fehler in _findInventoryItemsByRequest: ",expensesFor:"Spese für: ",noAccount:"(Kein Account)",subtotal:"Zwischensumme: ",subtotalFor:"Zwischensumme für {category} - {account}: ",total:"Summe:",totalFor:"Summe für {var}: ",totalPurchases:"Gesamteinkauf",transfer1:"{quantity} von {location}",trasnfer2:"Von: {source} Nach: {target}"},stockTransferDetail:"Detaillierte Umlagerung",stockTransferSum:"Zusammenfassung Umlagerung",stockUsageDetail:"Detaillierte Bestandsverwendung",stockUsageSum:"Zusammenfassung Bestandsverwendung",titleDateRange:"{name} Bericht {startDate} - {endDate}",titleSingleDate:"{name} Bericht {date}"},titles:{addPurchase:"Kauf hinzufügen",addRequest:"Anfrage hinzufügen",adjustment:"Anpassung",editPurchase:"Kauf bearbeiten",editRequest:"Anfrage bearbeiten",inventoryItem:"Neuer Inventargegenstand",inventoryReport:"Inventarbericht",purchaseSaved:"Inventurkäufe gespeichert",quickAddTitle:"Neuer Inventargegenstand",removeItem:"Gegenstand löschen",requestFulfilled:"Anfrage erfüllt",requestUpdated:"Anfrage akualisiert",transfer:"Gegenstand übertragen",warning:"Warnung!!!!!"}},labels:{action:"Aktion",actions:"Aktionen",addNewOutpatientVisit:"--Neuen ambulanten Besuch hinzufügen--",address:"Adresse",age:"Alter",allDay:"Ganzer Tag",allItems:"Alle Elemente",amount:"Anzahl",anesthesia:"Anästhesie",assisting:"Unterstützung",balanceDue:"Saldo fällig",billDate:"Rechnungsdatum",billTo:"Rechnungsanschrift",category:"Kategorie",completed:"Erledigt",country:"Land",cptcode:"CPT Code",creditTo:"Gutschrift an",currencySymbol:"€",date:"Datum",dateCompleted:"Abschlussdatum",dateOfBirth:"Geburtsdatum",dateOfBirthShort:"Geb.",datePaid:"Zahlungsdatum",dateRequested:"Anfragedatum",delete:"Entfernen",deleteRequest:"Löschanfrage",deleteUser:"Benutzer löschen",department:"Abteilung",description:"Beschreibung",discount:"Rabatt",displayName:"Angezeigter Name",docRead:"Dokument gelesen",docWritten:"Dokument geschrieben",edit:"Bearbeiten",editUser:"Benutzer bearbeiten",email:"E-Mail",endDate:"Enddatum",endTime:"Endzeit",excess:"Übertrag",expenseTo:"Spesen an",fileLoadSuccessful:"Datei erfolgreich geladen",fileName:"Dateiname",fileToLoad:"Datei laden",from:"Von",fulfill:"Ausführen",fulfillRequest:"Anfragen",fulfillRequestNow:"Jetzt Anfragen",fulfilled:"Erfüllt",grandTotal:"Gesamtsumme",id:"ID",imageOrders:"Bildaufträge",imagingType:"Bildgebungsart",importFile:"Datei importieren",invoiceId:"Rechnungs-ID",labOrders:"Laboraufträge",lineItems:"Einzelposten",loading:"Lade",location:"Ort",lookupType:"Nachschlagebereich",medication:"Medikation",name:"Name",newItem:"+ neues Element",newUser:"Neuer Benutzer",note:"Notiz",notes:"Notizen",number:"Nummer",on:"an",password:"Passwort",patient:"Patient",payments:"Zahlungen",physician:"Arzt",prescriber:"Verschreiber",prescription:"Rezept",prescriptionDate:"Verschreibungsdatum",price:"Preis",print:"Druck",procedures:"Behandlungen",provider:"Anbieter",pullFrom:"Gezogen von",quantity:"Anzahl",remarks:"Bemerkungen",requestedBy:"Angefragt von",requestedOn:"Angefragt am",requests:"Anfragen",result:"Ergebnis",results:"Ergebnisse",role:"Rolle",search:"Suche",sex:"Geschlecht",startDate:"Startdatum",startTime:"Startzeit",status:"Status",takenBy:"Genommen von",to:"An",total:"Gesamt",type:"Typ",userCanAddNewValue:"Benutzer kann neue Werte hinzufügen",username:"Nuzername",value:"Wert",view:"Ansicht",visit:"Visite",with:"Mit"},labs:{alerts:{requestCompletedMessage:"Der Laborbericht ist fertig.",requestCompletedTitle:"Laborbericht fertig",requestSavedMessage:"Der Laborbericht wurde gespeichert.",requestSavedTitle:"Laborbericht gespeichert"},buttons:{newButton:"+ neues Labor"},completedTitle:"Abgeschlossene Labore",deleteTitle:"Anfrage löschen",editTitle:"Laboranfrage bearbeiten",labels:{addNewVisit:"--Neue Visite hinzufügen--",labType:"Labortyp"},messages:{createNewRecord:"Neuen Datensatz erstellen?",noCompleted:"Keine abgeschlossenen Einträge gefunden.",noItemsFound:"Keine Labore gefunden."},newTitle:"Neuer Laborbericht",requestsTitle:"Laborbericht",sectionTitle:"Labore"},languageName:"Deutsch",loading:{messages:{0:"Die höchste Schmetterlingsfluggeschwindigkeit beträgt 12 Meilen pro Stunde. Einige Motten können 25 Meilen pro Stunde fliegen!",1:"Eulen sind die einzigen Vögel, die die Farbe blau sehen können.",10:"Ihre Zunge ist der einzige Muskel in Ihrem Körper, der nur an einem Ende befestigt ist.",11:"Kamele haben drei Augenlider, um sich vor wehendem Sand zu schützen.",2:"Katzen haben über 100 Vokalklänge; Hunde haben nur 10.",3:"Menschen verwenden insgesamt 72 verschiedene Muskeln beim Sprechen.",4:"Über 1.000 verschiedene Sprachen werden auf dem afrikanischen Kontinent gesprochen.",5:"Ein Erythrophob ist jemand, der leicht errötet.",6:"Die häufigste Phobie der Welt ist Odynophobie, die die Angst vor Schmerzen ist.",7:"Ihr Körper verwendet 300 Muskeln, um sich zu balancieren, wenn Sie still stehen.",8:"Bestimmte Frösche können festgefroren werden, dann aufgetaut werden und weiter leben.",9:"Unsere Augen sind von Geburt an immer gleich groß, aber unsere Nase und Ohren hören nie auf zu wachsen."},progressBar:{progress:"{progressBarValue}% vollständig"}},login:{labels:{password:"Passwort",signIn:"Anmelden",username:"Benutzername"},messages:{error:"Benutzername oder Passwort falsch.",offlineError:"Einloggen ist offline nicht möglich. Bitte stellen Sie eine Netzwerkverbindung her und versuchen Sie es erneut.",signIn:"Bitte anmelden"}},medication:{alerts:{fulfilledTitle:"Medikamentenanforderung erfüllt",returnedMessage:"Das Medikament wurde als zurückgegeben gekennzeichnet.",returnedTitle:"Medikament zurückgegeben",savedMessage:"Der Medikationsdatensatz wurde gespeichert.",savedTitle:"Medikationsdatensatz gespeichert"},buttons:{dispenseMedication:"Medikamente abgeben",newButton:"+ neue Anfrage",returnMedication:"Medikament zurückgeben"},labels:{adjustmentDate:"Anpassungstag",creditToAccount:"Guthabenkonto",quantityDispensed:"Ausgabemenge",quantityDistributed:"Verteilungsmente",quantityRequested:"Anfragemenge",quantityToReturn:"Rückgabemenge",refills:"Nachfüllungen",returnAisle:"Rückgabelänge",returnLocation:"Rückgabeort",returnReason:"Rückgabegrund"},messages:{createNew:"Neue Medikamentenanforderung stellen?"},pageTitle:"Medikamentenanforderungen",returnMedication:"Rückgabe von Medikamenten",sectionTitle:"Medikamente",titles:{completedMedication:"Abgeschlossene Medikamente",editMedicationRequest:"Medikamentenanforderung bearbeiten",newMedicationRequest:"Neue Medikamentenanforderung"}},messages:{createNewRecord:"Neuen Eintrag erstellen?",createNewUser:"Neuen Benutzer hinzufügen?",delete:"Sind Sie sicher, dass Sie {name} löschen möchten?",delete_plural:"Sind Sie sicher, dass Sie {name} löschen möchten?",delete_singular:"Sind Sie sicher, dass Sie {name} löschen möchten?",forAuthorizedPersons:"Dieser Bericht ist nur für autorisierte Personen.",newPatientHasToBeCreated:"Ein neuer Patient muss erstellt werden... Bitte warten..",noHistoryAvailable:"Kein Verlauf verfügbar.",noItemsFound:"Keine Einträge gefunden.",noNotesAvailable:"Für diesen Besuch sind keine zusätzlichen klinischen Notizen verfügbar.",noUsersFound:"Keine Benutzer gefunden.",onBehalfOf:"im Auftrag von",reportError:"Beim Erzeugen des angeforderten Berichts ist ein Fehler aufgetreten. Bitte lassen Sie Ihren Systemadministrator wissen, dass ein Fehler aufgetreten ist.",requiredFieldsCorrectErrors:"Bitte füllen Sie alle Pflichtfelder (markiert mit einem *) aus und beheben Sie die Fehler vor dem Hinzufügen.",saveActionException:"Ein Fehler ist während des Speicherns aufgetreten: {message}",sorry:"Entschuldigung, etwas ist schiefgegangen...",userHasBeenSaved:"Der Benutzer wurde gespeichert.",userSaved:"Benutzer gespeichert"},models:{appointment:{labels:{allDay:"Ganztägig",appointmentDate:"Tag",appointmentType:"Typ",endDate:"Enddatum",location:"Ort",notes:"Notizen",patient:"Patient",provider:"Mit",startDate:"Startdatum",status:"Status",type:"Typ"},names:{plural:"Termine",singular:"Termin"}},attachment:{names:{plural:"Anhänge",singular:"Anhang"}},form:{names:{plural:"Formulare",singular:"Formular"}},imaging:{names:"Bildgebung",request:{plural:"Bildgebungs-Aufträge",singular:"Bildgebungs-Auftrag"}},incident:{names:{plural:"Vorfälle",singular:"Vorfall"}},item:{names:{plural:"Elemente",singular:"Element"}},lab:{names:{plural:"Labore",singular:"Labor"},request:{plural:"Laboranfragen",singular:"Laboranfrage"}},medication:{names:{plural:"Medikamente",singular:"Medikament"},request:{plural:"Medikationsanfragen",singular:"Medikationsanfrage"}},note:{names:{plural:"Notizen",singular:"Notiz"}},patient:{labels:{name:"Name"},names:{singular:"Patient"}},procedure:{names:{plural:"Behandlungen",singular:"Behandlung"}},user:{names:{plural:"Nutzer",singular:"Nutzer"}},visit:{names:{plural:"Visiten",singular:"Visite"}},vital:{names:{plural:"Vitalwerte",singular:"Vitalwert"}}},navigation:{about:"Über HospitalRun",actions:{login:"Anmelden",logout:"Abmelden",selectLanguage:"Sprache auswählen"},administration:"Administration",billing:"Abrechnung",imaging:"Bildgebung",incident:"Vorfall",inventory:"Inventar",labs:"Labore",medication:"Medikation",messages:{logoutFailed:"Sie konnten nicht ausgeloggt werden. Ausloggen ist offline nicht möglich."},patients:"Patienten",scheduling:"Planung",subnav:{actions:"Aktionen",addAppointment:"Termin eintragen",addressFields:"Adressfelder",admittedPatients:"Zugelassene Patienten",appointmentSearch:"Terminsuche",appointmentsCalendar:"Terminkalender",appointmentsThisWeek:"Termine diese Woche",cashier:"Kassierer",completed:"Erledigt",currentIncidents:"Aktuelle Vorfälle",customForms:"Benutzerdefinierte Formulare",dispense:"Verabreichen",history:"Historie",incidentCategories:"Vorfallkategorien",inventoryReceived:"Eingeganges Inventar",inventoryReceivedPlus:"+ Eingeganges Inventar",invoices:"Rechnungen",items:"Einheiten",loadDB:"Datenbank laden",lookupLists:"Nachschlagelisten",newIncident:"Neuer Vorfall",newInvoice:"Neue Rechnung",newPatient:"Neuer Patient",newRequest:"Neue Anfrage",newUser:"Neuer Benutzer",outpatient:"Ambulant",patientListing:"Patientenliste",priceProfiles:"Preisprofile",prices:"Kosten",printHeader:"Kopfzeile drucken",reports:"Berichte",requests:"Anfragen",returnMedication:"Medikamente zurückgeben",scheduleSurgery:"Zeitplan Chirurgie",textReplacements:"Kürtel",theaterSchedule:"Operationssaal Zeitplan","today'sAppointments":"Heutige Termine",userRoles:"Nutzerrollen",users:"Benutzer",workflow:"Workflow"},titles:{logoutFailed:"Ausloggen gescheitert"}},operationReport:{labels:{additionalNotes:"Zusätzliche Notiz",assistant:"Assistent",caseComplexity:"Komplexität des Falls",operationDescription:"Operationsbeschreibung",preOpPrimaryDiagnosis:"Pre-OP Primärdiagnose",preOpSecondaryDiagnosis:"Pre-OP Sekundärdiagnose",surgeon:"Chirurg",surgeryDate:"Chirurgie Datum"},messages:{reportSaved:"Der Operationsbericht wurde gespeichert."},titles:{editTitle:"Operationsbericht bearbeiten",newTitle:"Neuer Operationsbericht",reportSaved:"Bericht gespeichert"}},operativePlan:{buttons:{completePlan:"Gesamtplan"},labels:{additionalNotes:"Zusätzliche Notizen",admissionInstructions:"Anweisungen bei der Zulassung",caseComplexity:"Komplexität des Falls",completedStatus:"Vollständig",droppedStatus:"Verworfen",operationDescription:"Operationsbeschreibung",plannedStatus:"Geplant",status:"Status",surgeon:"Chirurg"},messages:{planCompleted:"Der operative Plan ist abgeschlossen. Sie werden nun zum Operationsbericht weitergeleitet.",planSaved:"Der operative Plan wurde gespeichert."},titles:{editTitle:"Operativen Plan bearbeiten",newTitle:"Neuer operativer Plan",planCompleted:"Plan abgeschlossen",planSaved:"Plan gespeichert"}},patients:{buttons:{addContact:"Kontakt hinzufügen",addExpense:"Spesen hinzufügen",addFamilyMember:"Familienmitglied hinzufügen",addOperativePlan:"Operativen Plan hinzufügen",backToPatients:"Zurück zur Patientenliste",download:"Herunterladen",editOperativePlan:"Derzeitiger operativer Plan",newAppointment:"Neuer Termin",newImaging:"Neue Bildgebung",newLab:"Neues Labor",newMedication:"Neues Medikament",newPatient:"Neuer Patient",newPhoto:"Neues Foto",newVisit:"Neue Visite",patientCheckIn:"Patientenüberprüfung",scheduleSurgery:"Zeitplan Chirurgie"},labels:{admissionDate:"Aufnahmedatum",admit:"Zulassen",bloodType:"Blutgruppe",caption:"Beschriftung",civilStatus:"Zivilstand",clinic:"Klinik",contacts:"Kontakte",cost:"Kosten",dateOfBirth:"Geburtsdatum",dateProcessed:"Verarbeitungsdatum",dischargeDate:"Entlassungsdatum",dob:"DOB",education:"Bildung",email:"E-Mail",externalPatientId:"Externe Patienten-ID",firstName:"Vorname",income:"Einkommen",insurance:"Versicherung",lastName:"Nachname",middleName:"zweiter Vorname",monthlyCost:"Monatliche Kosten",occupation:"Beruf",operativePlan:"Operativer Plan",parent:"Erziehungsberechtigter",patientDays:"Patiententage",patientType:"Patiententyp",patientTypeCharity:"Karitas",patientTypePrivate:"Privat",phone:"Telefon",placeOfBirth:"Geburtsort",primaryDiagnosis:"Primärdiagnose",referredBy:"Überweisung von",referredDate:"Überweisungsdatum",relationship:"Beziehung zum Patienten",relationships:"Beziehungen",religion:"Religion",secondaryDiagnosis:"Sekundärdiagnose",sex:"Geschlecht",sexNotEntered:"Geschlecht nicht Eingetragen",sources:"Quellen",status:"Patientenstatus",totalMontlyExpense:"Monatliche Gesamtausgaben"},messages:{areYouSureDelete:"Sind Sie sicher, dass Sie {object} löschen möchten?",createNewPatient:"Neue Patientenakte anlegen?",deletingPatient:"Patient und alle zusammenhängenden Datensätze löschen",noPatientsFound:"Kein Patient gefunden.",notFoundQuickAdd:"Der Patient <strong>{patientFullName}</strong> konnte nicht gefunden werden. Wenn Sie einen neuen Patienten anlegen möchten, füllen Sie die nachfolgenden Felder aus. Andernfalls drücken Sie den Abbrechen-Button um zurück zu kehren.",photoFileRequired:"Bitte nehmen Sie ein Bild auf oder laden Sie eine Datei hoch bevor Sie das Foto speichern.",savedPatient:"Die Patientenakte für {displayName} wurde gespeichert."},navigation:{appointments:"Termine",general:"Allgemein",history:"Historie",imaging:"Bildgebung",labs:"Labore",medication:"Medikament",photos:"Fotos",socialWork:"Sozialarbeit",visits:"Visiten"},notes:{newNote:"Neue Notiz für",onBehalfOfCopy:"im Auftrag von",onBehalfOfLabel:"Im Auftrag von",pleaseSelectAVisit:"Bitte eine Visite auswählen",updateNote:"Notiz aktualisieren von"},titles:{addContact:"Kontakt hinzufügen",addPhoto:"Foto hinzufügen",additionalContacts:"Zusätzliche Kontakte",admissionsDetail:"Zuslassungsdetails",admissionsSummary:"Zulassungszusammenfassung",admittedPatients:"Zugelassene Patienten",delete:"Patient löschen",deleteContact:"Kontakt löschen",deleteExpense:"Spese löschen",deleteFamilyMember:"Familienmitglied löschen",deletePatientRecord:"Patientenakte löschen",deletePhoto:"Foto löschen",diagnosticTesting:"Diagnostische Tests",dischargesDetail:"Entlassungsdetails",dischargesSummary:"Entlassungszusammenfassung",edit:"Patient bearbeiten",editPhoto:"Foto bearbeiten",expenses:"Spesen",familyInfo:"Familieninfo",familyInformation:"Familien Information",new:"Neuer Patient",outpatientsForDate:"Ambulante Patienten zum {visitDate}",patient:"Patientenbericht",patientListing:"Patientenauflistung",patientReport:"Patientenbericht",patientStatus:"Patientenstatus",proceduresDetail:"Behandlungsdetails",proceduresSummary:"Behandlungszusammenfassung",savedPatient:"Patient gespeichert",socialWork:"Kosten",todaysOutpatients:"Heutige ambulante Patienten",totalPatientDays:"Gesamtzahl der Patiententage",totalPatientDaysDetailed:"Gesamtzahl der Patiententage (detailliert)",visit:"Visite"}},pricing:{labels:{discountAmount:"Rabattbetrag",discountPercentage:"Rabattprozentsatz",setFee:"Festgelegte Gebühren"},navigation:{}},print:{invoice:{labels:{billedBy:"Abgerechnet von:",billedDate:"Rechnungsdatum:",dateAdmitted:"ZUGELASSEN:",dateDischarged:"ENTLASSEN:",dischargeNotes:"Entlassungsnotizen:",patientAddress:"ADRESSE:",patientAge:"ALTER:",patientId:"PATIENTEN NUMMER:",patientName:"NAME DES PATIENTEN:",remarks:"Bemerkungen",spacer:"__________________________________________"},messages:{whereConducted:"wurden während meines Einschlusses abgezogen"},titles:{billingStatement:"Abrechnung",patientMember:"Patientenmitglied",patients:"Patienten",relContact:"Verwandten/Kontakt Nr."}}},procedures:{buttons:{addMedication:"Medikament hinzufügen"},labels:{medicationUsed:"Verwendete Medikamente"},messages:{saved:"Die Behandlungsakte wurde gespeichert."},titles:{addChargeItem:"Gebühr hinzufügen",addMedicationUsed:"Verwendete Medikamente hinzufügen",deleteChargeItem:"Gebühr entfernen",deleteMedicationUsed:"Verwendete Medikamente entfernen",edit:"Behandlung bearbeiten",editChargeItem:"Gebühr bearbeiten",editMedicationUsed:"Verwendetes Medikamente bearbeiten",medicationUsed:"Verwendete Medikamente",new:"Neue Behandlung",saved:"Behandlung gespeichert"}},reports:{labels:{admissionDate:"Aufnahmedatum",allProcedures:"Alle durchgeführten Behandlungen",completedBy:"Abgeschlossen von",dischargeDate:"Entlassungsdatum",examiner:"Prüfer",images:"Bilder",labs:"Labore",location:"Besuchsort",medications:"Medikamente",nextAppointment:"Nächster Termin",nextAppointments:"Nächste Termine",notes:{author:"Verfasser",date:"Datum",title:"Notizen"},operativePlan:{description:"Operationsbeschreibung",instructions:"Anweisungen bei der Zulassung",procedures:"Geplante Behandungen",title:"Operativer Plan"},primaryDiagnosis:"Primärdiagnose",procedures:"Behandlung",secondaryDiagnosis:"Sekundärdiagnose",visitDate:"Datum der Visite",visitType:"Visitenarten"},messages:{delete:"Sind Sie sicher, dass Sie diesen Bericht löschen möchten?",saved:"Der Bericht wurde gespeichert."},titles:{dischargeReport:"Entlassungsbericht",newDischargeReport:"Neuer Entlassungsbericht",newOPDReport:"Neuer OPD-Bericht",opdReport:"OPD-Bericht",saved:"Bericht gespeichert"}},user:{plusNewUser:"+ Neuer Benutzer",usersPageTile:"Benutzerliste"},visits:{buttons:{addDiagnosis:"Diagnose hinzufügen",checkIn:"Check-In",checkOut:"Check-Out",discharge:"Entlassung",newAppointment:"Neuer Termin",newDischargeReport:"Neuer Entlassungsbericht",newOPDReport:"Neuer OPD-Bericht",newProcedure:"Neue Behandlung",newVitals:"Neuer Vitalwert"},labels:{appointment:"Termin",authoredBy:"Geschrieben von",checkInTime:"Check-In",checkOutTime:"Check-Out",createNewPatient:"Neuen Patienten anlegen",diagnosis:"Diagnose",examiner:"Prüfer",finalDiagnosis:"Schluss- / Abrechnungsdiagnose",haveAppointment:"J",haveDoneOrders:"J",noAppointment:"N",ordersDone:"Bestellungen erledigt",ordersNotDone:"N",patientToCheckIn:"Patient zum Einchecken",procedure:"Behandlung",procedureDate:"Behandlungsdatum",reasonForVisit:"Grund für die Visite",reportType:"Berichtsart",status:"Status der Visite",statusAdmitted:"Zugelassen",statusCheckedIn:"Check-In",statusCheckedOut:"Check-Out",statusDischarged:"Entlassen",visitDate:"Datum der Visite",visitInformation:"Informationen zur Visite",visitType:"Visitenarten"},messages:{checkOut:"Sind Sie sicher, dass Sie {patientName} austragen wollen?",checkedOut:"{patientName} wurde ausgetragen.",discharged:"{patientName} wurde entlassen.",patientCheckedIn:"{patientName} wurde eingetragen.",patientCreatedAndCheckedIn:"{patientName} wurde erstellt und eingetragen.",visitAndPatientSaved:"Die Visite und Patientenakte wurden gespeichert.",visitSaved:"Der Visitendatensatz wurde gespeichert."},navigation:{charges:"Gebühren",notes:"Notizen",orders:"Aufträge",procedures:"Behandlungen",reports:"Berichte",vitals:"Vitalwerte"},titles:{additionalDiagnoses:"Zusätzliche Diagnose",checkOut:"Patient austragen",checkedIn:"Patient eingetragen",checkedOut:"Patient ausgetragen",discharged:"Patient entlassen",editVisit:"Visite bearbeiten",newVisit:"Neue Visite",patientCheckIn:"Patient eintragen",visitSaved:"Visite gespeichert"}},vitals:{labels:{dateRecorded:"Aufnahmedatum",dbp:"Diastolischer Blutdruck",heartRate:"Puls",height:"Größe",respiratoryRate:"Atemfrequenz",sbp:"Systolischer Blutdruck",temperature:"Temperatur",weight:"Gewicht"}}}}),define("hospitalrun/translations/en",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Address 1 Label",address2Label:"Address 2 Label",address3Label:"Address 3 Label",address4Label:"Address 4 Label",addressLabel:"Address",editTitle:"Address Options",include1Label:"Include 1 Label",include2Label:"Include 2 Label",include3Label:"Include 3 Label",include4Label:"Include 4 Label",messages:{addressSaved:"The address options have been saved"},newTitle:"Address Options",titles:{optionsSaved:"Options Saved"}},addressOptions:"Address Options",customForms:{buttons:{addField:"Add Field",moveDown:"Move Down",moveUp:"Move Up",newForm:"+ new form",preview:"Preview"},labels:{alwaysInclude:"Always Include",checkbox:"Checkbox",colSpan:"Number of Columns To Span",columns:"Columns",customForm:"Custom Form",dischargeReportFormType:"Discharge Report",expenseTo:"Expense To",formName:"Form Name",formType:"Form Type",header:"Header",incidentFormType:"Incident",includeOtherOption:"Include Other Option",labFormType:"Lab",label:"Label",newForm:"New Form",opdReportFormType:"Outpatient Report",operativePlanFormType:"Operative Plan and Report",otherOptionLabel:"Other Option Label",patientFormType:"Patient",property:"Property",radio:"Radio",select:"Dropdown",socialworkFormType:"Social Work",text:"Text",textarea:"Large Text",visitFormType:"Visit"},messages:{formSaved:"The {name} form has been saved."},titles:{checkboxValues:"Checkbox Values",customForms:"Custom Forms",deleteForm:"Delete Custom Form",dropDownValues:"Dropdown Values",editCustomForm:"Edit Custom Form",fields:"Fields",formSaved:"Form Saved",headerValues:"Header Line Value",newCustomForm:"New Custom Form",radioValues:"Radio Values"}},header:{editTitle:"Header Options",facilityName:"Facility Name",headerLabel:"Header",headerLine1:"Header Line 1",headerLine2:"Header Line 2",headerLine3:"Header Line 3",logoURL:"Logo URL",messages:{headerSaved:"The header options have been saved"},newTitle:"Header Options",titles:{optionsSaved:"Options Saved"}},loadDb:"Load DB",loaddb:{displayAlertMessage:"Please select file to load.",displayAlertTitle:"Select File To Load",editTitle:"Load DB",errorDisplayAlertMessage:"The database could not be imported. The error was: {error}",errorDisplayAlertTitle:"Error Loading",progressMessage:"Please wait while your database is loaded.",progressTitle:"Loading Database"},lookup:{aisleLocationList:"Inventory Aisle Locations",alertImportListMessage:"Please select file to import.",alertImportListSaveMessage:"The lookup list has been imported.",alertImportListSaveTitle:"List Imported",alertImportListTitle:"Select File To Import",alertImportListUpdateMessage:"The lookup list has been saved.",alertImportListUpdateTitle:"List Saved",anesthesiaTypes:"Anesthesia Types",anesthesiologists:"Anesthesiologists",billingCategories:"Billing Categories",clinicList:"Clinic Locations",countryList:"Countries",cptCodeList:"CPT Codes",diagnosisList:"Diagnoses",edit:{template:{addTitle:"Add Value",editTitle:"Edit Value",labelTitle:"Value",updateButtonTextAdd:"Add",updateButtonTextUpdate:"Update"}},expenseAccountList:"Expense Accounts",imagingPricingTypes:"Imaging Pricing Types",incidentDepartments:"Incident Departments",inventoryTypes:"Inventory Types",labPricingTypes:"Lab Pricing Types",pageTitle:"Lookup Lists",patientStatusList:"Patient Status List",physicianList:"Physicians",procedureList:"Procedures",procedureLocations:"Procedures Locations",procedurePricingTypes:"Procedure Pricing Types",radiologists:"Radiologists",titles:{deleteLookupValue:"Delete Value"},unitTypes:"Unit Types",vendorList:"Vendor",visitLocationList:"Visit Locations",visitTypes:"Visit Types",wardPricingTypes:"Ward Pricing Types",warehouseList:"Inventory Locations"},lookupLists:"Lookup Lists",roles:{capability:{addAllergy:"Add Allergy",addAppointment:"Add Appointment",addBillingDiagnosis:"Add Billing Diagnosis",addCharge:"Add Charge",addDiagnosis:"Add Diagnosis",addImaging:"Add Imaging",addIncident:"Add Incident",addIncidentCategory:"Add Incident Category",addInventoryItem:"Add Inventory Item",addInventoryPurchase:"Add Inventory Purchase",addInventoryRequest:"Add Inventory Request",addInvoice:"Add Invoice",addLab:"Add Lab",addMedication:"Add Medication",addNote:"Add Note",addOperationReport:"Add Operation Report",addOperativePlan:"Add Operative Plan",addPatient:"Add Patient",addPayment:"Add Payment",addPhoto:"Add Photo",addPricing:"Add Pricing",addPricingProfile:"Add Pricing Profile",addProcedure:"Add Procedure",addSocialwork:"Add Social Work",addVisit:"Add Visit",addVitals:"Add Vitals",adjustInventoryLocation:"Adjust Inventory Location",admin:"Administration",admitPatient:"Admit Patient",appointments:"Appointments",billing:"Billing",cashier:"Cashier",completeImaging:"Complete Imaging",completeLab:"Complete Lab",defineUserRoles:"Define User Roles",deleteAppointment:"Delete Appointment",deleteDiagnosis:"Delete Diagnosis",deleteImaging:"Delete Imaging",deleteIncident:"Delete Incident",deleteIncidentCategory:"Delete Incident Category",deleteInventoryItem:"Delete Inventory Item",deleteInvoice:"Delete Invoice",deleteLab:"Delete Lab",deleteMedication:"Delete Medication",deleteNote:"Delete Note",deletePatient:"Delete Patient",deletePhoto:"Delete Photo",deletePricing:"Delete Pricing",deletePricingProfile:"Delete Pricing Profile",deleteProcedure:"Delete Procedure",deleteSocialwork:"Delete Social Work",deleteVisit:"Delete Visit",deleteVitals:"Delete Vitals",dischargePatient:"Discharge Patient",editInvoice:"Edit Invoice",fulfillInventory:"Fulfill Inventory",fulfillMedication:"Fulfill Medication",generateIncidentReport:"Generate Incident Report",imaging:"Imaging",incident:"Incident",inventory:"Inventory",invoices:"Invoices",labs:"Labs",listPaidInvoices:"List Paid Invoices",loadDb:"Load Database",manageIncidents:"Manage Incidents",medication:"Medication",overrideInvoice:"Override Invoice",patientReports:"Patient Reports",patients:"Patients",pricing:"Pricing",updateConfig:"Update Configurations",visits:"Visits"},messages:{roleSaved:"The {roleName} role has been saved."},titles:{roleSaved:"Role Saved"}},textReplacements:{createNew:"Create a new shortcode",existingRepl:"Existing Shortcodes",noMatches:"No replacements match '{term}'",pageTitle:"Shortcodes",performExpand:"Press Enter to replace #{from} with '{to}'",possibleExpansions:"Possible replacements: {possible}",replDesc:"When entering text, these shortcuts allow you to replace a short sequence of characters with a longer phrase.",replaceWith:"Replace with",toReplace:"Text to replace"},userRoles:"User Roles",users:"Users",visitForms:{labels:{followup:"Followup",form:"Form",initial:"Initial",visitType:"Visit Type"},titles:{visitForms:"Visit Forms"}},workflow:{admissionDepositLabel:"Admission deposit required",clinicPrepaymentLabel:"Clinic prepayment required",editTitle:"Workflow Options",followupPrepaymentLabel:"Followup prepayment required",messages:{optionsSaved:"The workflow options have been saved"},newTitle:"Workflow Options",outpatientImagingLabel:"Outpatient Imaging prepayment required",outpatientLabLabel:"Outpatient Lab prepayment required",outpatientMedicationLabel:"Outpatient Medication prepayment required",titles:{optionsSaved:"Options Saved"},workflowLabel:"Workflow"}},alerts:{errorExclamation:"Error!!!!",pleaseWait:"Please Wait",reportError:"Error Generating Report",warningExclamation:"Warning!!!!"},allergies:{buttons:{addAllergy:"Add Allergy"},labels:{allergyName:"Name",patientAllergy:"Patient Allergies"},titles:{addAllergy:"Add Allergy",editAllergy:"Edit Allergy"}},application:{messages:{sessionExpired:"Your session has expired.  Please login to continue."},titles:{sessionExpired:"Session Expired"}},appointments:{buttons:{newButton:"+ new appointment",scheduleSurgery:"+ schedule surgery"},calendarTitle:"Appointments Calendar",currentScreenTitle:"Appointment List",editTitle:"Edit Appointment",labels:{noLocation:"No Location",selectedStartingDate:"Show Appointments"},messages:{appointmentSaved:"The appointment for {patient} has been saved.",endTimeLaterThanStart:"Please select an end time later than the start time."},missed:"Missed Appointments",newTitle:"New Appointment",searchTitle:"Search Appointments",sectionTitle:"Appointments",thisWeek:"Appointments This Week",titles:{appointmentSaved:"Appointment Saved",editSurgicalAppointment:"Edit Surgical Appointment",newSurgicalAppointment:"New Surgical Appointment",theaterSchedule:"Theater Schedule"},todayTitle:"Today's Appointments"},billing:{alerts:{noInvoiceFound:"No invoices found",noPricingItems:"No pricing items found.",noPricingProfiles:"No pricing profiles found."},buttons:{addDeposit:"+ add deposit",addOverride:"Add Override",createInvoice:"Create an invoice?",newInvoice:"+ new invoice"},currentScreenTitle:"Invoices",editInvoice:"Edit Invoice",invoiceTitle:"Invoices",labels:{actualCharges:"Actual Charges",discountAmount:"Discount Amount",discountPercentage:"Discount Percentage",externalInvoiceNumber:"External Invoice #",hmoCom:"HMO/COM",insurance:"National Insurance",paymentProfile:"Payment Profile",paymentsDeposits:"Payments/Deposits",pricingPanelOverrides:"Pricing profile overrides",pricingProfile:"Pricing Profile",setFee:"Set Fee"},messages:{flatDiscountMsg:"There is a flat discount amount applied to the patient financial responsibility of {currency}{discountAmount}.",flatFeeMsg:"There is a flat fee for patient financial responsibility of {currency}{setFee}."},navigation:{allInvoices:"All Invoices",billed:"Billed",drafts:"Drafts",paid:"Paid"},newInvoice:"New Invoice"},buttons:{add:"Add",addItem:"Add Item",addLineItem:"Add Line Item",addValue:"Add Value",addVisit:"Add Visit",allRequests:"All Requests",barcode:"Barcode",cancel:"Cancel",clear:"Clear",close:"Close",complete:"Complete",delete:"Delete",dispense:"Dispense",edit:"Edit",filter:"Filter",fulfill:"Fulfill",import:"Import",loadFile:"Load File",newItem:"+ new item",newNote:"New Note",newRequest:"New Request",newRequestPlus:"+ new request",newUser:"New User",ok:"Ok",print:"Print",remove:"Remove",returnButton:"Return",review:"Review",search:"Search",showAll:"Show All",showFewer:"Show Fewer",update:"Update"},components:{chargesByTypeTab:{charges:"charges"},customFormManager:{buttons:{addForm:"Add Form"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Midnight",noon:"Noon",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Please select a valid image file."}},operativeProcedures:{buttons:{addProcedure:"Add Procedure"},labels:{procedure:"Procedure"},titles:{procedures:"Procedures"}},patientOrders:{buttons:{newImaging:"New Imaging",newLab:"New Lab",newMedication:"New Medication"},labels:{imagingOrderType:"Imaging",labOrderType:"Lab",medicationOrderType:"Medication",orderType:"Order Type"}},priceList:{charges:"{pricingType} charges"},quantityCalc:{result:"{targetUnit} total: {calculated}"},quantityConv:{conversion:"What does 1 {name} contain?",unit:"Unit"},sortableColumn:{labels:{selectAll:"(Select All)"}},takePhoto:{camera:"Camera",how:"How Do You Want To Add A Photo?",labels:{takeAPicture:"Take a Picture",uploadAFile:"Upload a File"},photo:"photo",preview:"preview",takePhoto:"Take photo",uploadFile:"Upload File"},upcomingAppointments:{labels:{date:"Date",location:"Location",type:"Type",with:"With"},titles:{upcomingAppointments:"Upcoming Appointments"}}},customForms:{buttons:{addForm:"Add Form"},labels:{formToAdd:"Form To Add"},titles:{addCustomForm:"Add Custom Form"}},dashboard:{needs_user_setup:"We recommend that you setup a User account.",standalone_welcome:'<h4>Thanks for downloading HospitalRun</h4><p>You are running HospitalRun in stand alone mode. This mode allows you to support multiple users on a single, desktop/laptop instance of HospitalRun. This is ideal for:</p><ul><li>Evaluating HospitalRun for an eventual server deployment.</li><li>Using the platform to support a clinic / facility where a single instance is sufficient.</li></ul><p>If you\'re considering a multi-device deployment of HospitalRun, we\'re <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">working on features</a> that will allow you to "graduate" from this single instance into a traditional cloud / server-based deployment.</p>',title:"Welcome to HospitalRun!"},dates:{long:"{years} year {months} months {days} days",longOmitDays:"{years} year {months} months",longOmitDaysPlural:"{years} years {months} months",longOmitDaysYears:"{months} months",longOmitYears:"{months} months {days} days",longPlural:"{years} years {months} months {days} days",short:"{years}y {months}m {days}d",shortOmitYears:"{months}m {days}d"},diagnosis:{labels:{activeDiagnosis:"Active Diagnosis",date:"Date",diagnosis:"Diagnosis",secondaryDiagnosis:"Secondary Diagnosis"},titles:{addDiagnosis:"Add Diagnosis",editDiagnosis:"Edit Diagnosis"}},errors:{accepted:"must be accepted",blank:"can't be blank",confirmation:"doesn't match {attribute}",empty:"can't be empty",equalTo:"must be equal to {count}",even:"must be even",exclusion:"is reserved",greaterThan:"must be greater than {count}",greaterThanOrEqualTo:"must be greater than or equal to {count}",inclusion:"is not included in the list",invalid:"is invalid",invalidNumber:"not a valid number",lessThan:"must be less than {count}",lessThanOrEqualTo:"must be less than or equal to {count}",notANumber:"is not a number",notAnInteger:"must be an integer",odd:"must be odd",otherThan:"must be other than {count}",present:"must be blank",result:"Please enter a result before completing",tooLong:"is too long (maximum is {count} characters)",tooShort:"is too short (minimum is {count} characters)",wrongLength:"is the wrong length (should be {count} characters)"},headings:{chargedItems:"Charged Items"},imaging:{alerts:{completedMessage:"The imaging request has been completed.",completedTitle:"Imaging Request Completed",savedMessage:"The imaging request has been saved.",savedTitle:"Imaging Request Saved"},buttons:{newButton:"+ new imaging"},labels:{addNewVisit:"--Add New Visit--",completedBy:"Completed By",radiologist:"Radiologist",requestedNotes:"Requested Notes",resultNotes:"Result Notes"},messages:{noCompleted:"No completed items found."},pageTitle:"Imaging Requests",sectionTitle:"Imaging",titles:{completedImaging:"Completed Imaging",editTitle:"Edit Imaging Request",newTitle:"New Imaging Request"}},incident:{buttons:{add:"Add",addForm:"+ Add Form",addItem:"Add Item",cancel:"Cancel",delete:"Delete",download:"Download",edit:"Edit",export:"Export Report",generateRep:"Generate Report",newAttachment:"+ New Attachment",newCategory:"+ new category",newIncident:"+ new incident",newNote:"+ New Note"},labels:{actions:"Actions",addedBy:"Added By",category:"Category",categoryItem:"Category Item",date:"Date",dateRecorded:"Date Recorded",department:"Department",description:"Incident Description",endDate:"End Date",givenBy:"Given By",howToAddAttachment:"How Do You Want To Add An Attachment?",incidentDate:"Date of Incident",incidentId:"Incident ID",item:"Item",lastUpdated:"Last Updated",note:"Note",patientId:"Patient Id",patientImpacted:"Patient Impacted",reportType:"Report Type",reportedBy:"Reported By",reportedDate:"Reported Date",reportedTo:"Incident Reported to (Full Name)",sentinelEvent:"Sentinel Event",startDate:"Start Date",status:"Status",statusActive:"Active",statusClosed:"Closed",statusFollowup:"Follow-up",statusReported:"Reported",title:"Title",total:"Total",updatedBy:"Updated By"},messages:{attachmentFileRequired:"Please upload a file or take a picture or before saving this attachment.",createNew:"Create a new incident?",createNewIncidentCategory:"Create a new Incident Category?",fillIn:"Fill in the above options to calculate score",incidentCategorySaved:"The {name} category has been saved.",noClosedIncidents:"No closed incidents found.",noIncidentCategoriesFound:"No Incident Categories found.",noIncidents:"No incidents found.",saved:"The incident report has been saved.",selectExistingPatient:"Please select an existing patient or leave this field blank."},titles:{addAttachment:"Add Attachment",addCategoryItem:"Add Category Item",addNote:"Add Note",attachments:"Attachments",closed:"Closed Incidents",current:"Current",deleteAttachment:"Delete Attachment",deleteIncident:"Delete Incident",deleteIncidentCategory:"Delete Incident Category",deleteItem:"Delete Item",deleteNote:"Delete Note",editAttachment:"Edit Attachment",editIncident:"Edit Incident",editIncidentCategory:"Edit Incident Category",editNote:"Edit Note",general:"General Information",history:"History",incidentCategories:"Incident Categories",incidentCategoryItem:"Incident Category Item",incidentCategoryName:"Incident Category Name",incidentCategorySaved:"Incident Category Saved",incidentSaved:"Incident Saved",incidents:"Incidents",incidentsByCategory:"Incidents By Category",incidentsByDepartment:"Incidents By Department",newIncident:"New Incident",newIncidentCategory:"New Incident Category",notes:"Notes",reports:"Reports"}},inventory:{edit:{cost:"Cost Per Unit:",delivered:"Delivered To:",location:"Location Adjusted:",prescription:"Prescription For:",pulled:"Pulled From:",quantity:"Quantity at Completion:",reason:"Reason:",returned:"Returned from Patient:",transferredFrom:"Transferred From:",transferredTo:"Transferred To:"},labels:{action:"Action",add:"Add",addAdjustmentType:"Add",adjust:"Adjust",adjustmentDate:"Adjustment Date",adjustmentFor:"Adjustment For",adjustmentType:"Adjustment Type",aisle:"Aisle",aisleLocation:"Aisle Location",allInventory:"All Inventory",allItems:"All Items",availableQuantity:"{quantity} available",billTo:"Bill To",consumePurchases:"Consume Purchases",consumptionRate:"Consumption Rate",cost:"Cost",costPerUnit:"Cost per Unit",crossReference:"Cross Reference",currentQuantity:"Current Quantity",dateCompleted:"Date Completed",dateEffective:"Effective Date",dateEnd:"End Date",dateReceived:"Date Received",dateStart:"Start Date",dateTransferred:"Date Transferred",daysLeft:"Days Left",deleteItem:"Delete Item",deliveryAisle:"Delivery Aisle",deliveryLocation:"Delivery Location",details:"Details",distributionUnit:"Distribution Unit",editItem:"Edit Item",expense:"Expense To",expirationDate:"Expiration Date",fulfillRequest:"Fulfill Request",fulfillRequestNow:"Fulfill Request Now",gift:"Gift in Kind",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"Gift in Kind Usage",inventoryConsumed:"Inventory Consumed",inventoryItem:"Inventory Item",inventoryObsolence:"Inventory Obsolence",invoiceItems:"Invoice Items",invoiceLineItem:"Invoice Line Item",invoiceNumber:"Invoice Number",item:"Item",itemNumber:"Item Number",items:"Items",location:"Location",locations:"Locations",markAsConsumed:"Mark as Consumed",name:"Name",newItem:"New Item",originalQuantity:"Original Quantity",print:"Print",printBarcode:"Print Barcode",printer:"Printer",pullFrom:"Pull From",purchaseCost:"Purchase Cost",purchaseInfo:"Purchase Information",purchases:"Purchases",quantity:"Quantity ({unit})",quantityAvailable:"Quantity Available",quantityOnHand:"Quantity on Hand",quantityRequested:"Quantity Requested",rank:"Rank",reason:"Reason",remove:"Remove",removeAdjustmentType:"Remove",reorderPoint:"Reorder Point",requestedItems:"Requested Items",returnAdjustmentType:"Return",returnToVendorAdjustmentType:"Return To Vendor",salePricePerUnit:"Sale Price per Unit",save:"Save",serialNumber:"Serial/Lot Number",total:"Total",totalCost:"Total Cost",totalReceived:"Total Received: {total}",transaction:"Transaction",transactions:"Transactions",transfer:"Transfer",transferFrom:"Transfer From",transferTo:"Transfer To Location",transferToAisle:"Transfer to Aisle Location",unit:"Unit",unitCost:"Unit Cost",vendor:"Vendor",vendorItemNumber:"Vendor Item Number",writeOffAdjustmentType:"Write Off",xref:"XRef"},messages:{adjust:"Please adjust the quantities on the appropriate location(s) to account for the difference of {difference}.",createRequest:"Create a new request?",itemNotFound:"The inventory item <strong>{item}</strong> could not be found.<br>If you would like to create a new inventory item, fill in the information below.<br>Otherwise, press the Cancel button to return.",loading:"Loading transactions ...",noItems:"No items found.",noRequests:"No requests found.",purchaseSaved:"The inventory purchases have been successfully saved.",quantity:"The total quantity of <strong>({quantity})</strong> does not match the total quantity in the locations <strong>({locationQuantity})</strong>.",removeItem:"Are you sure you want to remove this item from this invoice?",removeItemRequest:"Are you sure you want to remove this item from this request?",requestFulfilled:"The inventory request has been fulfilled.",requestUpdated:"The inventory request has been updated.",warning:"Please fill in required fields (marked with *) and correct the errors before adding."},reports:{adjustment:"Detailed Adjustment",daysSupply:"Days Supply Left In Stock",expenseDetail:"Detailed Expenses",expenseSum:"Summary Expenses",expiration:"Expiration Date",export:"Export Report",fields:"Fields to Include",finance:"Finance Summary",generate:"Generate Report",invLocation:"Inventory By Location",invValuation:"Inventory Valuation",purchaseDetail:"Detailed Purchase",purchaseSum:"Summary Purchase",reportType:"Report Type",rows:{adjustments:"Adjustments",adjustmentsTotal:"Total Adjustments",balanceBegin:"Beginning Balance",balanceEnd:"Ending Balance",category:"Category",consumed:"Consumed",consumedGik:"GiK Consumed",consumedGikTotal:"Total GiK Consumed",consumedPuchases:"Purchases Consumed",consumedPurchasesTotal:"Total Purchases Consumed",consumedTotal:"Total Consumed",errInFinSum:"Error in _generateFinancialSummaryReport: ",errInFindPur:"Error in _findInventoryItemsByPurchase: ",errInFindReq:"Error in _findInventoryItemsByRequest: ",expensesFor:"Expenses For: ",noAccount:"(No Account)",subtotal:"Subtotal: ",subtotalFor:"Subtotal for {category} - {account}: ",total:"Total: ",totalFor:"Total for {var}: ",totalPurchases:"Total Purchases",transfer1:"{quantity} from {location}",trasnfer2:"From: {source} To: {target}"},stockTransferDetail:"Detailed Stock Transfer",stockTransferSum:"Summary Stock Transfer",stockUsageDetail:"Detailed Stock Usage",stockUsageSum:"Summary Stock Usage",titleDateRange:"{name} Report {startDate} - {endDate}",titleSingleDate:"{name} Report {date}"},titles:{addPurchase:"Add Purchase",addRequest:"New Request",adjustment:"Adjustment",editPurchase:"Edit Purchase",editRequest:"Edit Request",inventoryItem:"New Inventory Item",inventoryReport:"Inventory Report",purchaseSaved:"Inventory Purchases Saved",quickAddTitle:"New Inventory Item",removeItem:"Remove Item",requestFulfilled:"Request Fulfilled",requestUpdated:"Request Updated",transfer:"Transfer Items",warning:"Warning!!!!!"}},labels:{action:"Action",actions:"Actions",addNewOutpatientVisit:"--Add New Outpatient Visit--",address:"Address",age:"Age",allDay:"All Day",allItems:"All items",amount:"Amount",anesthesia:"Anesthesia",assisting:"Assisting",balanceDue:"Balance Due",billDate:"Bill Date",billTo:"Bill To",category:"Category",completed:"Completed",country:"Country",cptcode:"CPT Code",creditTo:"Credit To",currencySymbol:"$",date:"Date",dateCompleted:"Date Completed",dateOfBirth:"Date of Birth",dateOfBirthShort:"DoB",datePaid:"Date Paid",dateRequested:"Date Requested",delete:"Delete",deleteRequest:"Delete Request",deleteUser:"Delete User",department:"Department",description:"Description",discount:"Discount",displayName:"Display Name",docRead:"Docs Read",docWritten:"Docs Written",edit:"Edit",editUser:"Edit User",email:"Email",endDate:"End Date",endTime:"End Time",excess:"Excess",expenseTo:"Expense To",fileLoadSuccessful:"File To Load Successful",fileName:"File Name",fileToLoad:"File Load",from:"From",fulfill:"Fulfill",fulfillRequest:"Fulfill Request",fulfillRequestNow:"Fulfill Request Now",fulfilled:"Fulfilled",grandTotal:"Grand Total",id:"Id",imageOrders:"Image Orders",imagingType:"Imaging Type",importFile:"Import File",invoiceId:"Invoice ID",labOrders:"Lab Orders",lineItems:"Line Items",loading:"Loading",location:"Location",lookupType:"Lookup Type",medication:"Medication",name:"Name",newItem:"+ new item",newUser:"New User",note:"Note",notes:"Notes",number:"Number",on:"on",password:"Password",patient:"Patient",payments:"Payments",physician:"Physician",prescriber:"Prescriber",prescription:"Prescription",prescriptionDate:"Prescription Date",price:"Price",print:"Print",procedures:"Procedures",provider:"Provider",pullFrom:"Pull From",quantity:"Quantity",remarks:"Remarks",requestedBy:"Requested By",requestedOn:"Requested On",requests:"Requests",result:"Result",results:"Results",role:"Role",search:"Search",sex:"Sex",startDate:"Start Date",startTime:"Start Time",status:"Status",takenBy:"Taken By",to:"To",total:"Total",type:"Type",userCanAddNewValue:"User Can Add New Values",username:"Username",value:"Value",view:"View",visit:"Visit",with:"With"},labs:{alerts:{requestCompletedMessage:"The lab request has been completed.",requestCompletedTitle:"Lab Request Completed",requestSavedMessage:"The lab request has been saved.",requestSavedTitle:"Lab Request Saved"},buttons:{newButton:"+ new lab"},completedTitle:"Completed Labs",deleteTitle:"Delete Request",editTitle:"Edit Lab Request",labels:{addNewVisit:"--Add New Visit--",labType:"Lab Type"},messages:{createNewRecord:"Create a new record?",noCompleted:"No completed items found.",noItemsFound:"No labs found."},newTitle:"New Lab Request",requestsTitle:"Lab Requests",sectionTitle:"Labs"},languageName:"English",loading:{messages:{0:"The top butterfly flight speed is 12 miles per hour. Some moths can fly 25 miles per hour!",1:"Owls are the only birds that can see the color blue.",10:"Your tongue is the only muscle in your body that is attached at only one end.",11:"Camels have three eyelids to protect themselves from blowing sand.",2:"Cats have over 100 vocal sounds; dogs only have 10.",3:"Humans use a total of 72 different muscles in speech.",4:"More than 1,000 different languages are spoken on the continent of Africa.",5:"An erythrophobe is someone who blushes easily.",6:"The most common phobia in the world is odynophobia which is the fear of pain.",7:"Your body uses 300 muscles to balance itself when you are standing still.",8:"Certain frogs can be frozen solid then thawed, and continue living.",9:"Our eyes are always the same size from birth, but our nose and ears never stop growing."},progressBar:{progress:"{progressBarValue}% Complete"}},login:{labels:{password:"Password",signIn:"Sign in",username:"Username"},messages:{error:"Username or password is incorrect.",offlineError:"Cannot login while offline.  Please establish a network connection and retry login.",signIn:"please sign in"}},medication:{alerts:{fulfilledTitle:"Medication Request Fulfilled",returnedMessage:"The medication has been marked as returned.",returnedTitle:"Medication Returned",savedMessage:"The medication record has been saved.",savedTitle:"Medication Request Saved"},buttons:{dispenseMedication:"dispense medication",newButton:"+ new request",returnMedication:"return medication"},labels:{adjustmentDate:"Adjustment Date",creditToAccount:"Credit To Account",quantityDispensed:"Quantity Dispensed",quantityDistributed:"Quantity Distributed",quantityRequested:"Quantity Requested",quantityToReturn:"Quantity To Return",refills:"Refills",returnAisle:"Return Aisle",returnLocation:"Return Location",returnReason:"Return Reason/Notes"},messages:{createNew:"Create a new medication request?"},pageTitle:"Medication Requests",returnMedication:"Return Medication",sectionTitle:"Medication",titles:{completedMedication:"Completed Medication",editMedicationRequest:"Edit Medication Request",newMedicationRequest:"New Medication Request"}},messages:{createNewRecord:"Create a new record?",createNewUser:"Create a new user?",delete:"Are you sure you wish to delete {name}?",delete_plural:"Are you sure you wish to delete these {name}?",delete_singular:"Are you sure you wish to delete this {name}?",forAuthorizedPersons:"This report is for authorized persons only.",newPatientHasToBeCreated:"A new patient needs to be created...Please wait..",noHistoryAvailable:"No history available.",noItemsFound:"No items found.",noNotesAvailable:"No additional clinical notes are available for this visit.",noUsersFound:"No users found.",onBehalfOf:"on behalf of",reportError:"An error was encountered while generating the requested report.  Please let your system administrator know that you have encountered an error.",requiredFieldsCorrectErrors:"Please fill in required fields (marked with *) and correct the errors before saving.",saveActionException:"An error occurred while attempting to save: {message}",sorry:"Sorry, something went wrong...",userHasBeenSaved:"The user has been saved.",userSaved:"User Saved"},models:{appointment:{labels:{allDay:"All Day",appointmentDate:"Date",appointmentType:"Type",endDate:"End Date",location:"Location",notes:"Notes",patient:"Patient",provider:"With",startDate:"Start Date",status:"Status",type:"Type"},names:{plural:"appointments",singular:"appointment"}},attachment:{names:{plural:"attachments",singular:"attachment"}},form:{names:{plural:"forms",singular:"form"}},imaging:{names:"imaging",request:{plural:"imaging requests",singular:"imaging request"}},incident:{names:{plural:"incidents",singular:"incident"}},item:{names:{plural:"items",singular:"item"}},lab:{names:{plural:"labs",singular:"lab"},request:{plural:"lab requests",singular:"lab request"}},medication:{names:{plural:"medications",singular:"medication"},request:{plural:"medication requests",singular:"medication request"}},note:{names:{plural:"notes",singular:"note"}},patient:{labels:{name:"Name"},names:{singular:"Patient"}},procedure:{names:{plural:"procedures",singular:"procedure"}},user:{names:{plural:"users",singular:"user"}},visit:{names:{plural:"visits",singular:"visit"}},vital:{names:{plural:"vitals",singular:"vital"}}},navigation:{about:"About HospitalRun",actions:{login:"Login",logout:"Logout",selectLanguage:"Select Language"},administration:"Administration",billing:"Billing",imaging:"Imaging",incident:"Incident",inventory:"Inventory",labs:"Labs",medication:"Medication",messages:{logoutFailed:"Could not logout at this time.  Logout is not available while offline."},patients:"Patients",scheduling:"Scheduling",subnav:{actions:"Actions",addAppointment:"Add Appointment",addressFields:"Address Fields",admittedPatients:"Admitted Patients",appointmentSearch:"Appointment Search",appointmentsCalendar:"Appointments Calendar",appointmentsThisWeek:"Appointments This Week",cashier:"Cashier",completed:"Completed",currentIncidents:"Current Incidents",customForms:"Custom Forms",dispense:"Dispense",history:"History",incidentCategories:"Incident Categories",inventoryReceived:"Inventory Received",inventoryReceivedPlus:"+ Inventory Received",invoices:"Invoices",items:"Items",loadDB:"Load DB",lookupLists:"Lookup Lists",newIncident:"New Incident",newInvoice:"New Invoice",newPatient:"New Patient",newRequest:"New Request",newUser:"New User",outpatient:"Outpatient",patientListing:"Patient Listing",priceProfiles:"Price Profiles",prices:"Prices",printHeader:"Print Header",reports:"Reports",requests:"Requests",returnMedication:"Return Medication",scheduleSurgery:"Schedule Surgery",textReplacements:"Shortcodes",theaterSchedule:"Theater Schedule","today'sAppointments":"Today's Appointments",userRoles:"User Roles",users:"Users",workflow:"Workflow"},titles:{logoutFailed:"Logout Failed"}},operationReport:{labels:{additionalNotes:"Additional Notes",assistant:"Assistant",caseComplexity:"Case Complexity",operationDescription:"Operation Description",preOpPrimaryDiagnosis:"Pre-op Primary Diagnosis",preOpSecondaryDiagnosis:"Pre-op Secondary Diagnosis",surgeon:"Surgeon",surgeryDate:"Surgery Date"},messages:{reportSaved:"The operation report has been saved."},titles:{editTitle:"Edit Operation Report",newTitle:"New Operation Report",reportSaved:"Report Saved"}},operativePlan:{buttons:{completePlan:"Complete Plan"},labels:{additionalNotes:"Additional Notes",admissionInstructions:"Instructions Upon Admission",caseComplexity:"Case Complexity",completedStatus:"Completed",droppedStatus:"Dropped",operationDescription:"Operation Description",plannedStatus:"Planned",status:"Status",surgeon:"Surgeon"},messages:{planCompleted:"The operative plan has been completed.  You will now be directed to the operation report.",planSaved:"The operative plan has been saved."},titles:{editTitle:"Edit Operative Plan",newTitle:"New Operative Plan",planCompleted:"Plan Completed",planSaved:"Plan Saved"}},patients:{buttons:{addContact:"Add Contact",addExpense:"Add Expense",addFamilyMember:"Add Family Member",addOperativePlan:"Add Operative Plan",backToPatients:"Back to Patient List",download:"Download",editOperativePlan:"Current Operative Plan",newAppointment:"New Appointment",newImaging:"New Imaging",newLab:"New Lab",newMedication:"New Medication",newPatient:"+ new patient",newPhoto:"New Photo",newVisit:"New Visit",patientCheckIn:"Patient Check In",scheduleSurgery:"Schedule Surgery"},labels:{admissionDate:"Admission Date",admit:"Admit",bloodType:"Blood Type",caption:"Caption",civilStatus:"Civil Status",clinic:"Clinic Site",clinicId:"Clinic ID",contacts:"Contacts",cost:"Cost",dateOfBirth:"Date Of Birth",dateProcessed:"Date Processed",dischargeDate:"Discharge Date",dob:"DOB",education:"Education",email:"Email",englishName:"English Name (When Applicable)",externalPatientId:"HCIS HN",firstName:"First Name",governmentId:"Government ID",healthcareScheme:"Healthcare Insurance Scheme (Imported From HCIS)",income:"Income",insurance:"Insurance",lastName:"Last Name",monthlyCost:"Monthly Cost",nationality:"Nationality",occupation:"Occupation",operativePlan:"Operative Plan",parent:"Parent/Guardian",patientDays:"Patient Days",patientType:"Patient Type",patientTypeCharity:"Charity",patientTypePrivate:"Private",phone:"Phone",placeOfBirth:"Place Of Birth",primaryDiagnosis:"Primary Diagnoses",referredBy:"Referred By",referredDate:"Referred Date",registeredClinics:"Registered Clinic (Imported From HCIS)",relationship:"Relationship To Patient",relationships:"Relationships",religion:"Religion",secondaryDiagnosis:"Secondary Diagnoses",sex:"Sex",sexNotEntered:"Sex Not Entered",sources:"Sources",status:"Patient Status",totalMontlyExpense:"Total Monthly Expenses"},messages:{areYouSureDelete:"Are you sure you want to delete this {object}?",createNewPatient:"Create a new patient record?",deletingPatient:"Deleting patient and all associated records",noPatientsFound:"No patients found.",notFoundQuickAdd:"The patient <strong>{patientFullName}</strong> could not be found.  If you would like to create a new patient, fill in the information below.  Otherwise press the Cancel button to return.",photoFileRequired:"Please take a picture or upload a file before saving this photo.",savedPatient:"The patient record for {displayName} has been saved."},navigation:{appointments:"Appointments",general:"General",history:"History",imaging:"Imaging",labs:"Labs",medication:"Medication",photos:"Photos",socialWork:"Social Work",visits:"Visits"},notes:{newNote:"New Note for",onBehalfOfCopy:"on behalf of",onBehalfOfLabel:"On Behalf Of",pleaseSelectAVisit:"Please select a visit",updateNote:"Updating Note from"},titles:{addContact:"Add Contact",addPhoto:"Add Photo",additionalContacts:"Additional Contacts",admissionsDetail:"Admissions Detail",admissionsSummary:"Admissions Summary",admittedPatients:"Admitted Patients",delete:"Delete Patient",deleteContact:"Delete Contact",deleteExpense:"Delete Expense",deleteFamilyMember:"Delete Family Member",deletePatientRecord:"Delete Patient Record",deletePhoto:"Delete Photo",diagnosticTesting:"Diagnostic Testing",dischargesDetail:"Discharges Detail",dischargesSummary:"Discharges Summary",edit:"Edit Patient",editPhoto:"Edit Photo",expenses:"Expenses",familyInfo:"Family Info",familyInformation:"Family Information",new:"New Patient",outpatientsForDate:"Outpatients for {visitDate}",patient:"Patient Report",patientListing:"Patient Listing",patientReport:"Patient Report",patientStatus:"Patient Status",proceduresDetail:"Procedures Detail",proceduresSummary:"Procedures Summary",savedPatient:"Patient Saved",socialWork:"Expense",todaysOutpatients:"Today's Outpatients",totalPatientDays:"Total Patient Days",totalPatientDaysDetailed:"Total Patient Days (Detailed)",visit:"Visit"}},pricing:{labels:{discountAmount:"Discount Amount",discountPercentage:"Discount Percentage",setFee:"Set Fee"},navigation:{allPricingItems:"All Pricing Items",imagePricing:"Imaging Pricing",labPricing:"Lab Pricing",pricingProfiles:"Pricing Profiles",procedurePricing:"Procedure Pricing",wardPricing:"Ward Pricing"},sectionTitle:"Pricing"},print:{invoice:{labels:{billedBy:"Billed by:",billedDate:"Bill Date:",dateAdmitted:"ADMITTED:",dateDischarged:"DISCHARGE:",dischargeNotes:"Discharge Notes:",patientAddress:"ADDRESS:",patientAge:"AGE:",patientId:"PATIENT #:",patientName:"NAME OF PATIENT:",remarks:"Remarks:",spacer:"__________________________________________"},messages:{whereConducted:"were deducted during my confinement"},titles:{billingStatement:"BILLING STATEMENT",patientMember:"Patient-Member",patients:"PATIENT'S",relContact:"Relationship/Contact no."}}},procedures:{buttons:{addMedication:"Add Medication"},labels:{medicationUsed:"Medication Used"},messages:{saved:"The procedure record has been saved."},titles:{addChargeItem:"Add Charge Item",addMedicationUsed:"Add Medication Used",deleteChargeItem:"Delete Charge Item",deleteMedicationUsed:"Delete Medication Used",edit:"Edit Procedure",editChargeItem:"Edit Charge Item",editMedicationUsed:"Edit Medication Used",medicationUsed:"Medication Used",new:"New Procedure",saved:"Procedure Saved"}},reports:{labels:{admissionDate:"Admission Date",allProcedures:"All Procedures Performed",completedBy:"Completed By",dischargeDate:"Discharge Date",examiner:"Examiner",images:"Images",labs:"Labs",location:"Visit Location",medications:"Medications",nextAppointment:"Next Appointment",nextAppointments:"Next Appointments",notes:{author:"Author",date:"Date",title:"Notes"},operativePlan:{description:"Operation Description",instructions:"Instructions upon Admission",procedures:"Planned Procedures",title:"Operative Plan"},primaryDiagnosis:"Primary Diagnosis",procedures:"Procedures",secondaryDiagnosis:"Secondary Diagnosis",visitDate:"Date of Visit",visitType:"Visit Type"},messages:{delete:"Are you sure you wish to delete this report?",saved:"The report has been saved."},titles:{dischargeReport:"Discharge Report",newDischargeReport:"New Discharge Report",newOPDReport:"New OPD Report",opdReport:"OPD Report",saved:"Report saved"}},user:{plusNewUser:"+ new user",usersPageTile:"User Listing"},visits:{buttons:{addDiagnosis:"Add Diagnosis",checkIn:"Check In",checkOut:"Check Out",discharge:"Discharge",newAppointment:"New Appointment",newDischargeReport:"New Discharge Report",newOPDReport:"New OPD Report",newProcedure:"New Procedure",newVitals:"New Vitals"},labels:{appointment:"Appointment",authoredBy:"Authored By",checkInTime:"Check In",checkOutTime:"Check Out",createNewPatient:"Create New Patient",diagnosis:"Diagnosis",examiner:"Examiner",finalDiagnosis:"Final/Billing Diagnosis",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"Orders Done",ordersNotDone:"N",patientToCheckIn:"Patient To Check In",procedure:"Procedure",procedureDate:"Procedure Date",reasonForVisit:"Reason For Visit",reportType:"Report type",status:"Visit Status",statusAdmitted:"Admitted",statusCheckedIn:"Checked In",statusCheckedOut:"Checked Out",statusDischarged:"Discharged",visitDate:"Visit Date",visitInformation:"Visit Information",visitType:"Visit Type"},messages:{checkOut:"Are you sure you wish to check out {patientName}?",checkedOut:"{patientName} has been checked out.",discharged:"{patientName} has been discharged.",patientCheckedIn:"{patientName} has been checked in.",patientCreatedAndCheckedIn:"{patientName} has been created and checked in.",visitAndPatientSaved:"The visit and patient records have been saved.",visitSaved:"The visit record has been saved."},navigation:{charges:"Charges",notes:"Notes",orders:"Orders",procedures:"Procedures",reports:"Reports",vitals:"Vitals"},titles:{additionalDiagnoses:"Additional Diagnoses",checkOut:"Patient Check Out",checkedIn:"Patient Checked In",checkedOut:"Patient Checked Out",discharged:"Patient Discharged",editVisit:"Edit Visit",newVisit:"New Visit",patientCheckIn:"Patient Check In",visitSaved:"Visit Saved"}},vitals:{labels:{dateRecorded:"Date Recorded",dbp:"DBP",heartRate:"Heart Rate",height:"Height",respiratoryRate:"Respiratory Rate",sbp:"SBP",temperature:"Temperature",weight:"Weight"}}}}),define("hospitalrun/translations/es-co",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Texto direccion 1",address2Label:"Texto direccion 2",address3Label:"Texto direccion 3",address4Label:"Texto direccion 4",addressLabel:"Direcciones",editTitle:"Opciones de dirección",include1Label:"Incluir 1",include2Label:"Incluir 2",include3Label:"Incluir 3",include4Label:"Incluir 4",messages:{addressSaved:"las opciones de dirección han sido guardadas"},newTitle:"Opciones de dirección",titles:{optionsSaved:"Opciones guardadas"}},addressOptions:"Opciones de direcciones",customForms:{buttons:{},labels:{},messages:{},titles:{}},header:{messages:{},titles:{}},loadDb:"Cargar Base de datos",loaddb:{displayAlertMessage:"Por favor seleccione un archivo para ser cargado.",displayAlertTitle:"Seleccione un archivo para cargar",editTitle:"Cargar bd",errorDisplayAlertMessage:"La base de datos no fue cargada el error fue: {error}",errorDisplayAlertTitle:"Error cargando",progressMessage:"Por favor espere mientras la base de datos es cargada.",progressTitle:"Cargando ase de datos"},lookup:{aisleLocationList:"Ubicacion de inventario de pasillo",alertImportListMessage:"Por favor seleccione un archivo para importar.",alertImportListSaveMessage:"Lista de busqueda importada.",alertImportListSaveTitle:"Lista importada",alertImportListTitle:"Seleccione un archivo para importar",alertImportListUpdateMessage:"La lista de busqueda ha sido salvada.",alertImportListUpdateTitle:"Lista salvada",anesthesiaTypes:"Tipos de anestesia",anesthesiologists:"Anestesiologo",billingCategories:"Categorias de facturacion",clinicList:"Ubicacion de las clinicas",countryList:"Paises",cptCodeList:"Codigos CPT",diagnosisList:"Diagnosticos",edit:{template:{addTitle:"Adicionar valor",editTitle:"Editar valor",labelTitle:"Valor",updateButtonTextAdd:"Adicionar",updateButtonTextUpdate:"Actualizar"}},expenseAccountList:"Cuentas de gastos",imagingPricingTypes:"Tipos de precios de radiografias",inventoryTypes:"Tipos de inventarios",labPricingTypes:"Precios de laboratorio",pageTitle:"Listas de busqueda",patientStatusList:"Lista de estado de pacientes",physicianList:"Medicos",procedureList:"Procedimientos",procedureLocations:"Ubicacion de los procedimientos",procedurePricingTypes:"Tipos de procedimientos y precios",radiologists:"Radiologo",titles:{},unitTypes:"Tipos de unidad",vendorList:"Proveedor",visitLocationList:"Lugares de visista",visitTypes:"Tipos de visita",wardPricingTypes:"Tipos de las tarifas",warehouseList:"Ubicacciones de inventarios"},lookupLists:"Lista de busqueda",roles:{capability:{addAppointment:"Adicionar cita",addCharge:"Adicionar cargo (valor)",addDiagnosis:"Adicionar diagnostico",addImaging:"Adicionar radiografia",addInventoryItem:"Adicionar elemento al inventario",addInventoryPurchase:"Adicionar compra",addInventoryRequest:"Pedido de inventario",addInvoice:"Adicionar factura",addLab:"Adicionar laboratorio",addMedication:"Adicionar medicación",addPatient:"Adicionar paciente",addPayment:"Adicionar pago",addPhoto:"Adicionar foto",addPricing:"Adicionar precio",addPricingProfile:"Adicionar perfil de precios",addVisit:"Adicionar visita",addVitals:"Adicionar partes vitales",adjustInventoryLocation:"Ajustar lugar elemento en el inventario",admin:"Administracion",admitPatient:"Admitir paciente",appointments:"Citas",billing:"Facturacion",completeImaging:"Completar radiografia",completeLab:"Completar laboratorio",defineUserRoles:"Roles de usuario",deleteAppointment:"Eliminar cita",deleteDiagnosis:"Eliminar diagnostico",deleteImaging:"Eliminar radiografia",deleteInventoryItem:"Eliminar elemento del inventario",deleteInvoice:"Eliminar factura",deleteLab:"Eliminar laboratorio",deleteMedication:"Eliminar medicación",deletePatient:"Eliminar paciente",deletePhoto:"Eliminar foto",deletePricing:"Eliminar precio",deletePricingProfile:"Eliminar perfil de precio",deleteProcedure:"Eliminar procedimiento",deleteSocialwork:"Eliminar trabajo social",deleteVisit:"Eliminar visita",deleteVitals:"Eliminar organo vital",dischargePatient:"Descartar paciente",editInvoice:"Editar factura",fulfillInventory:"Cumplimiento de inventario",fulfillMedication:"Cumplir la medicación",imaging:"Radiografia",inventory:"Inventario",invoices:"Facturas",labs:"Laboratorios",loadDb:"Cargar base de datos",medication:"Medicación",overrideInvoice:"Sobreescribir factura",patientReports:"Reportes por paciente",patients:"Pacientes",pricing:"Precio",updateConfig:"Actualizar configuracion",visits:"Visitas"},messages:{roleSaved:"El {roleName} rol ha sido salvado."},titles:{roleSaved:"Role salvado"}},textReplacements:{},userRoles:"Roles",users:"Usuarios",visitForms:{labels:{},titles:{}},workflow:{messages:{},titles:{}}},alerts:{pleaseWait:"Por favor espere"},allergies:{buttons:{},labels:{},titles:{}},application:{messages:{},titles:{}},appointments:{buttons:{newButton:"+ nueva cita"},currentScreenTitle:"Listado de citas",editTitle:"Editar cita",labels:{},messages:{endTimeLaterThanStart:"Seleccione una hora de finalizacion despues de la de inicio."},missed:"Citas perdidas",newTitle:"Nueva cita",searchTitle:"Buscar citas",sectionTitle:"Citas",thisWeek:"Citas esta semana",titles:{},todayTitle:"Citas para hoy"},billing:{alerts:{},buttons:{},labels:{},messages:{},navigation:{}},buttons:{add:"Adicionar",addValue:"Adicionar valor",addVisit:"Adicionar visita",allRequests:"Todas las solicitudes",barcode:"Codigo de barras",cancel:"Cancelar",close:"Cerrar",complete:"Completado",delete:"Eliminar",dispense:"Repartir",fulfill:"Cumplimiento",import:"Importar",loadFile:"Cargar archivo",newItem:"+ nuevo elemento",newNote:"Nueva nota",newRequest:"Nueva solicitud",newRequestPlus:"+ nuevo pedido",newUser:"Nuevo usuario",ok:"Ok",remove:"Remover",returnButton:"Regresar",search:"Buscar",update:"Actualizar"},components:{chargesByTypeTab:{},customFormManager:{buttons:{}},dateTimePicker:{},imageUpload:{messages:{}},operativeProcedures:{buttons:{},labels:{},titles:{}},patientOrders:{buttons:{},labels:{}},priceList:{},quantityCalc:{},quantityConv:{},sortableColumn:{labels:{}},takePhoto:{labels:{}},upcomingAppointments:{labels:{},titles:{}}},customForms:{buttons:{},labels:{},titles:{}},dashboard:{title:"Que deseas hacer?"},dates:{},diagnosis:{labels:{},titles:{}},errors:{},headings:{},imaging:{alerts:{completedMessage:"El pedido de radiografia ha sido completado.",completedTitle:"Pedido de radiografia completado",savedMessage:"El pedido de radiografia ha sido guardado.",savedTitle:"Pedido de radiografia salvado"},buttons:{newButton:"+ new radiografia"},labels:{addNewVisit:"--Adicionar nueva visita--",radiologist:"Radiologo"},messages:{noCompleted:"No de items encontrados."},pageTitle:"Pedido de radriografia",sectionTitle:"Radiografias",titles:{completedImaging:"Radiografia completada",editTitle:"Pedido de edicion de radiografia",newTitle:"Nuevo pedido de radiografia"}},incident:{buttons:{},labels:{},messages:{},titles:{}},inventory:{edit:{cost:"Costo por unidad:",delivered:"Enviado A:",location:"Cambio de ubicación:",prescription:"Recetado por:",pulled:"Pulled From:",quantity:"Quantity at Completion:",reason:"Razón:",returned:"Regresado al paciente:",transferredFrom:"Transferido a:",transferredTo:"Transferido a:"},labels:{action:"Acción",add:"Adicionar",adjust:"Adjustar",adjustmentDate:"Fecha de ajuste",adjustmentFor:"Ajustado para",adjustmentType:"Tipo de ajuste",aisle:"Pasillo",aisleLocation:"Ubicación pasillo",allInventory:"Todo el inventario",billTo:"Facturao a",consumePurchases:"Consume Purchases",consumptionRate:"Tasa de consumo",cost:"Costo",costPerUnit:"Costo por Unidad",crossReference:"Referencia cruzada",currentQuantity:"Cantidad actual",dateCompleted:"Fecha completado",dateEffective:"Gecha efectiva",dateEnd:"Fecha final",dateReceived:"Fecha recibido",dateStart:"Fecha inicial",dateTransferred:"Fecha transferencia",daysLeft:"Dias restantes",deleteItem:"Eliminar elemento",deliveryAisle:"Enviado a pasillo",deliveryLocation:"Ubicación del envio",details:"Detalles",distributionUnit:"Unidad de distribución",editItem:"Editar elemento",expense:"Gastos a",expirationDate:"Fecha de vencimiento",fulfillRequest:"Pedido de cumplimiento",fulfillRequestNow:"Pedido de incumplimiento para hoy",gift:"Regalo en especie",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"Uso del regalo en especie",inventoryConsumed:"Inventario consumido",inventoryItem:"Elemento del inventario",inventoryObsolence:"Obsolescencia de inventario",invoiceItems:"Articulos de factura",invoiceLineItem:"Elemento de la factura linea",invoiceNumber:"Factura numero",item:"Elemento",itemNumber:"Numero de elemento",items:"Elementos",location:"Ubicación",locations:"Ubicaciones",markAsConsumed:"Marcar como consumido",name:"Nombre",newItem:"Nuevo elemento",originalQuantity:"Cantidad original",print:"Imprimir",printBarcode:"Imprimir codigo de  barras",printer:"Impresora",pullFrom:"Traido de",purchaseCost:"Costo de compra",purchaseInfo:"Informacion de la compra",purchases:"Compras",quantity:"Cantidad ({unit})",quantityAvailable:"Cantidad disponible",quantityOnHand:"Cantidad a la mano",quantityRequested:"Cantidad pedida",rank:"Ranking",reason:"Razón",remove:"Remover",reorderPoint:"Reordenar punto",requestedItems:"Elementos solicitados",salePricePerUnit:"Costo de venta por unidad",save:"Guardar",serialNumber:"Serial/Numero de lote",total:"Total",totalCost:"Costo total",totalReceived:"Total Recivido: {total}",transaction:"Transaccion",transactions:"Transacciones",transfer:"Translados",transferFrom:"Translado desde",transferTo:"Translado a ubicación",transferToAisle:"Translado a pasillo",unit:"Unidad",unitCost:"Unidad Costo",vendor:"Proveedor",vendorItemNumber:"Proveedor numero de elemento",xref:"XRef"},messages:{adjust:"Por favor ajust las cantidades en la ubicación adecuada(s) la diferencia de la cuenta es {difference}.",createRequest:"Crear un nuevo pedido?",itemNotFound:"El elemento del inventario <strong>{item}</strong> no se pudo encontrar.<br>Si desea crear un nuevo elemento, Ingrese la información abajo.<br>De lo contrario opria cancelar para volver.",loading:"Cargando transacciones ...",noItems:"No se encontraron elementos.",noRequests:"No se encontraron pedidos.",purchaseSaved:"La compra de inventario ha sido salvada.",quantity:"La cantidad total <strong>({quantity})</strong> no encaja con la cantidad total en las ubicaciones <strong>({locationQuantity})</strong>.",removeItem:"Esta seguro de eliminar este elemento de la factura?",removeItemRequest:"Seguro que quiere eliminar este elemento del pedido?",requestFulfilled:"El pedido de inventario ha sido procesado.",requestUpdated:"El pedido de inventario ha sido actualizado.",warning:"Valide los campos requeridos (marcados con *) corrija los errores antes de adicionar."},reports:{adjustment:"Ajuste detallado",daysSupply:"Dias de inventario restante",expenseDetail:"Gastos detallados",expenseSum:"Resumen de gastos",expiration:"Fecha de expiracion",export:"Exportar reporte",fields:"Campos a incluir",finance:"Resumen de finanzas",generate:"Generar reporte",invLocation:"Inventario por ubicacion",invValuation:"Inventario por valoracion",purchaseDetail:"Compras detalladas",purchaseSum:"Resumen de compras",reportType:"Tipo de reporte",rows:{adjustments:"Ajustes",adjustmentsTotal:"Ajustes totales",balanceBegin:"Balance inicial",balanceEnd:"Balance Final",category:"Categoria",consumed:"Consumado",consumedGik:"GiK Consumido",consumedGikTotal:"Total GiK Consumido",consumedPuchases:"Total de lo comprado consumido",consumedPurchasesTotal:"Total de lo comprado consumido",consumedTotal:"Total consumido",errInFinSum:"Error en _generateFinancialSummaryReport: ",errInFindPur:"Error en _findInventoryItemsByPurchase: ",errInFindReq:"Error en _findInventoryItemsByRequest: ",expensesFor:"Gatos para: ",noAccount:"(No Cuenta)",subtotal:"Subtotal: ",subtotalFor:"Subtotal para {category} - {account}: ",total:"Total: ",totalFor:"Total para {var}: ",totalPurchases:"Compras Totales",transfer1:"{quantity} de {location}",trasnfer2:"De: {source} A: {target}"},stockTransferDetail:"Detalle de traslado de stock",stockTransferSum:"Resumen traslado de stock",stockUsageDetail:"Detalle de uso de stock",stockUsageSum:"Resumen uso de stock"},titles:{addPurchase:"Adicionar compra",addRequest:"Nuevo pedido",adjustment:"Ajuste",editPurchase:"Editar compra",editRequest:"Editar pedido",inventoryItem:"Nuevo elemento de inventario",inventoryReport:"Reporte de inventario",purchaseSaved:"Compras de inventario guardadas",quickAddTitle:"Nuevo elemento de inventario",removeItem:"Remover elemento",requestFulfilled:"Pedido cumplido",requestUpdated:"Pedido actualizado",transfer:"Trasladar elementos",warning:"Peligro!!!!!"}},labels:{action:"Accion",actions:"Acciones",addNewOutpatientVisit:"--Nueva visita a paciente externo--",age:"Edad",allDay:"Todo el dia",anesthesia:"Anestesia",assisting:"Asistencia",billTo:"Facturar a",completed:"Completado",cptcode:"Codigo CPT",date:"Fecha",dateCompleted:"Fecha completada",dateOfBirth:"Fecha de nacimiento",dateOfBirthShort:"FDN",dateRequested:"Fecha de pedido",delete:"Eliminar",deleteRequest:"Eliminar pedido",deleteUser:"Eliminar usuario",description:"Descripción",displayName:"Nombre para mostrar",docRead:"Leer documento",docWritten:"Documento escrito",edit:"Editar",editUser:"Editar usuario",email:"Email",endDate:"Fecha final",endTime:"Hora de finalización",fileLoadSuccessful:"Archivo cargado exitosamente",fileToLoad:"Archivo cargado",fulfill:"Cumplomiento",fulfillRequest:"Pedido de cumplimiento",fulfillRequestNow:"Pedido de cumplimiento ahora",fulfilled:"Cumplido",id:"Id",imageOrders:"Ordenes de radiografias",imagingType:"Tipo de radiografia",importFile:"Importar archivo",labOrders:"Ordenes de laboratorio",loading:"Cargando",location:"Ubicacion",lookupType:"Tipo de busqueda",medication:"Medicación",name:"Nombre",newUser:"Nuevo usuario",notes:"Notas",on:"on",password:"Contraseña",patient:"Paciente",physician:"Médico",prescription:"Receta medica",prescriptionDate:"Fecha de la receta medica",procedures:"Procedimiento",provider:"Proveedor",pullFrom:"Traer de",quantity:"Cantidada",requestedBy:"Pedido por|",requestedOn:"Pedido On",requests:"Pedido",result:"Resultado",results:"Resultados",role:"Rol",sex:"Genero",startDate:"Fecha de inicio",startTime:"Hora de inicio",status:"Estado",type:"Tipo",userCanAddNewValue:"Los usuarios pueden agregar nuevos valores",username:"Nombre de usuario",value:"Valor",visit:"Visita",with:"con"},labs:{alerts:{requestCompletedMessage:"El pedido de laboratorio ha sido completado.",requestCompletedTitle:"Pedido de laboratorio competado",requestSavedMessage:"El pedido de laboratorio ha sido guardado.",requestSavedTitle:"Silicitud de laboratorio guardado"},buttons:{newButton:"+ nuevo laboratorio"},completedTitle:"Completar laboratorio",deleteTitle:"Eliminar pedido",editTitle:"Editar pedido de laboratorio",labels:{addNewVisit:"--Adicionar nueva visita--",labType:"Tipo de laboratorio"},messages:{createNewRecord:"Crear un registro?",noCompleted:"No elementos completados encontrados.",noItemsFound:"No boratorios encontrados."},newTitle:"Nuevo pedido de laboratorio",requestsTitle:"Pedido de laboratorio",sectionTitle:"Laboratorios"},languageName:"Español (Colombiano)",loading:{messages:{},progressBar:{}},login:{labels:{password:"Clave",signIn:"Ingresar",username:"Nombre de usuario"},messages:{error:"Nombre de usuario o clave incorrectos.",signIn:"por favor ingrese"}},medication:{alerts:{fulfilledTitle:"Pedido de medicación cumplido",returnedMessage:"La medicacion ha sido marcada para devolver.",returnedTitle:"Medicacion devuelta",savedMessage:"La elemento de medicación ha sido guardado.",savedTitle:"Pedido de medicacion guardado"},buttons:{dispenseMedication:"dispensar medicación",newButton:"+ nuevo pedido",returnMedication:"debolver medicacion"},labels:{adjustmentDate:"Fecha de ajuste",creditToAccount:"Credito a cuenta",quantityDispensed:"Cantidad dispensada",quantityDistributed:"Cantidad distribuida",quantityRequested:"Cantidad solicitada",quantityToReturn:"Cantidad a devolver",refills:"Recargas",returnAisle:"Devolve a pasillo",returnLocation:"Retornar a ubicación",returnReason:"Razon por la que se devuelve/Nota"},messages:{createNew:"Crear un nuevo pedido de medicacion?"},pageTitle:"Pedido de medicación",returnMedication:"Retorno de medicación",sectionTitle:"Medication",titles:{completedMedication:"Medicacion completada",editMedicationRequest:"Editar pedido de medicacion",newMedicationRequest:"Nuevo pedido de medicacion"}},messages:{createNewRecord:"Crear un nuevo registro?",createNewUser:"Crear un nuevo usuario?",forAuthorizedPersons:"Este informe es sólo para personas autorizadas.",newPatientHasToBeCreated:"Un nuevo paciente debe ser creado...Por favor espere..",noHistoryAvailable:"Historia no disponible.",noItemsFound:"Elementos no encontrados.",noNotesAvailable:"No hay notas clínicas adicionales están disponibles para esta visita.",noUsersFound:"Ningun usuario encontrado.",onBehalfOf:"a nombre de",sorry:"Lo sentimos, un error ha ocurrido...",userHasBeenSaved:"El usuario ha sido salvado.",userSaved:"Usuario salvado"},models:{appointment:{labels:{},names:{}},attachment:{names:{}},form:{names:{}},imaging:{request:{}},incident:{names:{}},item:{names:{}},lab:{names:{},request:{}},medication:{names:{},request:{}},note:{names:{}},patient:{labels:{},names:{}},procedure:{names:{}},user:{names:{}},visit:{names:{}},vital:{names:{}}},navigation:{about:"Información de HospitalRun",actions:{login:"Ingresar",logout:"Salir"},administration:"Administracion",billing:"Facturas",imaging:"Radiografia",inventory:"Inventario",labs:"Laboratorio",medication:"Recetas medicas",messages:{},patients:"Pacientes",subnav:{addAppointment:"Nueva cita",addressFields:"Campos de dirección",completed:"Completado",dispense:"Dispense",inventoryReceived:"Inventario recibido",inventoryReceivedPlus:"+ Inventario recibido",invoices:"Facturas",items:"Items",lookupLists:"Lista de busuedas",newInvoice:"Nueva factura",newPatient:"Nuevo paciente",newRequest:"New pedido",newUser:"Nuevo usuario",patientListing:"Lista de pacientes",priceProfiles:"Perfil de precios",prices:"Precios",reports:"Reportes",requests:"Pedidos",returnMedication:"Devolver medicamento",userRoles:"Roles",users:"Usuarios"},titles:{}},operationReport:{labels:{},messages:{},titles:{}},operativePlan:{buttons:{},labels:{},messages:{},titles:{}},patients:{buttons:{},labels:{},messages:{},navigation:{},notes:{onBehalfOfCopy:"a nombre de",onBehalfOfLabel:"A nombre de",pleaseSelectAVisit:"Por favor seleccione una visista"},titles:{}},pricing:{labels:{},navigation:{}},print:{invoice:{labels:{},messages:{},titles:{}}},procedures:{buttons:{},labels:{},messages:{},titles:{}},reports:{labels:{notes:{},operativePlan:{}},messages:{},titles:{}},user:{plusNewUser:"+ nuevo usuario",usersPageTile:"Listado de usuarios"},visits:{buttons:{},labels:{},messages:{},navigation:{},titles:{}},vitals:{labels:{}}}}),define("hospitalrun/translations/es",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Texto dirección 1",address2Label:"Texto dirección 2",address3Label:"Texto dirección 3",address4Label:"Texto dirección 4",addressLabel:"Direcciones",editTitle:"Opciones de dirección",include1Label:"Incluir 1",include2Label:"Incluir 2",include3Label:"Incluir 3",include4Label:"Incluir 4",messages:{addressSaved:"Las opciones de dirección han sido guardadas"},newTitle:"Opciones de dirección",titles:{optionsSaved:"Opciones guardadas"}},addressOptions:"Opciones de direcciones",customForms:{buttons:{addField:"Agregar campo",moveDown:"Mover hacia abajo",moveUp:"Mover hacia arriba",newForm:"Nueva forma",preview:"Vista previa"},labels:{alwaysInclude:"Incluir siempre",checkbox:"checkbox",colSpan:"Número de columnas a extender",columns:"Columnas",customForm:"Formulario personalizado",dischargeReportFormType:"Descartar reporte",formName:"Nombre de la forma",formType:"Tipo de forma",incidentFormType:"Incidente",includeOtherOption:"Incluir otra opción",labFormType:"Tipo de formulario de laboratorio",label:"Etiqueta",newForm:"Nueva Forma",opdReportFormType:"Reporte de paciente externo",operativePlanFormType:"Plan operativo y reporte",otherOptionLabel:"Otra opción",patientFormType:"Paciente",property:"Propiedad",radio:"Radio",select:"Selecciona",socialworkFormType:"Trabajo Social",text:"Texto",textarea:"Área de texto",visitFormType:"Visita"},messages:{formSaved:"El formulario {name} ha sido guardado."},titles:{checkboxValues:"Valores de checkbox",customForms:"Formularios personalizados",deleteForm:"Eliminar formulario personalizado",dropDownValues:"Valores de lista desplegable",editCustomForm:"Editar formulario personalizado",fields:"Campos",formSaved:"Formulario guardado",newCustomForm:"Nuevo formulario personalizado",radioValues:"Valores de radio botones"}},header:{editTitle:"Edición",facilityName:"Nombre de las instalaciones",headerLabel:"Encabezado",headerLine1:"Línea de encabezado 1",headerLine2:"Línea de encabezado 2",headerLine3:"Línea de encabezado 3",logoURL:"URL del logo",messages:{headerSaved:"El encabezado ha sido guardado"},newTitle:"Edición",titles:{optionsSaved:"Opciones guardadas"}},loadDb:"Cargar Base de datos",loaddb:{displayAlertMessage:"Por favor seleccione un archivo para ser cargado.",displayAlertTitle:"Seleccione un archivo para cargar",editTitle:"Cargar base de datos",errorDisplayAlertMessage:"La base de datos no fue cargada el error fue: {error}",errorDisplayAlertTitle:"Error cargando",progressMessage:"Por favor espere mientras la base de datos es cargada.",progressTitle:"Cargando base de datos"},lookup:{aisleLocationList:"Ubicación de inventario de pasillo",alertImportListMessage:"Por favor seleccione un archivo para importar.",alertImportListSaveMessage:"Lista de búsqueda importada.",alertImportListSaveTitle:"Lista importada",alertImportListTitle:"Seleccione un archivo para importar",alertImportListUpdateMessage:"La lista de búsqueda ha sido guardada.",alertImportListUpdateTitle:"Lista guardada",anesthesiaTypes:"Tipos de anestesia",anesthesiologists:"Anestesiólogo",billingCategories:"Categorías de facturación",clinicList:"Ubicación de las clínicas",countryList:"Países",cptCodeList:"Códigos CPT",diagnosisList:"Diagnósticos",edit:{template:{addTitle:"Agregar valor",editTitle:"Editar valor",labelTitle:"Valor",updateButtonTextAdd:"Agregar",updateButtonTextUpdate:"Actualizar"}},expenseAccountList:"Lista de gastos",imagingPricingTypes:"Tipos de precios de radiografías",incidentDepartments:"Departamentos de incidentes",inventoryTypes:"Tipos de inventarios",labPricingTypes:"Precios de laboratorio",pageTitle:"Listas de búsqueda",patientStatusList:"Lista de estado de pacientes",physicianList:"Médicos",procedureList:"Procedimientos",procedureLocations:"Ubicación de los procedimientos",procedurePricingTypes:"Tipos de procedimientos y precios",radiologists:"Radiólogo",titles:{deleteLookupValue:"Eliminar valor"},unitTypes:"Tipos de unidad",vendorList:"Proveedor",visitLocationList:"Lugares de visita",visitTypes:"Tipos de visita",wardPricingTypes:"Tipos de las tarifas",warehouseList:"Ubicaciones de inventarios"},lookupLists:"Lista de búsqueda",roles:{capability:{addAllergy:"Agregar alergia",addAppointment:"Agregar cita",addBillingDiagnosis:"Agregar diagnóstico de facturación",addCharge:"Agregar cargo (valor)",addDiagnosis:"Agregar diagnostico",addImaging:"Agregar radiografía",addIncident:"Agregar incidente",addIncidentCategory:"Agregar categoría de incidente",addInventoryItem:"Agregar elemento al inventario",addInventoryPurchase:"Agregar compra",addInventoryRequest:"Pedido de inventario",addInvoice:"Agregar factura",addLab:"Agregar laboratorio",addMedication:"Agregar medicación",addNote:"Agregar nota",addOperationReport:"Agregar reporte de operación",addOperativePlan:"Agregar plan operativo",addPatient:"Agregar paciente",addPayment:"Agregar pago",addPhoto:"Agregar foto",addPricing:"Agregar precio",addPricingProfile:"Agregar perfil de precios",addProcedure:"Agregar procedimiento",addSocialwork:"Agregar red social",addVisit:"Agregar visita",addVitals:"Agregar partes vitales",adjustInventoryLocation:"Ajustar lugar elemento en el inventario",admin:"Administración",admitPatient:"Admitir paciente",appointments:"Citas",billing:"Facturación",completeImaging:"Completar radiografía",completeLab:"Completar laboratorio",defineUserRoles:"Roles de usuario",deleteAppointment:"Eliminar cita",deleteDiagnosis:"Eliminar diagnostico",deleteImaging:"Eliminar radiografía",deleteIncident:"Eliminar incidente",deleteIncidentCategory:"Eliminar categoría de incidente",deleteInventoryItem:"Eliminar elemento del inventario",deleteInvoice:"Eliminar factura",deleteLab:"Eliminar laboratorio",deleteMedication:"Eliminar medicación",deleteNote:"Eliminar nota",deletePatient:"Eliminar paciente",deletePhoto:"Eliminar foto",deletePricing:"Eliminar precio",deletePricingProfile:"Eliminar perfil de precio",deleteProcedure:"Eliminar procedimiento",deleteSocialwork:"Eliminar trabajo social",deleteVisit:"Eliminar visita",deleteVitals:"Eliminar órgano vital",dischargePatient:"Dar de alta al paciente",editInvoice:"Editar factura",fulfillInventory:"Cumplimiento de inventario",fulfillMedication:"Cumplir la medicación",generateIncidentReport:"Generar reporte de incidencia",imaging:"Radiografía",incident:"Incidente",inventory:"Inventario",invoices:"Facturas",labs:"Laboratorios",loadDb:"Cargar base de datos",manageIncidents:"Administrar credenciales",medication:"Medicación",overrideInvoice:"Sobrescribir factura",patientReports:"Reportes por paciente",patients:"Pacientes",pricing:"Precio",updateConfig:"Actualizar configuración",visits:"Visitas"},messages:{roleSaved:"El {roleName} rol ha sido guardado."},titles:{roleSaved:"Rol guardado"}},textReplacements:{},userRoles:"Roles de usuario",users:"Usuarios",visitForms:{labels:{followup:"Seguir",form:"Formulario",initial:"Inicial",visitType:"Tipo de visita"},titles:{visitForms:"Formularios de visita"}},workflow:{admissionDepositLabel:"Deposito de admisión requerido",clinicPrepaymentLabel:"Pre pago clínico es requerido",editTitle:"Opciones de Flujo de Trabajo",followupPrepaymentLabel:"Pre pago de seguimiento es requerido",messages:{optionsSaved:"Las opciones de flujo de trabajo han sido guardadas"},newTitle:"Opciones de Flujo de Trabajo",outpatientImagingLabel:"Pago de radiografía de paciente externo es requerido",outpatientLabLabel:"Pago de laboratorio para paciente externo es requerido",outpatientMedicationLabel:"Pre pago de medicación de paciente externo es requerido",titles:{optionsSaved:"Opciones guardadas"},workflowLabel:"Flujo de Trabajo"}},alerts:{errorExclamation:"Error!",pleaseWait:"Por favor espere",reportError:"Error generando reporte",warningExclamation:"Advertencia!"},allergies:{buttons:{addAllergy:"Agregar alergia"},labels:{allergyName:"Nombre de alergia",patientAllergy:"Alergias del paciente"},titles:{addAllergy:"Agregar alergia",editAllergy:"Editar alergia"}},application:{messages:{sessionExpired:"La sesión ha expirado, inicia sesión para continuar."},titles:{sessionExpired:"Sesión expirada"}},appointments:{buttons:{newButton:"+ nueva cita",scheduleSurgery:"+ programar cirugía"},calendarTitle:"Calendario de citas",currentScreenTitle:"Listado de citas",editTitle:"Editar cita",labels:{noLocation:"Sin ubicación",selectedStartingDate:"Fecha de inicio elegida"},messages:{appointmentSaved:"Cita guardada",endTimeLaterThanStart:"Seleccione una hora de finalización después de la de inicio."},missed:"Citas perdidas",newTitle:"Nueva cita",searchTitle:"Buscar citas",sectionTitle:"Citas",thisWeek:"Citas esta semana",titles:{appointmentSaved:"Cita guardada",editSurgicalAppointment:"Editar cita quirúrgica",newSurgicalAppointment:"Nueva cita quirúrgica",theaterSchedule:"Horario"},todayTitle:"Citas para hoy"},billing:{alerts:{noInvoiceFound:"No se encontraron facturas",noPricingItems:"No se encontraron precios",noPricingProfiles:"No se encontraron perfiles de precio"},buttons:{addOverride:"Agregar anulación",createInvoice:"Crear factura"},labels:{actualCharges:"Cargos actuales",discountAmount:"Monto de descuento",discountPercentage:"Porcentaje de descuento",externalInvoiceNumber:"No. de factura externa",hmoCom:"HMO/COM",insurance:"Seguro médico",paymentProfile:"Perfil de pago",paymentsDeposits:"Pagos / Depósitos",pricingPanelOverrides:"Sustitución de perfiles de pago",pricingProfile:"Perfil de Pago"},messages:{},navigation:{}},buttons:{add:"Agregar",addItem:"Agregar elemento",addLineItem:"Agregar elemento de línea",addValue:"Agregar valor",addVisit:"Agregar visita",allRequests:"Todas las solicitudes",barcode:"Código de barras",cancel:"Cancelar",clear:"Limpiar",close:"Cerrar",complete:"Completar",delete:"Eliminar",dispense:"Repartir",edit:"Editar",filter:"Filtrar",fulfill:"Cumplimiento",import:"Importar",loadFile:"Cargar archivo",newItem:"+ nuevo elemento",newNote:"Nueva nota",newRequest:"Nueva solicitud",newRequestPlus:"+ nuevo pedido",newUser:"Nuevo usuario",ok:"Ok",remove:"Quitar",returnButton:"Regresar",search:"Buscar",showAll:"Mostrar todo",showFewer:"Mostrar menos",update:"Actualizar"},components:{chargesByTypeTab:{charges:"Cargos"},customFormManager:{buttons:{addForm:"Agregar formulario"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Media noche",noon:"Medio día",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Por favor seleccione una imagen valida."}},operativeProcedures:{buttons:{addProcedure:"Agregar procedimiento"},labels:{procedure:"Procedimiento"},titles:{procedures:"Procedimientos"}},patientOrders:{buttons:{newImaging:"Nueva radiografía",newLab:"Nuevo laboratorio",newMedication:"Nueva medicación"},labels:{imagingOrderType:"Tipo de radiografía",labOrderType:"Tipo de orden de laboratorio",medicationOrderType:"Tipo de medicación",orderType:"Tipo de orden"}},priceList:{charges:"cargos: {pricingType}"},quantityCalc:{result:"{targetUnit} total: {calculated}"},quantityConv:{conversion:"Conversión",unit:"unidad"},sortableColumn:{labels:{selectAll:"(Seleccionar todo)"}},takePhoto:{camera:"Camara",how:"Como desea tomar la fotografía?",labels:{takeAPicture:"Tomar foto",uploadAFile:"Subir archivo"},photo:"Fotografía",preview:"Vista previa",takePhoto:"Tomar fotografía",uploadFile:"Subir archivo"},upcomingAppointments:{labels:{date:"Fecha",location:"Ubicación",type:"Tipo",with:"con"},titles:{upcomingAppointments:"Citas proximas"}}},customForms:{buttons:{addForm:"Agregar formulario"},labels:{formToAdd:"Formulario a agregar"},titles:{addCustomForm:"Agregar formulario personalizado"}},dashboard:{title:"Bienvenido a HospitalRun!"},dates:{long:"{years} año {months} meses {days} días",longOmitDays:"{years} año {months} meses",longOmitDaysPlural:"{years} años {months} meses",longOmitDaysYears:"{months} meses",longOmitYears:"{months} meses {days} días",longPlural:"{years} años {months} meses {days} días",short:"{years}y {months}m {days}d",shortOmitYears:"{months}m {days}d"},diagnosis:{labels:{activeDiagnosis:"Diagnóstico Activo",date:"Fecha",diagnosis:"Diagnóstico",secondaryDiagnosis:"Diagnóstico secundario"},titles:{addDiagnosis:"Agregar Diagnóstico",editDiagnosis:"Editar Diagnóstico"}},errors:{accepted:"Tiene que ser aceptado",blank:"No puede estar en blanco",confirmation:"{attribute} no coincide",empty:"No puede estar vacío",equalTo:"Debe ser igual a {count}",even:"Debe ser par",exclusion:"Esta reservado",greaterThan:"Debe ser mayor a {count}",greaterThanOrEqualTo:"Debe ser mayor o igual a {count}",inclusion:"No está incluido en la lista",invalid:"Es invalido",invalidNumber:"No es un numero valido",lessThan:"Menor que {count}",lessThanOrEqualTo:"Menor o igual a {count}",notANumber:"No es un número",notAnInteger:"No es un número entero",odd:"Debe ser impar",otherThan:"Debe ser diferente a {count}",present:"Debe estar en blanco",result:"Por favor ingrese un resultado antes de completar",tooLong:"Supera el máximo permitido ({count} caracteres)",tooShort:"Es menos al mínimo permitido ({count} caracteres)",wrongLength:"Tamaño erróneo (debería ser de {count} caracteres)"},headings:{chargedItems:"Elementos cargados"},imaging:{alerts:{completedMessage:"El pedido de radiografía ha sido completado.",completedTitle:"Pedido de radiografía completado",savedMessage:"El pedido de radiografía ha sido guardado.",savedTitle:"Pedido de radiografía salvado"},buttons:{newButton:"+ Nueva radiografía"},labels:{addNewVisit:"--Agregar nueva visita--",radiologist:"Radiólogo"},messages:{noCompleted:"No de elementos encontrados."},pageTitle:"Pedido de radiografía",sectionTitle:"Radiografías",titles:{completedImaging:"Radiografía completada",editTitle:"Pedido de edición de radiografía",newTitle:"Nuevo pedido de radiografía"}},incident:{buttons:{add:"Agregar",addForm:"+ Agregar formulario",addItem:"Agregar elemento",cancel:"Cancelar",delete:"Eliminar",download:"Descargar",edit:"Editar",export:"Exportar",generateRep:"Reporte",newAttachment:"Nuevo archivo adjunto",newCategory:"Nueva categoria",newIncident:"Nuevo incidente",newNote:"Nueva nota"},labels:{actions:"Acciones",addedBy:"Agregado por",category:"Categoria",categoryItem:"Elemento de categoria",date:"Fecha",dateRecorded:"Fecha guardada",department:"Departamento",description:"Descripción",endDate:"Fecha de finalización",givenBy:"Dado por",howToAddAttachment:"Como adjuntar archivos",incidentDate:"Fecha de Incidente",incidentId:"Id de incidente",item:"Elemento",lastUpdated:"Actualizado por última vez",note:"Nota",patientId:"Id de paciente",patientImpacted:"Paciente afectado",reportType:"Tipo de reporte",reportedBy:"Reportado por",reportedDate:"Fecha de reporte",reportedTo:"Reportado a",sentinelEvent:"Evento centinela",startDate:"Fecha de inicio",status:"Estatus",statusActive:"Activo",statusClosed:"Inactivo",statusFollowup:"Seguimiento",statusReported:"Reportado",title:"Título",total:"Total",updatedBy:"Actualizado por"},messages:{attachmentFileRequired:"Es necesario subir un archivo",createNew:"Crear nuevo",createNewIncidentCategory:"Crear nueva categoría de incidente",fillIn:"Llenar",incidentCategorySaved:"El incidente de categoría {name} ha sido guardado",noClosedIncidents:"No. de incidentes cerrados",noIncidentCategoriesFound:"No. de categorías de incidentes encontradas",noIncidents:"No. de incidentes",saved:"Guardado",selectExistingPatient:"Seleccionar paciente existente"},titles:{addAttachment:"Agregar archivo adjunto",addCategoryItem:"Agregar ctegoria de elemento",addNote:"Agregar nota",attachments:"Archivos adjuntos",closed:"Cerrado",current:"Actual",deleteAttachment:"Eliminar archivo adjunto",deleteIncident:"Eliminar incidente",deleteIncidentCategory:"Eliminar categoria de incidente",deleteItem:"Eliminar elemento",deleteNote:"Eliminar nota",editAttachment:"Editar archivo adjunto",editIncident:"Editar incidente",editIncidentCategory:"Editar categoria de incidente",editNote:"Editar nota",general:"General",history:"Historial",incidentCategories:"Categorias de incidente",incidentCategoryItem:"Elemento de categoría de incidente",incidentCategoryName:"Nombre de categoría de incidente",incidentCategorySaved:"Categoría de incidente guardado",incidentSaved:"Incidente guardado",incidents:"Incidentes",incidentsByCategory:"Incidentes por categoría",incidentsByDepartment:"Incidentes por departamento",newIncident:"Nuevo incidente",newIncidentCategory:"Nueva categoría de incidente",notes:"Notas",reports:"Reportes"}},inventory:{edit:{cost:"Costo por unidad:",delivered:"Enviado A:",location:"Cambio de ubicación:",prescription:"Recetado por:",pulled:"Pulled From:",quantity:"Cantidad al terminar:",reason:"Razón:",returned:"Regresado al paciente:",transferredFrom:"Transferido de:",transferredTo:"Transferido a:"},labels:{action:"Acción",add:"Agregar",addAdjustmentType:"Agregar tipo de ajuste",adjust:"Ajustar",adjustmentDate:"Fecha de ajuste",adjustmentFor:"Ajustado para",adjustmentType:"Tipo de ajuste",aisle:"Pasillo",aisleLocation:"Ubicación pasillo",allInventory:"Todo el inventario",allItems:"Todos los elementos",availableQuantity:"Cantidad disponible",billTo:"Facturado a",consumePurchases:"Compras del consumidor",consumptionRate:"Tasa de consumo",cost:"Costo",costPerUnit:"Costo por Unidad",crossReference:"Referencia cruzada",currentQuantity:"Cantidad actual",dateCompleted:"Fecha de finalización",dateEffective:"Fecha efectiva",dateEnd:"Fecha final",dateReceived:"Fecha de recepción",dateStart:"Fecha inicial",dateTransferred:"Fecha de transferencia",daysLeft:"Dias restantes",deleteItem:"Eliminar elemento",deliveryAisle:"Enviado a pasillo",deliveryLocation:"Ubicación del envió",details:"Detalles",distributionUnit:"Unidad de distribución",editItem:"Editar elemento",expense:"Gastos a",expirationDate:"Fecha de vencimiento",fulfillRequest:"Pedido de cumplimiento",fulfillRequestNow:"Pedido de incumplimiento para hoy",gift:"Regalo en especie",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"Uso del regalo en especie",inventoryConsumed:"Inventario consumido",inventoryItem:"Elemento del inventario",inventoryObsolence:"Obsolescencia de inventario",invoiceItems:"Articulos de factura",invoiceLineItem:"Elemento de la factura línea",invoiceNumber:"Factura numero",item:"Elemento",itemNumber:"Numero de elemento",items:"Elementos",location:"Ubicación",locations:"Ubicaciones",markAsConsumed:"Marcar como consumido",name:"Nombre",newItem:"Nuevo elemento",originalQuantity:"Cantidad original",print:"Imprimir",printBarcode:"Imprimir código de  barras",printer:"Impresora",pullFrom:"Traido de",purchaseCost:"Costo de compra",purchaseInfo:"Información de la compra",purchases:"Compras",quantity:"Cantidad ({unit})",quantityAvailable:"Cantidad disponible",quantityOnHand:"Cantidad a la mano",quantityRequested:"Cantidad pedida",rank:"Ranking",reason:"Razón",remove:"Remover",removeAdjustmentType:"Remover tipo de ajuste",reorderPoint:"Reordenar punto",requestedItems:"Elementos solicitados",returnAdjustmentType:"Regresar tipo de ajuste",returnToVendorAdjustmentType:"Regresar a vendedor tipo de ajuste",salePricePerUnit:"Costo de venta por unidad",save:"Guardar",serialNumber:"Serial/Número de lote",total:"Total",totalCost:"Costo total",totalReceived:"Total Recibido: {total}",transaction:"Transacción",transactions:"Transacciones",transfer:"Transferir",transferFrom:"Transferir desde",transferTo:"Transferir a",transferToAisle:"Traslado a pasillo",unit:"Unidad",unitCost:"Unidad Costo",vendor:"Proveedor",vendorItemNumber:"Proveedor número de elemento",writeOffAdjustmentType:"Solicitar por escrito",xref:"XRef"},messages:{adjust:"Por favor ajuste las cantidades en la ubicación adecuada(s) la diferencia de la cuenta es {difference}.",createRequest:"Crear un nuevo pedido?",itemNotFound:"El elemento del inventario <strong>{item}</strong> no se pudo encontrar.<br>Si desea crear un nuevo elemento, Ingrese la información abajo.<br>De lo contrario presione cancelar para volver.",loading:"Cargando transacciones ...",noItems:"No se encontraron elementos.",noRequests:"No se encontraron pedidos.",purchaseSaved:"La compra de inventario ha sido salvada.",quantity:"La cantidad total <strong>({quantity})</strong> no encaja con la cantidad total en las ubicaciones <strong>({locationQuantity})</strong>.",removeItem:"Esta seguro de eliminar este elemento de la factura?",removeItemRequest:"Seguro que quiere eliminar este elemento del pedido?",requestFulfilled:"El pedido de inventario ha sido procesado.",requestUpdated:"El pedido de inventario ha sido actualizado.",warning:"Valide los campos requeridos (marcados con *) corrija los errores antes de agregar."},reports:{adjustment:"Ajuste detallado",daysSupply:"Días de inventario restante",expenseDetail:"Gastos detallados",expenseSum:"Resumen de gastos",expiration:"Fecha de expiración",export:"Exportar reporte",fields:"Campos a incluir",finance:"Resumen de finanzas",generate:"Generar reporte",invLocation:"Inventario por ubicación",invValuation:"Inventario por valoración",purchaseDetail:"Compras detalladas",purchaseSum:"Resumen de compras",reportType:"Tipo de reporte",rows:{adjustments:"Ajustes",adjustmentsTotal:"Ajustes totales",balanceBegin:"Balance inicial",balanceEnd:"Balance Final",category:"Categoría",consumed:"Consumado",consumedGik:"GiK Consumido",consumedGikTotal:"Total GiK Consumido",consumedPuchases:"Compras consumidas",consumedPurchasesTotal:"Total de compras consumidas",consumedTotal:"Total consumido",errInFinSum:"Error en _generateFinancialSummaryReport: ",errInFindPur:"Error en _findInventoryItemsByPurchase: ",errInFindReq:"Error en _findInventoryItemsByRequest: ",expensesFor:"Gatos para: ",noAccount:"(No Cuenta)",subtotal:"Subtotal: ",subtotalFor:"Subtotal para {category} - {account}: ",total:"Total: ",totalFor:"Total para {var}: ",totalPurchases:"Compras Totales",transfer1:"{quantity} de {location}",trasnfer2:"De: {source} A: {target}"},stockTransferDetail:"Detalle de traslado de stock",stockTransferSum:"Resumen traslado de stock",stockUsageDetail:"Detalle de uso de stock",stockUsageSum:"Resumen uso de stock",titleDateRange:"{name} Reporte {startDate} - {endDate}",titleSingleDate:"{name} Reporte {date}"},titles:{addPurchase:"Agregar compra",addRequest:"Nuevo pedido",adjustment:"Ajuste",editPurchase:"Editar compra",editRequest:"Editar pedido",inventoryItem:"Nuevo elemento de inventario",inventoryReport:"Reporte de inventario",purchaseSaved:"Compras de inventario guardadas",quickAddTitle:"Nuevo elemento de inventario",removeItem:"Remover elemento",requestFulfilled:"Pedido cumplido",requestUpdated:"Pedido actualizado",transfer:"Trasladar elementos",warning:"Advertencia!!!!!"}},labels:{action:"Acción",actions:"Acciones",addNewOutpatientVisit:"--Nueva visita a paciente externo--",address:"Dirección",age:"Edad",allDay:"Todo el día",amount:"Monto",anesthesia:"Anestesia",assisting:"Asistencia",balanceDue:"Saldo",billDate:"Fecha de factura",billTo:"Facturar a",category:"Categoria",completed:"Completado",country:"País",cptcode:"Codigo CPT",creditTo:"Crédito a",date:"Fecha",dateCompleted:"Fecha de finalización",dateOfBirth:"Fecha de nacimiento",dateOfBirthShort:"FDN",datePaid:"Fecha de pago",dateRequested:"Fecha de pedido",delete:"Eliminar",deleteRequest:"Eliminar pedido",deleteUser:"Eliminar usuario",department:"Departamento",description:"Descripción",discount:"Descuento",displayName:"Nombre para mostrar",docRead:"Leer documento",docWritten:"Documento escrito",edit:"Editar",editUser:"Editar usuario",email:"Email",endDate:"Fecha final",endTime:"Hora de finalización",excess:"Gasto",expenseTo:"Gasto a",fileLoadSuccessful:"Archivo cargado exitosamente",fileName:"Nombre del archivo",fileToLoad:"Archivo cargado",fulfill:"Cumplimiento",fulfillRequest:"Pedido de cumplimiento",fulfillRequestNow:"Pedido de cumplimiento ahora",fulfilled:"Cumplido",grandTotal:"Gran Total",id:"Id",imageOrders:"Ordenes de radiografías",imagingType:"Tipo de radiografía",importFile:"Importar archivo",invoiceId:"Id de factura",labOrders:"Ordenes de laboratorio",lineItems:"Elementos de línea",loading:"Cargando",location:"Ubicación",lookupType:"Tipo de búsqueda",medication:"Medicación",name:"Nombre",newUser:"Nuevo usuario",note:"Nota",notes:"Notas",number:"Número",on:"Encendido",password:"Contraseña",patient:"Paciente",payments:"Pagos",physician:"Médico",prescriber:"Prescriptor",prescription:"Receta médica",prescriptionDate:"Fecha de la receta médica",price:"Precio",print:"Imprimir",procedures:"Procedimientos",provider:"Proveedor",pullFrom:"Traer de",quantity:"Cantidad",remarks:"Observaciones",requestedBy:"Pedido por|",requestedOn:"Pedido el",requests:"Pedido",result:"Resultado",results:"Resultados",role:"Rol",search:"Buscar",sex:"Sexo",startDate:"Fecha de inicio",startTime:"Hora de inicio",status:"Estado",takenBy:"Tomado por",total:"Total",type:"Tipo",userCanAddNewValue:"El usuario puede agregar nuevos valores",username:"Nombre de usuario",value:"Valor",view:"Ver",visit:"Visita",with:"con"},labs:{alerts:{requestCompletedMessage:"El pedido de laboratorio ha sido completado.",requestCompletedTitle:"Pedido de laboratorio completado",requestSavedMessage:"El pedido de laboratorio ha sido guardado.",requestSavedTitle:"Silicitud de laboratorio guardado"},buttons:{newButton:"+ nuevo laboratorio"},completedTitle:"Completar laboratorio",deleteTitle:"Eliminar pedido",editTitle:"Editar pedido de laboratorio",labels:{addNewVisit:"--Agregar nueva visita--",labType:"Tipo de laboratorio"},messages:{createNewRecord:"Crear un registro?",noCompleted:"No elementos completados encontrados.",noItemsFound:"No laboratorios encontrados."},newTitle:"Nuevo pedido de laboratorio",requestsTitle:"Pedido de laboratorio",sectionTitle:"Laboratorios"},languageName:"Español",loading:{messages:{0:"La velocidad máxima de vuelo de la mariposa es de 12 millas por hora. ¡Algunas polillas pueden volar 25 millas por hora!",1:"Los búhos son los únicos pájaros que pueden ver el color azul.",10:"Su lengua es el único músculo en su cuerpo que se adjunta en un solo extremo.",11:"Los camellos tienen tres párpados para protegerse de la arena que sopla.",2:"Los gatos tienen más de 100 sonidos vocales; los perros sólo tienen 10.",3:"Los humanos usan un total de 72 músculos diferentes en el habla.",4:"Más de 1.000 idiomas diferentes se hablan en el continente africano.",5:"Un erythrophobe es alguien que se ruboriza fácilmente.",6:"La fobia más común en el mundo es la Odino fobia, que es el miedo al dolor.",7:"Su cuerpo usa 300 músculos para equilibrarse cuando está parado.",8:"Ciertas ranas se pueden congelar sólidas y luego se descongelan, y seguir viviendo.",9:"Nuestros ojos son siempre del mismo tamaño desde el nacimiento, pero nuestra nariz y oídos nunca dejan de crecer."},progressBar:{progress:"{progressBarValue}% Completado"}},login:{labels:{password:"Clave",signIn:"Ingresar",username:"Nombre de usuario"},messages:{error:"Nombre de usuario o clave incorrectos.",signIn:"por favor ingrese"}},medication:{alerts:{fulfilledTitle:"Pedido de medicación cumplido",returnedMessage:"La medicación ha sido marcada para devolver.",returnedTitle:"Medicación devuelta",savedMessage:"La elemento de medicación ha sido guardado.",savedTitle:"Pedido de medicación guardado"},buttons:{dispenseMedication:"dispensar medicación",newButton:"+ nuevo pedido",returnMedication:"devolver medicación"},labels:{adjustmentDate:"Fecha de ajuste",creditToAccount:"Crédito a cuenta",quantityDispensed:"Cantidad dispensada",quantityDistributed:"Cantidad distribuida",quantityRequested:"Cantidad solicitada",quantityToReturn:"Cantidad a devolver",refills:"Recargas",returnAisle:"Devolver a pasillo",returnLocation:"Regresar a ubicación",returnReason:"Razón por la que se devuelve/Notas"},messages:{createNew:"Crear un nuevo pedido de medicación?"},pageTitle:"Pedido de medicación",returnMedication:"Retorno de medicación",sectionTitle:"Medicación",titles:{completedMedication:"Medicación completada",editMedicationRequest:"Editar pedido de medicación",newMedicationRequest:"Nuevo pedido de medicación"}},messages:{createNewRecord:"Crear un nuevo registro?",createNewUser:"Crear un nuevo usuario?",delete:"Esta seguro de eliminar a {name}?",delete_plural:"Esta seguro de eliminar estos {name}",delete_singular:"Esta seguro de eliminar este {name}",forAuthorizedPersons:"Este informe es sólo para personas autorizadas.",newPatientHasToBeCreated:"Un nuevo paciente debe ser creado...Por favor espere..",noHistoryAvailable:"Historia no disponible.",noItemsFound:"Elementos no encontrados.",noNotesAvailable:"No hay notas clínicas adicionales están disponibles para esta visita.",noUsersFound:"Ningún usuario encontrado.",onBehalfOf:"a nombre de",reportError:"Se ha encontrado un error al generar el reporte",requiredFieldsCorrectErrors:"Por favor capture los campos requeridos (marcados con *) y corrija los errores antes de guardar",saveActionException:"Surgió un error al tratar de guardar: {message}",sorry:"Lo sentimos, un error ha ocurrido...",userHasBeenSaved:"El usuario ha sido guardado.",userSaved:"Usuario guardado"},models:{appointment:{labels:{allDay:"Todo el día",appointmentDate:"Fecha de cita",appointmentType:"Tipo de cita",endDate:"Fecha de fin",location:"Ubicación",notes:"Notas",patient:"Paciente",provider:"Proveedor",startDate:"Fecha de inicio",status:"Estatus",type:"Tipo"},names:{plural:"Citas",singular:"Cita"}},attachment:{names:{plural:"Archivos adjuntos",singular:"Archivo adjunto"}},form:{names:{plural:"Formularios",singular:"Formulario"}},imaging:{names:"Radiografía",request:{plural:"Peticiones de radiografía",singular:"Petición de radiografía"}},incident:{names:{plural:"Incidentes",singular:"Incidente"}},item:{names:{plural:"Elementos",singular:"Elemento"}},lab:{names:{plural:"Laboratorios",singular:"Laboratorio"},request:{plural:"Petición de Laboratorio",singular:"Petición de Laboratorios"}},medication:{names:{plural:"Medicaciones",singular:"Medicación"},request:{plural:"Petición de Medicaciones",singular:"Petición de Medicación"}},note:{names:{plural:"Notas",singular:"Nota"}},patient:{labels:{name:"Notas de paciente"},names:{singular:"Nota de paciente"}},procedure:{names:{plural:"Procedimientos",singular:"Procedimiento"}},user:{names:{plural:"Usuarios",singular:"Usuario"}},visit:{names:{plural:"Visitas",singular:"Visita"}},vital:{names:{plural:"Vitales",singular:"Vital"}}},navigation:{about:"Acerca de HospitalRun",actions:{login:"Ingresar",logout:"Salir",selectLanguage:"Seleccione el idioma"},administration:"Administración",billing:"Facturas",imaging:"Radiografía",incident:"Incidente",inventory:"Inventario",labs:"Laboratorio",medication:"Recetas medicas",messages:{},patients:"Pacientes",scheduling:"Programación",subnav:{actions:"Acciones",addAppointment:"Nueva cita",addressFields:"Campos de dirección",admittedPatients:"Pacientes admitidos",appointmentSearch:"Busqueda de citas",appointmentsCalendar:"Calendario de citas",appointmentsThisWeek:"Citas esta semana",completed:"Completado",currentIncidents:"Incidentes actuales",customForms:"Formularios personalizados",dispense:"Dispensar",history:"Historial",incidentCategories:"Categorias de Incidente",inventoryReceived:"Inventario recibido",inventoryReceivedPlus:"+ Inventario recibido",invoices:"Facturas",items:"Elementos",loadDB:"Cargar Base de datos",lookupLists:"Lista de busquedas",newIncident:"Nuevo incidente",newInvoice:"Nueva factura",newPatient:"Paciente nuevo",newRequest:"Nuevo pedido",newUser:"Nuevo usuario",outpatient:"Paciente externo",patientListing:"Lista de pacientes",priceProfiles:"Perfil de precios",prices:"Precios",printHeader:"Encabezado de impresión",reports:"Reportes",requests:"Pedidos",returnMedication:"Devolver medicamento",scheduleSurgery:"Programar cirugía",theaterSchedule:"Horario de cirugía","today'sAppointments":"Citas de hoy",userRoles:"Roles de usuario",users:"Usuarios",workflow:"Flujo de trabajo"},titles:{}},operationReport:{labels:{additionalNotes:"Notas adicionales",assistant:"Asistente",caseComplexity:"Complejidad del caso",operationDescription:"Descripción de la operación",preOpPrimaryDiagnosis:"Diagnóstico primario pre operatorio",preOpSecondaryDiagnosis:"Diagnóstico secundario pre operatorio",surgeon:"Cirujano",surgeryDate:"Fecha de cirugía"},messages:{reportSaved:"Reporte guardado"},titles:{editTitle:"Edición de reporte de operación",newTitle:"Nuevo reporte de operación",reportSaved:"Reporte guardado"}},operativePlan:{buttons:{completePlan:"Plan completo"},labels:{additionalNotes:"Notas adicionales",admissionInstructions:"Instrucciones de admision",caseComplexity:"Complejidad de caso",completedStatus:"Completado",droppedStatus:"Caido",operationDescription:"Descripción de operación",plannedStatus:"Planificado",status:"Estatus",surgeon:"Cirujano"},messages:{planCompleted:"El plan operativo ha sido completado",planSaved:"El plan operativo ha sido guardado"},titles:{editTitle:"Editar plan operativo",newTitle:"Nuevo plan operativo",planCompleted:"Plan completado",planSaved:"Plan guardado"}},patients:{buttons:{addContact:"Agregar contrato",addExpense:"Agregar gastos",addFamilyMember:"Agregar miembro de la familia",addOperativePlan:"Agregar plan operativo",backToPatients:"Volver a lista de pacientes",download:"Descargar",editOperativePlan:"Editar plan operativo",newAppointment:"Nueva cita",newImaging:"Nueva radiografía",newLab:"Nuevo laboratorio",newMedication:"Nueva medicación",newPatient:"Paciente nuevo",newPhoto:"Nueva foto",newVisit:"Nueva visita",patientCheckIn:"Registro de paciente",scheduleSurgery:"Programar cirugía"},labels:{admissionDate:"Fecha de admisión",admit:"Admitir",bloodType:"Tipo de sangre",caption:"Titulo",civilStatus:"Estado civil",clinic:"Clínica",contacts:"Contactos",cost:"Costo",dateOfBirth:"Fecha de nacimiento",dateProcessed:"Fecha de procesamiento",dischargeDate:"Fecha de alta",dob:"DOB",education:"Nivel de Educación",email:"Correo Electrónico",externalPatientId:"Id de paciente externo",firstName:"Primer nombre",income:"Ingresos",insurance:"Seguro médico",lastName:"Apellido",middleName:"Segundo nombre",monthlyCost:"Costo mensual",occupation:"Ocupación",operativePlan:"Plan operativo",parent:"Padre",patientDays:"Días de paciente",patientType:"Tipo de paciente",patientTypeCharity:"Caridad",patientTypePrivate:"Privado",phone:"Teléfono",placeOfBirth:"Lugar de nacimiento",primaryDiagnosis:"Diagnóstico primario",referredBy:"Referido por",referredDate:"Fecha de referido",relationship:"Relación",relationships:"Relaciones",religion:"Religión",secondaryDiagnosis:"Diagnóstico secundario",sex:"Sexo",sexNotEntered:"Sexo no capturado",sources:"Fuentes",status:"Estatus",totalMontlyExpense:"Total de gastos mensuales"},messages:{areYouSureDelete:"Está seguro que desea eliminar este {object}?",createNewPatient:"Crear nuevo registro de paciente?",deletingPatient:"Eliminar paciente y todos los registros asociados",noPatientsFound:"No se encontró paciente",notFoundQuickAdd:"El paciente <strong> {patientFullName} </ strong> no se encontró. Si desea crear un nuevo paciente, complete la información a continuación, pulse el botón Cancelar para regresar.",photoFileRequired:"Por favor tome una fotografía o suba un archivo antes de guardar ",savedPatient:"El registro para el paciente: {displayName} ha sido exitoso"},navigation:{appointments:"Citas",general:"General",history:"Historial",imaging:"Radiografia",labs:"Laboratorios",medication:"Medicación",photos:"Fotos",socialWork:"Red social",visits:"Visitas"},notes:{newNote:"Nueva nota",onBehalfOfCopy:"a nombre de",onBehalfOfLabel:"A nombre de",pleaseSelectAVisit:"Por favor seleccione una visita",updateNote:"Actualizar nota desde"},titles:{addContact:"Agregar contacto",addPhoto:"Agregar fotografía",additionalContacts:"Contactos adicionales",admissionsDetail:"Detalles de la admisión",admissionsSummary:"Resumen de admisión",admittedPatients:"Pacientes admitidos",delete:"Eliminar paciente",deleteContact:"Eliminar contacto",deleteExpense:"Eliminar gasto",deleteFamilyMember:"Eliminar miembro de la familia",deletePatientRecord:"Eliminar registro de paciente",deletePhoto:"Eliminar fotografía",diagnosticTesting:"Pruebas de diagnóstico",dischargesDetail:"Detalles de descargas",dischargesSummary:"Resumen de descargas",edit:"Editar paciente",editPhoto:"Editar fotografía",expenses:"Gastos",familyInfo:"Info familiar",familyInformation:"Información familiar",new:"Paciente Nuevo",outpatientsForDate:"Pacientes externos para {visitDate}",patient:"Reporte de paciente",patientListing:"Listado de paciente",patientReport:"Reporte de paciente",patientStatus:"Estatus del paciente",proceduresDetail:"Detalle de procedimientos",proceduresSummary:"Resumen de procedimientos",savedPatient:"Paciente guardado",socialWork:"Trabajo social",todaysOutpatients:"pacientes externos hoy",totalPatientDays:"Total de días de pacientes",totalPatientDaysDetailed:"Total de días de pacientes detallado",visit:"Visitar"}},pricing:{labels:{},navigation:{}},print:{invoice:{labels:{billedBy:"Facturado por",billedDate:"Fecha de factura",dateAdmitted:"Fecha de admisión",dateDischarged:"Fecha de pago",dischargeNotes:"Notas de pago",patientAddress:"Dirección del paciente",patientAge:"Edad del paciente",patientId:"Id del paciente",patientName:"Nombre del paciente",remarks:"Observaciones",spacer:"__________________________________________"},messages:{whereConducted:"fueron deducidos durante mi estancia"},titles:{billingStatement:"Declaracion de factura",patientMember:"Miembro del paciente",patients:"Pacientes",relContact:"Relación / No. Contacto"}}},procedures:{buttons:{addMedication:"Agregar medicación"},labels:{medicationUsed:"Medicación usada"},messages:{saved:"El registro de procedimiento ha sido guardado"},titles:{addChargeItem:"Agregar cargo",addMedicationUsed:"Agregar medicación usada",deleteChargeItem:"Eliminar cargo",deleteMedicationUsed:"Eliminar medicación usada",edit:"Editar procedimiento",editChargeItem:"Editar cargo",editMedicationUsed:"Editar medicación usada",medicationUsed:"Medicación usada",new:"Nuevo procedimiento",saved:"Procedimiento guardado"}},reports:{labels:{admissionDate:"Fecha de admisión",allProcedures:"Todos los procedimientos",completedBy:"Completado por",dischargeDate:"Fecha de recuperación",examiner:"Examinador",images:"Imagenes",labs:"Laboratorios",location:"Ubicación",medications:"Medicamentos",nextAppointment:"Siguiente cita",nextAppointments:"Siguientes citas",notes:{author:"Autor",date:"Fecha",title:"Titulo"},operativePlan:{description:"Descripción",instructions:"Instrucciones",procedures:"Procedimientos",title:"Titulo"},primaryDiagnosis:"Diagnóstico primario",procedures:"Procedimientos",secondaryDiagnosis:"Diagnóstico secundario",visitDate:"Fecha de visita",visitType:"Tipo de visita"},messages:{delete:"Eliminar",saved:"Guardado"},titles:{dischargeReport:"Reporte de pago",newDischargeReport:"Nuevo reporte de pago",newOPDReport:"Nuevo reporte OPD",opdReport:"Reporte OPD",saved:"Guardado"}},user:{plusNewUser:"+ nuevo usuario",usersPageTile:"Listado de usuarios"},visits:{buttons:{addDiagnosis:"Agregar diagnóstico",checkIn:"Registro",checkOut:"Pagar e irse",discharge:"Pago",newAppointment:"Nueva cita",newDischargeReport:"Nuevo reporte de pago",newOPDReport:"Nuevo reporte OPD",newProcedure:"Nuevo procedimiento",newVitals:"Nuevos vitales"},labels:{appointment:"Cita",authoredBy:"Autorizado por",checkInTime:"Registro",checkOutTime:"Pagar e irse",createNewPatient:"Crear nuevo paciente",diagnosis:"Diagnóstico",examiner:"Examinador",finalDiagnosis:"Diagnóstico final",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"Pedidos completos",ordersNotDone:"Pedidos sin terminar",patientToCheckIn:"PAcientes a ingresar",procedure:"Procedimiento",procedureDate:"Fecha de procedimiento",reasonForVisit:"Motivo de visita",reportType:"Tipo de reporte",status:"Estatus",statusAdmitted:"Admitido",statusCheckedIn:"Registrado",statusCheckedOut:"Pagar e irse",statusDischarged:"Dado de alta",visitDate:"Fecha de visita",visitInformation:"Información de visita",visitType:"Tipo de visita"},messages:{checkOut:"Pagar e irse",checkedOut:"Pago y se fue",discharged:"Dado de alta",patientCheckedIn:"Registrado",patientCreatedAndCheckedIn:"Creado y registrado",visitAndPatientSaved:"Paciente y visita registrado",visitSaved:"Visita guardado"},navigation:{charges:"Cargos",notes:"Notas",orders:"Ordenes",procedures:"Procedimientos",reports:"Reportes",vitals:"Vitales"},titles:{additionalDiagnoses:"Diagnósticos adicionales",checkOut:"Pagar e irse",checkedIn:"Registrado",checkedOut:"Pago y se fue",discharged:"Dado de alta",editVisit:"Editar visita",newVisit:"Nueva visita",patientCheckIn:"Registro de paciente",visitSaved:"Visita guardada"}},vitals:{labels:{dateRecorded:"Fecha de guardado",dbp:"PAD",heartRate:"Ritmo cardiaco",height:"Altura",respiratoryRate:"Ritmo respiratorio",sbp:"PAS",temperature:"Temperatura",weight:"Peso"}}}}),define("hospitalrun/translations/fr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Label de l'adresse 1",address2Label:"Label de l'adresse 2",address3Label:"Label de l'adresse 3",address4Label:"Label de l'adresse 4",addressLabel:"Adresse",editTitle:"Options d'adresse",include1Label:"Label de l'include 1",include2Label:"Label de l'include 2",include3Label:"Label de l'include 3",include4Label:"Label de l'include 4",messages:{addressSaved:"Les options d'adresse ont été enregistrées"},newTitle:"Options d'adresse",titles:{optionsSaved:"Options enregistrées"}},addressOptions:"Options d'adresse",customForms:{buttons:{addField:"Ajouter un champ",moveDown:"Déplacer vers le bas",moveUp:"Déplacer vers le haut",newForm:"+ Nouveau formulaire",preview:"Aperçu"},labels:{alwaysInclude:"Toujours inclure",checkbox:"Case à cocher",colSpan:"Nombre de colonnes à fusionner",columns:"Colonnes",customForm:"Formulaire personnalisé",dischargeReportFormType:"Attestation de sortie",expenseTo:"Aux frais de",formName:"Nom du formulaire",formType:"Type du formulaire",header:"Entête",incidentFormType:"Incident",includeOtherOption:"Inclure une autre option",labFormType:"Laboratoire",label:"Label",newForm:"Nouveau formulaire",opdReportFormType:"Rapport de Patient en Consultation Externe",operativePlanFormType:"Plan Opérationnel et Rapport",otherOptionLabel:"Label d'autre option",patientFormType:"Patient",property:"Propriété",radio:"Bouton Radio",select:"Liste déroulante",socialworkFormType:"Assistant Social",text:"Texte",textarea:"Texte Large",visitFormType:"Consultation"},messages:{formSaved:"Le formulaire {name} a été enregistré"},titles:{checkboxValues:"Valeurs des Cases à Cocher",customForms:"Formulaires Personnalisés",deleteForm:"Supprimer le Formulaire Personnalisé",dropDownValues:"Valeurs du Menu Déroulant",editCustomForm:"Editer le Formulaire Personnalisé",fields:"Champs",formSaved:"Formulaire Enregistré",headerValues:"Valeur des entêtes",newCustomForm:"Nouveau Formulaire Personnalisé",radioValues:"Valeurs des Boutons Radio"}},header:{editTitle:"Options d'Entête",facilityName:"Nom de l'établissement",headerLabel:"Entête",headerLine1:"Première Ligne d'Entête",headerLine2:"Deuxième Ligne d'Entête",headerLine3:"Troisième Ligne d'Entête",logoURL:"URL du Logo",messages:{headerSaved:"Entête enregistrée"},newTitle:"Options d'Entête",titles:{optionsSaved:"Options enregistrées"}},loadDb:"Importer une base de données",loaddb:{displayAlertMessage:"Veuillez sélectionner le fichier à télécharger.",displayAlertTitle:"Sélectionner le fichier à télécharger.",editTitle:"Importer une base de données",errorDisplayAlertMessage:"La base de données n'a pas pu être importée. L'erreur est : {error}",errorDisplayAlertTitle:"Erreur de chargement",progressMessage:"Veuillez patienter durant le chargement de la base de données.",progressTitle:"Chargement de la base de données en cours"},lookup:{aisleLocationList:"Emplacement des rayons dans l'inventaire",alertImportListMessage:"Veuillez sélectionner le fichier à importer.",alertImportListSaveMessage:"La liste de référence a été importée.",alertImportListSaveTitle:"Liste importée",alertImportListTitle:"Sélectionner le fichier à importer",alertImportListUpdateMessage:"La liste de référence a été enregistrée.",alertImportListUpdateTitle:"Liste enregistrée",anesthesiaTypes:"Types d'Anesthésie",anesthesiologists:"Anesthésiologistes",billingCategories:"Catégories de facturation",clinicList:"Emplacement des cliniques",countryList:"Pays",cptCodeList:"Codes CPT",diagnosisList:"Diagnostics",edit:{template:{addTitle:"Ajouter une valeur",editTitle:"Modifier la valeur",labelTitle:"Valeur",updateButtonTextAdd:"Ajouter",updateButtonTextUpdate:"Mettre à jour"}},expenseAccountList:"Comptes de dépense",imagingPricingTypes:"Types de prix d'imagerie",incidentDepartments:"Service des Incidents",inventoryTypes:"Types d'inventaires",labPricingTypes:"Types de prix des laboratoires",pageTitle:"Listes de références",patientStatusList:"Liste de statut de patient",physicianList:"Médecins",procedureList:"Procédures",procedureLocations:"Emplacements des procédures",procedurePricingTypes:"Types de prix des procédures",radiologists:"Radiologistes",titles:{},unitTypes:"Types d'unité",vendorList:"Fournisseurs",visitLocationList:"Emplacements de consultations",visitTypes:"Types de consultations",wardPricingTypes:"Types de prix des services",warehouseList:"Emplacements d'inventaires"},lookupLists:"Listes de référence",roles:{capability:{addAllergy:"Ajouter une allergie",addAppointment:"Ajouter un Rendez-vous",addBillingDiagnosis:"Ajouter un diagnostic de facturation",addCharge:"Ajouter une charge",addDiagnosis:"Ajouter un diagnostic",addImaging:"Ajouter une imagerie",addIncident:"Ajouter un incident",addIncidentCategory:"Ajouter une catégorie d'incidents",addInventoryItem:"Ajouter un article d'inventaire",addInventoryPurchase:"Ajouter un achat d'inventaire",addInventoryRequest:"Ajouter une demande d'inventaire",addInvoice:"Ajouter une facture",addLab:"Ajouter un laboratoire",addMedication:"Ajouter un médicament",addNote:"Ajouter une note",addOperationReport:"Ajouter un rapport d'opération",addOperativePlan:"Ajouter un plan",addPatient:"Ajouter un patient",addPayment:"Ajouter un paiement",addPhoto:"Ajouter une photo",addPricing:"Ajouter un prix",addPricingProfile:"Ajouter le profil de prix",addProcedure:"Ajouter une procédure",addSocialwork:"Ajouter un assistant social",addVisit:"Ajouter une consultation",addVitals:"Ajouter les signes vitaux",adjustInventoryLocation:"Ajuster la localisation de l'inventaire",admin:"Administration",admitPatient:"Admettre un patient",appointments:"Rendez-vous",billing:"Facturation",cashier:"Caissière",completeImaging:"Compléter une imagerie",completeLab:"Compléter un test de laboratoire",defineUserRoles:"Rôles d'utilisateur",deleteAppointment:"Supprimer un rendez-vous",deleteDiagnosis:"Supprimer un diagnostic",deleteImaging:"Supprimer une Imagerie",deleteIncident:"Supprimer un incident",deleteIncidentCategory:"Supprimer une catégorie d'incidents",deleteInventoryItem:"Supprimer un article d'inventaire",deleteInvoice:"Supprimer une facture",deleteLab:"Supprimer un test de laboratoire",deleteMedication:"Supprimer un médicament",deleteNote:"Supprimer une note",deletePatient:"Supprimer un patient",deletePhoto:"Supprimer une photo",deletePricing:"Supprimer un Prix",deletePricingProfile:"Supprimer le profil de prix",deleteProcedure:"Supprimer une procédure",deleteSocialwork:"Supprimer un assistant social",deleteVisit:"Supprimer une consultation",deleteVitals:"Supprimer des signes vitaux",dischargePatient:"Libérer un patient",editInvoice:"Modifier la facture",fulfillInventory:"Traiter l'inventaire",fulfillMedication:"Traiter une demande de médicaments",generateIncidentReport:"Générer un rapport d'incident",imaging:"Imagerie",incident:"Incident",inventory:"Inventaire",invoices:"Factures",labs:"Laboratoires",listPaidInvoices:"Liste des factures réglées",loadDb:"Charger la Base de données",manageIncidents:"Gérer les incidents",medication:"Médicament",overrideInvoice:"Remplacer la facture",patientReports:"Rapports des patients",patients:"Patients",pricing:"Tarification",updateConfig:"Mettre à jour les Configurations",visits:"Consultations"},messages:{roleSaved:"Le rôle {roleName} a été enregistré."},titles:{roleSaved:"Rôle enregistré"}},textReplacements:{createNew:"Créer un nouveau shortcode",existingRepl:"Remplacer un shortcode existant",noMatches:"Aucun remplacement trouvé pour '{term}'",pageTitle:"Shortcodes",performExpand:"Appuyer sur Entrée pour remplacement #{from} par '{to}'",possibleExpansions:"Remplacements possibles : {possible}",replDesc:"Lors de la saisie d'un texte, ces raccourcis permettent de remplacer une courte séquence de caractères par une phrase plus longue.",replaceWith:"Remplacer par",toReplace:"Texte à remplacer"},userRoles:"Rôles utilisateurs",users:"Utilisateurs",visitForms:{labels:{followup:"Suivre",form:"Formulaire",initial:"Initiale",visitType:"Type de visite"},titles:{visitForms:"Formulaire de visite"}},workflow:{admissionDepositLabel:"Dépôt d'admission requise",clinicPrepaymentLabel:"Paiement préalable par la clinique requis",editTitle:"Options du flux de travail",followupPrepaymentLabel:"Suivi du paiement préalable requis",messages:{optionsSaved:"Les options du flux de travail ont été enregistrées"},newTitle:"Options du flux de travail",outpatientImagingLabel:"Paiement préalable de l'imagerie par le patient en consulation externe requis",outpatientLabLabel:"Paiement préalable du test de laboratoire par le patient en consultation externe requis",outpatientMedicationLabel:"Paiement préalable des médicaments par le patient en consultation externe requis",titles:{optionsSaved:"Options sauvegardées"},workflowLabel:"Flux de travail"}},alerts:{errorExclamation:"Erreur !",pleaseWait:"Merci de patienter",reportError:"Rapport d'erreur généré",warningExclamation:"Attention !"},allergies:{buttons:{addAllergy:"Ajouter une allergie"},labels:{allergyName:"Nom de l'allergie",patientAllergy:"Allergies du patient"},titles:{addAllergy:"Ajouter une allergie",editAllergy:"Modifier une allergie"}},application:{messages:{sessionExpired:"Votre session a expirée. Merci de vous reconnecter pour continuer"},titles:{sessionExpired:"Session expirée"}},appointments:{buttons:{newButton:"+ nouveau rendez-vous",scheduleSurgery:"+ planifier chirurgie"},calendarTitle:"Calendrier des rendez-vous",currentScreenTitle:"Liste des rendez-vous",editTitle:"Modifier le rendez-vous",labels:{noLocation:"Aucune localisation",selectedStartingDate:"Date de début"},messages:{appointmentSaved:"Le rendez-vous de {patient} a été sauvegardé",endTimeLaterThanStart:"Veuillez sélectionnez une heure de fin plus tard que l'heure de début."},missed:"Rendez-vous manqués",newTitle:"Nouveau rendez-vous",searchTitle:"Rechercher les rendez-vous",sectionTitle:"Rendez-vous",thisWeek:"Rendez-vous de la semaine",titles:{appointmentSaved:"Rendez-vous sauvegardé",editSurgicalAppointment:"Modifier un rendez-vous chirurgical",newSurgicalAppointment:"Nouveau rendez-vous chirurgical"},todayTitle:"Rendez-vous d'aujourd'hui"},billing:{alerts:{noInvoiceFound:"Aucune facture trouvée",noPricingItems:"Aucun prix trouvé",noPricingProfiles:"Aucun profil de prix trouvé"},buttons:{addOverride:"Ajouter un dépassement",createInvoice:"Créer une facture ?"},labels:{actualCharges:"Frais réels",discountAmount:"Montant de remise",discountPercentage:"Taux de remise",externalInvoiceNumber:"Numéro de facture externe #",hmoCom:"Organisme d'assurance maladie",insurance:"Assurance santé",paymentProfile:"Profil de paiement",paymentsDeposits:"Paiement / Dépôt",pricingPanelOverrides:"Remplacer le profil de prix",pricingProfile:"Profil de prix",setFee:"Définir les frais"},messages:{flatDiscountMsg:"Il existe une remise fixe appliquée à la responsabilité financière du patient d'un montant de {currency}{discountAmount}.",flatFeeMsg:"Il existe des frais forfaitaires pour le patient d'un montant de {setFee}{currency}."},navigation:{}},buttons:{add:"Ajouter",addItem:"Ajouter un article",addLineItem:"Ajouter une ligne d'article",addValue:"Ajouter une valeur",addVisit:"Ajouter une visite",allRequests:"Toutes les demandes",barcode:"Code barre",cancel:"Annuler",clear:"Remettre à blanc",close:"Fermer",complete:"Traiter",delete:"Supprimer",dispense:"Dispenser",edit:"Modifier",filter:"Filtrer",fulfill:"Traiter",import:"Importer",loadFile:"Télécharger le fichier",newItem:"+ nouvel article",newNote:"Nouvelle note",newRequest:"Nouvelle demande",newRequestPlus:"+ nouvelle demande",newUser:"Nouvel utilisateur",ok:"Ok",print:"Imprimer",remove:"Retirer",returnButton:"Retourner",review:"Réviser",search:"Rechercher",showAll:"Tout afficher",showFewer:"Afficher moins",update:"Mettre à jour"},components:{chargesByTypeTab:{charges:"Charges"},customFormManager:{buttons:{addForm:"Ajouter un formulaire"}},dateTimePicker:{amHour:"{hour}",midnight:"Minuit",noon:"Midi",pmHour:"{hour}"},imageUpload:{messages:{selectValidImageFile:"Merci de séléctionner une image valide."}},operativeProcedures:{buttons:{addProcedure:"Ajouter une procédure"},labels:{procedure:"Procédure"},titles:{procedures:"Procédures"}},patientOrders:{buttons:{newImaging:"Nouvelle imagerie",newLab:"Nouveau laboratoire",newMedication:"Nouveau médicament"},labels:{imagingOrderType:"Imagerie",labOrderType:"Laboratoire",medicationOrderType:"Médicament",orderType:"Type de commande"}},priceList:{charges:"{pricingType} charges"},quantityCalc:{result:"{targetUnit} total: {calculated}"},quantityConv:{conversion:"Que contient un {name} ?",unit:"Unité"},sortableColumn:{labels:{selectAll:"(Tous sélectionner)"}},takePhoto:{camera:"Appareil Photo",how:"Comment voulez-vous ajouter une photo ?",labels:{takeAPicture:"Prendre une photo",uploadAFile:"Envoyer un fichier"},photo:"Photo",preview:"Prévisualiser",takePhoto:"Prendre la photo",uploadFile:"Importer le fichier"},upcomingAppointments:{labels:{date:"Date",location:"Localisation",type:"Type",with:"Avec"},titles:{upcomingAppointments:"Prochains rendez-vous"}}},customForms:{buttons:{addForm:"Ajouter un formulaire"},labels:{formToAdd:"Formulaire à ajouter"},titles:{addCustomForm:"Ajouter un formulaire personnalisé"}},dashboard:{needs_user_setup:"Nous vous recommandons d'ajouter un compte utilisateur",standalone_welcome:'<h4>Merci d\'avoir téléchargé HospitalRun</h4><p>HospitalRun s\'exécute en mode autonome. Ce mode supporte plusieurs utilisateurs sur une seule instance d\'HospitalRun sur PC/ordinateur portable. Idéal pour :</p><ul><li>Evaluer HospitalRun pour un potentiel déploiement sur un serveur.</li><li>Utiliser la plateforme pour une clinique / établissement où une seule instance suffit</li></ul><p>Si vous considérez un déploiement sur plusieurs apperails, nous travaillons <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">sur des fonctionnalités</a> qui vous permettront de "migrer" depuis cette unique instance vers un cloud traditionnel / déploiement basé sur un serveur.</p>',title:"Que voulez-vous faire?"},dates:{long:"{years} année {months} mois {days} jours",longOmitDays:"{years} année {months} mois",longOmitDaysPlural:"{years} années {months} mois",longOmitDaysYears:"{months} mois",longOmitYears:"{months} mois {days} jours",longPlural:"{years} années {months} mois {days} jours",short:"{years}a {months}m {days}j",shortOmitYears:"{months}m {days}j"},diagnosis:{labels:{activeDiagnosis:"Diagnostic actif",date:"Date",diagnosis:"Diagnostic",secondaryDiagnosis:"Second diagnostic"},titles:{addDiagnosis:"Ajouter un diagnostic",editDiagnosis:"Modifier un diagnostic"}},errors:{accepted:"doit être accepté",blank:"ne peut pas être vide",confirmation:"ne correspond pas à {attribute}",empty:"ne peut pas être vide",equalTo:"doit être égal à {count}",even:"doit être pair",exclusion:"est réservé",greaterThan:"doit être supérieur à {count}",greaterThanOrEqualTo:"doit être supérieur ou égal à {count}",inclusion:"ne fait pas partie de la liste",invalid:"est invalide",invalidNumber:"n'est pas un nombre valide",lessThan:"doit être inférieur à {count}",lessThanOrEqualTo:"doit être inférieur ou égal à {count}",notANumber:"n'est pas un nombre",notAnInteger:"doit être un entier",odd:"doit être impair",otherThan:"doit être différent de {count}",present:"doit être vide",result:"Merci de saisir un résultat avant de compléter",tooLong:"est trop long ({count} caractères maximum)",tooShort:"est trop court ({count} caractères minimum)",wrongLength:"n'est pas de la bonne longueur (devrait être de {count} caractères)"},headings:{chargedItems:"Articles facturés"},imaging:{alerts:{completedMessage:"La demande d'imagerie a été traitée.",completedTitle:"Demande d'imagerie traitée",savedMessage:"La demande d'imagerie a été enregistrée.",savedTitle:"Demande d'imagerie enregistrée"},buttons:{newButton:"+ nouvelle imagerie"},labels:{addNewVisit:"--Ajouter une nouvelle visite--",completedBy:"Réalisée par",radiologist:"Radiologiste",requestedNotes:"Notes requises",resultNotes:"Notes de résultat"},messages:{noCompleted:"Aucun article traité retrouvé."},pageTitle:"Demandes d'imagerie",sectionTitle:"Imagerie",titles:{completedImaging:"Imagerie traitée",editTitle:"Modifier la demande d'imagerie",newTitle:"Nouvelle demande d'imagerie"}},incident:{buttons:{add:"Ajouter",addForm:"+ Ajouter un formulaire",addItem:"Ajouter un article",cancel:"Annuler",delete:"Supprimer",download:"Télécharger",edit:"Modifier",export:"Exporter",generateRep:"Générer un rapport",newAttachment:"+ Nouvelle pièce jointe",newCategory:"+ Nouvelle catégorie",newIncident:"+ Nouvel incident",newNote:"+ Nouvelle note"},labels:{actions:"Actions",addedBy:"Ajouter par",category:"Catégorie",categoryItem:"Catégorie d'articles",date:"Date",dateRecorded:"Date d'enregistrement",department:"Service",description:"Description",endDate:"Date de fin",givenBy:"Donné par",howToAddAttachment:"Comment voulez-vous ajouter votre pièce jointe ?",incidentDate:"'Date de l'incident",incidentId:"ID de l'incident",item:"Article",lastUpdated:"Dernière mise à jour",note:"Note",patientId:"ID du patient",patientImpacted:"Patient impacté",reportType:"Type de rapport",reportedBy:"Rapporté par",reportedDate:"Date de rapport",reportedTo:"Incident rapporté à",sentinelEvent:"Evénement sentinelle",startDate:"Date de début",status:"Statut",statusActive:"Actif",statusClosed:"Fermé",statusFollowup:"Suivi",statusReported:"Rapporté",title:"Titre",total:"Total",updatedBy:"Mise à jour par"},messages:{attachmentFileRequired:"Merci d'envoyer un fichier ou de prendre une photo avant de sauvegarder cette pièce jointe",createNew:"Créer un nouvel incident ?",createNewIncidentCategory:"Créer une nouvelle catégorie d'incident ?",fillIn:"Remplissez les options ci-dessus pour calculer le score",incidentCategorySaved:"La catégorie {name} a été sauvegardée",noClosedIncidents:"Aucun incident fermé trouvé",noIncidentCategoriesFound:"Aucune catégorie d'incident trouvée",noIncidents:"Aucun incident trouvé",saved:"Le rapport d'incident a été sauvegardé",selectExistingPatient:"Merci de sélectionner un patient existant ou de laisser ce champ vide"},titles:{addAttachment:"Ajouter une pièce jointe",addCategoryItem:"Ajouter une catégorie d'article",addNote:"Ajouter une note",attachments:"Pièces jointes",closed:"Fermer l'incident",current:"Courant",deleteAttachment:"Supprimer la pièce jointe",deleteIncident:"Supprimer l'incident",deleteIncidentCategory:"Supprimer la catégorie d'incident",deleteItem:"Supprimer l'article",deleteNote:"Supprimer la note",editAttachment:"Modifier la pièce jointe",editIncident:"Modifier l'incident",editIncidentCategory:"Modifier la catégorie d'incident",editNote:"Modifier la note",general:"Informations générales",history:"Historique",incidentCategories:"Catégories d'incident",incidentCategoryItem:"Membre de la catégorie d'incident",incidentCategoryName:"Nom de la catégorie d'incident",incidentCategorySaved:"Catégorie d'incident sauvegardée",incidentSaved:"Incident sauvegardé",incidents:"Incidents",incidentsByCategory:"Incidents par catégorie",incidentsByDepartment:"Incidents par service",newIncident:"Nouvel incident",newIncidentCategory:"Nouvel catégorie d'incident",notes:"Notes",reports:"Rapports"}},inventory:{edit:{cost:"Coût par unité:",delivered:"Livré à:",location:"Emplacement ajusté:",prescription:"Ordonnance pour:",pulled:"Tiré de:",quantity:"Quantité après traitement:",reason:"Motif:",returned:"Retourné par le patient:",transferredFrom:"Transféré de:",transferredTo:"Transféré à:"},labels:{action:"Action",add:"Ajouter",addAdjustmentType:"Ajouter",adjust:"Ajuster",adjustmentDate:"Date d'ajustement",adjustmentFor:"Ajustement pour",adjustmentType:"Type d'ajustement",aisle:"Rayon",aisleLocation:"Emplacement du rayon",allInventory:"Tout l'inventaire",allItems:"Tous les articles",availableQuantity:"Quantité disponible",billTo:"Facturer à",consumePurchases:"Utiliser les achats",consumptionRate:"Taux d'utilisation",cost:"Coût",costPerUnit:"Coût par unité",crossReference:"Référence",currentQuantity:"Quantité actuelle",dateCompleted:"Date de traitement",dateEffective:"Date d'effet",dateEnd:"Date de fin",dateReceived:"Date de réception",dateStart:"Date de debut",dateTransferred:"Date de transfert",daysLeft:"Nombre de jours restants",deleteItem:"Supprimer l'article",deliveryAisle:"Rayon de livraison",deliveryLocation:"Emplacement de livraison",details:"Détails",distributionUnit:"Unité de distribution",editItem:"Modifier l'article",expense:"Dépenses pour",expirationDate:"Date d'expiration",fulfillRequest:"Traiter la demande",fulfillRequestNow:"Traiter la demande maintenant",gift:"Don en nature",giftInKindNo:"N",giftInKindYes:"O",giftUsage:"Utilisation de don en nature",inventoryConsumed:"Inventaire utilisé",inventoryItem:"Article à inventorier",inventoryObsolence:"Inventory Obsolence",invoiceItems:"Articles de facture",invoiceLineItem:"Article de facture",invoiceNumber:"Numéro de facture",item:"Article",itemNumber:"Numéro d'article",items:"Articles",location:"Emplacement",locations:"Emplacements",markAsConsumed:"Marqué comme utilisé",name:"Nom",newItem:"Nouvel article",originalQuantity:"Quantité originale",print:"Imprimer",printBarcode:"Imprimer le code barre",printer:"Imprimante",pullFrom:"Tirer de",purchaseCost:"Coût d'achat",purchaseInfo:"Détails de l'achat",purchases:"Achats",quantity:"Quantité ({unit})",quantityAvailable:"Quantité disponible",quantityOnHand:"Quantité en main",quantityRequested:"Quantité demandée",rank:"Rang",reason:"Motif",remove:"Retirer",removeAdjustmentType:"Supprimer un type d'ajustement",reorderPoint:"Point de commande",requestedItems:"Articles demandés",returnAdjustmentType:"Renvoyer",returnToVendorAdjustmentType:"Renvoyer au vendeur",salePricePerUnit:"Prix de vente unitaire",save:"Enregistrer",serialNumber:"Numéro de série / lot",total:"Total",totalCost:"Coût total",totalReceived:"Total reçu: {total}",transaction:"Transaction",transactions:"Transactions",transfer:"Transférer",transferFrom:"Transféré de",transferTo:"Transférer à l'emplacement",transferToAisle:"Transférer à l'emplacement du rayon",unit:"Unité",unitCost:"Coût unitaire",vendor:"Fournisseur",vendorItemNumber:"Numéro d'article fournisseur",writeOffAdjustmentType:"Considérer comme perdu",xref:"XRef"},messages:{adjust:"Veuillez ajuster les quantités sur le ou les emplacement(s) approprié(s) pour tenir compte de la différence de {difference}.",createRequest:"Créer une nouvelle demande?",itemNotFound:"L'article d'inventaire <strong>{item}</strong> n'a pas pu être retrouvé.<br>Si vous voulez créer un nouvel article d'inventaire, veuillez saisir les informations ci-dessous. <br>Sinon, appuyez sur le bouton Annuler pour retourner.",loading:"Chargement des transactions en cours…",noItems:"Aucun article retrouvé.",noRequests:"Aucune demande retrouvée.",purchaseSaved:"Les achats d'inventaire ont été enregistrés avec succès.",quantity:"La quantité totale de <strong>({quantity})</strong> ne correspond pas à la quantité totale dans les emplacements <strong>({locationQuantity})</strong>.",removeItem:"Etes-vous sûr de vouloir retirer cet article de cette facture?",removeItemRequest:"Etes-vous sûr de vouloir supprimer cet article de cette demande?",requestFulfilled:"La demande d'inventaire a été traitée.",requestUpdated:"La demande d'inventaire a été mise à jour.",warning:"Veuillez remplir les champs obligatoires (marqués d'un *) et corriger les erreurs avant d'ajouter."},reports:{adjustment:"Ajustement détaillé",daysSupply:"Stock restant (en nombre de jours)",expenseDetail:"Détails des dépenses",expenseSum:"Résumé des dépenses",expiration:"Date d'expiration",export:"Exporter un rapport",fields:"Champs à inclure",finance:"Résumé des finances",generate:"Créer un rapport",invLocation:"Inventaire par emplacement",invValuation:"Valorisation de l'inventaire",purchaseDetail:"Détails de l'achat",purchaseSum:"Résumé de l'achat",reportType:"Type de rapport",rows:{adjustments:"Ajustements",adjustmentsTotal:"Ajustements totaux",balanceBegin:"Solde d'ouverture",balanceEnd:"Solde de clôture",category:"Catégorie",consumed:"Utilisé",consumedGik:"GiK utilisé",consumedGikTotal:"GiK total utilisé",consumedPuchases:"Achats utilisés",consumedPurchasesTotal:"Achats totaux utilisés",consumedTotal:"Total utilisé",errInFinSum:"Erreur dans _generateFinancialSummaryReport: ",errInFindPur:"Erreur dans _findInventoryItemsByPurchase: ",errInFindReq:"Erreur dans _findInventoryItemsByRequest: ",expensesFor:"Dépenses pour: ",noAccount:"(Pas de compte)",subtotal:"Sous-total: ",subtotalFor:"Sous-total pour {category} - {account}: ",total:"Total: ",totalFor:"Total pour {var}: ",totalPurchases:"Achats totaux",transfer1:"{quantity} de {location}",trasnfer2:"De: {source} A: {target}"},stockTransferDetail:"Transfert détaillé du stock",stockTransferSum:"Résumé du transfert du stock",stockUsageDetail:"Utilisation détaillée du stock",stockUsageSum:"Résumé de l'utilisation du stock",titleDateRange:"Rapport {name} {startDate} - {endDate}",titleSingleDate:"Rapport {name} {date}"},titles:{addPurchase:"Ajouter un achat",addRequest:"Nouvelle demande",adjustment:"Ajustement",editPurchase:"Modifier l'achat",editRequest:"Modifier la demande",inventoryItem:"Nouvel article d'inventaire",inventoryReport:"Rapport d'inventaire",purchaseSaved:"Achats d'inventaire enregistrés",quickAddTitle:"Nouvel article d'inventaire",removeItem:"Retirer l'article",requestFulfilled:"Demande traitée",requestUpdated:"Demande mise à jour",transfer:"Transférer les articles",warning:"Attention!!!!!"}},labels:{action:"Action",actions:"Actions",addNewOutpatientVisit:"--Ajouter une nouvelle consultation externe--",address:"Adresse",age:"Age",allDay:"Toute la journée",allItems:"Tous les items",amount:"Montant",anesthesia:"Anesthésie",assisting:"Assistant",balanceDue:"Solde dû",billDate:"Date de facture",billTo:"Facturer à",category:"Catégorie",completed:"Traité",country:"Pays",cptcode:"Code CPT",creditTo:"Crédit à",currencySymbol:"€",date:"Date",dateCompleted:"Date de traitement",dateOfBirth:"Date de naissance",dateOfBirthShort:"DdN",datePaid:"Date de paiement",dateRequested:"Date de demande",delete:"Supprimer",deleteRequest:"Supprimer la demande",deleteUser:"Supprimer un utilisateur",department:"Service",description:"Description",discount:"Remise",displayName:"Nom à afficher",docRead:"Documents lus",docWritten:"Documents écrits",edit:"Modifier",editUser:"Modifier un utilisateur",email:"Email",endDate:"Date de fin",endTime:"Heure de fin",excess:"Excédent",expenseTo:"Frais à",fileLoadSuccessful:"Téléchargement réussi",fileName:"Nom du fichier",fileToLoad:"Téléchargement de fichier",from:"De",fulfill:"Traiter",fulfillRequest:"Traiter la demande",fulfillRequestNow:"Traiter la demande maintenant",fulfilled:"Traité",grandTotal:"Somme finale",id:"Id",imageOrders:"Demandes d'imagerie",imagingType:"Type d'imagerie",importFile:"Importer un fichier",invoiceId:"ID de la facture",labOrders:"Demandes de labo",lineItems:"Articles de ligne",loading:"Chargement",location:"Emplacement",lookupType:"Type de référence",medication:"Médicament",name:"Nom",newItem:"+ Nouvel item",newUser:"Nouvel utilisateur",note:"Note",notes:"Notes",number:"Numéro",on:"sur",password:"Mot de passe",patient:"Patient",payments:"Paiement",physician:"Médecin",prescriber:"Prescripteur",prescription:"Ordonnance",prescriptionDate:"Date de prescription",price:"Prix",print:"Imprimer",procedures:"Procédures",provider:"Fournisseur",pullFrom:"Tirer de",quantity:"Quantité",remarks:"Remarque",requestedBy:"Demandé par",requestedOn:"Demandé le",requests:"Demandes",result:"Résultat",results:"Résultats",role:"Rôle",search:"Recherche",sex:"Sexe",startDate:"Date de début",startTime:"Heure de début",status:"Statut",takenBy:"Pris par",to:"À",total:"Total",type:"Type",userCanAddNewValue:"L'utilisateur peut ajouter de nouvelles valeurs",username:"Nom d'utilisateur",value:"Valeur",view:"Afficher",visit:"Visite",with:"Avec"},labs:{alerts:{requestCompletedMessage:"La demande de labo a été traitée.",requestCompletedTitle:"Demande de labo traitée",requestSavedMessage:"La demande de labo a été enregistrée.",requestSavedTitle:"Demande de labo enregistrée"},buttons:{newButton:"+ nouveau labo"},completedTitle:"Labos traités",deleteTitle:"Supprimer la demande",editTitle:"Modifier la demande de labo",labels:{addNewVisit:"--Ajouter une nouvelle visite--",labType:"Type de labo"},messages:{createNewRecord:"Créer un nouveau dossier?",noCompleted:"Aucun article traité retrouvé.",noItemsFound:"Aucun labo retrouvé."},newTitle:"Nouvelle demande de labo",requestsTitle:"Demandes de labo",sectionTitle:"Labos"},languageName:"Français",loading:{messages:{0:"La vitesse maximale du vol de papillon est de 20 kilomètres par heure. Certains mites peuvent voler jusqu'à 40 kilomètres par heure !",1:"Les chouettes sont les seuls oiseaux qui peuvent voir la couleur bleue",10:"Votre langue est le seul muscle du corps qui est attaché à un seul endroit.",11:"Les chameaux ont trois paupières pour se protéger contre le sable.",2:"Les chats disposent de plus de 100 sons vocaux ; Les chiens seulement 10.",3:"Les humains utilisent 72 muscles différents pour parler",4:"Plus de 1000 langues différentes sont parlées sur le continent Africain.",5:"Un érythrophobe est quelqu'un qui rougit facilement.",6:"La phobie la plus commune au monde est l'odynophobie qui est la peur de la douleur.",7:"Votre corps utilise 300 muscles pour s'équilibrer lorsqu'il est immobile.",8:"Certaines grenouilles peuvent être congelées puis décongelées, et continuer à vivre.",9:"Nos yeux ont leur taille définitive dès la naissance, mais notre nez et nos oreilles ne cessent jamais de grandir."},progressBar:{progress:"{progressBarValue}%"}},login:{labels:{password:"Mot de passe",signIn:"Connexion",username:"Nom d'utilisateur"},messages:{error:"Nom d'utilisateur ou mot de passe incorrect.",offlineError:"Impossible de se connecter hors ligne. Merci de vous connecter et de réessayer",signIn:"Veuillez vous connecter"}},medication:{alerts:{fulfilledTitle:"Demande de médicament traitée",returnedMessage:"Le médicament a été marqué comme retourné.",returnedTitle:"Médicament retourné",savedMessage:"Le dossier de médicament a été enregistré.",savedTitle:"Demande de médicament enregistrée"},buttons:{dispenseMedication:"dispenser un médicament",newButton:"+ nouvelle demande",returnMedication:"retourner un médicament"},labels:{adjustmentDate:"Date d'ajustement",creditToAccount:"Créditer le compte",quantityDispensed:"Quantité dispensée",quantityDistributed:"Quantité distribuée",quantityRequested:"Quantité demandée",quantityToReturn:"Quantité à retourner",refills:"Renouvellements",returnAisle:"Rayon de retour",returnLocation:"Emplacement de retour",returnReason:"Motif/notes du retour"},messages:{createNew:"Créer une nouvelle demande de médicament?"},pageTitle:"Demandes de médicament",returnMedication:"Retourner un médicament",sectionTitle:"Médicament",titles:{completedMedication:"Médicament traité",editMedicationRequest:"Modifier une demande de médicament",newMedicationRequest:"Nouvelle demande de médicament"}},messages:{createNewRecord:"Créer un nouveau dossier?",createNewUser:"Créer un nouvel utilisateur?",delete:"Voulez-vous vraiment supprimer {name} ?",delete_plural:"Voulez-vous vraiment supprimer ces {name} ?",delete_singular:"Voulez-vous vraiment supprimer ce {name} ?",forAuthorizedPersons:"Ce rapport est destiné uniquement aux personnes autorisées.",newPatientHasToBeCreated:"Un nouveau patient doit être créé...Veuillez patienter...",noHistoryAvailable:"Aucun historique disponible.",noItemsFound:"Aucun article retrouvé.",noNotesAvailable:"Aucune note clinique supplémentaire disponible pour cette visite.",noUsersFound:"Aucun utilisateur retrouvé.",onBehalfOf:"de la part de",reportError:"Une erreur est apparue pendant la génération du rapport demandé. Merci de prévenir votre administrateur système de l'erreur rencontrée.",requiredFieldsCorrectErrors:"Veuillez remplir les champs obligatoires (annotés d'un *) et corriger les erreurs avant de sauvegarder.",saveActionException:"Une erreur est apparue pendant la tentative de sauvegarde: {message}",sorry:"Désolé, quelque chose a mal tourné ...",userHasBeenSaved:"L'utilisateur a été enregistré.",userSaved:"Utilisateur enregistré"},models:{appointment:{labels:{allDay:"Toute la journée",appointmentDate:"Date",appointmentType:"Type",endDate:"Date de fin",location:"Localisation",notes:"Notes",patient:"Patient",provider:"Avec",startDate:"Date de début",status:"Statut",type:"Type"},names:{plural:"Rendez-vous",singular:"Rendez-vous"}},attachment:{names:{plural:"Pièces jointes",singular:"Pièce jointe"}},form:{names:{plural:"Formulaires",singular:"Formulaire"}},imaging:{names:"Imagerie",request:{plural:"Demandes d'imagerie",singular:"Demande d'imagerie"}},incident:{names:{plural:"Incidents",singular:"Incident"}},item:{names:{plural:"Articles",singular:"Article"}},lab:{names:{plural:"Laboratoires",singular:"Laboratoire"},request:{plural:"Demandes de laboratoire",singular:"Demande de laboratoire"}},medication:{names:{plural:"Médicaments",singular:"Médicament"},request:{plural:"Demandes de médication",singular:"Demande de médication"}},note:{names:{plural:"Notes",singular:"Note"}},patient:{labels:{name:"Nom"},names:{singular:"Patient"}},procedure:{names:{plural:"Procédures",singular:"Procédure"}},user:{names:{plural:"Utilisateurs",singular:"Utilisateur"}},visit:{names:{plural:"Visites",singular:"Visite"}},vital:{names:{plural:"Vitaux",singular:"Vital"}}},navigation:{about:"À propos de HospitalRun",actions:{login:"Connexion",logout:"Déconnexion",selectLanguage:"Choisir la langue"},administration:"Administration",billing:"Facturation",imaging:"Imagerie",incident:"Incident",inventory:"Inventaire",labs:"Labos",medication:"Médicament",messages:{logoutFailed:"Impossible de se déconnecter pour le moment. La déconnexion n'est pas disponible en mode hors ligne."},patients:"Patients",scheduling:"Planning",subnav:{actions:"Actions",addAppointment:"Ajouter un rendez-vous",addressFields:"Champs d'adresse",admittedPatients:"Patients admis",appointmentSearch:"Rechercher un rendez-vous",appointmentsCalendar:"Planning des rendez-vous",appointmentsThisWeek:"Rendez-vous cette semaine",cashier:"Caissière",completed:"Traité",currentIncidents:"Incidents courants",customForms:"Formulaires personnalisés",dispense:"Dispenser",history:"Historique",incidentCategories:"Catégories d'icindent",inventoryReceived:"Inventaire reçu",inventoryReceivedPlus:"+ Inventaire reçu",invoices:"Factures",items:"Articles",loadDB:"Charger BDD",lookupLists:"Listes de référence",newIncident:"Nouvel incident",newInvoice:"Nouvelle facture",newPatient:"Nouveau patient",newRequest:"Nouvelle demande",newUser:"Nouvel utilisateur",outpatient:"Patient ambulatoire",patientListing:"Liste des patients",priceProfiles:"Profils de prix",prices:"Prix",printHeader:"Imprimer l'entête",reports:"Rapports",requests:"Demandes",returnMedication:"Retourner un Médicament",scheduleSurgery:"Planifier une chirgurie",textReplacements:"Texte de remplacement",theaterSchedule:"Horaires du théâtre","today'sAppointments":"Rendez-vous du jour",userRoles:"Rôles de l'utilisateur",users:"Utilisateurs",workflow:"Flux de travail"},titles:{logoutFailed:"Erreur de déconnexion"}},operationReport:{labels:{additionalNotes:"Notes supplémentaires",assistant:"Assistant",caseComplexity:"Complexité du cas",operationDescription:"Description de l'opération",preOpPrimaryDiagnosis:"Premier diagnostic pré-opération",preOpSecondaryDiagnosis:"Second diagnostic pré-opération",surgeon:"Chirurgien",surgeryDate:"Date de la chirgurie"},messages:{reportSaved:"Le rapport d'opération a été sauvegardé"},titles:{editTitle:"Modifier le rapport d'opération",newTitle:"Nouveau rapport d'édition",reportSaved:"Rapport sauvegardé"}},operativePlan:{buttons:{completePlan:"Terminer le plan"},labels:{additionalNotes:"Notes supplémentaires",admissionInstructions:"Instructions d'admission",caseComplexity:"Complexité du cas",completedStatus:"Terminé",droppedStatus:"Annulé",operationDescription:"Description d'opération",plannedStatus:"Planifié",status:"Statut",surgeon:"Chirurgien"},messages:{planCompleted:"Le plan d'opération est terminé. Vous allez maintenant être redirigé vers le rapport d'opération.",planSaved:"Le plan d'opération a été sauvegardé."},titles:{editTitle:"Modifier le plan d'opération",newTitle:"Nouveau plan d'opération",planCompleted:"Plan terminé",planSaved:"Plan sauvegardé"}},patients:{buttons:{addContact:"Ajout d'un contact",addExpense:"Ajout de frais",addFamilyMember:"Ajout d'un membre de la famille",addOperativePlan:"Ajout d'un plan d'opération",backToPatients:"Retour à la liste des patients",download:"Télécharger",editOperativePlan:"Modifier le plan d'opération courant",newAppointment:"Nouveau rendez-vous",newImaging:"Nouvelle imagerie",newLab:"Nouveau laboratoire",newMedication:"Nouveau médicament",newPatient:"Nouveau patient",newPhoto:"Nouvelle photo",newVisit:"Nouvelle visite",patientCheckIn:"Enregistrement du client",scheduleSurgery:"Planifier une chirurgie"},labels:{admissionDate:"Date d'admission",admit:"Admettre",bloodType:"Type sanguin",caption:"Légende",civilStatus:"Statut civil",clinic:"Clinique",contacts:"Contacts",cost:"Coût",dateOfBirth:"Date de naissance",dateProcessed:"Date de traitement",dischargeDate:"Date de sortie",dob:"DdN",education:"Education",email:"Email",externalPatientId:"ID externe du patient",firstName:"Prénom",income:"Revenu",insurance:"Assurance",lastName:"Nom",middleName:"Deuxème nom",monthlyCost:"Coût mensuel",occupation:"Occupation",operativePlan:"Plan opérationnel",parent:"Parent",patientDays:"Jours du patient",patientType:"Type du patient",patientTypeCharity:"Association caritative",patientTypePrivate:"Privé",phone:"Téléphone",placeOfBirth:"Lieu de naissance",primaryDiagnosis:"Premier diagnostic",referredBy:"Réferencé par",referredDate:"Date de référence",relationship:"Relation avec le patient",relationships:"Relations",religion:"Religion",secondaryDiagnosis:"Second diagnostic",sex:"Sexe",sexNotEntered:"Sexe non précisé",sources:"Sources",status:"Statut du patient",totalMontlyExpense:"Dépenses mensuelles"},messages:{areYouSureDelete:"Voulez-vous vraiment supprimer {object} ?",createNewPatient:"Créer un nouveau dossier patient ?",deletingPatient:"Supprimer le patient et tous ses dossiers associés",noPatientsFound:"Aucun patient trouvé.",notFoundQuickAdd:"Le patient <strong>{patientFullName}</strong> n'a pas été trouvé. Si vous souhaitez créer le patient, remplissez les informations ci-dessous. Sinon, utilisez sur le bouton précédent pour revenir à la page précédente.",photoFileRequired:"Merci de prendre une photo ou d'en envoyer une avant d'enregistrer.",savedPatient:"Le dossier du patient {displayName} a été sauvegardé."},navigation:{appointments:"Rendez-vous",general:"Général",history:"Historique",imaging:"Imagerie",labs:"Laboratoires",medication:"Médicaments",photos:"Photos",socialWork:"Travail social",visits:"Visites"},notes:{newNote:"Nouvelle note",onBehalfOfCopy:"de la part de",onBehalfOfLabel:"De la part de",pleaseSelectAVisit:"Veuillez sélectionner une visite",updateNote:"Mettre à jour la note"},titles:{addContact:"Ajouter un contact",addPhoto:"Ajouter une photo",additionalContacts:"Contacts supplémentaires",admissionsDetail:"Détail d'admission",admissionsSummary:"Résumé d'admission",admittedPatients:"Patients admis",delete:"Supprimer un patient",deleteContact:"Supprimer un contact",deleteExpense:"Supprimer un frais",deleteFamilyMember:"Supprimer un membre de la famille",deletePatientRecord:"Supprimer un dossier de patient",deletePhoto:"Supprimer la photo",diagnosticTesting:"Test de diagnostic",dischargesDetail:"Détail des sorties",dischargesSummary:"Résumé des sorties",edit:"Modifier le patient",editPhoto:"Modifier la photo",expenses:"Frais",familyInfo:"Info sur la famille",familyInformation:"Information sur le famille",new:"Nouveau patient",outpatientsForDate:"Patients ambulatoires pour {visitDate}",patient:"Rapport du patient",patientListing:"Liste de patients",patientReport:"Rapport du patient",patientStatus:"Statut du patient",proceduresDetail:"Détail des procédures",proceduresSummary:"Résumé des procédures",savedPatient:"Patient sauvegardé",socialWork:"Frais",todaysOutpatients:"Patients ambulatoires du jour",totalPatientDays:"Nombre total de patients",totalPatientDaysDetailed:"Nombre total de patients (détaillé)",visit:"Visite"}},pricing:{labels:{discountAmount:"Montant de remise",discountPercentage:"Pourcentage de remise",setFee:"Définir les frais"},navigation:{}},print:{invoice:{labels:{billedBy:"Facturé par :",billedDate:"Date de facture :",dateAdmitted:"Admission :",dateDischarged:"Sortie :",dischargeNotes:"Note de sortie :",patientAddress:"Adresse :",patientAge:"Age :",patientId:"Numéro du patient :",patientName:"Nom du patient :",remarks:"Remarque :",spacer:"__________________________________________"},messages:{whereConducted:"ont été déduis durant mon séjour"},titles:{billingStatement:"Relevé de facture",patientMember:"Patient-membre",patients:"du patient",relContact:"Relation/N° Contact"}}},procedures:{buttons:{addMedication:"Ajouter un médicament"},labels:{medicationUsed:"Médicament utilisé"},messages:{saved:"La procédure a été sauvegardée"},titles:{addChargeItem:"Ajouter un article de charge",addMedicationUsed:"Ajouter un médicament",deleteChargeItem:"Supprimer un article de charge",deleteMedicationUsed:"Supprimer un médicament utilisé",edit:"Modifier la procédure",editChargeItem:"Modifier la ligne de charge",editMedicationUsed:"Modifier un médicament utilisé",medicationUsed:"Médicament utilisé",new:"Nouvelle procédure",saved:"Procédure sauvegardée"}},reports:{labels:{admissionDate:"Date d'admission",allProcedures:"Toutes les procédures effectuées",completedBy:"Complété par",dischargeDate:"Date de sortie",examiner:"Examiner",images:"Images",labs:"Labos",location:"Emplacement de visite",medications:"Médicaments",nextAppointment:"Prochain rendez-vous",nextAppointments:"Prochains rendez-vous",notes:{author:"Auteur",date:"Date",title:"Titre"},operativePlan:{description:"Description d'opération",instructions:"Instructions pour l'admission",procedures:"Procédures prévues",title:"Plan d'opération"},primaryDiagnosis:"Premier diagnostic",procedures:"Procédures",secondaryDiagnosis:"Second diagnostic",visitDate:"Date de visite",visitType:"Type de visite"},messages:{delete:"Etes-vous sûr de vouloir supprimer ce rapport ?",saved:"Le rapport a été sauvegardé"},titles:{dischargeReport:"Rapport de sortie",newDischargeReport:"Nouveau rapport de sortie",newOPDReport:"Nouveau rapport du service des patients en consultation externe",opdReport:"Rapport du service des patients en consultation externe",saved:"Rapport enregistré"}},user:{plusNewUser:"+ nouvel utilisateur",usersPageTile:"Liste des Utilisateurs"},visits:{buttons:{addDiagnosis:"Ajouter un diagnostic",checkIn:"Enregistrement",checkOut:"Départ",discharge:"Sortie",newAppointment:"Nouveau rendez-vous",newDischargeReport:"Nouveau rapport de sortie",newOPDReport:"Nouveau rapport du service des patients en consultation externe",newProcedure:"Nouvelle procédure",newVitals:"Nouveaux signes vitaux"},labels:{appointment:"Rendez-vous",authoredBy:"Rédigé par",checkInTime:"Heure d'enregistrement",checkOutTime:"Heure de départ",createNewPatient:"Créer un nouveau patient",diagnosis:"Diagnostics",examiner:"Examiner",finalDiagnosis:"Diagnostic final",haveAppointment:"O",haveDoneOrders:"O",noAppointment:"N",ordersDone:"Commandes effectuées",ordersNotDone:"N",patientToCheckIn:"Patient à enregistrer",procedure:"Procédure",procedureDate:"Date de procédure",reasonForVisit:"Raison de la visite",reportType:"Type de rapport",status:"Statut de la visite",statusAdmitted:"Admis",statusCheckedIn:"Enregistré",statusCheckedOut:"Parti",statusDischarged:"Sorti",visitDate:"Date de visite",visitInformation:"Information sur la visite",visitType:"Type de visite"},messages:{checkOut:"Etes-vous sûr de vouloir enregistrer le départ de {patientName} ?",checkedOut:"Le départ de {patientName} a été enregistré",discharged:"La sortie de {patientName} a été enregistré",patientCheckedIn:"L'enregistrement de {patientName} a été effectué",patientCreatedAndCheckedIn:"{patientName} a été créé et son enregistrment d'entrée a été effectué",visitAndPatientSaved:"Le patient et sa visite ont été sauvegardés",visitSaved:"La visite a été sauvegardée"},navigation:{charges:"Charges",notes:"Notes",orders:"Commandes",procedures:"Procédures",reports:"Rapports",vitals:"Signes vitaux"},titles:{additionalDiagnoses:"Diagnostics supplémentaires",checkOut:"Départ du patient",checkedIn:"Enregistrement du patient",checkedOut:"Patient parti",discharged:"Patient enregistré",editVisit:"Modifier une visite",newVisit:"Nouvelle visite",patientCheckIn:"Enregistrement de patient",visitSaved:"Visite sauvegardé"}},vitals:{labels:{dateRecorded:"Date d'enregistrement",dbp:"Pression diastolique",heartRate:"Rythme cardiaque",height:"Taille",respiratoryRate:"Fréquence respiratoire",sbp:"Pression systolique",temperature:"Température",weight:"Poids"}}}}),define("hospitalrun/translations/gr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Ετικέτα Διεύθυνσης 1",address2Label:"Ετικέτα Διεύθυνσης 2",address3Label:"Ετικέτα Διεύθυνσης 3",address4Label:"Ετικέτα Διεύθυνσης 4",addressLabel:"Διεύθυνση",editTitle:"Επιλογές Διεύθυνσης",include1Label:"Συμπεριλάβετε 1 ετικέτα",include2Label:"Συμπεριλάβετε 2 ετικέτες",include3Label:"Συμπεριλάβετε 3 ετικέτες",include4Label:"Συμπεριλάβετε 4 ετικέτες",messages:{addressSaved:"Οι επιλογές διεύθυνσης αποθηκεύτηκαν"},newTitle:"Επιλογές Διεύθυνσης",titles:{optionsSaved:"Οι Επιλογές Αποθηκεύτηκαν"}},addressOptions:"Επιλογές Διεύθυνσης",customForms:{buttons:{addField:"Προσθήκη Πεδίου",moveDown:"Μετακίνηση Κάτω",moveUp:"Μετακίνηση Πάνω",newForm:"+ Νέα Φόρμα",preview:"Προεπισκόπηση"},labels:{alwaysInclude:"Συμπερίληψη Πάντα",checkbox:"Πλαίσιο ελέγχου",colSpan:"Αριθμός Στηλών",columns:"Στήλες",customForm:"Προσαρμοσμένη Φόρμα",dischargeReportFormType:"Εξιτήριο",expenseTo:"Δαπάνη Προς",formName:"Όνομα Φόρμας",formType:"Τύπος Φόρμας",header:"Επίκεφαλίδα",incidentFormType:"Περιστατικό",includeOtherOption:"Συμπερίληψη Άλλης Επιλογής",labFormType:"Εργαστήριο",label:"Ετικέτα",newForm:"Νέα Φόρμα",opdReportFormType:"Εξονοσοκομειακή Αναφορά",operativePlanFormType:"Πρόγραμμα και Αναφορά Χειρουργείου",otherOptionLabel:"Άλλες Επιλογές Ετικέτων",patientFormType:"Ασθενής",property:"Ιδιοκτησία",radio:"Κουμπί Radio",select:"Αναπτυσσόμενο Μενού",socialworkFormType:"Κοινωνική εργασία",text:"Κείμενο",textarea:"Mεγάλο Kείμενο",visitFormType:"Επίσκεψη"},messages:{formSaved:"Η φόρμα {name} αποθηκεύτηκε."},titles:{checkboxValues:"Τιμές Πλαισίου Ελέγχου",customForms:"Προσαρμοσμένες Φόρμες",deleteForm:"Διαγραφή Προσαρμοσμένης Φόρμας",dropDownValues:"Τιμές Αναπτυσσόμενου Μενού",editCustomForm:"Επεξεργασία Προσαρμοσμένης Φόρμας",fields:"Πεδία",formSaved:"Η Φόρμα Αποθηκεύθηκε",headerValues:"Τιμή Γραμμής Επικεφαλίδας",newCustomForm:"Νέα Προσαρμοσμένη Φόρμα",radioValues:"Τιμές Κουμπιού Radio"}},header:{editTitle:"Επιλογές Επικεφαλίδας",facilityName:"Όνομα Εγκατάστασης",headerLabel:"Επικεφαλίδα",headerLine1:"Επικεφαλίδα Γραμμή 1",headerLine2:"Επικεφαλίδα Γραμμή 2",headerLine3:"Επικεφαλίδα Γραμμή 3",logoURL:"Διεύθυνση Λογότυπου",messages:{headerSaved:"Οι επιλογές επικεφαλίδας αποθηκεύτηκαν"},newTitle:"Επιλογές Επικεφαλίδας",titles:{optionsSaved:"Οι Επιλογές Αποθηκεύτηκαν"}},loadDb:"Μεταφόρτωση Βάσης",loaddb:{displayAlertMessage:"Παρακαλώ επιλέξτε αρχείο για μεταφόρτωση.",displayAlertTitle:"Επιλέξτε Αρχείο για Μεταφόρτωση",editTitle:"Μεταφόρτωση Βάσης",errorDisplayAlertMessage:"Δεν ήταν δυνατό να εισαχθεί η βάση δεδομένων. Το σφάλμα ήταν: {error}",errorDisplayAlertTitle:"Σφάλμα Μεταφόρτωσης",progressMessage:"Παρακαλώ περιμένετε ενώ εκτελείται η μεταφόρτωση της βάσης δεδομένων.",progressTitle:"Φόρτωση Βάση Δεδομένων"},lookup:{aisleLocationList:"Τοποθεσίες Διαδρόμων Αποθεματικού",alertImportListMessage:"Επιλέξτε αρχείο για εισαγωγή.",alertImportListSaveMessage:"Η λίστα αναζήτησης εισήχθει.",alertImportListSaveTitle:"Η Λίστα Εισάχθηκε",alertImportListTitle:"Επιλέξτε Αρχείο Για Εισαγωγή",alertImportListUpdateMessage:"Η λίστα αναζήτησης αποθηκεύτηκε.",alertImportListUpdateTitle:"Η Λίστα Αποθηκεύτηκε",anesthesiaTypes:"Τύποι Αναισθησίας",anesthesiologists:"Αναισθησιολόγοι",billingCategories:"Κατηγορίες Χρέωσης",clinicList:"Τοποθεσίες Κλινικών",countryList:"Χώρες",cptCodeList:"Κώδικες CPT",diagnosisList:"Διαγνώσεις",edit:{template:{addTitle:"Πρoσθήκη Τιμής",editTitle:"Επεξεργασία τιμής",labelTitle:"Τιμή",updateButtonTextAdd:"Πρόσθεση",updateButtonTextUpdate:"Ενημέρωση"}},expenseAccountList:"Λογαριασμοί Εξόδων",imagingPricingTypes:"Τύποι Τιμολόγησης Απεικονίσης",incidentDepartments:"Τμήματα Περιστατικών",inventoryTypes:"Τύποι Αποθεματικού",labPricingTypes:"Τύποι Τιμολόγησης Εργαστήριου",pageTitle:"Λίστες Αναζήτησης",patientStatusList:"Λίστα Κατάστασης Ασθενών",physicianList:"Γιατροί",procedureList:"Διαδικασίες",procedureLocations:"Τοποθεσίες Διαδικασιών",procedurePricingTypes:"Τύποι Τιμολόγησης Διαδικασιών",radiologists:"Ακτινολόγοι",titles:{deleteLookupValue:"Διαγραφή Τιμής"},unitTypes:"Τύποι Μονάδων",vendorList:"Προμηθευτής",visitLocationList:"Τοποθεσίες Επίσκεψης",visitTypes:"Τύποι Επίσκεψης",wardPricingTypes:"Τύποι Τιμολόγησης Θαλάμων",warehouseList:"Τοποθεσίες Αποθεματικού"},lookupLists:"Λίστες αναζήτησης",roles:{capability:{addAllergy:"Προσθήκη Αλλεργίας",addAppointment:"Προσθήκη Ραντεβού",addBillingDiagnosis:"Προσθήκη Χρέωσης Διάγνωσης",addCharge:"Προσθήκη Χρέωσης",addDiagnosis:"Προσθήκη Διάγνωσης",addImaging:"Προσθήκη Απεικόνισης",addIncident:"Προσθήκη Περιστατικού",addIncidentCategory:"Προσθέστε Κατηγορίας Περιστατικού",addInventoryItem:"Προσθήκη Είδους Αποθεματικού",addInventoryPurchase:"Προσθήκη Αγοράς Αποθεματικού",addInventoryRequest:"Προσθήκη Αιτήματος Αποθεματικού",addInvoice:"Προσθήκη Τιμολογίου",addLab:"Προσθήκη Εργαστηρίου",addMedication:"Προσθήκη Φαρμακευτική Αγωγής",addNote:"Προσθήκη Σημείωσης",addOperationReport:"Προσθήκη Αναφοράς Χειρουργείου",addOperativePlan:"Προσθήκη Προγράμματος Χειρουργείου",addPatient:"Προσθήκη Ασθενούς",addPayment:"Προσθήκη Πληρωμής",addPhoto:"Προσθήκη Φωτογραφίας",addPricing:"Προσθήκη Τιμολόγησης",addPricingProfile:"Προσθήκη Προφίλ Τιμολόγησης",addProcedure:"Προσθήκη Διαδικασίας",addSocialwork:"Προσθήκη Κοινωνικής Εργασίας",addVisit:"Προσθήκη Επίσκεψης",addVitals:"Προσθήκη Zωτικών Δεικτών",adjustInventoryLocation:"Ρύθμιση Τοποθεσίας Αποθεματικού",admin:"Διαχείριση",admitPatient:"Εισαγωγή Ασθενούς",appointments:"Ραντεβού",billing:"Χρεώσεις",cashier:"Ταμίας",completeImaging:"Πλήρης Απεικόνιση",completeLab:"Πλήρες Εργαστήριο",defineUserRoles:"Ορισμός Ρόλων Χρηστών",deleteAppointment:"Διαγραφή Ραντεβού",deleteDiagnosis:"Διαγραφή Διάγνωσης",deleteImaging:"Διαγραφή Απεικόνισης",deleteIncident:"Διαγραφή Περιστατικού",deleteIncidentCategory:"Διαγραφή Κατηγορίας Περιστατικού",deleteInventoryItem:"Διαγραφή Είδους Αποθεματικού",deleteInvoice:"Διαγραφή Τιμολογίου",deleteLab:"Διαγραφή Εργαστηρίου",deleteMedication:"Διαγραφή Φαρμακευτικής Αγωγής",deleteNote:"Διαγραφή Σημείωσης",deletePatient:"Διαγραφή Ασθενούς",deletePhoto:"Διαγραφή Φωτογραφίας",deletePricing:"Διαγραφή Τιμολόγησης",deletePricingProfile:"Διαγραφή Προφίλ Τιμολόγησης",deleteProcedure:"Διαγραφή Διαδικασίας",deleteSocialwork:"Διαγραφή Κοινωνικής Εργασίας",deleteVisit:"Διαγραφή Επίσκεψης",deleteVitals:"Διαγραφή Ζωτικών Δεικτών",dischargePatient:"Αποχώρηση Ασθενούς",editInvoice:"Επεξεργασία Τιμολογίου",fulfillInventory:"Κάληψη Αποθεματικού",fulfillMedication:"Κάληψη Φαρμακευτικής Αγωγής",generateIncidentReport:"Δημιουργία Αναφοράς Περιστατικού",imaging:"Απεικονίσεις",incident:"Περιστατικό",inventory:"Αποθεματικό",invoices:"Τιμολόγια",labs:"Εργαστήρια",listPaidInvoices:"Λίστα Πληρωμένων Τιμολογίων",loadDb:"Μεταφόρτωση Βάσης",manageIncidents:"Διαχείριση Περιστατικών",medication:"Φαρμακευτική Αγωγή",overrideInvoice:"Παράκαμψη Τιμολoγίου",patientReports:"Αναφορές Ασθενών",patients:"Ασθενείς",pricing:"Τιμολόγηση",updateConfig:"Ενημέρωση Παραμέτρων",visits:"Επισκέψεις"},messages:{roleSaved:"Ο ρόλος {rolename} αποθηκεύτηκε."},titles:{roleSaved:"Ο Ρόλος Αποθηκεύτηκε"}},textReplacements:{createNew:"Δημιουργία νέου shortcode",existingRepl:"Υφιστάμενα Shortcode",noMatches:"Καμμία αντικατάσταση δεν ταιριάζει με '{term}'",pageTitle:"Shortcodes",performExpand:"Πατήστε Enter για να αντικαταστήσετε #{from} με '{to}'",possibleExpansions:"Πιθανές αντικαταστάσεις: {possible}",replDesc:"Κατά την εισαγωγή κειμένου, αυτές οι συντομεύσεις σας επιτρέπουν να αντικαταστήσετε μια σύντομη ακολουθία χαρακτήρων με μια μεγαλύτερη φράση.",replaceWith:"Αντικατάσταση με",toReplace:"Κείμενο προς αντικατάσταση"},userRoles:"Ρόλοι Χρηστών",users:"Χρήστες",visitForms:{labels:{followup:"Ακολουθήστε",form:"Φόρμα",initial:"Αρχικό",visitType:"Τύπος Επίσκεψης"},titles:{visitForms:"Φόρμες Επίσκεψης"}},workflow:{admissionDepositLabel:"Απαιτείται κατάθεση εισαγωγής",clinicPrepaymentLabel:"Απαιτείται προπληρωμή κλινικής",editTitle:"Επιλογές Ροής Εργασίας",followupPrepaymentLabel:"Απαιτείται προπληρωμή",messages:{optionsSaved:"Οι επιλογές ροής εργασίας αποθηκεύτηκαν"},newTitle:"Επιλογές Ροής Εργασίας",outpatientImagingLabel:"Απαιτείται Προπληρωμή Απεικόνισης Εξωτερικών Ιατρείων",outpatientLabLabel:"Απαιτείται Προπληρωμή Εργαστηρίου Εξωτερικών Ιατρείων",outpatientMedicationLabel:"Απαιτείται Προπληρωμή Φαρμακευτικής Αγωγής Εξωτερικών Ιατρείων",titles:{optionsSaved:"Οι Επιλογές Αποθηκεύτηκαν"},workflowLabel:"Ροή Εργασίας"}},alerts:{errorExclamation:"Σφάλμα!!!!",pleaseWait:"Παρακαλώ Περιμένετε",reportError:"Σφάλμα Δημιουργίας Αναφοράς",warningExclamation:"Προειδοποίηση!!!!"},allergies:{buttons:{addAllergy:"Προσθήκη Αλλεργίας"},labels:{allergyName:"Όνομα",patientAllergy:"Αλλεργίες Ασθενούς"},titles:{addAllergy:"Προσθήκη Αλλεργίας",editAllergy:"Επεξεργασία Αλλεργίας"}},application:{messages:{sessionExpired:"Η συνεδρία σας έληξε. Παρακαλώ συνδεθείτε για να συνεχίσετε."},titles:{sessionExpired:"Η Συνεδρία Έληξε"}},appointments:{buttons:{newButton:"+ Νέο Ραντεβού",scheduleSurgery:"+ Προγραμ. Εγχείρισης"},calendarTitle:"Ημερολόγιο Ραντεβού",currentScreenTitle:"Λίστα Ραντεβού",editTitle:"Επεξεργασία Ραντεβού",labels:{noLocation:"Χωρίς Τοποθεσία",selectedStartingDate:"Εμφάνιση Ραντεβού την ή μετά την"},messages:{appointmentSaved:"Το ραντεβού για τον/την {patient} αποθηκεύτηκε.",endTimeLaterThanStart:"Επιλέξτε μια ώρα λήξης αργότερα από την ώρα έναρξης."},missed:"Χαμένα Ραντεβού",newTitle:"Νέο Ραντεβού",searchTitle:"Αναζήτηση Ραντεβού",sectionTitle:"Ραντεβού",thisWeek:"Ραντεβού Εβδομάδας",titles:{appointmentSaved:"Το ραντεβού αποθηκεύτηκε",editSurgicalAppointment:"Επεξεργασία Χειρουργικού Ραντεβού",newSurgicalAppointment:"Νέο Χειρουργικό Ραντεβού",theaterSchedule:"Πρόγραμμα Χειρουργικής Αίθουσας"},todayTitle:"Σημερινά Ραντεβού"},billing:{alerts:{noInvoiceFound:"Δεν βρέθηκαν τιμολόγια",noPricingItems:"Δεν βρέθηκαν στοιχεία τιμολόγησης.",noPricingProfiles:"Δεν βρέθηκαν προφίλ τιμολόγησης."},buttons:{addOverride:"Προσθήκη παράκαμψης",createInvoice:"Δημιουργία τιμολογίου;"},labels:{actualCharges:"Πραγματικές χρεώσεις",discountAmount:"Ποσό έκπτωσης",discountPercentage:"Ποσοστό έκπτωσης",externalInvoiceNumber:"Εξωτερικό Τιμολόγιο #",hmoCom:"Ιδιωτικός Ασφαλιστικός Φορέας",insurance:"Δημόσιος Ασφαλιστικός Φορέας",paymentProfile:"Προφίλ Πληρωμής",paymentsDeposits:"Πληρωμές/Καταθέσεις",pricingPanelOverrides:"Υπερισχύει το προφίλ τιμολόγησης",pricingProfile:"Προφίλ Τιμολόγησης",setFee:"Ορισμός Χρέωσης"},messages:{flatDiscountMsg:"Σταθερό ποσό έκπτωσης που εφαρμόζεται στην οικονομική ευθύνη του ασθενή της τάξης των {discountAmount} {currency}.",flatFeeMsg:"Σταθερή χρέωση για την οικονομική ευθύνη του ασθενή της τάξης των {setFee} {currency}."},navigation:{}},buttons:{add:"Προσθήκη",addItem:"Προσθήκη Στοιχείου",addLineItem:"Προσθήκη Στοιχείου Γραμμής",addValue:"Προσθήκη Τιμής",addVisit:"Προσθήκη Επίσκεψης",allRequests:"Όλα τα Αιτήματα",barcode:"Βarcode",cancel:"Ακύρωση",clear:"Εκκαθάριση",close:"Κλείσιμο",complete:"Ολοκλήρωση",delete:"Διαγραφή",dispense:"Διανομή",edit:"Επεξεργασία",filter:"Φίλτρο",fulfill:"Ολοκλήρωση",import:"Εισαγωγή",loadFile:"Μεταφόρτωση Αρχείου",newItem:"+ Νέο Στοιχείο",newNote:"Νέα Σημείωση",newRequest:"Νέο Αιτήμα",newRequestPlus:"+ Νέο Αίτημα",newUser:"Νέος Χρήστης",ok:"OK",print:"Εκτύπωση",remove:"Αφαίρεση",returnButton:"Επιστροφή",review:"Αναθεώρηση",search:"Αναζήτηση",showAll:"Προβολή Όλων",showFewer:"Εμφάνιση Λιγότερων",update:"Ενημέρωση"},components:{chargesByTypeTab:{charges:"χρεώσεις"},customFormManager:{buttons:{addForm:"Προσθήκη Φόρμας"}},dateTimePicker:{amHour:"{hour} πμ",midnight:"Μεσάνυχτα",noon:"Μεσημέρι",pmHour:"{hour} μμ"},imageUpload:{messages:{selectValidImageFile:"Παρακαλώ επιλέξτε ένα έγκυρο αρχείο εικόνας."}},operativeProcedures:{buttons:{addProcedure:"Προσθήκη Διαδικασίας"},labels:{procedure:"Διαδικασία"},titles:{procedures:"Διαδικασίες"}},patientOrders:{buttons:{newImaging:"Νέα Απεικόνιση",newLab:"Νέο Εργαστήριο",newMedication:"Νέα Φαρμακευτική Αγωγή"},labels:{imagingOrderType:"Απεικονίσεις",labOrderType:"Εργαστήριο",medicationOrderType:"Φαρμακευτική Αγωγή",orderType:"Τύπος Παραγγελίας"}},priceList:{charges:"{pricingType} χρεώσεις"},quantityCalc:{result:"Σύνολο {targetUnit} : {calculated}"},quantityConv:{conversion:"Τι περιέχει 1 {name};",unit:"Μονάδα"},sortableColumn:{labels:{selectAll:"(Επιλογή Όλων)"}},takePhoto:{camera:"Κάμερα",how:"Πώς Θέλετε να Προσθέσετε μια Φωτογραφία;",labels:{takeAPicture:"Τράβηγμα Φωτογραφίας",uploadAFile:"Ανέβασμα Αρχείου"},photo:"φωτογραφία",preview:"προεπισκόπηση",takePhoto:"Τράβηγμα Φωτογραφίας",uploadFile:"Ανέβασμα Αρχείου"},upcomingAppointments:{labels:{date:"Ημερομηνία",location:"Τοποθεσία",type:"Τύπος",with:"Με"},titles:{upcomingAppointments:"Προσεχή Ραντεβού"}}},customForms:{buttons:{addForm:"Προσθήκη Φόρμας"},labels:{formToAdd:"Φόρμα για Προσθήκη"},titles:{addCustomForm:"Προσθήκη Προσαρμοσμένης Φόρμας"}},dashboard:{needs_user_setup:"Σας συνιστούμε να δημιουργήσετε λογαριασμό χρήστη.",standalone_welcome:'<h4>Ευχαριστούμε για την λήψη του HospitalRun</h4><p>Εκτελείτε το HospitalRun σε κατάσταση stand alone. Αυτή η λειτουργία σας δίνει τη δυνατότητα να υποστηρίξετε πολλούς χρήστες σε μιά μοναδική εγκατάσταση του HospitalRun, τοπικά, σε desktop/laptop. Αυτό είναι ιδανικό για:</p><ul><li>Να αξιολόγησετε το HospitalRun για μια ενδεχόμενη εγκατάσταση σε server</li><li>Να χρησιμοποιήσετε την πλατφόρμα για την υποστήριξη μιας κλινικής/ιατρείου όπου μια εγκατάσταση αρκεί</li></ul><p>Εάν σκέφτεστε το ενδεχόμενο μιας κεντρικής εγκατάστασης του HospitalRun, στην οποία θα έχουν πρόβαση πολλές συσκευές, <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">δουλεύουμε σε χαρακτηριστικά</a> τα οποία θα σας επιτρέψουν να μεταφερθείτε από αυτή την τοπική εγκατάσταση σε μια παραδοσιακή cloud/server εγκατάσταση.</p>',title:"Καλώς ήρθατε στο HospitalRun!"},dates:{long:"{years} χρόνου {months} μηνών {days} ημερών",longOmitDays:"{years} χρόνου {months} μηνών",longOmitDaysPlural:"{years} χρόνων {months} μηνών",longOmitDaysYears:"{months} μηνών",longOmitYears:"{months} μηνών {days} ημερών",longPlural:"{years} χρόνων {months} μηνών {days} ημερών",short:"{years}χ {months}μ {days}η",shortOmitYears:"{months}μ {days}η"},diagnosis:{labels:{activeDiagnosis:"Ενεργή Διάγνωση",date:"Ημερομηνία",diagnosis:"Διάγνωση",secondaryDiagnosis:"Δεύτερη Διάγνωση"},titles:{addDiagnosis:"Προσθήκη Διάγνωσης",editDiagnosis:"Επεξεργασία Διάγνωσης"}},errors:{accepted:"πρέπει να γίνει αποδεκτό",blank:"δεν μπορεί να είναι κενό",confirmation:"δεν ταιριάζει με: {attribute}",empty:"δεν μπορεί να είναι κενό",equalTo:"πρέπει να είναι ίσο με {count}",even:"πρέπει να είναι ίσα",exclusion:"είναι κλεισμένο",greaterThan:"πρέπει να είναι μεγαλύτερο από {count}",greaterThanOrEqualTo:"πρέπει να είναι μεγαλύτερο από ή ίσο με {count}",inclusion:"δεν περιλαμβάνεται στη λίστα",invalid:"δεν είναι έγκυρο",invalidNumber:"μη έγκυρος αριθμός",lessThan:"πρέπει να είναι μικρότερο από {count}",lessThanOrEqualTo:"πρέπει να είναι μικρότερο από ή ίσο με {count}",notANumber:"δεν είναι αριθμός",notAnInteger:"πρέπει να είναι ακέραιος",odd:"πρέπει να είναι μονός",otherThan:"πρέπει να διαφορετικό από {count}",present:"πρέπει να είναι κενό",result:"Παρακαλώ εισάγετε ένα αποτέλεσμα πριν από την ολοκλήρωση",tooLong:"είναι πολύ μεγάλη (μέγιστο είναι {count} χαρακτήρες)",tooShort:"είναι πολύ μικρή (ελάχιστη είναι {count} χαρακτήρες)",wrongLength:"έχει λάθος μέγεθος (θα πρέπει να είναι {count} χαρακτήρες)"},headings:{chargedItems:"Χρεωμένα Είδη"},imaging:{alerts:{completedMessage:"Το αίτημα απεικόνισης ολοκληρώθηκε.",completedTitle:"Το Αίτημα Απεικόνισης Ολοκληρώθηκε",savedMessage:"Το αίτημα απεικόνισης αποθηκεύτηκε.",savedTitle:"Το Αίτημα Απεικόνισης Αποθηκεύτηκε"},buttons:{newButton:"+ Νέα Απεικόνιση"},labels:{addNewVisit:"--Προσθήκη Νέας Επίσκεψης--",completedBy:"Ολοκληρώθηκε από",radiologist:"Ακτινολόγος",requestedNotes:"Αιτηθείσες Σημειώσεις",resultNotes:"Σημειώσεις Αποτέλεσμάτος"},messages:{noCompleted:"Δεν βρέθηκαν ολοκληρωμένα στοιχεία."},pageTitle:"Αιτήματα Απεικόνισης",sectionTitle:"Απεικονίσεις",titles:{completedImaging:"Ολοκληρωμένες Απεικονίσεις",editTitle:"Επεξεργασία Αιτήματος Απεικόνισης",newTitle:"Νέο Αίτημα Απεικόνισης"}},incident:{buttons:{add:"Προσθήκη",addForm:"+ Προσθήκη Φόρμας",addItem:"Πρoσθήκη Στοιχείου",cancel:"Ακύρωση",delete:"Διαγραφή",download:"Κατέβασμα",edit:"Επεξεργασία",export:"Εξαγωγή Αναφοράς",generateRep:"Δημιουργία Αναφοράς",newAttachment:"+ Νέο Συνημμένο",newCategory:"+ Νέα Κατηγορία",newIncident:"+ Νέο Περιστατικό",newNote:"+ Νέα Σημείωση"},labels:{actions:"Ενέργειες",addedBy:"Προστέθηκε από",category:"Κατηγορία",categoryItem:"Στοιχείο Κατηγορίας",date:"Ημερομηνία",dateRecorded:"Ημερομηνία Καταγραφής",department:"Τμήμα",description:"Περιγραφή Περιστατικού",endDate:"Ημερομηνία Λήξης",givenBy:"Δόθηκε από",howToAddAttachment:"Πώς Θέλετε να Προσθέσετε ένα Συνημμένο;",incidentDate:"Ημερομηνία Περιστατικών",incidentId:"ID Περιστατικού",item:"Στοιχείο",lastUpdated:"Τελευταία Ενημέρωση",note:"Σημείωση",patientId:"ID Ασθενούς",patientImpacted:"Επιρροή Ασθενούς",reportType:"Τύπος Αναφοράς",reportedBy:"Αναφορά Από",reportedDate:"Ημερομηνία Αναφοράς",reportedTo:"Το Περιστατικό Αναφέρθηκε σε (Ονοματεπώνυμο)",sentinelEvent:"Εκδήλωση",startDate:"Ημερομηνία Έναρξης",status:"Κατάσταση",statusActive:"Ενεργό",statusClosed:"Κλειστό",statusFollowup:"Παρακολούθηση",statusReported:"Αναφέρθηκε",title:"Τίτλος",total:"Σύνολο",updatedBy:"Ενημερώθηκε Από"},messages:{attachmentFileRequired:"Παρακαλώ ανεβάστε ένα αρχείο ή να τραβήξετε μια φωτογραφία ή πριν από την αποθήκευση αυτή την προσκόλληση.",createNew:"Δημιουργία νέου περιστατικού;",createNewIncidentCategory:"Δημιουργία νέας Κατηγορίας Περιστατικών;",fillIn:"Συμπληρώστε τις παραπάνω επιλογές για τον υπολογισμό της βαθμολογίας",incidentCategorySaved:"Η κατηγορία {name} αποθηκεύτηκε.",noClosedIncidents:"Δεν βρέθηκαν κλεισμένα περιστατικά.",noIncidentCategoriesFound:"Δεν Βρέθηκαν Κατηγορίες Περιστατικών.",noIncidents:"Δεν βρέθηκαν περιστατικά.",saved:"Η έκθεση του περιστατικού αποθηκεύτηκε.",selectExistingPatient:"Επιλέξτε έναν υπάρχων ασθενή ή αφήστε αυτό το πεδίο κενό."},titles:{addAttachment:"Προσθήκη Συνημμένου",addCategoryItem:"Προσθέστε Κατηγορία Στοιχείου",addNote:"Προσθήκη Σημείωσης",attachments:"Συνημμένα",closed:"Κλειστά Περιστατικά",current:"Τρέχων",deleteAttachment:"Διαγραφή Συνημμένου",deleteIncident:"Διαγραφή Περιστατικού",deleteIncidentCategory:"Διαγραφή Κατηγορίας Περιστατικού",deleteItem:"Διαγραφή Στοιχείου",deleteNote:"Διαγραφή Σημείωσης",editAttachment:"Επεξεργασία Συνημμένου",editIncident:"Επεξεργασία Περιστατικού",editIncidentCategory:"Επεξεργασία Κατηγορίας Περιστατικού",editNote:"Επεξεργασία Σημείωσης",general:"Γενικές Πληροφορίες",history:"Ιστορικό",incidentCategories:"Κατηγορίες Περιστατικών",incidentCategoryItem:"Στοιχείο Κατηγορίας Περιστατικού",incidentCategoryName:"Όνομα Κατηγορίας Περιστατικού",incidentCategorySaved:"Η Κατηγορία Περιστατικού Αποθηκεύτηκε",incidentSaved:"Το Περιστατικό Αποθηκεύτηκε",incidents:"Περιστατικά",incidentsByCategory:"Περιστατικά Ανά Κατηγορία",incidentsByDepartment:"Περιστατικά Ανά Τμήμα",newIncident:"Νέο Περιστατικό",newIncidentCategory:"Νέα Κατηγορία Περιστατικού",notes:"Σημειώσεις",reports:"Αναφορές"}},inventory:{edit:{cost:"Κόστος Ανά Μονάδα:",delivered:"Παράδοση Προς:",location:"Τοποθεσία Προσαρμοσμένη Σε:",prescription:"Συνταγή Για:",pulled:"Απόσπαση Από:",quantity:"Ποσότητα σε Ολοκλήρωση:",reason:"Αιτία:",returned:"Επιστροφή από Ασθενή:",transferredFrom:"Μεταφορά Από:",transferredTo:"Μεταφορά Σε:"},labels:{action:"Δράση",add:"Προσθήκη",addAdjustmentType:"Προσθήκη",adjust:"Προσαρμογή",adjustmentDate:"Ημερομηνία Προσαρμογής",adjustmentFor:"Προσαρμογή Για",adjustmentType:"Τύπος Προσαρμογής",aisle:"Διάδρομος",aisleLocation:"Τοποθεσία Διαδρόμου",allInventory:"Όλο το Αποθεματικό",allItems:"Ολα τα Στοιχεία",availableQuantity:"{quantity} διαθέσιμα",billTo:"Χρέωση Σε",consumePurchases:"Κατανάλωση Συναλλαγών",consumptionRate:"Ρυθμός Κατανάλωσης",cost:"Κόστος",costPerUnit:"Κόστος ανά Μονάδα",crossReference:"Παραπομπή",currentQuantity:"Τρέχουσα Ποσότητα",dateCompleted:"Ημερομηνία Ολοκλήρωσης",dateEffective:"Ημερομηνία Ισχύος",dateEnd:"Ημερομηνία Λήξης",dateReceived:"Ημερομηνία Παραλαβής",dateStart:"Ημερομηνία Έναρξης",dateTransferred:"Ημερομηνία Μεταφοράς",daysLeft:"Εναπομείνουσες Μέρες",deleteItem:"Διαγραφή Αντικειμένου",deliveryAisle:"Διάδρομος Παράδοσης",deliveryLocation:"Τοποθεσία Παράδοσης",details:"Λεπτομέριες",distributionUnit:"Μονάδα Διανομής",editItem:"Επεξεργασία Στοιχείου",expense:"Δαπάνη Σε",expirationDate:"Ημερομηνία Λήξης",fulfillRequest:"Ολοκλήρωση Αιτήματος",fulfillRequestNow:"Ολοκλήρωση Αιτήματος Τώρα",gift:"Δωρεά",giftInKindNo:"Ο",giftInKindYes:"Ν",giftUsage:"Χρήση Δωρεάς",inventoryConsumed:"Το Αποθεματικό Καταναλώθηκε",inventoryItem:"Είδος Αποθεματικού",inventoryObsolence:"Αχρήστευση Αποθεματικού",invoiceItems:"Στοιχεία Τιμολογίου",invoiceLineItem:"Στοιχείο Γραμμής Τιμολογίου",invoiceNumber:"Αριθμός Τιμολογίου",item:"Στοιχείο",itemNumber:"Αριθμός Στοιχείου",items:"Είδη",location:"Τοποθεσία",locations:"Τοποθεσίες",markAsConsumed:"Επισήμανση ως Καταναλισκόμενο",name:"Όνομα",newItem:"Νέο Στοιχείο",originalQuantity:"Αρχική Ποσότητα",print:"Εκτύπωση",printBarcode:"Εκτύπωση Barcode",printer:"Εκτυπωτής",pullFrom:"Απόσπαση Από",purchaseCost:"Κόστος Συναλλαγής",purchaseInfo:"Πληροφορίες Συναλλαγής",purchases:"Συναλλαγές",quantity:"Ποσότητα ({unit})",quantityAvailable:"Διαθέσιμη Ποσότητα",quantityOnHand:"Υπάρχουσα Ποσότητα",quantityRequested:"Αιτηθείσα Ποσότητα",rank:"Τάξη",reason:"Αιτία",remove:"Αφαίρεση",removeAdjustmentType:"Αφαίρεση",reorderPoint:"Σημείο Αναδιάταξης",requestedItems:"Αιτηθέντα Στοιχεία",returnAdjustmentType:"Επιστροφή",returnToVendorAdjustmentType:"Επιστροφή σε Προμηθευτή",salePricePerUnit:"Τιμή Πώλησης Μονάδος",save:"Αποθήκευση",serialNumber:"Αριθμός Σειράς/Παρτίδας",total:"Σύνολο",totalCost:"Συνολικό Κόστος",totalReceived:"Σύνολο Ελήφθη: {total}",transaction:"Συναλλαγή",transactions:"Συναλλαγές",transfer:"Μεταφορά",transferFrom:"Μεταφορά Από",transferTo:"Μεταφορά Σε Τοποθεσία",transferToAisle:"Μεταφορά στην Τοποθεσία Διαδρόμου",unit:"Μονάδα",unitCost:"Κόστος μονάδας",vendor:"Προμηθευτής",vendorItemNumber:"Αριθμός Είδους Προμηθευτή",writeOffAdjustmentType:"Διαγραφή",xref:"Εξωνοσοκομειακή Σύσταση"},messages:{adjust:"Παρακαλώ προσαρμόστε τις ποσότητες στην(ις) κατάλληλη(ες) θέση(εις) για να υπολογιστεί η διαφορά των {difference}.",createRequest:"Δημιουργία νέου αιτήματος;",itemNotFound:"Το είδος αποθεματικού <strong> {item} </strong> δεν βρέθηκε.<br>Αν θέλετε να δημιουργήσετε ένα νέο είδος αποθεματικού, συμπληρώστε τις παρακάτω πληροφορίες. <br> Διαφορετικά, πατήστε το κουμπί Άκύρωση για να επιστρέψετε.",loading:"Φόρτωση Συναλλαγών ...",noItems:"Δεν βρέθηκαν είδη.",noRequests:"Δεν βρέθηκαν αιτήματα.",purchaseSaved:"Οι αγορές αποθεμάτικού σώθηκαν επιτυχώς.",quantity:"Η συνολική ποσότητα <strong>({quantity})</strong> δεν ταιριάζει με τη συνολική ποσότητα στις θέσεις <strong>({locationQuantity}) </strong>.",removeItem:"Είστε βέβαιοι ότι θέλετε να καταργήσετε αυτό το στοιχείο από αυτό το τιμολόγιο;",removeItemRequest:"Είστε βέβαιοι ότι θέλετε να καταργήσετε αυτό το στοιχείο από αυτό το αίτημα;",requestFulfilled:"To αίτημα αποθεματικού ολοκληρώθηκε.",requestUpdated:"To αίτημα αποθεματικού ενημερώθηκε.",warning:"Παρακαλούμε συμπληρώστε τα υποχρεωτικά πεδία (που σημειώνονται με *) και διορθώστε τα σφάλματα πριν από την προσθήκη."},reports:{adjustment:"Λεπτομερής Ρύθμιση",daysSupply:"Ημέρες Αδράνειας Προμηθειών",expenseDetail:"Έξοδα (Λεπτομερώς)",expenseSum:"Έξοδα (Περιληπτικά)",expiration:"Ημερομηνία Λήξης",export:"Εξαγωγή Αναφοράς",fields:"Πεδία προς Συμπερίληψη",finance:"Σύνοψη Οικονομικών",generate:"Δημιουργία Αναφοράς",invLocation:"Αποθεματικό Ανά Τοποθεσία",invValuation:"Αποτίμηση Αποθεματικού",purchaseDetail:"Αγορά (Λεπτομερώς)",purchaseSum:"Αγορά (Περιληπτικά)",reportType:"Τύπος Αναφοράς",rows:{adjustments:"Διαμορφώσεις",adjustmentsTotal:"Σύνολο Διαμορφώσεων",balanceBegin:"Αρχικό Ισοζύγιο",balanceEnd:"Τελικό Ισοζύγιο",category:"Κατηγορία",consumed:"Καταναλώθηκε",consumedGik:"Κατανάλωση ΔΣΕ",consumedGikTotal:"Σύνολο Κατανάλωσης ΔΣΕ",consumedPuchases:"Κατανάλωση Αγορών",consumedPurchasesTotal:"Σύνολο Κατανάλωσης Αγορών",consumedTotal:"Σύνολο Κατανάλωσης",errInFinSum:"Σφάλμα σε _generateFinancialSummaryReport: ",errInFindPur:"Σφάλμα σε _findInventoryItemsByPurchase: ",errInFindReq:"Σφάλμα σε _findInventoryItemsByRequest: ",expensesFor:"Έξοδα Για: ",noAccount:"(Χωρίς Λογαριασμό)",subtotal:"Μερικό Σύνολο: ",subtotalFor:"Μερικό σύνολο για {category} - {account}: ",total:"Σύνολο: ",totalFor:"Σύνολο για {var}: ",totalPurchases:"Σύνολο Αγορών",transfer1:"{quantity} από {location}",trasnfer2:"Από: {source} Προς: {target}"},stockTransferDetail:"Μεταφορά Αποθέματος (Λεπτομερώς)",stockTransferSum:"Μεταφορά Αποθέματος (Περίληπτικά)",stockUsageDetail:"Χρήση Αποθέματος (Λεπτομερώς)",stockUsageSum:"Χρήση Αποθέματος (Περίληπτικά)",titleDateRange:"Αναφορά {name} {startDate} - {endDate}",titleSingleDate:"Αναφορά {name} {date}"},titles:{addPurchase:"Προσθήκη Αγοράς",addRequest:"Νέο Αίτημα",adjustment:"Προσαρμογή",editPurchase:"Επεξεργασία Αγοράς",editRequest:"Επεξεργασία Αιτήματος",inventoryItem:"Νέο Στοιχείο Αποθεματικού",inventoryReport:"Αναφορά Αποθεματικού",purchaseSaved:"Οι Αγορές Αποθεματικού Αποθηκεύτηκαν",quickAddTitle:"Νέο Είδους Αποθεματικού",removeItem:"Αφαίρεση Στοιχείου",requestFulfilled:"Το Αίτημα Ολοκληρώθηκε",requestUpdated:"Το Αίτημα Ενημερώθηκε",transfer:"Μεταφορά Αιτημάτων",warning:"Προειδοποίηση!!!!!"}},labels:{action:"Ενέργεια",actions:"Ενέργειες",addNewOutpatientVisit:"--Προσθήκη Νέας Επίσκεψης Εξωτερικών Ιατρείων--",address:"Διεύθυνση",age:"Ηλικία",allDay:"Ολη Μέρα",allItems:"Ολα τα Στοιχεία",amount:"Ποσό",anesthesia:"Αναισθησία",assisting:"Παροχή βοήθειας",balanceDue:"Οφειλόμενο Υπόλοιπο",billDate:"Ημερομηνία Χρέωσης",billTo:"Χρέωση Σε",category:"Κατηγορία",completed:"Ολοκληρωμένα",country:"Χώρα",cptcode:"Κωδικός CPT",creditTo:"Πίστωση Σε",currencySymbol:"€",date:"Ημερομηνία",dateCompleted:"Ημερομηνία Ολοκλήρωσης",dateOfBirth:"Ημερομηνία Γέννησης",dateOfBirthShort:"Ημ. Γέννησης",datePaid:"Ημερομηνία Πληρωμής",dateRequested:"Αιτηθείσα Ημερομηνία",delete:"Διαγραφή",deleteRequest:"Διαγραφή Αιτήματος",deleteUser:"Διαγραφή Χρήστη",department:"Τμήμα",description:"Περιγραφή",discount:"Εκπτωση",displayName:"Εμφανιζόμενο Όνομα",docRead:"Διάβασμα Εγγράφων",docWritten:"Γράψιμο Εγγράφων",edit:"Επεξεργασία",editUser:"Επεξεργασία Χρήστη",email:"Email",endDate:"Ημερομηνία Λήξης",endTime:"Ώρα Λήξης",excess:"Υπέρβαση",expenseTo:"Δαπάνη Σε",fileLoadSuccessful:"Επιτυχής Μεταφόρτωση Αρχείου",fileName:"Ονομα Αρχείου",fileToLoad:"Μεταφόρτωση Αρχείου",from:"Από",fulfill:"Ολοκλήρωση",fulfillRequest:"Ολοκλήρωση Αιτήματος",fulfillRequestNow:"Ολοκλήρωση Αιτήματος Τώρα",fulfilled:"Ολοκληρωμένα",grandTotal:"Γενικό Σύνολο",id:"Ταυτότητα",imageOrders:"Παραγγελίες Απεικόνισης",imagingType:"Τύπος Απεικόνισης",importFile:"Εισαγωγή Αρχείου",invoiceId:"ID Τιμολογίου",labOrders:"Παραγγελίες Εργαστήριου",lineItems:"Στοιχεία Γραμμής",loading:"Φορτωση",location:"Τοποθεσία",lookupType:"Τύπος Αναζήτησης",medication:"Φαρμακευτική Αγωγή",name:"Ονομα",newItem:"+ Νέο Στοιχείο",newUser:"Νέος χρήστης",note:"Σημείωση",notes:"Σημειώσεις",number:"Αριθμός",on:"σε",password:"Κωδικός πρόσβασης",patient:"Ασθενής",payments:"Πληρωμές",physician:"Γιατρός",prescriber:"Συνταγογράφος",prescription:"Συνταγή",prescriptionDate:"Ημερομηνία Συνταγής",price:"Τιμή",print:"Εκτύπωση",procedures:"Διαδικασίες",provider:"Προμηθευτής",pullFrom:"Τραβήξτε Από",quantity:"Ποσότητα",remarks:"Παρατηρήσεις",requestedBy:"Αιτήθηκε από",requestedOn:"Αιτήθηκε στη/στις",requests:"Αιτήματα",result:"Αποτέλεσμα",results:"Αποτελέσματα",role:"Ρόλος",search:"Αναζήτηση",sex:"Φύλο",startDate:"Ημερομηνία Έναρξης",startTime:"Ωρα Έναρξης",status:"Κατάσταση",takenBy:"Ανάληψη Από",to:"Σε",total:"Σύνολο",type:"Τύπος",userCanAddNewValue:"Ο χρήστης μπορεί να προσθέσει νέες τιμές",username:"Όνομα Χρήστη",value:"Αξία",view:"Προβολή",visit:"Επίσκεψη",with:"Με"},labs:{alerts:{requestCompletedMessage:"Το αίτημα εργαστηρίου ολοκληρώθηκε.",requestCompletedTitle:"Το Αίτημα Εργαστηρίου Ολοκληρώθηκε",requestSavedMessage:"Το αίτημα εργαστηρίου αποθηκεύτηκε.",requestSavedTitle:"Το Αίτημα Εργαστηρίου Αποθηκεύτηκε"},buttons:{newButton:"+ Νέο Εργαστήριο"},completedTitle:"Ολοκληρώμένα Εργαστήρια",deleteTitle:"Διαγραφή Αιτήματος",editTitle:"Επεξεργασία Αιτήματος Εργαστηρίου",labels:{addNewVisit:"--Προσθήκη Νέας Επίσκεψης--",labType:"Τύπος Εργαστήριου"},messages:{createNewRecord:"Δημιουργία νέας εγγραφής;",noCompleted:"Δεν βρέθηκαν ολοκληρωμένα στοιχεία.",noItemsFound:"Δεν βρέθηκαν εργαστήρια."},newTitle:"Νέο Αίτημα Εργαστήριου",requestsTitle:"Αιτήματα Εργαστήριου",sectionTitle:"Εργαστήρια"},languageName:"Ελληνικά",loading:{messages:{0:"Η μέγιστη ταχύτητα πτήσης μιας πεταλούδα είναι 19 χλμ/ώρα. Μερικοί σκώροι μπορούν να πετάξουν εώς και 40 χλμ/ώρα!",1:"Οι κουκουβάγιες είναι τα μόνα πουλιά που μπορούν να δουν το μπλε χρώμα.",10:"Η γλώσσα σας είναι ο μοναδικός μυς στο σώμα σας που είναι συνδεδεμένος μόνο από το ένα άκρο.",11:"Οι καμήλες έχουν τρία βλέφαρα που τις προστατεύουν από τις αμμοθύελες.",2:"Οι γάτες έχουν πάνω από 100 διαφορετικους τόνους φωνής, ενώ τα σκυλιά έχουν μόνο 10.",3:"Οι άνθρωποι χρησιμοποιούν 72 διαφορετικούς μύες κατά την ομιλία.",4:"Περισσότερες από 1.000 διαφορετικές γλώσσες ομιλούνται στην ήπειρο της Αφρικής.",5:"Ο ερυθροφοβικός είναι κάποιος που κοκκινίζει εύκολα.",6:"Η πιο συνηθισμένη φοβία στον κόσμο είναι οδυνοφοβία που είναι ο φόβος του πόνου.",7:"Το σώμα σας χρησιμοποιεί 300 μύες για να κρατήσει ισορροπία όταν στέκεστε όρθιοι.",8:"Ορισμένες βατράχια μπορεί κατεψυχθούν, στη συνέχεια να αποψυχθούν και ύστερα να συνεχίσουν να ζουν.",9:"Τα μάτια μας είναι πάντα το ίδιο μέγεθος από τη στιγμή της γέννησης μας, αλλά η μύτη και τα αυτιά μας ποτέ δεν σταματούν να μεγαλώνουν."},progressBar:{progress:"Ολοκληρώθηκε {progressBarValue}%"}},login:{labels:{password:"Κωδικός πρόσβασης",signIn:"Σύνδεση",username:"Όνομα Χρήστη"},messages:{error:"Το όνομα χρήστη ή κωδικός πρόσβασης είναι εσφαλμένα.",offlineError:"Δεν είναι δυνατή η σύνδεση ενώ βρίσκεστε εκτός δικτύου. Παρακαλώ εγγραφείτε σε κάποιο δίκτυο και δοκιμάστε ξανά να συνδεθείτε.",signIn:"παρακαλω, συνδεθειτε"}},medication:{alerts:{fulfilledTitle:"Το Αίτημα Φαρμακευτικής Αγωγής Ολοκληρώθηκε",returnedMessage:"Η φαρμακευτική αγωγή επισημάνθηκε ως επιστρεφόμενη.",returnedTitle:"Η Φαρμακευτική Αγωγή Επιστράφηκε",savedMessage:"Η φαρμακευτική αγωγή αποθηκεύτηκε.",savedTitle:"Το Αίτημα Φαρμακευτικής Αγωγής Αποθηκεύτηκε"},buttons:{dispenseMedication:"Διανομή Φαρμακευτικής Αγωγής",newButton:"+ Νέο Αίτημα",returnMedication:"Επιστροφή Φαρμακευτικής Αγωγής"},labels:{adjustmentDate:"Ημερομηνία Προσαρμογής",creditToAccount:"Πίστωση Σε Λογαριασμό",quantityDispensed:"Διανεμήμένη Ποσότητα",quantityDistributed:"Διαμοιρασμένη Ποσότητα",quantityRequested:"Ζητηθείσα Ποσότητα",quantityToReturn:"Ποσότητα Προς Επιστροφή",refills:"Συμπληρώματα",returnAisle:"Διάδρομος Επιστροφής",returnLocation:"Τοποθεσία Επιστροφής",returnReason:"Λόγος/Σημειώσεις Επιστροφής"},messages:{createNew:"Δημιουργία νέου αιτήματος φαρμακευτικής αγωγής;"},pageTitle:"Αιτήματα Φαρμακευτικής Αγωγής",returnMedication:"Επιστροφή Φαρμάκων",sectionTitle:"Φαρμακευτική Αγωγή",titles:{completedMedication:"Ολοκληρώμένη Φαρμακευτική Αγωγή",editMedicationRequest:"Επεξεργασία Αιτήματος Φαρμακευτικής Αγωγής",newMedicationRequest:"Νέο Αιτήμα Φαρμακευτικής Αγωγής"}},messages:{createNewRecord:"Δημιουργία νέας εγγραφής;",createNewUser:"Δημιουργία νέου χρήστη;",delete:"Είστε σίγουροι ότι θέλετε να διαγράψετε τον/την {name};",delete_plural:"Είστε σίγουροι ότι θέλετε να διαγράψετε τα {name};",delete_singular:"Είστε σίγουροι ότι θέλετε να διαγράψετε το {name};",forAuthorizedPersons:"Αυτή η αναφορά είναι μόνο για εξουσιοδοτημένα άτομα.",newPatientHasToBeCreated:"Ένας νέος ασθενής πρέπει να δημιουργηθεί... Παρακαλώ περιμένετε..",noHistoryAvailable:"Δεν υπάρχει διαθέσιμη ιστορικό.",noItemsFound:"Δεν βρέθηκαν στοιχεία.",noNotesAvailable:"Δεν υπάρχουν άλλες κλινικές σημειώσεις είναι διαθέσιμες για αυτή την επίσκεψη.",noUsersFound:"Δεν βρέθηκαν χρήστες.",onBehalfOf:"εκ μέρους του/της",reportError:"Παρουσιάστηκε σφάλμα κατά τη δημιουργία της αναφοράς που ζητήθηκε. Παρακαλείστε να ενημερώσετε το διαχειριστή του συστήματός πως αντιμετωπίσατε κάποιο σφάλμα.",requiredFieldsCorrectErrors:"Παρακαλούμε συμπληρώστε τα υποχρεωτικά πεδία (που σημειώνονται με *) και να διορθώστε τα σφάλματα πριν από την αποθήκευση.",saveActionException:"Παρουσιάστηκε σφάλμα κατά την προσπάθεια αποθήκευσης: {message}",sorry:"Συγνώμη, κάτι πήγε στραβά...",userHasBeenSaved:"Ο χρήστης αποθηκεύτηκε.",userSaved:"Ο Χρήστης Αποθηκεύτηκε"},models:{appointment:{labels:{allDay:"Ολη μέρα",appointmentDate:"Ημερομηνία",appointmentType:"Τύπος",endDate:"Ημερομηνία Λήξης",location:"Τοποθεσία",notes:"Σημειώσεις",patient:"Ασθενής",provider:"Με",startDate:"Ημερομηνία Έναρξης",status:"Κατάσταση",type:"Τύπος"},names:{plural:"ραντεβού",singular:"ραντεβού"}},attachment:{names:{plural:"συνημμένα",singular:"συνημμένο"}},form:{names:{plural:"φόρμες",singular:"φόρμα"}},imaging:{names:"απεικονίσεις",request:{plural:"αιτήματα απεικόνισης",singular:"αίτημα απεικόνισης"}},incident:{names:{plural:"περιστατικά",singular:"περιστατικό"}},item:{names:{plural:"είδη",singular:"είδος"}},lab:{names:{plural:"εργαστήρια",singular:"εργαστήριο"},request:{plural:"αιτήματα εργαστηριού",singular:"αίτημα εργαστηριού"}},medication:{names:{plural:"φαρμακευτικές αγωγές",singular:"φαρμακευτική αγωγή"},request:{plural:"αιτήματα φαρμακευτικής αγωγής",singular:"αίτημα φαρμακευτικής αγωγής"}},note:{names:{plural:"σημειώσεις",singular:"σημείωση"}},patient:{labels:{name:"Ονομα"},names:{singular:"Ασθενής"}},procedure:{names:{plural:"διαδικασίες",singular:"διαδικασία"}},user:{names:{plural:"χρήστες",singular:"χρήστης"}},visit:{names:{plural:"επισκέψεις",singular:"επίσκεψη"}},vital:{names:{plural:"ζωτικοί",singular:"ζωτικός"}}},navigation:{about:"Σχετικά με το HospitalRun",actions:{login:"Σύνδεση",logout:"Αποσυνδέση",selectLanguage:"Επιλογή Γλώσσας"},administration:"Διαχείριση",billing:"Χρεώσεις",imaging:"Απεικονίσεις",incident:"Περιστατικό",inventory:"Αποθεματικό",labs:"Εργαστήρια",medication:"Φαρμακευτική Αγωγή",messages:{logoutFailed:"Δεν ήταν δυνατή η αποσύνδεση αυτή τη στιγμή. Η αποσύνδεση δεν είναι διαθέσιμη ενώ είστε εκτός σύνδεσης."},patients:"Ασθενείς",scheduling:"Πρόγραμμα",subnav:{actions:"Ενέργειες",addAppointment:"Προσθήκη Ραντεβού",addressFields:"Πεδία Διεύθυνσης",admittedPatients:"Εισηγμένοι Ασθενείς",appointmentSearch:"Αναζήτηση Ραντεβού",appointmentsCalendar:"Ημερολόγιο Ραντεβού",appointmentsThisWeek:"Ραντεβού Εβδομάδας",cashier:"Ταμίας",completed:"Ολοκληρωμένα",currentIncidents:"Τρέχοντα Περιστατικά",customForms:"Προσαρμοσμένες Φόρμες",dispense:"Διανομή",history:"Ιστορικό",incidentCategories:"Κατηγορίες Περιστατικών",inventoryReceived:"Παραληφθέν Απόθεμα",inventoryReceivedPlus:"+ Παραληφθέν Απόθεμα",invoices:"Τιμολόγια",items:"Είδη",loadDB:"Μεταφόρτωση Βάσης",lookupLists:"Λίστες Aναζήτησης",newIncident:"Nέο Περιστατικό",newInvoice:"Νέο Τιμολόγιο",newPatient:"Νέος Ασθενής",newRequest:"Νέο Αίτημα",newUser:"Νέος Χρήστης",outpatient:"Εξωνοσοκομειακοί Ασθενείς",patientListing:"Καταχώριση Ασθενούς",priceProfiles:"Προφίλ Τιμών",prices:"Τιμές",printHeader:"Εκτύπωση Επικεφαλίδας",reports:"Αναφορές",requests:"Αιτήματα",returnMedication:"Επιστροφή Φαρμακ. Αγωγής",scheduleSurgery:"Προγρ. Χειρουργείου",textReplacements:"Shortcodes",theaterSchedule:"Πρόγρ. Χειρ. Αίθουσας","today'sAppointments":"Σημερινά Ραντεβού",userRoles:"Ρόλοι Χρηστών",users:"Xρήστες",workflow:"Ροή Εργασίας"},titles:{logoutFailed:"Η Αποσύνδεση Απέτυχε"}},operationReport:{labels:{additionalNotes:"Επιπρόσθετες Σημειώσεις",assistant:"Βοηθός",caseComplexity:"Πολυπλοκότητα Υπόθεσης",operationDescription:"Περιγραφή Χειρουργείου",preOpPrimaryDiagnosis:"Αρχική Προχειρουργική Διάγνωση",preOpSecondaryDiagnosis:"Δευτερεύουσα Προχειρουργική Διάγνωση",surgeon:"Χειρουργός",surgeryDate:"Χειρουργική Ημερομηνία"},messages:{reportSaved:"Η αναφορά του χειρουργείου αποθηκεύτηκε."},titles:{editTitle:"Επεξεργασία Αναφοράς Χειρουργείου",newTitle:"Νέα Αναφορά Χειρουργείου",reportSaved:"Η Αναφορά Αποθηκεύτηκε"}},operativePlan:{buttons:{completePlan:"Ολοκλήρωση Προγράμματος"},labels:{additionalNotes:"Επιπρόσθετες Σημειώσεις",admissionInstructions:"Οδηγίες Κατά την Εισαγωγή",caseComplexity:"Πολυπλοκότητα Υπόθεσης",completedStatus:"Ολοκληρώθηκε",droppedStatus:"Αποσύρεται",operationDescription:"Περιγραφή Χειρουργείου",plannedStatus:"Προγραμματισμένο",status:"Κατάσταση",surgeon:"Χειρουργός"},messages:{planCompleted:"Το πρόγραμμα του χειρουργείου ολοκληρώθηκε. Θα ανακατευθυνθείτε στην αναφορά του χειρουργείου.",planSaved:"Το πρόγραμμα του χειρουργείου αποθηκεύτηκε."},titles:{editTitle:"Επεξεργασία Προγράμματος Χειρουργείου",newTitle:"Νέο Πρόγραμμα Χειρουργείου",planCompleted:"Το Πρόργαμμα Ολοκληρώθηκε",planSaved:"Το Πρόγραμμα Αποθηκεύτηκε"}},patients:{buttons:{addContact:"Προσθήκη Επαφής",addExpense:"Προσθήκη Εξόδων",addFamilyMember:"Προσθήκη Μέλους Οικογένειας",addOperativePlan:"Προσθήκη Προγράμματος Χειρουργείου",backToPatients:"Επιστροφή στην Λίστα ασθενών",download:"Κατέβασμα",editOperativePlan:"Τρέχων Πρόγραμμα Χειρουργείου",newAppointment:"Νέο Ραντεβού",newImaging:"Νέα Απεικόνιση",newLab:"Νέο Εργαστήριο",newMedication:"Νέα Φαρμακευτική Αγωγή",newPatient:"+ Νέος Ασθενής",newPhoto:"Νέα Φωτογραφία",newVisit:"Νέα Επίσκεψη",patientCheckIn:"Check In Ασθενών",scheduleSurgery:"Προγραμματισμός Εγχείρισης"},labels:{admissionDate:"Ημερομηνία Εισαγωγής",admit:"Εισαγωγή",bloodType:"Ομάδα Αίματος",caption:"Λεζάντα",civilStatus:"Οικογενειακή Κατάσταση",clinic:"Τοποθεσία Κλινικής",contacts:"Επαφές",cost:"Κόστος",dateOfBirth:"Ημερομηνία Γέννησης",dateProcessed:"Ημερομηνία Επεξεργασίας",dischargeDate:"Ημερομηνία Αποχώρησης",dob:"Ημ. Γενν.",education:"Εκπαίδευση",email:"Email",externalPatientId:"ID Εξωνοσοκομειακού Ασθενή",firstName:"Ονομα",income:"Εισόδημα",insurance:"Ασφάλιση",lastName:"Επίθετο",middleName:"Μεσαίο όνομα",monthlyCost:"Μηνιαίο Κόστος",occupation:"Επάγγελμα",operativePlan:"Πρόγραμμα Χειρουργείου",parent:"Γονέας/Κηδεμόνας",patientDays:"Ημέρες Ασθενούς",patientType:"Τύπος Ασθενούς",patientTypeCharity:"Φιλανθρωπία",patientTypePrivate:"Ιδιωτικό",phone:"Τηλέφωνο",placeOfBirth:"Τόπος Γέννησης",primaryDiagnosis:"Κύριες Διαγνώσεις",referredBy:"Αναφορά Με",referredDate:"Ημερομηνία Αναφοράς",relationship:"Σχέση με Ασθενή",relationships:"Σχέση",religion:"Θρησκεία",secondaryDiagnosis:"Επιπρόσθετες Διαγνώσεις",sex:"Φύλο",sexNotEntered:"Το Φύλο δεν εχει Εισαχθεί",sources:"Πηγές",status:"Κατάσταση Ασθενών",totalMontlyExpense:"Συνολικά Μηνιαία Έξοδα"},messages:{areYouSureDelete:"Είστε σίγουροι ότι θέλετε να διαγράψετε αυτό το {object};",createNewPatient:"Δημιουργία νέου αρχείου ασθενούς;",deletingPatient:"Διαγραφή του ασθενούς και όλα τα συσχετιζόμενα αρχεία",noPatientsFound:"Δεν βρέθηκαν ασθενείς.",notFoundQuickAdd:"Ο ασθενής <strong>{patientFullName}</strong> δε βρέθηκε. Αν θέλετε να δημιουργήσετε ένα νέο ασθενή, συμπληρώστε τις παρακάτω πληροφορίες. Διαφορετικά πατήστε Ακύρωση για να επιστρέψετε.",photoFileRequired:"Παρακαλώ τραβήξτε μια φωτογραφία ή ανεβάστε ένα αρχείο πριν από την αποθήκευση της φωτογραφίας.",savedPatient:"Ο/η ασθενής {displayName} αποθηκεύτηκε."},navigation:{appointments:"Ραντεβού",general:"Γενικά",history:"Ιστορικό",imaging:"Απεικονίσεις",labs:"Εργαστήρια",medication:"Φαρμακευτική Αγωγή",photos:"Φωτογραφίες",socialWork:"Κοινωνική Εργασία",visits:"Επισκέψεις"},notes:{newNote:"Νέα Σημείωση για",onBehalfOfCopy:"εκ μέρους του/της",onBehalfOfLabel:"Εκ Μέρους του/της",pleaseSelectAVisit:"Επιλέξτε μια επίσκεψη",updateNote:"Ενημέρωση Σημείωσης από"},titles:{addContact:"Προσθήκη Επαφής",addPhoto:"Προσθήκη Φωτογραφίας",additionalContacts:"Επιπλέον Επαφές",admissionsDetail:"Λεπτομέρειες Εισαγωγής",admissionsSummary:"Περίληψη Εισαγωγής",admittedPatients:"Εισηγμένοι Ασθενείς",delete:"Διαγραφή Ασθενούς",deleteContact:"Διαγραφή Επαφής",deleteExpense:"Διαγραφή Εξόδων",deleteFamilyMember:"Διαγραφή Μέλους Οικογένειας",deletePatientRecord:"Διαγραφή Ασθενούς",deletePhoto:"Διαγραφή Φωτογραφίας",diagnosticTesting:"Διαγνωστικές Δοκιμές",dischargesDetail:"Λεπτομέρειες Αποχωρήσεων",dischargesSummary:"Περίληψη Αποχωρήσεων",edit:"Επεξεργασία Ασθενούς",editPhoto:"Επεξεργασία Φωτογραφίας",expenses:"Εξοδα",familyInfo:"Πληροφορίες Οικογένειας",familyInformation:"Πληροφορίες Οικογένειας",new:"Νέος Ασθενής",outpatientsForDate:"Εξωνοσοκομειακοί Ασθενείς για {visitDate}",patient:"Αναφορά Ασθενούς",patientListing:"Καταχώριση Ασθενούς",patientReport:"Αναφορά Ασθενούς",patientStatus:"Κατάσταση Ασθενούς",proceduresDetail:"Λεπτομέρειες Διαδικασιών",proceduresSummary:"Περίληψη Διαδικασιών",savedPatient:"Ο Ασθενής Αποθηκεύτηκε",socialWork:"Δαπάνη",todaysOutpatients:"Σημερινοί Εξονοσοκομειακοί Ασθενείς",totalPatientDays:"Σύνολικές Ημέρες Ασθενούς",totalPatientDaysDetailed:"Σύνολικές Ημέρες Ασθενούς (Λεπτομερώς)",visit:"Επίσκεψη"}},pricing:{labels:{discountAmount:"Ποσό Έκπτωσης",discountPercentage:"Ποσοστό Έκπτωσης",setFee:"Δημιουργία Χρέωσης"},navigation:{}},print:{invoice:{labels:{billedBy:"Χρέωση από:",billedDate:"Ημερομηνία Χρέωσης :",dateAdmitted:"ΕΙΣΗΧΘΗ:",dateDischarged:"ΑΠΟΧΩΡΗΣΗ:",dischargeNotes:"Σημειώσεις Αποχώρησης:",patientAddress:"ΔΙΕΥΘΥΝΣΗ:",patientAge:"ΗΛΙΚΙΑ:",patientId:"ΑΣΘΕΝΗΣ #:",patientName:"ΟΝΟΜΑ ΑΣΘΕΝΟΥΣ:",remarks:"Παρατηρήσεις:",spacer:"__________________________________________"},messages:{whereConducted:"παρακρατήθηκαν κατά τη διάρκεια της νοσηλείας μου"},titles:{billingStatement:"ΔΗΛΩΣΗ ΧΡΕΩΣΗΣ",patientMember:"Ασθενής-Μέλος",patients:"ΑΣΘΕΝΟΥΣ",relContact:"Σχέση/Αρ. Επικοινωνίας"}}},procedures:{buttons:{addMedication:"Προσθήκη Φαρμακευτικής Αγωγής"},labels:{medicationUsed:"Χορηγούμενη Φαρμακευτική Αγωγή"},messages:{saved:"Η διαδικασία αποθηκεύτηκε."},titles:{addChargeItem:"Προσθήκη Στοιχείου Χρέωσης",addMedicationUsed:"Προσθήκη Χορηγούμενης Φαρμακευτικής Αγωγής",deleteChargeItem:"Διαγραφή Στοιχείου Χρέωσης",deleteMedicationUsed:"Διαγραφή Χορηγούμενης Φαρμακευτικής Αγωγής",edit:"Επεξεργασία Διαδικασίας",editChargeItem:"Επεξεργασία Στοιχείου Χρέωσης",editMedicationUsed:"Επεξεργασία Χορηγούμενης Φαρμακευτικής Αγωγής",medicationUsed:"Χορηγούμενη Φαρμακευτική Αγωγή",new:"Νέα Διαδικασία",saved:"Η Διαδικασία Αποθηκεύτηκε"}},reports:{labels:{admissionDate:"Ημερομηνία Εισαγωγής",allProcedures:"Όλες οι Διαδικασίες που Εκτελέστηκαν",completedBy:"Ολοκληρώθηκε Από",dischargeDate:"Ημερομηνία Αποχώρησης",examiner:"Εξεταστής",images:"Απεικονίσεις",labs:"Εργαστήρια",location:"Τοποθεσία Επίσκεψης",medications:"Φαρμακευτική Αγωγή",nextAppointment:"Επόμενο Ραντεβού",nextAppointments:"Επόμενα Ραντεβού",notes:{author:"Συντάκτης",date:"Ημερομηνία",title:"Σημειώσεις"},operativePlan:{description:"Περιγραφή Χειρουργείου",instructions:"Οδηγίες κατά την Εισαγωγή",procedures:"Προγραμματισμένες Διαδικασίες",title:"Πρόγραμμα Χειρουργείου"},primaryDiagnosis:"Κύριες Διαγνώσεις",procedures:"Διαδικασίες",secondaryDiagnosis:"Επιπρόσθετες Διαγνώσεις",visitDate:"Ημερομηνία Επίσκεψης",visitType:"Τύπος Επίσκεψης"},messages:{delete:"Είστε σίγουροι ότι θέλετε να διαγράψετε αυτή την αναφορά;",saved:"Η αναφορά αποθηκεύτηκε."},titles:{dischargeReport:"Εξιτήριο",newDischargeReport:"Νέο Εξιτήριο",newOPDReport:"Νέα Αναφορά Εξωτερικών Ιατρείων",opdReport:"Αναφορά Εξωτερικών Ιατρείων",saved:"Η Αναφορά αποθηκεύτηκε"}},user:{plusNewUser:"+ Νέος Χρήστης",usersPageTile:"Καταχώριση Χρήστη"},visits:{buttons:{addDiagnosis:"Προσθήκη Διάγνωσης",checkIn:"Check In",checkOut:"Check Out",discharge:"Αποχώρηση",newAppointment:"Νέο Ραντεβού",newDischargeReport:"Νέο Εξιτήριο",newOPDReport:"Νέα Αναφορά Εξωτερικών Ιατρείων",newProcedure:"Νέα Διαδικασία",newVitals:"Νέοι Ζωτικοί Δείκτες"},labels:{appointment:"Ραντεβού",authoredBy:"Συγγραφή Από",checkInTime:"Check In",checkOutTime:"Check Out",createNewPatient:"Δημιουργία Νέου Ασθενούς",diagnosis:"Διάγνωση",examiner:"Εξεταστής",finalDiagnosis:"Τελική/Χρεωστική Διάγνωση",haveAppointment:"Ν",haveDoneOrders:"Ν",noAppointment:"Ο",ordersDone:"Ολοκληρωμένες Παραγγελίες",ordersNotDone:"Ο",patientToCheckIn:"Ασθενής Για Check In",procedure:"Διαδικασία",procedureDate:"Ημερομηνία Διαδικασίας",reasonForVisit:"Λόγος της επίσκεψής",reportType:"Τύπος αναφοράς",status:"Επίσκεψη Κατάσταση",statusAdmitted:"Παράδεκτος",statusCheckedIn:"Έχει γίνει Check In",statusCheckedOut:"Έχει γίνει Check Out",statusDischarged:"Αποχώρησε",visitDate:"Ημερομηνία Επίσκεψης",visitInformation:"Πληροφορίες Επίσκεψης",visitType:"Τύπος Επίσκεψης"},messages:{checkOut:"Είστε σίγουροι ότι θέλετε να κάνετε check out στον/στην {patientName};",checkedOut:"Έχει γίνει check out για τον/την {patientName}.",discharged:"Ο/Η {patientName} αποχώρησε.",patientCheckedIn:"Έχει γίνει check in για τον/την {patientName}.",patientCreatedAndCheckedIn:"Δημιουργήθηκε ο/η ασθενής {patientName} και έγινε check in.",visitAndPatientSaved:"Η επίσκεψη και ο ασθενής αποθηκεύτηκαν.",visitSaved:"Η επίσκεψη αποθηκεύτηκε."},navigation:{charges:"Χρεώσεις",notes:"Σημειώσεις",orders:"Παραγγελίες",procedures:"Διαδικασίες",reports:"Αναφορές",vitals:"Ζωτικοί Δείκτες"},titles:{additionalDiagnoses:"Επιπλέον Διαγνώσεις",checkOut:"Check Out Ασθενούς",checkedIn:"O Ασθενής έκανε Check In",checkedOut:"O Ασθενής έκανε Check Out",discharged:"Ο Ασθενής Αποχώρησε",editVisit:"Επεξεργασία Επίσκεψης",newVisit:"Νέα Επίσκεψη",patientCheckIn:"Check In Ασθενούς",visitSaved:"Η Επίσκεψη Αποθηκεύτηκε"}},vitals:{labels:{dateRecorded:"Η Ημερομηνία Καταχωρήθηκε",dbp:"Διαστολική Πίεση",heartRate:"Παλμός Καρδιάς",height:"Ύψος",respiratoryRate:"Ρυθμός Αναπνοής",sbp:"Συστολική Πίεση",temperature:"Θερμοκρασία",weight:"Βάρος"}}}}),define("hospitalrun/translations/he",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"כתובת 1 תווית",address2Label:"תוויות כתובת 2",address3Label:"תוויות כתובת 3",address4Label:"תוויות כתובת 4",addressLabel:"כתובת",editTitle:"אפשרויות כתובת",include1Label:"לכלול תווית 1",include2Label:"לכלול תווית 2",include3Label:"לכלול תווית 3",include4Label:"לכלול תווית 4",messages:{addressSaved:"האפשרויות הכתובות נשמר"},newTitle:"אפשרויות כתובת",titles:{optionsSaved:"אפשרויות הציל"}},addressOptions:"אפשרויות כתובת",customForms:{buttons:{addField:"הוסף שדה",moveDown:"הזז למטה",moveUp:"הזז למעלה",newForm:"+ טופס חדש",preview:"תצוגה מקדימה"},labels:{alwaysInclude:"לכלול תמיד",checkbox:"תיבת סימון",colSpan:"מספר העמודות Span",columns:"עמודות",customForm:"טופס מותאם אישית",dischargeReportFormType:"דו ח השחרור",expenseTo:"הוצאות כדי",formName:"שם טופס",formType:"סוג טופס",header:"כותרת",incidentFormType:"תקרית",includeOtherOption:"כולל אפשרות אחרת",labFormType:"מעבדה",label:"תווית",newForm:"טופס חדש",opdReportFormType:"דוח אשפוז",operativePlanFormType:"תוכנית פעיל ולדווח",otherOptionLabel:"נתינת אפשרות",patientFormType:"החולה",property:"המאפיין",radio:"רדיו",select:"רשימה נפתחת",socialworkFormType:"עבודה סוציאלית",text:"טקסט",textarea:"טקסט גדול",visitFormType:"לבקר"},messages:{formSaved:"הטופס {שם} נשמרה."},titles:{checkboxValues:"תיבת הסימון ערכים",customForms:"טפסים מותאמים אישית",deleteForm:"למחוק את טופס מותאם אישית",dropDownValues:"ערכי רשימה נפתחת",editCustomForm:"עריכת טופס מותאם אישית",fields:"שדות",formSaved:"טופס הציל",headerValues:"ערך שורת כותרת",newCustomForm:"טופס מותאם אישית חדש",radioValues:"רדיו ערכים"}},header:{editTitle:"אפשרויות כותרת",facilityName:"מתקן שם",headerLabel:"כותרת",headerLine1:"שורת כותרת 1",headerLine2:"שורת כותרת 2",headerLine3:"שורת כותרת 3",logoURL:"כתובת url של לוגו",messages:{headerSaved:"האפשרויות כותרת נשמרו"},newTitle:"אפשרויות כותרת",titles:{optionsSaved:"אפשרויות הציל"}},loadDb:"לטעון DB",loaddb:{displayAlertMessage:"נא בחר קובץ כדי לטעון.",displayAlertTitle:"בחר קובץ עומס",editTitle:"לטעון DB",errorDisplayAlertMessage:"אין אפשרות לייבא את מסד הנתונים. השגיאה היתה: {שגיאת}",errorDisplayAlertTitle:"שגיאה בטעינת",progressMessage:"נא המתן בעת מסד הנתונים שלך טעון.",progressTitle:"טעינת מסד נתונים"},lookup:{aisleLocationList:"מלאי מעבר מיקומים",alertImportListMessage:"נא בחר קובץ לייבוא.",alertImportListSaveMessage:"שלרשימת בדיקת המידע יובאו.",alertImportListSaveTitle:"רשימת מיובאים",alertImportListTitle:"בחר קובץ לייבוא",alertImportListUpdateMessage:"שלרשימת בדיקת המידע נשמר.",alertImportListUpdateTitle:"רשימת הציל",anesthesiaTypes:"סוגי הרדמה",anesthesiologists:"מרדימים",billingCategories:"חיוב קטגוריות",clinicList:"המרפאות",countryList:"מדינות",cptCodeList:"קודי CPT",diagnosisList:"אבחנות",edit:{template:{addTitle:"הוסף ערך",editTitle:"עריכת ערך",labelTitle:"ערך",updateButtonTextAdd:"להוסיף",updateButtonTextUpdate:"עדכון"}},expenseAccountList:"חשבונות ההוצאות",imagingPricingTypes:"סוגי תמחור הדמיה",incidentDepartments:"תקרית מחלקות",inventoryTypes:"סוגי המלאי",labPricingTypes:"המעבדה תמחור סוגים",pageTitle:"רשימות בדיקת מידע",patientStatusList:"רשימת מצב החולה",physicianList:"רופאים",procedureList:"נהלים",procedureLocations:"נהלים מיקומים",procedurePricingTypes:"הליך תמחור סוגים",radiologists:"רדיולוגים",titles:{deleteLookupValue:"מחיקת הערך"},unitTypes:"יחידת סוגים",vendorList:"הספק",visitLocationList:"בקרו במקומות",visitTypes:"בקר סוגים",wardPricingTypes:"סוגי תמחור וורד",warehouseList:"מלאי מיקומים"},lookupLists:"רשימות בדיקת מידע",roles:{capability:{addAllergy:"להוסיף אלרגיה",addAppointment:"הוספת מינוי",addBillingDiagnosis:"להוסיף חיוב אבחון",addCharge:"מוסיפים דמי",addDiagnosis:"להוסיף אבחון",addImaging:"להוסיף הדמיה",addIncident:"להוסיף אירוע",addIncidentCategory:"להוסיף קטגוריה התקרית",addInventoryItem:"הוסף פריט המלאי",addInventoryPurchase:"הוסף מלאי רכש",addInventoryRequest:"הוספת בקשת מלאי",addInvoice:"להוסיף חשבונית",addLab:"הוסף את המעבדה",addMedication:"להוסיף תרופות",addNote:"להוסיף הערה",addOperationReport:"הוסף פעולה דו ח",addOperativePlan:"הוסף תוכנית פעיל",addPatient:"הוסף את החולה",addPayment:"להוסיף תשלום",addPhoto:"הוסף תמונה",addPricing:"להוסיף תמחור",addPricingProfile:"להוסיף תמחור פרופיל",addProcedure:"להוסיף שגרת",addSocialwork:"הוספת עבודה סוציאלית",addVisit:"להוסיף ביקור",addVitals:"הוסף סימני חיים",adjustInventoryLocation:"להתאים מיקום המלאי",admin:"המינהל",admitPatient:"מודה החולה",appointments:"פגישות",billing:"חיוב",cashier:"קופאי",completeImaging:"הדמיה מלאה",completeLab:"להשלים את המעבדה",defineUserRoles:"הגדרת תפקידי משתמשים",deleteAppointment:"מחיקת פעילות",deleteDiagnosis:"למחוק את האבחנה",deleteImaging:"מחיקת הדמיה",deleteIncident:"מחיקת האירוע",deleteIncidentCategory:"מחיקת קטגוריה התקרית",deleteInventoryItem:"מחיקת פריט המלאי",deleteInvoice:"למחוק חשבונית",deleteLab:"למחוק את המעבדה",deleteMedication:"למחוק את התרופה",deleteNote:"מחק הערה",deletePatient:"למחוק את החולה",deletePhoto:"מחיקת תמונה",deletePricing:"מחיקת תמחור",deletePricingProfile:"מחיקת פרופיל תמחור",deleteProcedure:"מחיקת הליך",deleteSocialwork:"מחיקת לעבודה סוציאלית",deleteVisit:"למחוק את הביקור",deleteVitals:"מחיקת סימני חיים",dischargePatient:"הפרשות החולה",editInvoice:"לערוך חשבונית",fulfillInventory:"למלא את המלאי",fulfillMedication:"למלא את התרופה",generateIncidentReport:"הפקת דו ח התאונה",imaging:"הדמיה",incident:"תקרית",inventory:"מלאי",invoices:"חשבוניות",labs:"מעבדות",listPaidInvoices:"רשימת חשבוניות ששולמו",loadDb:"טעינת מסד נתונים",manageIncidents:"ניהול אירועים",medication:"תרופות",overrideInvoice:"לעקוף את החשבונית",patientReports:"דיווחי החולה",patients:"חולים",pricing:"תמחור",updateConfig:"תצורות עדכון",visits:"ביקורים"},messages:{roleSaved:"התפקיד {roleName} נשמרה."},titles:{roleSaved:"תפקיד הציל"}},textReplacements:{createNew:"ליצור shortcode חדש",existingRepl:"קיימים בקודי קיצור",noMatches:'אין החלפות להתאים "{המונח}"',pageTitle:"בקודי קיצור",performExpand:"הקש Enter כדי להחליף #{מ} '{עד}'",possibleExpansions:"תחליפים אפשריים: {אפשרי}",replDesc:"בעת הזנת טקסט, קיצורי דרך אלה מאפשרים לך להחליף סדרה קצרה של תווים עם ביטוי ארוך יותר.",replaceWith:"החלף",toReplace:"טקסט כדי להחליף"},userRoles:"תפקידי משתמשים",users:"משתמשים",visitForms:{labels:{followup:"המשך טיפול",form:"טופס",initial:"הראשונית",visitType:"סוג הביקור"},titles:{visitForms:"בקר טפסים"}},workflow:{admissionDepositLabel:"דמי כניסה: הפקדה",clinicPrepaymentLabel:"מרפאת תשלום מראש נדרש",editTitle:"אפשרויות של זרימת עבודה",followupPrepaymentLabel:"עידכון תשלום מראש נדרש",messages:{optionsSaved:"האפשרויות זרימת העבודה נשמרו"},newTitle:"אפשרויות של זרימת עבודה",outpatientImagingLabel:"אשפוז הדמיה תשלום מראש נדרש",outpatientLabLabel:"אשפוז מעבדה תשלום מראש נדרש",outpatientMedicationLabel:"אשפוז תרופות תשלום מראש נדרש",titles:{optionsSaved:"אפשרויות הציל"},workflowLabel:"זרימת עבודה"}},alerts:{errorExclamation:"שגיאה!!!",pleaseWait:"חכה בבקשה",reportError:"שגיאה ביצירת דוח",warningExclamation:"אזהרה!!!"},allergies:{buttons:{addAllergy:"להוסיף אלרגיה"},labels:{allergyName:"שם",patientAllergy:"אלרגיות החולה"},titles:{addAllergy:"להוסיף אלרגיה",editAllergy:"עריכת אלרגיה"}},application:{messages:{sessionExpired:"ההפעלה שלך פגה.  אנא התחבר כדי להמשיך."},titles:{sessionExpired:"ההפעלה פג"}},appointments:{buttons:{newButton:"+ פעילות חדשה",scheduleSurgery:"+ מועד לניתוח"},calendarTitle:"לוח שנה של פגישות",currentScreenTitle:"הפגישות",editTitle:"לערוך פגישה",labels:{noLocation:"ללא מיקום",selectedStartingDate:"הצג פעילויות או לאחר"},messages:{appointmentSaved:"הפגישה למטופלת {} נשמרה.",endTimeLaterThanStart:"נא בחר שעת סיום מאוחר יותר שעת ההתחלה."},missed:"פגישות שלא נענתה",newTitle:"מינוי חדש",searchTitle:"חיפוש פעילויות",sectionTitle:"פגישות",thisWeek:"פגישות השבוע",titles:{appointmentSaved:"מינוי הציל",editSurgicalAppointment:"עריכת פעילות כירורגית",newSurgicalAppointment:"מינוי כירורגי חדש",theaterSchedule:"לוח הזמנים של תיאטרון"},todayTitle:"הפגישות של היום"},billing:{alerts:{noInvoiceFound:"לא נמצאו חשבוניות",noPricingItems:"לא נמצאו פריטים התמחור.",noPricingProfiles:"אין תמחור והפרופילים שנמצאו."},buttons:{addOverride:"הוסף את המעקף",createInvoice:"ליצור חשבונית?"},labels:{actualCharges:"חיובים בפועל",discountAmount:"סכום הנחת",discountPercentage:"הנחה באחוזים",externalInvoiceNumber:"חיצוני חשבונית #",hmoCom:"קופות החולים/COM",insurance:"ביטוח לאומי",paymentProfile:"התשלום פרופיל",paymentsDeposits:"תשלומים/הפקדות",pricingPanelOverrides:"תמחור פרופיל דורסת",pricingProfile:"תמחור פרופיל",setFee:"תשלום קבוע"},messages:{flatDiscountMsg:"יש כמות הנחה שטוח המוחל על אחריות פיננסית החולה {מטבע} {discountAmount}.",flatFeeMsg:"יש תשלום קבוע עבור המטופל האחריות הכספית של {מטבע} {setFee}."},navigation:{}},buttons:{add:"להוסיף",addItem:"הוסף פריט",addLineItem:"הוסף פריט שורה",addValue:"הוסף ערך",addVisit:"להוסיף ביקור",allRequests:"כל הבקשות",barcode:"ברקוד",cancel:"ביטול",clear:"ברור",close:"סגור",complete:"להשלים",delete:"מחק",dispense:"מדבקות/ברקודים",edit:"עריכה",filter:"מסנן",fulfill:"למלא",import:"ייבוא",loadFile:"טעינת קובץ",newItem:"+ פריט חדש",newNote:"הערה חדשה",newRequest:"בקשה חדשה",newRequestPlus:"+ בקשה חדשה",newUser:"משתמש חדש",ok:"אוקיי",print:"הדפסה",remove:"הסר",returnButton:"החזרה",review:"סקירה",search:"חיפוש",showAll:"הצג הכל",showFewer:"להראות פחות",update:"עדכון"},components:{chargesByTypeTab:{charges:"חיובים"},customFormManager:{buttons:{addForm:"הוסף טופס"}},dateTimePicker:{amHour:"{שעה} AM",midnight:"חצות",noon:"בצהריים",pmHour:"{שעה} PM"},imageUpload:{messages:{selectValidImageFile:"נא בחר קובץ תמונה תקף."}},operativeProcedures:{buttons:{addProcedure:"להוסיף שגרת"},labels:{procedure:"הליך"},titles:{procedures:"נהלים"}},patientOrders:{buttons:{newImaging:"הדמיה חדש",newLab:"המעבדה החדשה",newMedication:"תרופה חדשה"},labels:{imagingOrderType:"הדמיה",labOrderType:"מעבדה",medicationOrderType:"תרופות",orderType:"טיפוס סדר"}},priceList:{charges:"חיובים {pricingType}"},quantityCalc:{result:"{targetUnit} סה כ: {מחושב}"},quantityConv:{conversion:"מה מכיל 1 {שם}?",unit:"יחידה"},sortableColumn:{labels:{selectAll:"(בחר הכל)"}},takePhoto:{camera:"מצלמה",how:"כיצד ברצונך להוסיף תמונה?",labels:{takeAPicture:"צלם תמונה",uploadAFile:"להעלות קובץ"},photo:"צילום",preview:"תצוגה מקדימה",takePhoto:"לקחת תמונה",uploadFile:"העלאת קובץ"},upcomingAppointments:{labels:{date:"תאריך",location:"מיקום",type:"סוג",with:"עם"},titles:{upcomingAppointments:"פגישות עתידיות"}}},customForms:{buttons:{addForm:"הוסף טופס"},labels:{formToAdd:"טופס להוספת"},titles:{addCustomForm:"הוסף טופס מותאם אישית"}},dashboard:{needs_user_setup:"אנו ממליצים להגדיר חשבון משתמש.",standalone_welcome:'<h4>תודה על הורדת HospitalRun</h4> <p>אתה מפעיל HospitalRun במצב לעמוד לבד. מצב זה מאפשר לך לתמוך במשתמשים מרובים על יחיד, שולחן עבודה/נישאים מופע של HospitalRun. זה אידיאלי:</p> <ul><li>HospitalRun הערכת לפריסה שרת בסופו של דבר.</li> <li>באמצעות הפלטפורמה כדי לתמוך מרפאה / מתקן שבו מופע יחיד מספיקה.</li></ul> <p>אם אתה שוקל פריסה מרובת התקן של HospitalRun, אנחנו <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank"> עובדים על תכונות</a> אשר יאפשרו לך "שסיים" זה מופע יחיד לתוך ענן מסורתי / מבוססי-שרת פריסה.</p>',title:"ברוכים הבאים HospitalRun!"},dates:{long:"{שנה} בן חודשים {חודשים} {בימים} בימים",longOmitDays:"בן {שנה} {חודשים} חודשים",longOmitDaysPlural:"שנים {שנה} {חודשים} חודשים",longOmitDaysYears:"חודשים {חודשים}",longOmitYears:"חודשים {חודשים} {בימים} בימים",longPlural:"{שנים} שנים חודשים {חודשים} {בימים} בימים",short:"y {שנה} {חודשים} ז יח {ימים}",shortOmitYears:"ז {חודשים} {ימים} d"},diagnosis:{labels:{activeDiagnosis:"אבחון פעיל",date:"תאריך",diagnosis:"אבחון",secondaryDiagnosis:"אבחון משני"},titles:{addDiagnosis:"להוסיף אבחון",editDiagnosis:"לערוך אבחון"}},errors:{accepted:"חייב להיות מקובל",blank:"לא יכול להיות ריק",confirmation:"לא תואם {תכונה}",empty:"אינו יכול להיות ריק",equalTo:"חייב להיות שווה ל {נחשב}",even:"חייב להיות זוגי",exclusion:"שמורה",greaterThan:"חייב להיות גדול מ {ספירת}",greaterThanOrEqualTo:"חייב להיות גדול או שווה ל- {נחשב}",inclusion:"שלא נכלל ברשימה",invalid:". זה לא חוקי",invalidNumber:"לא מספר חוקי",lessThan:"חייב להיות פחות מ {ספירת}",lessThanOrEqualTo:"חייב להיות קטן או שווה לספור {}",notANumber:"הוא לא מספר",notAnInteger:"חייב להיות מספר שלם",odd:"חייב להיות מוזר",otherThan:"בטח חוץ {ספירת}",present:"חייב להיות ריק",result:"אנא הזן תוצאה לפני השלמת",tooLong:"ארוך מדי (מקסימום הוא {ספירת} תווים)",tooShort:"הוא קצר מדי (המינימום הוא {ספירת} תווים)",wrongLength:"הוא אורך הלא נכון (צריך להיות תווים {ספירת})"},headings:{chargedItems:"פריטים טעון"},imaging:{alerts:{completedMessage:"הבקשה ההדמיה הושלמה.",completedTitle:"בקשה ההדמיה הושלמה",savedMessage:"הבקשה הדמיה נשמרה.",savedTitle:"הדמיה בקשה הציל"},buttons:{newButton:"+ הדמיה חדש"},labels:{addNewVisit:"-להוסיף ביקור חדש...",completedBy:"הושלמה על ידי",radiologist:"רדיולוג",requestedNotes:"ביקש הערות",resultNotes:"תוצאה הערות"},messages:{noCompleted:"לא נמצאו פריטים שהושלמו."},pageTitle:"בקשות הדמיה",sectionTitle:"הדמיה",titles:{completedImaging:"ההדמיה הושלמה",editTitle:"לערוך הדמיה בקשה",newTitle:"חדש הדמיה בקשה"}},incident:{buttons:{add:"להוסיף",addForm:"+ הוסף טופס",addItem:"הוסף פריט",cancel:"ביטול",delete:"מחק",download:"להורדה",edit:"עריכה",export:"דוח ייצוא",generateRep:"דוח",newAttachment:"+ קובץ מצורף חדש",newCategory:"+ קטגוריה חדשה",newIncident:"+ אירוע חדש",newNote:"+ הערה חדשה"},labels:{actions:"פעולות",addedBy:"נוסף על ידי",category:"קטגוריה",categoryItem:"פריט בקטגוריה",date:"תאריך",dateRecorded:"תאריך מוקלט",department:"המחלקה",description:"תיאור התקרית",endDate:"תאריך סיום",givenBy:"שניתנו על ידי",howToAddAttachment:"כיצד ברצונך להוסיף קובץ מצורף?",incidentDate:"תאריך של אירוע",incidentId:"מזהה האירוע",item:"פריט",lastUpdated:"עדכון אחרון:",note:"הערה",patientId:"מספר זיהוי של החולה",patientImpacted:"החולה השפיעו",reportType:"סוג הדוח",reportedBy:"שדווחו על-ידי",reportedDate:"תאריך דיווח",reportedTo:"האירוע דווח (שם מלא)",sentinelEvent:"סנטינל אירוע",startDate:"תאריך התחלה",status:"מצב",statusActive:"פעיל",statusClosed:"סגור",statusFollowup:"מעקב",statusReported:"דיווח",title:"כותרת",total:"סה",updatedBy:"עודכן על-ידי"},messages:{attachmentFileRequired:"בבקשה להעלות קובץ או לצלם תמונה או לפני שמירת קובץ מצורף.",createNew:"ליצור אירוע חדש?",createNewIncidentCategory:"ליצור קטגוריה חדשה תקרית?",fillIn:"למלא את האפשרויות לעיל לחשב את הציון",incidentCategorySaved:"הקטגוריה {שם} נשמרה.",noClosedIncidents:"אין תקריות סגור נמצאו.",noIncidentCategoriesFound:"לא נמצאו קטגוריות התקרית.",noIncidents:"לא נמצאו אירועים.",saved:"דו ח התאונה נשמרה.",selectExistingPatient:"נא בחר חולים קיימים או תשאיר שדה זה ריק."},titles:{addAttachment:"הוסף קובץ מצורף",addCategoryItem:"הוסף פריט בקטגוריה",addNote:"להוסיף הערה",attachments:"קבצים מצורפים",closed:"אירועים סגורים",current:"זרם",deleteAttachment:"מחיקת קובץ מצורף",deleteIncident:"מחיקת האירוע",deleteIncidentCategory:"מחיקת קטגוריה התקרית",deleteItem:"מחיקת פריט",deleteNote:"מחק הערה",editAttachment:"עריכת קובץ מצורף",editIncident:"עריכת האירוע",editIncidentCategory:"עריכת קטגוריה התקרית",editNote:"ערוך הערה",general:"מידע כללי",history:"היסטוריה",incidentCategories:"קטגוריות התקרית",incidentCategoryItem:"פריט בקטגוריה התקרית",incidentCategoryName:"שם הקטגוריה האירוע",incidentCategorySaved:"התקרית קטגוריה הציל",incidentSaved:"תקרית הציל",incidents:"אירועים",incidentsByCategory:"אירועים לפי קטגוריה",incidentsByDepartment:"אירועים לפי מחלקה",newIncident:"תקרית חדש",newIncidentCategory:"קטגוריה חדשה התקרית",notes:"הערות",reports:"דוחות"}},inventory:{edit:{cost:"מחיר ליחידה:",delivered:"נמסר:",location:"מיקום מותאם:",prescription:"מרשם:",pulled:"שלף מתוך:",quantity:"כמות בעת סיום:",reason:"הסיבה:",returned:"חזר מן החולה:",transferredFrom:"הועבר מ:",transferredTo:"הועבר:"},labels:{action:"פעולה",add:"להוסיף",addAdjustmentType:"להוסיף",adjust:"התאם",adjustmentDate:"התאמת תאריך",adjustmentFor:"התאמה עבור",adjustmentType:"סוג התאמה",aisle:"במעבר",aisleLocation:"מעבר למיקום",allInventory:"כל מלאי",allItems:"כל הפריטים",availableQuantity:"{כמות} זמין",billTo:"לחיוב",consumePurchases:"צורכים רכישות",consumptionRate:"קצב צריכת",cost:"עלות",costPerUnit:"עלות ליחידה",crossReference:". תצליבו",currentQuantity:"הכמות הנוכחית",dateCompleted:"תאריך השלמה",dateEffective:"תאריך אפקטיבי",dateEnd:"תאריך סיום",dateReceived:"תאריך התקבל",dateStart:"תאריך התחלה",dateTransferred:"תאריך העברת",daysLeft:"ימים",deleteItem:"מחיקת פריט",deliveryAisle:"משלוח מעבר",deliveryLocation:"מיקום המסירה",details:"פרטים",distributionUnit:"יחידת תפוצה",editItem:"עריכת פריט",expense:"הוצאות כדי",expirationDate:"תאריך תפוגה",fulfillRequest:"למלא בקשת",fulfillRequestNow:"למלא בקשת עכשיו",gift:"מתנה די",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"מתנה בסוג השימוש",inventoryConsumed:"מלאי נצרך",inventoryItem:"פריט המלאי",inventoryObsolence:"Obsolence מלאי",invoiceItems:"פריטי החשבונית",invoiceLineItem:"שורת בחשבונית",invoiceNumber:"מספר חשבונית",item:"פריט",itemNumber:"מספר פריט",items:"פריטים",location:"מיקום",locations:"מיקומים",markAsConsumed:"מארק כפי צרכו",name:"שם",newItem:"פריט חדש",originalQuantity:"הכמות המקורית",print:"הדפסה",printBarcode:"הדפס ברקוד",printer:"מדפסת",pullFrom:"משוך מן",purchaseCost:"עלות הרכישה",purchaseInfo:"רכישת מידע",purchases:"רכישות",quantity:"כמות ({יחידה})",quantityAvailable:"כמות זמינה",quantityOnHand:"הכמות בנמצא",quantityRequested:"הכמות המבוקשת",rank:"דרגה",reason:"סיבה",remove:"הסר",removeAdjustmentType:"הסר",reorderPoint:"נקודת חידוש",requestedItems:"ביקש פריטים",returnAdjustmentType:"החזרה",returnToVendorAdjustmentType:"לחזור אל הספק",salePricePerUnit:"מחיר מכירה ליחידה",save:"שמור",serialNumber:"המספר הסידורי/הרבה",total:"סה",totalCost:"סה כ עלות",totalReceived:"הכולל שהתקבל: {סה כ}",transaction:"עסקת",transactions:"תנועות",transfer:"העברה",transferFrom:"העבר",transferTo:"העברה למיקום",transferToAisle:"העברה למיקום במעבר",unit:"יחידה",unitCost:"עלות יחידה",vendor:"הספק",vendorItemNumber:"מספר פריט הספק",writeOffAdjustmentType:"תמחקי",xref:"XRef"},messages:{adjust:"בבקשה להתאים את הכמויות ב location(s) המתאים להביא בחשבון ההפרש של {הבדל}.",createRequest:"ליצור בקשה חדשה?",itemNotFound:"לא היתה אפשרות למצוא את פריט מלאי <strong>{הפריט}</strong>. <br>אם תרצה ליצור פריט מלאי חדש, מלאו את הפרטים הבאים. <br>אחרת, לחץ על לחצן ביטול כדי לחזור.",loading:"טוען עסקאות...",noItems:"לא נמצאו פריטים.",noRequests:"בקשות לא נמצאו.",purchaseSaved:"הרכישות מלאי נשמרו בהצלחה.",quantity:"הכמות הכוללת של <strong>({כמות})</strong> אינם תואמים הכמות הכוללת, המיקומים <strong>({locationQuantity})</strong>.",removeItem:"האם אתה בטוח שברצונך להסיר פריט זה חשבונית זו?",removeItemRequest:"האם אתה בטוח שברצונך להסיר פריט זה בקשה זו?",requestFulfilled:"הבקשה מלאי התגשמה",requestUpdated:"הבקשה מלאי עודכנה.",warning:"אנא מלאו את שדות החובה (המסומנים *) ולתקן את השגיאות לפני הוספת."},reports:{adjustment:"התאמת נתונים היסטוריים",daysSupply:"ימי אספקה במלאי",expenseDetail:"הוצאות מפורטת",expenseSum:"סיכום הוצאות",expiration:"תאריך תפוגה",export:"דוח ייצוא",fields:"שדות כדי לכלול",finance:"האוצר סיכום",generate:"דוח",invLocation:"מלאי לפי מיקום",invValuation:"הערכת שווי המלאי",purchaseDetail:"רכישה מפורט",purchaseSum:"סיכום הרכישה",reportType:"סוג הדוח",rows:{adjustments:"התאמות",adjustmentsTotal:"סה כ התאמות",balanceBegin:"החל איזון",balanceEnd:"הסוף איזון",category:"קטגוריה",consumed:"נצרך",consumedGik:"GiK נצרך",consumedGikTotal:"סה כ GiK נצרך",consumedPuchases:"רכישות נצרך",consumedPurchasesTotal:"סך הרכישות נצרך",consumedTotal:"סך הכל נצרך",errInFinSum:"שגיאה _generateFinancialSummaryReport: ",errInFindPur:"שגיאה _findInventoryItemsByPurchase: ",errInFindReq:"שגיאה _findInventoryItemsByRequest: ",expensesFor:"הוצאות עבור: ",noAccount:"(אין לי חשבון)",subtotal:"ביניים: ",subtotalFor:"סכום ביניים עבור {קטגוריה} - {חשבון}: ",total:"סה: ",totalFor:"סה עבור {var}: ",totalPurchases:"הרכישות מוחלט",transfer1:"{כמות} {מיקום}",trasnfer2:"מ: {מקור} ל: {היעד}"},stockTransferDetail:"העברת מניות מפורט",stockTransferSum:"העברת מניות סיכום",stockUsageDetail:"מידע מפורט אודות השימוש מניות",stockUsageSum:"סיכום שימוש מניות",titleDateRange:"{שם} ח {startDate} - {endDate}",titleSingleDate:"{שם} ח {תאריך}"},titles:{addPurchase:"להוסיף רכישה",addRequest:"בקשה חדשה",adjustment:"התאמת",editPurchase:"עריכת רכישה",editRequest:"ערוך בקשה",inventoryItem:"פריט מלאי חדש",inventoryReport:"וח.",purchaseSaved:"רכישות מלאי הציל",quickAddTitle:"פריט מלאי חדש",removeItem:"הסר פריט",requestFulfilled:"בקשה מילא",requestUpdated:"בקשת עדכון",transfer:"העברת פריטים",warning:"אזהרה!!!"}},labels:{action:"פעולה",actions:"פעולות",addNewOutpatientVisit:"-להוסיף ביקור אשפוז חדש.",address:"כתובת",age:"גיל",allDay:"כל היום",allItems:"כל הפריטים",amount:"כמות",anesthesia:"הרדמה",assisting:"סיוע",balanceDue:"איזון תקין",billDate:"תאריך החשבון",billTo:"לחיוב",category:"קטגוריה",completed:"הושלמה",country:"מדינה",cptcode:"קוד CPT",creditTo:". אמון",currencySymbol:"$",date:"תאריך",dateCompleted:"תאריך השלמה",dateOfBirth:"תאריך לידה",dateOfBirthShort:"דאב",datePaid:"תאריך תשלום",dateRequested:"התאריך המבוקש",delete:"מחק",deleteRequest:"מחיקת הבקשה",deleteUser:"מחיקת משתמש",department:"המחלקה",description:"תיאור",discount:"הנחה",displayName:"שם תצוגה",docRead:"קריאה docs",docWritten:"מסמכים שנכתבו",edit:"עריכה",editUser:"ערוך משתמש",email:"דוא",endDate:"תאריך סיום",endTime:"שעת סיום",excess:"עודף",expenseTo:"הוצאות כדי",fileLoadSuccessful:"קובץ כדי לטעון מוצלח",fileName:"שם קובץ",fileToLoad:"טעינת קובץ",from:"מ",fulfill:"למלא",fulfillRequest:"למלא בקשת",fulfillRequestNow:"למלא בקשת עכשיו",fulfilled:"מילא",grandTotal:"הסכום הכולל",id:"מזהה",imageOrders:"התמונה הזמנות",imagingType:"סוג הדמיה",importFile:"קובץ הייבוא",invoiceId:"מזהה חשבונית",labOrders:"הזמנות מעבדה",lineItems:"פריטי השורה",loading:"טעינה",location:"מיקום",lookupType:"סוג בדיקה",medication:"תרופות",name:"שם",newItem:"+ פריט חדש",newUser:"משתמש חדש",note:"הערה",notes:"הערות",number:"מספר",on:"על",password:"סיסמה",patient:"החולה",payments:"תשלומים",physician:"רופא",prescriber:"Prescriber",prescription:"מרשם",prescriptionDate:"מרשם תאריך",price:"מחיר",print:"הדפסה",procedures:"נהלים",provider:"ספק",pullFrom:"משוך מן",quantity:"כמות",remarks:"הערות",requestedBy:"המבוקש על ידי",requestedOn:"על בקשה",requests:"בקשות",result:"תוצאה",results:"תוצאות",role:"תפקיד",search:"חיפוש",sex:"סקס",startDate:"תאריך התחלה",startTime:"שעת ההתחלה",status:"מצב",takenBy:"נלקחה על ידי",to:"כדי",total:"סה",type:"סוג",userCanAddNewValue:"המשתמש יכול להוסיף ערכים חדשים",username:"שם משתמש",value:"ערך",view:"תצוגה",visit:"לבקר",with:"עם"},labs:{alerts:{requestCompletedMessage:"הבקשה מעבדה הושלמה.",requestCompletedTitle:"להשלים את הבקשה",requestSavedMessage:"הבקשה נשמרה.",requestSavedTitle:"הציל את הבקשה"},buttons:{newButton:"+ מעבדה חדשה"},completedTitle:"מעבדות שהושלמו",deleteTitle:"מחיקת הבקשה",editTitle:"ערוך את הבקשה",labels:{addNewVisit:"-להוסיף ביקור חדש...",labType:"סוג מעבדה"},messages:{createNewRecord:"יצירת רשומה חדשה?",noCompleted:"לא נמצאו פריטים שהושלמו.",noItemsFound:"לא נמצאו מעבדת."},newTitle:"בקשה מעבדה חדשה",requestsTitle:"מעבדת בקשות",sectionTitle:"מעבדות"},languageName:"עברית",loading:{messages:{0:",מהירות טיסה פרפר העליונה היא 12 קמ ש. עש כמה יכול לעוף 25 קמ ש!",1:",ינשופים הם הציפורים היחיד שיכול לראות את הצבע הכחול.",10:",הלשון שלך הוא השריר היחיד בגוף מחובר בקצה אחד בלבד.",11:",גמלים יש שלושה העפעפיים כדי להגן על עצמם מפני השבה חול.",2:",לחתולים יש מעל 100 צלילים; לכלבים יש רק 10.",3:",בני האדם להשתמש סך של 72 שרירים שונים בנאום.",4:",יותר מ-1,000 שפות מדוברות ביבשת אפריקה.",5:",Erythrophobe היא מישהי מסמיקה בקלות.",6:",הפוביה הנפוצה ביותר בעולם הוא odynophobia אשר הוא החשש מפני הכאב.",7:",הגוף שלך משתמשת השרירים 300 כדי לאזן את עצמה. כשאת עומדת עדיין.",8:",צפרדעים מסויימים יכול להיות קפוא אבן ואז הקרת ולהמשיך לחיות.",9:",העיניים שלנו הם תמיד באותו גודל מלידה, אבל האף והאוזניים שלנו לא מפסיקות לגדול."},progressBar:{progress:"{progressBarValue} % ביצוע"}},login:{labels:{password:"סיסמה",signIn:"הירשם",username:"שם משתמש"},messages:{error:"שם משתמש או סיסמה אינה נכונה.",offlineError:"לא מצליח להתחבר בזמן במצב לא מקוון.  בבקשה ליצור חיבור לרשת ונסה שנית לבצע כניסה.",signIn:"אנא התחבר \\ י"}},medication:{alerts:{fulfilledTitle:"בקשה תרופות מילא",returnedMessage:"התרופה סומנה כפי שהוחזר.",returnedTitle:"תרופות חזר",savedMessage:"תרופות הרשומה נשמרה.",savedTitle:"בקשה תרופות הציל"},buttons:{dispenseMedication:"לחלק תרופות",newButton:"+ בקשה חדשה",returnMedication:"להחזיר את התרופה"},labels:{adjustmentDate:"התאמת תאריך",creditToAccount:"קרדיט לחשבון",quantityDispensed:"כמות בגליל",quantityDistributed:"כמות בחלוקה",quantityRequested:"הכמות המבוקשת",quantityToReturn:"כמות החזרה",refills:"מילוי מחדש",returnAisle:"במעבר חזור",returnLocation:"סניף החזרה",returnReason:"להחזיר את הסיבה/הערות"},messages:{createNew:"ליצור בקשה תרופה חדשה?"},pageTitle:"בקשות תרופות",returnMedication:"להחזיר את התרופה",sectionTitle:"תרופות",titles:{completedMedication:"התרופה הושלמה",editMedicationRequest:"ערוך בקשה תרופות",newMedicationRequest:"בקשה תרופה חדשה"}},messages:{createNewRecord:"יצירת רשומה חדשה?",createNewUser:"ליצור משתמש חדש?",delete:"האם אתה בטוח שברצונך למחוק את {שם}?",delete_plural:"האם אתה בטוח שברצונך למחוק את {השם}?",delete_singular:"האם אתה בטוח שברצונך למחוק את {השם}?",forAuthorizedPersons:"דו ח זה הוא עבור אנשים מורשים בלבד.",newPatientHasToBeCreated:"מטופלת חדשה צריכה להיות שנוצר... חכה בבקשה..",noHistoryAvailable:"ההיסטוריה לא זמין.",noItemsFound:"לא נמצאו פריטים.",noNotesAvailable:"אין הערות קליניים נוספים זמינים עבור הביקור הזה.",noUsersFound:"לא נמצאו משתמשים.",onBehalfOf:"שבשמו",reportError:"המערכת נתקלה בשגיאה בעת יצירת הדוח המבוקש.  הינכם מתבקשים להודיע למנהל המערכת יודעת נתקלת בשגיאה.",requiredFieldsCorrectErrors:"אנא מלאו את שדות החובה (המסומנים *) ולתקן את השגיאות לפני השמירה.",saveActionException:"אירעה שגיאה בעת ניסיון לשמור: {הודעה}",sorry:"מצטער, משהו השתבש...",userHasBeenSaved:"המשתמש נשמרה.",userSaved:"המשתמש הציל"},models:{appointment:{labels:{allDay:"כל היום",appointmentDate:"תאריך",appointmentType:"סוג",endDate:"תאריך סיום",location:"מיקום",notes:"הערות",patient:"החולה",provider:"עם",startDate:"תאריך התחלה",status:"מצב",type:"סוג"},names:{plural:"פגישות",singular:"פגישה"}},attachment:{names:{plural:"קבצים מצורפים",singular:"קובץ מצורף"}},form:{names:{plural:"טפסים",singular:"טופס"}},imaging:{names:"הדמיה",request:{plural:"בקשות הדמיה",singular:"בקשה הדמיה"}},incident:{names:{plural:"אירועים",singular:"תקרית"}},item:{names:{plural:"פריטים",singular:"פריט"}},lab:{names:{plural:"מעבדות",singular:"מעבדה"},request:{plural:"מעבדת בקשות",singular:"את הבקשה"}},medication:{names:{plural:"תרופות",singular:"תרופות"},request:{plural:"בקשות תרופות",singular:"בקשת תרופה"}},note:{names:{plural:"הערות",singular:"הערה"}},patient:{labels:{name:"שם"},names:{singular:"החולה"}},procedure:{names:{plural:"נהלים",singular:"הליך"}},user:{names:{plural:"משתמשים",singular:"המשתמש"}},visit:{names:{plural:"ביקורים",singular:"לבקר"}},vital:{names:{plural:". סימנים חיוניים",singular:"חיוני"}}},navigation:{about:"אודות HospitalRun",actions:{login:"כניסה",logout:"יציאה מהמערכת",selectLanguage:"בחר שפה"},administration:"המינהל",billing:"חיוב",imaging:"הדמיה",incident:"תקרית",inventory:"מלאי",labs:"מעבדות",medication:"תרופות",messages:{logoutFailed:"יכול לא התנתק בשלב זה.  יציאה אינה זמינה בעת במצב לא מקוון."},patients:"חולים",scheduling:"תזמון",subnav:{actions:"פעולות",addAppointment:"הוספת מינוי",addressFields:"שדות ' כתובת '",admittedPatients:"חולים הודה",appointmentSearch:"חיפוש פגישה",appointmentsCalendar:"לוח שנה של פגישות",appointmentsThisWeek:"פגישות השבוע",cashier:"קופאי",completed:"הושלמה",currentIncidents:"אירועים נוכחי",customForms:"טפסים מותאמים אישית",dispense:"מדבקות/ברקודים",history:"היסטוריה",incidentCategories:"קטגוריות התקרית",inventoryReceived:"מלאי התקבל",inventoryReceivedPlus:"+ מלאי התקבל",invoices:"חשבוניות",items:"פריטים",loadDB:"לטעון DB",lookupLists:"רשימות בדיקת מידע",newIncident:"תקרית חדש",newInvoice:"חשבונית חדשה",newPatient:"מטופל חדש",newRequest:"בקשה חדשה",newUser:"משתמש חדש",outpatient:"אשפוז",patientListing:"רישום החולה",priceProfiles:"מחיר פרופילים",prices:"מחירים",printHeader:"הדפס כותרת",reports:"דוחות",requests:"בקשות",returnMedication:"להחזיר את התרופה",scheduleSurgery:"ניתוח לוח הזמנים",textReplacements:"בקודי קיצור",theaterSchedule:"לוח הזמנים של תיאטרון","today'sAppointments":"הפגישות של היום",userRoles:"תפקידי משתמשים",users:"משתמשים",workflow:"זרימת עבודה"},titles:{logoutFailed:"יציאה נכשלה"}},operationReport:{labels:{additionalNotes:"הערות נוספות",assistant:"העוזרת",caseComplexity:"מורכבות התיק",operationDescription:"תיאור המבצע",preOpPrimaryDiagnosis:"אבחון ראשי לפני ניתוח",preOpSecondaryDiagnosis:"אבחון משני לפני ניתוח",surgeon:"מנתח",surgeryDate:"תאריך הניתוח"},messages:{reportSaved:"הדו ח הפעולה נשמרה."},titles:{editTitle:"עריכת דוח פעולה",newTitle:"דו ח פעולה חדש",reportSaved:"ח נשמר"}},operativePlan:{buttons:{completePlan:"להשלים את התוכנית"},labels:{additionalNotes:"הערות נוספות",admissionInstructions:"הנחיות בעת הקליטה",caseComplexity:"מורכבות התיק",completedStatus:"הושלמה",droppedStatus:"נפל",operationDescription:"תיאור המבצע",plannedStatus:"מתוכנן",status:"מצב",surgeon:"מנתח"},messages:{planCompleted:"התוכנית פעיל הושלמה.  כעת תופנה אל הדוח מבצע.",planSaved:"התוכנית פעיל נשמרה."},titles:{editTitle:"עריכת תוכנית פעיל",newTitle:"תוכנית חדשה פעיל",planCompleted:"התוכנית הושלמה",planSaved:"תוכנית הציל"}},patients:{buttons:{addContact:"רשק שיא תפסוה",addExpense:"הוסף הוצאה",addFamilyMember:"הוספת בן משפחה",addOperativePlan:"הוסף תוכנית פעיל",backToPatients:"חזרה לרשימת החולה",download:"להורדה",editOperativePlan:"תוכנית פעיל הנוכחית",newAppointment:"מינוי חדש",newImaging:"הדמיה חדש",newLab:"המעבדה החדשה",newMedication:"תרופה חדשה",newPatient:"+ מטופל חדש",newPhoto:"התמונה החדשה",newVisit:"ביקור חדש",patientCheckIn:"החולה צ'ק",scheduleSurgery:"ניתוח לוח הזמנים"},labels:{admissionDate:"תאריך כניסה",admit:"מודה",bloodType:"סוג דם",caption:"כיתוב",civilStatus:"מעמד אזרחי",clinic:"אתר המרפאה",contacts:"אנשי קשר",cost:"עלות",dateOfBirth:"תאריך לידה",dateProcessed:"תאריך מעובד",dischargeDate:"תאריך השחרור",dob:"דאב",education:"חינוך",email:"דוא",externalPatientId:"מספר זיהוי של החולה חיצוני",firstName:"שם פרטי",income:"הכנסה",insurance:"ביטוח",lastName:"שם משפחה",middleName:"השם האמצעי",monthlyCost:"עלות חודשית",occupation:"הכיבוש",operativePlan:"תוכנית פעיל",parent:"ההורה/אפוטרופוס",patientDays:"ימים החולה",patientType:"סוג החולה",patientTypeCharity:"צדקה",patientTypePrivate:"פרטי",phone:"טלפון",placeOfBirth:"מקום לידה",primaryDiagnosis:"אבחנות ראשי",referredBy:"על-ידי",referredDate:"תאריך התייחס",relationship:"היחסים לחולה",relationships:"מערכות יחסים",religion:"דת",secondaryDiagnosis:"אבחנות משני",sex:"סקס",sexNotEntered:"סקס לא נכנס",sources:"מקורות",status:"מצב החולה",totalMontlyExpense:"סך כל ההוצאות החודשי"},messages:{areYouSureDelete:"האם אתה בטוח שברצונך למחוק את {אובייקט זה}?",createNewPatient:"יצירת רשומה חדשה החולה?",deletingPatient:"מחיקת רשומות החולה ומשויך הכל",noPatientsFound:"אין פציינטים נמצאו.",notFoundQuickAdd:"לא היתה אפשרות למצוא את החולה <strong>{patientFullName}</strong>.  אם ברצונך ליצור מטופל חדש, מלא את הפרטים הבאים.  אחרת, לחץ על לחצן ביטול כדי לחזור.",photoFileRequired:"נא לצלם תמונה או להעלות קובץ לפני שמירת תמונה זו.",savedPatient:"רשומת מטופל {displayName} נשמרה."},navigation:{appointments:"פגישות",general:"כללי",history:"היסטוריה",imaging:"הדמיה",labs:"מעבדות",medication:"תרופות",photos:"תמונות",socialWork:"עבודה סוציאלית",visits:"ביקורים"},notes:{newNote:"הערה חדשה עבור",onBehalfOfCopy:"שבשמו",onBehalfOfLabel:"שבשמו",pleaseSelectAVisit:"נא בחר לבקר",updateNote:"הערה מעדכון"},titles:{addContact:"רשק שיא תפסוה",addPhoto:"הוסף תמונה",additionalContacts:"אנשי קשר נוספים",admissionsDetail:"פירוט סדרי",admissionsSummary:"הקבלה סיכום",admittedPatients:"חולים הודה",delete:"למחוק את החולה",deleteContact:"למחוק איש קשר",deleteExpense:"מחיקת חשבון",deleteFamilyMember:"מחק משפחה",deletePatientRecord:"מחיקת רשומת מטופל",deletePhoto:"מחיקת תמונה",diagnosticTesting:"בדיקות אבחון",dischargesDetail:"פירוט הפרשות",dischargesSummary:"הפרשות סיכום",edit:"עריכת החולה",editPhoto:"עריכת תמונות",expenses:"הוצאות",familyInfo:"פרטי המשפחה",familyInformation:"פרטי המשפחה",new:"מטופל חדש",outpatientsForDate:"חולי החוץ עבור {visitDate}",patient:"דיווח המטופל",patientListing:"רישום החולה",patientReport:"דיווח המטופל",patientStatus:"מצב החולה",proceduresDetail:"פירוט נהלים",proceduresSummary:"סיכום ההליכים",savedPatient:"החולה הציל",socialWork:"הוצאות",todaysOutpatients:"חולי החוץ של היום",totalPatientDays:"סה כ ימים החולה",totalPatientDaysDetailed:"סה כ ימים החולה (מפורט)",visit:"לבקר"}},pricing:{labels:{discountAmount:"סכום הנחת",discountPercentage:"הנחה באחוזים",setFee:"תשלום קבוע"},navigation:{}},print:{invoice:{labels:{billedBy:"החיוב על-ידי:",billedDate:"תאריך החשבון:",dateAdmitted:"הודה:",dateDischarged:"פריקה:",dischargeNotes:"הערות השחרור:",patientAddress:"כתובת:",patientAge:"גיל:",patientId:"# החולה:",patientName:"שם החולה:",remarks:"הערות:",spacer:"__________________________________________"},messages:{whereConducted:"היו שנוכה במהלך הכליאה שלי"},titles:{billingStatement:"חיוב הצהרה",patientMember:"החולה-חבר",patients:"של המטופל",relContact:"יחסים/צור קשר אין."}}},procedures:{buttons:{addMedication:"להוסיף תרופות"},labels:{medicationUsed:"תרופה"},messages:{saved:"הפרוטוקול נוהל נשמרה."},titles:{addChargeItem:"הוסף פריט תשלום",addMedicationUsed:"להוסיף תרופה",deleteChargeItem:"מחיקת פריט תשלום",deleteMedicationUsed:"מחיקת תרופה",edit:"עריכת הליך",editChargeItem:"עריכת פריט תשלום",editMedicationUsed:"עריכת תרופה",medicationUsed:"תרופה",new:"נוהל חדש",saved:"הליך הציל"}},reports:{labels:{admissionDate:"תאריך כניסה",allProcedures:"כל ההליכים שבוצעו",completedBy:"הושלמה על ידי",dischargeDate:"תאריך השחרור",examiner:"הבוחן",images:"תמונות",labs:"מעבדות",location:"בקר המיקום",medications:"תרופות",nextAppointment:"הפגישה הבאה",nextAppointments:"המינויים הבא",notes:{author:"מחבר",date:"תאריך",title:"הערות"},operativePlan:{description:"תיאור המבצע",instructions:"הנחיות בעת הקליטה",procedures:"נהלים המתוכנן",title:"תוכנית פעיל"},primaryDiagnosis:"אבחון ראשי",procedures:"נהלים",secondaryDiagnosis:"אבחון משני",visitDate:"תאריך הסיור",visitType:"סוג הביקור"},messages:{delete:"האם אתה בטוח שברצונך למחוק את הדו ח הזה?",saved:"הדו ח נשמרה."},titles:{dischargeReport:"דו ח השחרור",newDischargeReport:"דו ח חדש של פריקה",newOPDReport:"ח OPD",opdReport:"OPD ח",saved:"ח נשמר"}},user:{plusNewUser:"+ משתמש חדש",usersPageTile:"רישום משתמש"},visits:{buttons:{addDiagnosis:"להוסיף אבחון",checkIn:"כניסה",checkOut:"תראה את זה",discharge:"פריקה",newAppointment:"מינוי חדש",newDischargeReport:"דו ח חדש של פריקה",newOPDReport:"ח OPD",newProcedure:"נוהל חדש",newVitals:"סימני חיים חדשים"},labels:{appointment:"פגישה",authoredBy:"על-ידי",checkInTime:"כניסה",checkOutTime:"תראה את זה",createNewPatient:"ליצור מטופל חדש",diagnosis:"אבחון",examiner:"הבוחן",finalDiagnosis:"אבחון סופי/חיוב",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"את ההזמנות",ordersNotDone:"N",patientToCheckIn:"חולה על הצ'ק",procedure:"הליך",procedureDate:"הליך תאריך",reasonForVisit:"מטרת ביקורך",reportType:"סוג הדוח",status:"סטטוס ביקור",statusAdmitted:"הודה",statusCheckedIn:"הוכנס",statusCheckedOut:"בדקתי",statusDischarged:"משוחררים",visitDate:"תאריך ביקור",visitInformation:"בקר מידע",visitType:"סוג הביקור"},messages:{checkOut:"? אתה בטוח שאתה רוצה לבדוק את {patientName}",checkedOut:"{patientName} יש כבר הוצא.",discharged:"כבר שוחרר {patientName}.",patientCheckedIn:"{patientName} נבדקה.",patientCreatedAndCheckedIn:"{patientName} יצר ובדק.",visitAndPatientSaved:"הרשומות הביקור, החולה נשמרו.",visitSaved:"ביקור הרשומה נשמרה."},navigation:{charges:"חיובים",notes:"הערות",orders:"הזמנות",procedures:"נהלים",reports:"דוחות",vitals:". סימנים חיוניים"},titles:{additionalDiagnoses:"אבחנות נוספות",checkOut:"החולה לבדוק",checkedIn:"החולה נרשם",checkedOut:"החולה נבדק",discharged:"החולה שוחררה",editVisit:"לערוך ביקור",newVisit:"ביקור חדש",patientCheckIn:"החולה צ'ק",visitSaved:"ביקור הציל"}},vitals:{labels:{dateRecorded:"תאריך מוקלט",dbp:"DBP",heartRate:"קצב הלב",height:"גובה",respiratoryRate:"קצב נשימה",sbp:"SBP",temperature:"טמפרטורה",weight:"משקל"}}}}),define("hospitalrun/translations/hi",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"पता 1 लेबल",address2Label:"पता 2 लेबल",address3Label:"पता 3 लेबल",address4Label:"पता 4 लेबल",addressLabel:"पता",editTitle:"पता विकल्प",include1Label:"1 लाबे शामिल करेंl",include2Label:"2 लेबल शामिल करें",include3Label:"3 लेबल शामिल करें",include4Label:"4 लेबल शामिल करें",messages:{addressSaved:"पता विकल्प बचाए गए हैं"},newTitle:"पता विकल्प",titles:{optionsSaved:"विकल्प सेव किये गए"}},addressOptions:"पता विकल्प",customForms:{buttons:{addField:"क्षेत्र जोड़ें",moveDown:"नीचे की ओर",moveUp:"बढ़ाना",newForm:"+ नए रूप मे",preview:"पूर्वावलोकन"},labels:{alwaysInclude:"Always Include",checkbox:"Checkbox",colSpan:"Number of Columns To Span",columns:"Columns",customForm:"Custom Form",dischargeReportFormType:"Discharge Report",expenseTo:"Expense To",formName:"Form Name",formType:"Form Type",incidentFormType:"Incident",includeOtherOption:"Include Other Option",labFormType:"Lab",label:"Label",newForm:"New Form",opdReportFormType:"Outpatient Report",operativePlanFormType:"Operative Plan and Report",otherOptionLabel:"Other Option Label",patientFormType:"Patient",property:"Property",radio:"Radio",select:"Dropdown",socialworkFormType:"Social Work",text:"Text",textarea:"Large Text",visitFormType:"Visit"},messages:{formSaved:"The {name} form has been saved."},titles:{checkboxValues:"Checkbox Values",customForms:"Custom Forms",deleteForm:"Delete Custom Form",dropDownValues:"Dropdown Values",editCustomForm:"Edit Custom Form",fields:"Fields",formSaved:"Form Saved",newCustomForm:"New Custom Form",radioValues:"Radio Values"}},header:{editTitle:"Header Options",facilityName:"Facility Name",headerLabel:"Header",headerLine1:"Header Line 1",headerLine2:"Header Line 2",headerLine3:"Header Line 3",logoURL:"Logo URL",messages:{headerSaved:"The header options have been saved"},newTitle:"Header Options",titles:{optionsSaved:"Options Saved"}},loadDb:"Load DB",loaddb:{displayAlertMessage:"Please select file to load.",displayAlertTitle:"Select File To Load",editTitle:"Load DB",errorDisplayAlertMessage:"The database could not be imported. The error was: {error}",errorDisplayAlertTitle:"Error Loading",progressMessage:"Please wait while your database is loaded.",progressTitle:"Loading Database"},lookup:{aisleLocationList:"Inventory Aisle Locations",alertImportListMessage:"Please select file to import.",alertImportListSaveMessage:"The lookup list has been imported.",alertImportListSaveTitle:"List Imported",alertImportListTitle:"Select File To Import",alertImportListUpdateMessage:"The lookup list has been saved.",alertImportListUpdateTitle:"List Saved",anesthesiaTypes:"Anesthesia Types",anesthesiologists:"Anesthesiologists",billingCategories:"Billing Categories",clinicList:"Clinic Locations",countryList:"Countries",cptCodeList:"CPT Codes",diagnosisList:"Diagnoses",edit:{template:{addTitle:"Add Value",editTitle:"Edit Value",labelTitle:"Value",updateButtonTextAdd:"Add",updateButtonTextUpdate:"Update"}},expenseAccountList:"Expense Accounts",imagingPricingTypes:"Imaging Pricing Types",incidentDepartments:"Incident Departments",inventoryTypes:"Inventory Types",labPricingTypes:"Lab Pricing Types",pageTitle:"Lookup Lists",patientStatusList:"Patient Status List",physicianList:"Physicians",procedureList:"Procedures",procedureLocations:"Procedures Locations",procedurePricingTypes:"Procedure Pricing Types",radiologists:"Radiologists",titles:{deleteLookupValue:"Delete Value"},unitTypes:"Unit Types",vendorList:"Vendor",visitLocationList:"Visit Locations",visitTypes:"Visit Types",wardPricingTypes:"Ward Pricing Types",warehouseList:"Inventory Locations"},lookupLists:"Lookup Lists",roles:{capability:{addAllergy:"Add Allergy",addAppointment:"Add Appointment",addBillingDiagnosis:"Add Billing Diagnosis",addCharge:"Add Charge",addDiagnosis:"Add Diagnosis",addImaging:"Add Imaging",addIncident:"Add Incident",addIncidentCategory:"Add Incident Category",addInventoryItem:"Add Inventory Item",addInventoryPurchase:"Add Inventory Purchase",addInventoryRequest:"Add Inventory Request",addInvoice:"Add Invoice",addLab:"Add Lab",addMedication:"Add Medication",addNote:"Add Note",addOperationReport:"Add Operation Report",addOperativePlan:"Add Operative Plan",addPatient:"Add Patient",addPayment:"Add Payment",addPhoto:"Add Photo",addPricing:"Add Pricing",addPricingProfile:"Add Pricing Profile",addProcedure:"Add Procedure",addSocialwork:"Add Social Work",addVisit:"Add Visit",addVitals:"Add Vitals",adjustInventoryLocation:"Adjust Inventory Location",admin:"Administration",admitPatient:"Admit Patient",appointments:"Appointments",billing:"Billing",cashier:"Cashier",completeImaging:"Complete Imaging",completeLab:"Complete Lab",defineUserRoles:"Define User Roles",deleteAppointment:"Delete Appointment",deleteDiagnosis:"Delete Diagnosis",deleteImaging:"Delete Imaging",deleteIncident:"Delete Incident",deleteIncidentCategory:"Delete Incident Category",deleteInventoryItem:"Delete Inventory Item",deleteInvoice:"Delete Invoice",deleteLab:"Delete Lab",deleteMedication:"Delete Medication",deleteNote:"Delete Note",deletePatient:"Delete Patient",deletePhoto:"Delete Photo",deletePricing:"Delete Pricing",deletePricingProfile:"Delete Pricing Profile",deleteProcedure:"Delete Procedure",deleteSocialwork:"Delete Social Work",deleteVisit:"Delete Visit",deleteVitals:"Delete Vitals",dischargePatient:"Discharge Patient",editInvoice:"Edit Invoice",fulfillInventory:"Fulfill Inventory",fulfillMedication:"Fulfill Medication",generateIncidentReport:"Generate Incident Report",imaging:"Imaging",incident:"Incident",inventory:"Inventory",invoices:"Invoices",labs:"Labs",listPaidInvoices:"List Paid Invoices",loadDb:"Load Database",manageIncidents:"Manage Incidents",medication:"Medication",overrideInvoice:"Override Invoice",patientReports:"Patient Reports",patients:"Patients",pricing:"Pricing",updateConfig:"Update Configurations",visits:"Visits"},messages:{roleSaved:"The {roleName} role has been saved."},titles:{roleSaved:"Role Saved"}},textReplacements:{createNew:"Create a new shortcode",existingRepl:"Existing Shortcodes",noMatches:"No replacements match '{term}'",pageTitle:"Shortcodes",performExpand:"Press Enter to replace #{from} with '{to}'",possibleExpansions:"Possible replacements: {possible}",replDesc:"When entering text, these shortcuts allow you to replace a short sequence of characters with a longer phrase.",replaceWith:"Replace with",toReplace:"Text to replace"},userRoles:"User Roles",users:"Users",visitForms:{labels:{followup:"Followup",form:"Form",initial:"Initial",visitType:"Visit Type"},titles:{visitForms:"Visit Forms"}},workflow:{admissionDepositLabel:"Admission deposit required",clinicPrepaymentLabel:"Clinic prepayment required",editTitle:"Workflow Options",followupPrepaymentLabel:"Followup prepayment required",messages:{optionsSaved:"The workflow options have been saved"},newTitle:"Workflow Options",outpatientImagingLabel:"Outpatient Imaging prepayment required",outpatientLabLabel:"Outpatient Lab prepayment required",outpatientMedicationLabel:"Outpatient Medication prepayment required",titles:{optionsSaved:"Options Saved"},workflowLabel:"Workflow"}},alerts:{errorExclamation:"Error!!!!",pleaseWait:"Please Wait",reportError:"Error Generating Report",warningExclamation:"Warning!!!!"},allergies:{buttons:{addAllergy:"Add Allergy"},labels:{allergyName:"Name",patientAllergy:"Patient Allergies"},titles:{addAllergy:"Add Allergy",editAllergy:"Edit Allergy"}},application:{messages:{sessionExpired:"Your session has expired.  Please login to continue."},titles:{sessionExpired:"Session Expired"}},appointments:{buttons:{newButton:"+ new appointment",scheduleSurgery:"+ schedule surgery"},calendarTitle:"Appointments Calendar",currentScreenTitle:"Appointment List",editTitle:"Edit Appointment",labels:{noLocation:"No Location",selectedStartingDate:"Show Appointments"},messages:{appointmentSaved:"The appointment for {patient} has been saved.",endTimeLaterThanStart:"Please select an end time later than the start time."},missed:"Missed Appointments",newTitle:"New Appointment",searchTitle:"Search Appointments",sectionTitle:"Appointments",thisWeek:"Appointments This Week",titles:{appointmentSaved:"Appointment Saved",editSurgicalAppointment:"Edit Surgical Appointment",newSurgicalAppointment:"New Surgical Appointment",theaterSchedule:"Theater Schedule"},todayTitle:"Today's Appointments"},billing:{alerts:{noInvoiceFound:"No invoices found",noPricingItems:"No pricing items found.",noPricingProfiles:"No pricing profiles found."},buttons:{addOverride:"Add Override",createInvoice:"Create an invoice?"},labels:{actualCharges:"Actual Charges",discountAmount:"Discount Amount",discountPercentage:"Discount Percentage",externalInvoiceNumber:"External Invoice #",hmoCom:"HMO/COM",insurance:"National Insurance",paymentProfile:"Payment Profile",paymentsDeposits:"Payments/Deposits",pricingPanelOverrides:"Pricing profile overrides",pricingProfile:"Pricing Profile",setFee:"Set Fee"},messages:{flatDiscountMsg:"There is a flat discount amount applied to the patient financial responsibility of {currency}{discountAmount}.",flatFeeMsg:"There is a flat fee for patient financial responsibility of {currency}{setFee}."},navigation:{}},buttons:{add:"Add",addItem:"Add Item",addLineItem:"Add Line Item",addValue:"Add Value",addVisit:"Add Visit",allRequests:"All Requests",barcode:"Barcode",cancel:"Cancel",clear:"Clear",close:"Close",complete:"Complete",delete:"Delete",dispense:"Dispense",edit:"Edit",filter:"Filter",fulfill:"Fulfill",import:"Import",loadFile:"Load File",newItem:"+ new item",newNote:"New Note",newRequest:"New Request",newRequestPlus:"+ new request",newUser:"New User",ok:"Ok",print:"Print",remove:"Remove",returnButton:"Return",review:"Review",search:"Search",showAll:"Show All",showFewer:"Show Fewer",update:"Update"},components:{chargesByTypeTab:{charges:"charges"},customFormManager:{buttons:{addForm:"Add Form"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Midnight",noon:"Noon",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Please select a valid image file."}},operativeProcedures:{buttons:{addProcedure:"Add Procedure"},labels:{procedure:"Procedure"},titles:{procedures:"Procedures"}},patientOrders:{buttons:{newImaging:"New Imaging",newLab:"New Lab",newMedication:"New Medication"},labels:{imagingOrderType:"Imaging",labOrderType:"Lab",medicationOrderType:"Medication",orderType:"Order Type"}},priceList:{charges:"{pricingType} charges"},quantityCalc:{result:"{targetUnit} total: {calculated}"},quantityConv:{conversion:"What does 1 {name} contain?",unit:"Unit"},sortableColumn:{labels:{selectAll:"(Select All)"}},takePhoto:{camera:"Camera",how:"How Do You Want To Add A Photo?",labels:{takeAPicture:"Take a Picture",uploadAFile:"Upload a File"},photo:"photo",preview:"preview",takePhoto:"Take photo",uploadFile:"Upload File"},upcomingAppointments:{labels:{date:"Date",location:"Location",type:"Type",with:"With"},titles:{upcomingAppointments:"Upcoming Appointments"}}},customForms:{buttons:{addForm:"Add Form"},labels:{formToAdd:"Form To Add"},titles:{addCustomForm:"Add Custom Form"}},dashboard:{needs_user_setup:"We recommend that you setup a User account.",standalone_welcome:'<h4>Thanks for downloading HospitalRun</h4><p>You are running HospitalRun in stand alone mode. This mode allows you to support multiple users on a single, desktop/laptop instance of HospitalRun. This is ideal for:</p><ul><li>Evaluating HospitalRun for an eventual server deployment.</li><li>Using the platform to support a clinic / facility where a single instance is sufficient.</li></ul><p>If you\'re considering a multi-device deployment of HospitalRun, we\'re <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">working on features</a> that will allow you to "graduate" from this single instance into a traditional cloud / server-based deployment.</p>',title:"Welcome to HospitalRun!"},dates:{long:"{years} year {months} months {days} days",longOmitDays:"{years} year {months} months",longOmitDaysPlural:"{years} years {months} months",longOmitDaysYears:"{months} months",longOmitYears:"{months} months {days} days",longPlural:"{years} years {months} months {days} days",short:"{years}y {months}m {days}d",shortOmitYears:"{months}m {days}d"},diagnosis:{labels:{activeDiagnosis:"Active Diagnosis",date:"Date",diagnosis:"Diagnosis",secondaryDiagnosis:"Secondary Diagnosis"},titles:{addDiagnosis:"Add Diagnosis",editDiagnosis:"Edit Diagnosis"}},errors:{accepted:"must be accepted",blank:"can't be blank",confirmation:"doesn't match {attribute}",empty:"can't be empty",equalTo:"must be equal to {count}",even:"must be even",exclusion:"is reserved",greaterThan:"must be greater than {count}",greaterThanOrEqualTo:"must be greater than or equal to {count}",inclusion:"is not included in the list",invalid:"is invalid",invalidNumber:"not a valid number",lessThan:"must be less than {count}",lessThanOrEqualTo:"must be less than or equal to {count}",notANumber:"is not a number",notAnInteger:"must be an integer",odd:"must be odd",otherThan:"must be other than {count}",present:"must be blank",result:"Please enter a result before completing",tooLong:"is too long (maximum is {count} characters)",tooShort:"is too short (minimum is {count} characters)",wrongLength:"is the wrong length (should be {count} characters)"},headings:{chargedItems:"Charged Items"},imaging:{alerts:{completedMessage:"The imaging request has been completed.",completedTitle:"Imaging Request Completed",savedMessage:"The imaging request has been saved.",savedTitle:"Imaging Request Saved"},buttons:{newButton:"+ new imaging"},labels:{addNewVisit:"--Add New Visit--",completedBy:"Completed By",radiologist:"Radiologist",requestedNotes:"Requested Notes",resultNotes:"Result Notes"},messages:{noCompleted:"No completed items found."},pageTitle:"Imaging Requests",sectionTitle:"Imaging",titles:{completedImaging:"Completed Imaging",editTitle:"Edit Imaging Request",newTitle:"New Imaging Request"}},incident:{buttons:{add:"Add",addForm:"+ Add Form",addItem:"Add Item",cancel:"Cancel",delete:"Delete",download:"Download",edit:"Edit",export:"Export Report",generateRep:"Generate Report",newAttachment:"+ New Attachment",newCategory:"+ new category",newIncident:"+ new incident",newNote:"+ New Note"},labels:{actions:"Actions",addedBy:"Added By",category:"Category",categoryItem:"Category Item",date:"Date",dateRecorded:"Date Recorded",department:"Department",description:"Incident Description",endDate:"End Date",givenBy:"Given By",howToAddAttachment:"How Do You Want To Add An Attachment?",incidentDate:"Date of Incident",incidentId:"Incident ID",item:"Item",lastUpdated:"Last Updated",note:"Note",patientId:"Patient Id",patientImpacted:"Patient Impacted",reportType:"Report Type",reportedBy:"Reported By",reportedDate:"Reported Date",reportedTo:"Incident Reported to (Full Name)",sentinelEvent:"Sentinel Event",startDate:"Start Date",status:"Status",statusActive:"Active",statusClosed:"Closed",statusFollowup:"Follow-up",statusReported:"Reported",title:"Title",total:"Total",updatedBy:"Updated By"},messages:{attachmentFileRequired:"Please upload a file or take a picture or before saving this attachment.",createNew:"Create a new incident?",createNewIncidentCategory:"Create a new Incident Category?",fillIn:"Fill in the above options to calculate score",incidentCategorySaved:"The {name} category has been saved.",noClosedIncidents:"No closed incidents found.",noIncidentCategoriesFound:"No Incident Categories found.",noIncidents:"No incidents found.",saved:"The incident report has been saved.",selectExistingPatient:"Please select an existing patient or leave this field blank."},titles:{addAttachment:"Add Attachment",addCategoryItem:"Add Category Item",addNote:"Add Note",attachments:"Attachments",closed:"Closed Incidents",current:"Current",deleteAttachment:"Delete Attachment",deleteIncident:"Delete Incident",deleteIncidentCategory:"Delete Incident Category",deleteItem:"Delete Item",deleteNote:"Delete Note",editAttachment:"Edit Attachment",editIncident:"Edit Incident",editIncidentCategory:"Edit Incident Category",editNote:"Edit Note",general:"General Information",history:"History",incidentCategories:"Incident Categories",incidentCategoryItem:"Incident Category Item",incidentCategoryName:"Incident Category Name",incidentCategorySaved:"Incident Category Saved",incidentSaved:"Incident Saved",incidents:"Incidents",incidentsByCategory:"Incidents By Category",incidentsByDepartment:"Incidents By Department",newIncident:"New Incident",newIncidentCategory:"New Incident Category",notes:"Notes",reports:"Reports"}},inventory:{edit:{cost:"Cost Per Unit:",delivered:"Delievered To:",location:"Location Adjusted:",prescription:"Prescription For:",pulled:"Pulled From:",quantity:"Quantity at Completion:",reason:"Reason:",returned:"Returned from Patient:",transferredFrom:"Transferred From:",transferredTo:"Transferred To:"},labels:{action:"Action",add:"Add",addAdjustmentType:"Add",adjust:"Adjust",adjustmentDate:"Adjustment Date",adjustmentFor:"Adjustment For",adjustmentType:"Adjustment Type",aisle:"Aisle",aisleLocation:"Aisle Location",allInventory:"All Inventory",allItems:"All Items",availableQuantity:"{quantity} available",billTo:"Bill To",consumePurchases:"Consume Purchases",consumptionRate:"Consumption Rate",cost:"Cost",costPerUnit:"Cost per Unit",crossReference:"Cross Reference",currentQuantity:"Current Quantity",dateCompleted:"Date Completed",dateEffective:"Effective Date",dateEnd:"End Date",dateReceived:"Date Received",dateStart:"Start Date",dateTransferred:"Date Transferred",daysLeft:"Days Left",deleteItem:"Delete Item",deliveryAisle:"Delivery Aisle",deliveryLocation:"Delivery Location",details:"Details",distributionUnit:"Distribution Unit",editItem:"Edit Item",expense:"Expense To",expirationDate:"Expiration Date",fulfillRequest:"Fulfill Request",fulfillRequestNow:"Fulfill Request Now",gift:"Gift in Kind",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"Gift in Kind Usage",inventoryConsumed:"Inventory Consumed",inventoryItem:"Inventory Item",inventoryObsolence:"Inventory Obsolence",invoiceItems:"Invoice Items",invoiceLineItem:"Invoice Line Item",invoiceNumber:"Invoice Number",item:"Item",itemNumber:"Item Number",items:"Items",location:"Location",locations:"Locations",markAsConsumed:"Mark as Consumed",name:"Name",newItem:"New Item",originalQuantity:"Original Quantity",print:"Print",printBarcode:"Print Barcode",printer:"Printer",pullFrom:"Pull From",purchaseCost:"Purchase Cost",purchaseInfo:"Purchase Information",purchases:"Purchases",quantity:"Quantity ({unit})",quantityAvailable:"Quantity Available",quantityOnHand:"Quantity on Hand",quantityRequested:"Quantity Requested",rank:"Rank",reason:"Reason",remove:"Remove",removeAdjustmentType:"Remove",reorderPoint:"Reorder Point",requestedItems:"Requested Items",returnAdjustmentType:"Return",returnToVendorAdjustmentType:"Return To Vendor",salePricePerUnit:"Sale Price per Unit",save:"Save",serialNumber:"Serial/Lot Number",total:"Total",totalCost:"Total Cost",totalReceived:"Total Received: {total}",transaction:"Transaction",transactions:"Transactions",transfer:"Transfer",transferFrom:"Transfer From",transferTo:"Transfer To Location",transferToAisle:"Transfer to Aisle Location",unit:"Unit",unitCost:"Unit Cost",vendor:"Vendor",vendorItemNumber:"Vendor Item Number",writeOffAdjustmentType:"Write Off",xref:"XRef"},messages:{adjust:"Please adjust the quantities on the appropriate location(s) to account for the difference of {difference}.",createRequest:"Create a new request?",itemNotFound:"The inventory item <strong>{item}</strong> could not be found.<br>If you would like to create a new inventory item, fill in the information below.<br>Otherwise, press the Cancel button to return.",loading:"Loading transactions ...",noItems:"No items found.",noRequests:"No requests found.",purchaseSaved:"The inventory purchases have been successfully saved.",quantity:"The total quantity of <strong>({quantity})</strong> does not match the total quantity in the locations <strong>({locationQuantity})</strong>.",removeItem:"Are you sure you want to remove this item from this invoice?",removeItemRequest:"Are you sure you want to remove this item from this request?",requestFulfilled:"The inventory request has been fulfilled.",requestUpdated:"The inventory request has been updated.",warning:"Please fill in required fields (marked with *) and correct the errors before adding."},reports:{adjustment:"Detailed Adjustment",daysSupply:"Days Supply Left In Stock",expenseDetail:"Detailed Expenses",expenseSum:"Summary Expenses",expiration:"Expiration Date",export:"Export Report",fields:"Fields to Include",finance:"Finance Summary",generate:"Generate Report",invLocation:"Inventory By Location",invValuation:"Inventory Valuation",purchaseDetail:"Detailed Purchase",purchaseSum:"Summary Purchase",reportType:"Report Type",rows:{adjustments:"Adjustments",adjustmentsTotal:"Total Adjustments",balanceBegin:"Beginning Balance",balanceEnd:"Ending Balance",category:"Category",consumed:"Consumed",consumedGik:"GiK Consumed",consumedGikTotal:"Total GiK Consumed",consumedPuchases:"Purchases Consumed",consumedPurchasesTotal:"Total Purchases Consumed",consumedTotal:"Total Consumed",errInFinSum:"Error in _generateFinancialSummaryReport: ",errInFindPur:"Error in _findInventoryItemsByPurchase: ",errInFindReq:"Error in _findInventoryItemsByRequest: ",expensesFor:"Expenses For: ",noAccount:"(No Account)",subtotal:"Subtotal: ",subtotalFor:"Subtotal for {category} - {account}: ",total:"Total: ",totalFor:"Total for {var}: ",totalPurchases:"Total Purchases",transfer1:"{quantity} from {location}",trasnfer2:"From: {source} To: {target}"},stockTransferDetail:"Detailed Stock Transfer",stockTransferSum:"Summary Stock Transfer",stockUsageDetail:"Detailed Stock Usage",stockUsageSum:"Summary Stock Usage",titleDateRange:"{name} Report {startDate} - {endDate}",titleSingleDate:"{name} Report {date}"},titles:{addPurchase:"Add Purchase",addRequest:"New Request",adjustment:"Adjustment",editPurchase:"Edit Purchase",editRequest:"Edit Request",inventoryItem:"New Inventory Item",inventoryReport:"Inventory Report",purchaseSaved:"Inventory Purchases Saved",quickAddTitle:"New Inventory Item",removeItem:"Remove Item",requestFulfilled:"Request Fulfilled",requestUpdated:"Request Updated",transfer:"Transfer Items",warning:"Warning!!!!!"}},labels:{action:"Action",actions:"Actions",addNewOutpatientVisit:"--Add New Outpatient Visit--",address:"Address",age:"Age",allDay:"All Day",allItems:"All items",amount:"Amount",anesthesia:"Anesthesia",assisting:"Assisting",balanceDue:"Balance Due",billDate:"Bill Date",billTo:"Bill To",category:"Category",completed:"Completed",country:"Country",cptcode:"CPT Code",creditTo:"Credit To",currencySymbol:"$",date:"Date",dateCompleted:"Date Completed",dateOfBirth:"Date of Birth",dateOfBirthShort:"DoB",datePaid:"Date Paid",dateRequested:"Date Requested",delete:"Delete",deleteRequest:"Delete Request",deleteUser:"Delete User",department:"Department",description:"Description",discount:"Discount",displayName:"Display Name",docRead:"Docs Read",docWritten:"Docs Written",edit:"Edit",editUser:"Edit User",email:"Email",endDate:"End Date",endTime:"End Time",excess:"Excess",expenseTo:"Expense To",fileLoadSuccessful:"File To Load Successful",fileName:"File Name",fileToLoad:"File Load",from:"From",fulfill:"Fulfill",fulfillRequest:"Fulfill Request",fulfillRequestNow:"Fulfill Request Now",fulfilled:"Fulfilled",grandTotal:"Grand Total",id:"Id",imageOrders:"Image Orders",imagingType:"Imaging Type",importFile:"Import File",invoiceId:"Invoice ID",labOrders:"Lab Orders",lineItems:"Line Items",loading:"Loading",location:"Location",lookupType:"Lookup Type",medication:"Medication",name:"Name",newItem:"+ new item",newUser:"New User",note:"Note",notes:"Notes",number:"Number",on:"on",password:"Password",patient:"Patient",payments:"Payments",physician:"Physician",prescriber:"Prescriber",prescription:"Prescription",prescriptionDate:"Prescription Date",price:"Price",print:"Print",procedures:"Procedures",provider:"Provider",pullFrom:"Pull From",quantity:"Quantity",remarks:"Remarks",requestedBy:"Requested By",requestedOn:"Requested On",requests:"Requests",result:"Result",results:"Results",role:"Role",search:"Search",sex:"Sex",startDate:"Start Date",startTime:"Start Time",status:"Status",takenBy:"Taken By",to:"To",total:"Total",type:"Type",userCanAddNewValue:"User Can Add New Values",username:"Username",value:"Value",view:"View",visit:"Visit",with:"With"},labs:{alerts:{requestCompletedMessage:"The lab request has been completed.",requestCompletedTitle:"Lab Request Completed",requestSavedMessage:"The lab request has been saved.",requestSavedTitle:"Lab Request Saved"},buttons:{newButton:"+ new lab"},completedTitle:"Completed Labs",deleteTitle:"Delete Request",editTitle:"Edit Lab Request",labels:{addNewVisit:"--Add New Visit--",labType:"Lab Type"},messages:{createNewRecord:"एक नया रिकॉर्ड बनाएं?",noCompleted:"कोई पूर्ण आइटम नहीं मिला",noItemsFound:"कोई प्रयोगशाला नहीं मिली."},newTitle:"New Lab Request",requestsTitle:"Lab Requests",sectionTitle:"Labs"},languageName:"हिंदी",loading:{messages:{0:"The top butterfly flight speed is 12 miles per hour. Some moths can fly 25 miles per hour!",1:"Owls are the only birds that can see the color blue.",10:"Your tongue is the only muscle in your body that is attached at only one end.",11:"Camels have three eyelids to protect themselves from blowing sand.",2:"Cats have over 100 vocal sounds; dogs only have 10.",3:"Humans use a total of 72 different muscles in speech.",4:"More than 1,000 different languages are spoken on the continent of Africa.",5:"An erythrophobe is someone who blushes easily.",6:"The most common phobia in the world is odynophobia which is the fear of pain.",7:"Your body uses 300 muscles to balance itself when you are standing still.",8:"Certain frogs can be frozen solid then thawed, and continue living.",9:"Our eyes are always the same size from birth, but our nose and ears never stop growing."},progressBar:{progress:"{progressBarValue}% Complete"}},login:{labels:{password:"Password",signIn:"Sign in",username:"Username"},messages:{error:"Username or password is incorrect.",offlineError:"Cannot login while offline.  Please establish a network connection and retry login.",signIn:"please sign in"}},medication:{alerts:{fulfilledTitle:"Medication Request Fulfilled",returnedMessage:"The medication has been marked as returned.",returnedTitle:"Medication Returned",savedMessage:"The medication record has been saved.",savedTitle:"Medication Request Saved"},buttons:{dispenseMedication:"dispense medication",newButton:"+ new request",returnMedication:"return medication"},labels:{adjustmentDate:"Adjustment Date",creditToAccount:"Credit To Account",quantityDispensed:"Quantity Dispensed",quantityDistributed:"Quantity Distributed",quantityRequested:"Quantity Requested",quantityToReturn:"Quantity To Return",refills:"Refills",returnAisle:"Return Aisle",returnLocation:"Return Location",returnReason:"Return Reason/Notes"},messages:{createNew:"Create a new medication request?"},pageTitle:"Medication Requests",returnMedication:"Return Medication",sectionTitle:"Medication",titles:{completedMedication:"Completed Medication",editMedicationRequest:"Edit Medication Request",newMedicationRequest:"New Medication Request"}},messages:{createNewRecord:"Create a new record?",createNewUser:"Create a new user?",delete:"Are you sure you wish to delete {name}?",delete_plural:"Are you sure you wish to delete these {name}?",delete_singular:"Are you sure you wish to delete this {name}?",forAuthorizedPersons:"This report is for authorized persons only.",newPatientHasToBeCreated:"A new patient needs to be created...Please wait..",noHistoryAvailable:"No history available.",noItemsFound:"No items found.",noNotesAvailable:"No additional clinical notes are available for this visit.",noUsersFound:"No users found.",onBehalfOf:"on behalf of",reportError:"An error was encountered while generating the requested report.  Please let your system administrator know that you have encountered an error.",requiredFieldsCorrectErrors:"Please fill in required fields (marked with *) and correct the errors before saving.",saveActionException:"An error occurred while attempting to save: {message}",sorry:"Sorry, something went wrong...",userHasBeenSaved:"The user has been saved.",userSaved:"User Saved"},models:{appointment:{labels:{allDay:"All Day",appointmentDate:"Date",appointmentType:"Type",endDate:"End Date",location:"Location",notes:"Notes",patient:"Patient",provider:"With",startDate:"Start Date",status:"Status",type:"Type"},names:{plural:"appointments",singular:"appointment"}},attachment:{names:{plural:"attachments",singular:"attachment"}},form:{names:{plural:"forms",singular:"form"}},imaging:{names:"imaging",request:{plural:"imaging requests",singular:"imaging request"}},incident:{names:{plural:"incidents",singular:"incident"}},item:{names:{plural:"items",singular:"item"}},lab:{names:{plural:"labs",singular:"lab"},request:{plural:"lab requests",singular:"lab request"}},medication:{names:{plural:"medications",singular:"medication"},request:{plural:"medication requests",singular:"medication request"}},note:{names:{plural:"notes",singular:"note"}},patient:{labels:{name:"Name"},names:{singular:"Patient"}},procedure:{names:{plural:"procedures",singular:"procedure"}},user:{names:{plural:"users",singular:"user"}},visit:{names:{plural:"visits",singular:"visit"}},vital:{names:{plural:"vitals",singular:"vital"}}},navigation:{about:"About HospitalRun",actions:{login:"Login",logout:"Logout",selectLanguage:"Select Language"},administration:"Administration",billing:"Billing",imaging:"Imaging",incident:"Incident",inventory:"Inventory",labs:"Labs",medication:"Medication",messages:{logoutFailed:"Could not logout at this time.  Logout is not available while offline."},patients:"Patients",scheduling:"Scheduling",subnav:{actions:"Actions",addAppointment:"Add Appointment",addressFields:"Address Fields",admittedPatients:"Admitted Patients",appointmentSearch:"Appointment Search",appointmentsCalendar:"Appointments Calendar",appointmentsThisWeek:"Appointments This Week",cashier:"Cashier",completed:"Completed",currentIncidents:"Current Incidents",customForms:"Custom Forms",dispense:"Dispense",history:"History",incidentCategories:"Incident Categories",inventoryReceived:"Inventory Received",inventoryReceivedPlus:"+ Inventory Received",invoices:"Invoices",items:"Items",loadDB:"Load DB",lookupLists:"Lookup Lists",newIncident:"New Incident",newInvoice:"New Invoice",newPatient:"New Patient",newRequest:"New Request",newUser:"New User",outpatient:"Outpatient",patientListing:"Patient Listing",priceProfiles:"Price Profiles",prices:"Prices",printHeader:"Print Header",reports:"Reports",requests:"Requests",returnMedication:"Return Medication",scheduleSurgery:"Schedule Surgery",textReplacements:"Shortcodes",theaterSchedule:"Theater Schedule","today'sAppointments":"Today's Appointments",userRoles:"User Roles",users:"Users",workflow:"Workflow"},titles:{logoutFailed:"Logout Failed"}},operationReport:{labels:{additionalNotes:"Additional Notes",assistant:"Assistant",caseComplexity:"Case Complexity",operationDescription:"Operation Description",preOpPrimaryDiagnosis:"Pre-op Primary Diagnosis",preOpSecondaryDiagnosis:"Pre-op Secondary Diagnosis",surgeon:"Surgeon",surgeryDate:"Surgery Date"},messages:{reportSaved:"The operation report has been saved."},titles:{editTitle:"Edit Operation Report",newTitle:"New Operation Report",reportSaved:"Report Saved"}},operativePlan:{buttons:{completePlan:"Complete Plan"},labels:{additionalNotes:"Additional Notes",admissionInstructions:"Instructions Upon Admission",caseComplexity:"Case Complexity",completedStatus:"Completed",droppedStatus:"Dropped",operationDescription:"Operation Description",plannedStatus:"Planned",status:"Status",surgeon:"Surgeon"},messages:{planCompleted:"The operative plan has been completed.  You will now be directed to the operation report.",planSaved:"The operative plan has been saved."},titles:{editTitle:"Edit Operative Plan",newTitle:"New Operative Plan",planCompleted:"Plan Completed",planSaved:"Plan Saved"}},patients:{buttons:{addContact:"Add Contact",addExpense:"Add Expense",addFamilyMember:"Add Family Member",addOperativePlan:"Add Operative Plan",backToPatients:"Back to Patient List",download:"Download",editOperativePlan:"Current Operative Plan",newAppointment:"New Appointment",newImaging:"New Imaging",newLab:"New Lab",newMedication:"New Medication",newPatient:"+ new patient",newPhoto:"New Photo",newVisit:"New Visit",patientCheckIn:"Patient Check In",scheduleSurgery:"Schedule Surgery"},labels:{admissionDate:"Admission Date",admit:"Admit",bloodType:"Blood Type",caption:"Caption",civilStatus:"Civil Status",clinic:"Clinic Site",contacts:"Contacts",cost:"Cost",dateOfBirth:"Date Of Birth",dateProcessed:"Date Processed",dischargeDate:"Discharge Date",dob:"DOB",education:"Education",email:"Email",externalPatientId:"External Patient Id",firstName:"First Name",income:"Income",insurance:"Insurance",lastName:"Last Name",middleName:"Middle Name",monthlyCost:"Monthly Cost",occupation:"Occupation",operativePlan:"Operative Plan",parent:"Parent/Guardian",patientDays:"Patient Days",patientType:"Patient Type",patientTypeCharity:"Charity",patientTypePrivate:"Private",phone:"Phone",placeOfBirth:"Place Of Birth",primaryDiagnosis:"Primary Diagnoses",referredBy:"Referred By",referredDate:"Referred Date",relationship:"Relationship To Patient",relationships:"Relationships",religion:"Religion",secondaryDiagnosis:"Secondary Diagnoses",sex:"Sex",sexNotEntered:"Sex Not Entered",sources:"Sources",status:"Patient Status",totalMontlyExpense:"Total Monthly Expenses"},messages:{areYouSureDelete:"Are you sure you want to delete this {object}?",createNewPatient:"Create a new patient record?",deletingPatient:"Deleting patient and all associated records",noPatientsFound:"No patients found.",notFoundQuickAdd:"The patient <strong>{patientFullName}</strong> could not be found.  If you would like to create a new patient, fill in the information below.  Otherwise press the Cancel button to return.",photoFileRequired:"Please take a picture or upload a file before saving this photo.",savedPatient:"The patient record for {displayName} has been saved."},navigation:{appointments:"Appointments",general:"General",history:"History",imaging:"Imaging",labs:"Labs",medication:"Medication",photos:"Photos",socialWork:"Social Work",visits:"Visits"},notes:{newNote:"New Note for",onBehalfOfCopy:"on behalf of",onBehalfOfLabel:"On Behalf Of",pleaseSelectAVisit:"Please select a visit",updateNote:"Updating Note from"},titles:{addContact:"Add Contact",addPhoto:"Add Photo",additionalContacts:"Additional Contacts",admissionsDetail:"Admissions Detail",admissionsSummary:"Admissions Summary",admittedPatients:"Admitted Patients",delete:"Delete Patient",deleteContact:"Delete Contact",deleteExpense:"Delete Expense",deleteFamilyMember:"Delete Family Member",deletePatientRecord:"Delete Patient Record",deletePhoto:"Delete Photo",diagnosticTesting:"Diagnostic Testing",dischargesDetail:"Discharges Detail",dischargesSummary:"Discharges Summary",edit:"Edit Patient",editPhoto:"Edit Photo",expenses:"Expenses",familyInfo:"Family Info",familyInformation:"Family Information",new:"New Patient",outpatientsForDate:"Outpatients for {visitDate}",patient:"Patient Report",patientListing:"Patient Listing",patientReport:"Patient Report",patientStatus:"Patient Status",proceduresDetail:"Procedures Detail",proceduresSummary:"Procedures Summary",savedPatient:"Patient Saved",socialWork:"Expense",todaysOutpatients:"Today's Outpatients",totalPatientDays:"Total Patient Days",totalPatientDaysDetailed:"Total Patient Days (Detailed)",visit:"Visit"}},pricing:{labels:{discountAmount:"Discount Amount",discountPercentage:"Discount Percentage",setFee:"Set Fee"},navigation:{}},print:{invoice:{labels:{billedBy:"Billed by:",billedDate:"Bill Date:",dateAdmitted:"ADMITTED:",dateDischarged:"DISCHARGE:",dischargeNotes:"Discharge Notes:",patientAddress:"ADDRESS:",patientAge:"AGE:",patientId:"PATIENT #:",patientName:"NAME OF PATIENT:",remarks:"Remarks:",spacer:"__________________________________________"},messages:{whereConducted:"were deducted during my confinement"},titles:{billingStatement:"BILLING STATEMENT",patientMember:"Patient-Member",patients:"PATIENT'S",relContact:"Relationship/Contact no."}}},procedures:{buttons:{addMedication:"Add Medication"},labels:{medicationUsed:"Medication Used"},messages:{saved:"The procedure record has been saved."},titles:{addChargeItem:"Add Charge Item",addMedicationUsed:"Add Medication Used",deleteChargeItem:"Delete Charge Item",deleteMedicationUsed:"Delete Medication Used",edit:"Edit Procedure",editChargeItem:"Edit Charge Item",editMedicationUsed:"Edit Medication Used",medicationUsed:"Medication Used",new:"New Procedure",saved:"Procedure Saved"}},reports:{labels:{admissionDate:"Admission Date",allProcedures:"All Procedures Performed",completedBy:"Completed By",dischargeDate:"Discharge Date",examiner:"Examiner",images:"Images",labs:"Labs",location:"Visit Location",medications:"Medications",nextAppointment:"Next Appointment",nextAppointments:"Next Appointments",notes:{author:"Author",date:"Date",title:"Notes"},operativePlan:{description:"Operation Description",instructions:"Instructions upon Admission",procedures:"Planned Procedures",title:"Operative Plan"},primaryDiagnosis:"Primary Diagnosis",procedures:"Procedures",secondaryDiagnosis:"Secondary Diagnosis",visitDate:"Date of Visit",visitType:"Visit Type"},messages:{delete:"Are you sure you wish to delete this report?",saved:"The report has been saved."},titles:{dischargeReport:"Discharge Report",newDischargeReport:"New Discharge Report",newOPDReport:"New OPD Report",opdReport:"OPD Report",saved:"Report saved"}},user:{plusNewUser:"+ new user",usersPageTile:"User Listing"},visits:{buttons:{addDiagnosis:"Add Diagnosis",checkIn:"Check In",checkOut:"Check Out",discharge:"Discharge",newAppointment:"New Appointment",newDischargeReport:"New Discharge Report",newOPDReport:"New OPD Report",newProcedure:"New Procedure",newVitals:"New Vitals"},labels:{appointment:"Appointment",authoredBy:"Authored By",checkInTime:"Check In",checkOutTime:"Check Out",createNewPatient:"Create New Patient",diagnosis:"Diagnosis",examiner:"Examiner",finalDiagnosis:"Final/Billing Diagnosis",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"Orders Done",ordersNotDone:"N",patientToCheckIn:"Patient To Check In",procedure:"Procedure",procedureDate:"Procedure Date",reasonForVisit:"Reason For Visit",reportType:"Report type",status:"Visit Status",statusAdmitted:"Admitted",statusCheckedIn:"Checked In",statusCheckedOut:"Checked Out",statusDischarged:"Discharged",visitDate:"Visit Date",visitInformation:"Visit Information",visitType:"Visit Type"},messages:{checkOut:"Are you sure you wish to check out {patientName}?",checkedOut:"{patientName} has been checked out.",discharged:"{patientName} has been discharged.",patientCheckedIn:"{patientName} has been checked in.",patientCreatedAndCheckedIn:"{patientName} has been created and checked in.",visitAndPatientSaved:"The visit and patient records have been saved.",visitSaved:"The visit record has been saved."},navigation:{charges:"Charges",notes:"Notes",orders:"Orders",procedures:"Procedures",reports:"Reports",vitals:"Vitals"},titles:{additionalDiagnoses:"Additional Diagnoses",checkOut:"Patient Check Out",checkedIn:"Patient Checked In",checkedOut:"Patient Checked Out",discharged:"Patient Discharged",editVisit:"Edit Visit",newVisit:"New Visit",patientCheckIn:"Patient Check In",visitSaved:"Visit Saved"}},vitals:{labels:{dateRecorded:"Date Recorded",dbp:"DBP",heartRate:"Heart Rate",height:"Height",respiratoryRate:"Respiratory Rate",sbp:"SBP",temperature:"Temperature",weight:"Weight"}}}}),define("hospitalrun/translations/it",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Indirizzo 1 etichetta",address2Label:"Indirizzo 2 Etichetta",address3Label:"Indirizzo 3 Etichetta",address4Label:"Indirizzo 4 Etichetta",addressLabel:"Indirizzo",editTitle:"Opzioni indirizzo",include1Label:"Includi 1 etichetta",include2Label:"Includi 2 etichette",include3Label:"Includi 3 etichette",include4Label:"Includi 4 etichette",messages:{addressSaved:"Le opzioni di indirizzo sono state salvate"},newTitle:"Opzioni indirizzo",titles:{optionsSaved:"Opzioni salvate"}},addressOptions:"Opzioni indirizzo",customForms:{buttons:{addField:"Aggiungi campo",moveDown:"Abbassati",moveUp:"Andare avanti",newForm:"+ nuova forma",preview:"Anteprima"},labels:{alwaysInclude:"Includi sempre",checkbox:"Casella di controllo",colSpan:"Numero di colonne in campo",columns:"Colonne",customForm:"Modulo personalizzato",dischargeReportFormType:"Rapporto di scarico",expenseTo:"Spesa a",formName:"Nome del modulo",formType:"Tipo di modulo",incidentFormType:"Incidente",includeOtherOption:"Includi un'altra opzione",labFormType:"Laboratorio",label:"Etichetta",newForm:"Nuovo modulo",opdReportFormType:"Relazione ambulatoriale",operativePlanFormType:"Piano operativo e relazione",otherOptionLabel:"Altro opzione Label",patientFormType:"Paziente",property:"Proprietà",radio:"Radio",select:"Cadere in picchiata",socialworkFormType:"Lavoro sociale",text:"Testo",textarea:"Grande testo",visitFormType:"Visita"},messages:{formSaved:"Il modulo {name} è stato salvato."},titles:{checkboxValues:"Valori della casella di controllo",customForms:"Forme personalizzate",deleteForm:"Elimina modulo personalizzato",dropDownValues:"Valori di caduta",editCustomForm:"Modifica modulo personalizzato",fields:"Campi",formSaved:"Modulo salvato",newCustomForm:"Nuovo modulo personalizzato",radioValues:"Valori radio"}},header:{editTitle:"Opzioni Intestazione",facilityName:"Nome struttura",headerLabel:"Intestazione",headerLine1:"Linea di intestazione 1",headerLine2:"Linea intestazione 2",headerLine3:"Linea intestazione 3",logoURL:"Logo URL",messages:{headerSaved:"Le opzioni dell'intestazione sono state salvate"},newTitle:"Opzioni Intestazione",titles:{optionsSaved:"Opzioni salvate"}},loadDb:"Carica DB",loaddb:{displayAlertMessage:"Seleziona il file da caricare.",displayAlertTitle:"Selezionare File da caricare",editTitle:"Carica DB",errorDisplayAlertMessage:"Impossibile importare il database. L'errore era: {error}",errorDisplayAlertTitle:"Errore nel caricamento",progressMessage:"Si prega di attendere il caricamento del database.",progressTitle:"Caricamento del database"},lookup:{aisleLocationList:"Luoghi di navigazione di magazzino",alertImportListMessage:"Seleziona il file da importare.",alertImportListSaveMessage:"L'elenco di ricerca è stato importato.",alertImportListSaveTitle:"Elenco importato",alertImportListTitle:"Selezionare File da importare",alertImportListUpdateMessage:"L'elenco di ricerca è stato salvato.",alertImportListUpdateTitle:"Lista salvata",anesthesiaTypes:"Tipi di anestesia",anesthesiologists:"Gli anestesisti",billingCategories:"Categorie di fatturazione",clinicList:"Locazioni cliniche",countryList:"Paesi",cptCodeList:"Codici CPT",diagnosisList:"Diagnosi",edit:{template:{addTitle:"Aggiungere valore",editTitle:"Modifica valore",labelTitle:"Valore",updateButtonTextAdd:"Inserisci",updateButtonTextUpdate:"Aggiornare"}},expenseAccountList:"Conti di spesa",imagingPricingTypes:"Tipi di prezzi di imaging",incidentDepartments:"Dipartimenti incidenti",inventoryTypes:"Tipi di inventario",labPricingTypes:"Tipi di prezzi del laboratorio",pageTitle:"Elenchi di ricerca",patientStatusList:"Lista dei pazienti",physicianList:"I medici",procedureList:"Procedure",procedureLocations:"Posizioni delle procedure",procedurePricingTypes:"Tipi di prezzi di procedura",radiologists:"Radiologi",titles:{deleteLookupValue:"Elimina valore"},unitTypes:"Tipi di unità",vendorList:"Venditore",visitLocationList:"Visita le posizioni",visitTypes:"Tipi di visita",wardPricingTypes:"Ward Tipi di prezzi",warehouseList:"Locazioni di magazzino"},lookupLists:"Elenchi di ricerca",roles:{capability:{addAllergy:"Aggiungi allergia",addAppointment:"Aggiungi appuntamento",addBillingDiagnosis:"Aggiungi la Diagnosi di fatturazione",addCharge:"Aggiungi carica",addDiagnosis:"Aggiungi la diagnosi",addImaging:"Aggiungi Imaging",addIncident:"Aggiungi incidente",addIncidentCategory:"Aggiungi categoria di incidenti",addInventoryItem:"Aggiungi articolo di magazzino",addInventoryPurchase:"Aggiungi l'acquisto di magazzino",addInventoryRequest:"Aggiungi richiesta di magazzino",addInvoice:"Aggiungi fattura",addLab:"Aggiungi laboratorio",addMedication:"Aggiungi farmaci",addNote:"Aggiungi nota",addOperationReport:"Aggiungi report sull'operazione",addOperativePlan:"Aggiungi piano operativo",addPatient:"Aggiungi paziente",addPayment:"Aggiungi pagamento",addPhoto:"Aggiungi foto",addPricing:"Aggiungi prezzi",addPricingProfile:"Aggiungi il profilo dei prezzi",addProcedure:"Aggiungi procedura",addSocialwork:"Aggiungi lavoro sociale",addVisit:"Aggiungi visita",addVitals:"Aggiungi vitali",adjustInventoryLocation:"Regola la posizione dell'inventario",admin:"Amministrazione",admitPatient:"Ammetti paziente",appointments:"Appuntamenti",billing:"Fatturazione",cashier:"Cassiere",completeImaging:"Imaging completo",completeLab:"Laboratorio completo",defineUserRoles:"Definire ruoli utente",deleteAppointment:"Elimina appuntamento",deleteDiagnosis:"Elimina la diagnosi",deleteImaging:"Elimina Imaging",deleteIncident:"Cancellare l'incidente",deleteIncidentCategory:"Elimina categoria di incidenti",deleteInventoryItem:"Eliminare l'elemento dell'inventario",deleteInvoice:"Elimina fattura",deleteLab:"Elimina il laboratorio",deleteMedication:"Elimina i farmaci",deleteNote:"Elimina nota",deletePatient:"Elimina paziente",deletePhoto:"Elimina foto",deletePricing:"Elimina i prezzi",deletePricingProfile:"Elimina il profilo dei prezzi",deleteProcedure:"Procedura di cancellazione",deleteSocialwork:"Elimina il lavoro sociale",deleteVisit:"Elimina la visita",deleteVitals:"Elimina Vitals",dischargePatient:"Paziente di scarico",editInvoice:"Modifica fattura",fulfillInventory:"Compilare inventario",fulfillMedication:"Completi i farmaci",generateIncidentReport:"Genera report di incidenti",imaging:"Imaging",incident:"Incidente",inventory:"Inventario",invoices:"Fatture",labs:"Labs",listPaidInvoices:"Elenca le fatture pagate",loadDb:"Database di caricamento",manageIncidents:"Gestire incidenti",medication:"Medicazione",overrideInvoice:"Sovrascrivere la fattura",patientReports:"Rapporti pazienti",patients:"Pazienti",pricing:"Prezzi",updateConfig:"Aggiorna le configurazioni",visits:"Visite"},messages:{roleSaved:"Il ruolo di {roleName} è stato salvato."},titles:{roleSaved:"Ruolo salvato"}},textReplacements:{createNew:"Crea un nuovo codice breve",existingRepl:"Codici brevi esistenti",noMatches:"Nessun rimpiazzo corrisponde '{term}'",pageTitle:"Shortcodes",performExpand:"Premere Invio per sostituire #{from} con '{to}'",possibleExpansions:"Possibili sostituzioni: {possible}",replDesc:"Quando si inserisce testo, questi collegamenti consentono di sostituire una breve sequenza di caratteri con una frase più lunga.",replaceWith:"Sostituirlo con",toReplace:"Testo da sostituire"},userRoles:"Ruoli utente",users:"Utenti",visitForms:{labels:{followup:"Seguito",form:"Modulo",initial:"Iniziale",visitType:"Tipo di visita"},titles:{visitForms:"Moduli di visita"}},workflow:{admissionDepositLabel:"Deposito richiesto",clinicPrepaymentLabel:"È richiesto il pagamento anticipato della clinica",editTitle:"Opzioni di flusso di lavoro",followupPrepaymentLabel:"È richiesto il pagamento anticipato",messages:{optionsSaved:"Le opzioni del flusso di lavoro sono state salvate"},newTitle:"Opzioni di flusso di lavoro",outpatientImagingLabel:"È richiesto il pagamento anticipato di Imaging",outpatientLabLabel:"Richiesta di prepagamento per l'ambulatorio",outpatientMedicationLabel:"È richiesto un prepagamento medico ambulatoriale",titles:{optionsSaved:"Opzioni salvate"},workflowLabel:"Flusso di lavoro"}},alerts:{errorExclamation:"Errore!!!!",pleaseWait:"Attendere prego",reportError:"Errore durante la generazione di report",warningExclamation:"Avvertimento!!!!"},allergies:{buttons:{addAllergy:"Aggiungi allergia"},labels:{allergyName:"Nome",patientAllergy:"Allergie pazienti"},titles:{addAllergy:"Aggiungi allergia",editAllergy:"Modifica l'allergia"}},application:{messages:{sessionExpired:"La tua sessione è scaduta. Per favore accedi per continuare."},titles:{sessionExpired:"Sessione scaduta"}},appointments:{buttons:{newButton:"+ nuovo appuntamento",scheduleSurgery:"+ chirurgia di orario"},calendarTitle:"Appuntamenti Calendario",currentScreenTitle:"Elenco appuntamenti",editTitle:"Modifica appuntamento",labels:{noLocation:"Nessuna posizione",selectedStartingDate:"Mostra appuntamenti in o dopo"},messages:{appointmentSaved:"L'appuntamento per {patient} è stato salvato.",endTimeLaterThanStart:"Selezionare un tempo di fine più tardi dell'orario di inizio."},missed:"Appuntamenti mancati",newTitle:"Nuovo appuntamento",searchTitle:"Appuntamenti di ricerca",sectionTitle:"Appuntamenti",thisWeek:"Appuntamenti Questa Settimana",titles:{appointmentSaved:"Appuntamento Salvato",editSurgicalAppointment:"Modifica della nomina chirurgica",newSurgicalAppointment:"Nuova nomina chirurgica",theaterSchedule:"Pianificazione del teatro"},todayTitle:"Appuntamenti di oggi"},billing:{alerts:{noInvoiceFound:"Nessuna fattura trovata",noPricingItems:"Non sono stati trovati elementi di prezzo.",noPricingProfiles:"Non sono stati trovati profili di prezzo."},buttons:{addOverride:"Aggiungi l'override",createInvoice:"Creare una fattura?"},labels:{actualCharges:"Spese effettive",discountAmount:"Totale sconto",discountPercentage:"Percentuale di sconto",externalInvoiceNumber:"Fattura esterna #",hmoCom:"HMO / COM",insurance:"Assicurazione nazionale",paymentProfile:"Profilo di pagamento",paymentsDeposits:"Pagamenti / Depositi",pricingPanelOverrides:"Il profilo di prezzo supera",pricingProfile:"Profilo dei prezzi",setFee:"Imposta tariffa"},messages:{flatDiscountMsg:"Esiste un importo di sconto piatto applicato alla responsabilità finanziaria del paziente di {currency} {discountAmount}.",flatFeeMsg:"C'è una tassa piana per la responsabilità finanziaria del paziente di {currency} {setFee}."},navigation:{}},buttons:{add:"Inserisci",addItem:"Aggiungi articolo",addLineItem:"Aggiungi elemento pubblicitario",addValue:"Aggiungere valore",addVisit:"Aggiungi visita",allRequests:"Tutte le richieste",barcode:"Codice a barre",cancel:"Annulla",clear:"Chiaro",close:"Vicino",complete:"Completare",delete:"Elimina",dispense:"Dispensare",edit:"Modifica",filter:"Filtro",fulfill:"Esaudire",import:"Importare",loadFile:"Carica file",newItem:"+ nuovo elemento",newNote:"Nuova nota",newRequest:"Nuova richiesta",newRequestPlus:"+ nuova richiesta",newUser:"Nuovo utente",ok:"Ok",print:"Stampare",remove:"Rimuovere",returnButton:"Ritorno",review:"Revisione",search:"Ricerca",showAll:"Mostra tutto",showFewer:"Mostra meno",update:"Aggiornare"},components:{chargesByTypeTab:{charges:"Oneri"},customFormManager:{buttons:{addForm:"Aggiungi modulo"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Mezzanotte",noon:"Mezzogiorno",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Seleziona un file di immagine valido."}},operativeProcedures:{buttons:{addProcedure:"Aggiungi procedura"},labels:{procedure:"Procedura"},titles:{procedures:"Procedure"}},patientOrders:{buttons:{newImaging:"Nuova imaging",newLab:"Nuovo laboratorio",newMedication:"Nuovo farmaco"},labels:{imagingOrderType:"Imaging",labOrderType:"Laboratorio",medicationOrderType:"Medica",orderType:"Tipo d'ordine"}},priceList:{charges:"Spese {pricingType}"},quantityCalc:{result:"{targetUnit} totale: {calculated}"},quantityConv:{conversion:"Cosa contiene 1 {name}?",unit:"Unità"},sortableColumn:{labels:{selectAll:"(Seleziona tutto)"}},takePhoto:{camera:"Camera",how:"Come vuoi aggiungere una foto?",labels:{takeAPicture:"Fai una foto",uploadAFile:"Carica in File"},photo:"Foto",preview:"Anteprima",takePhoto:"Fare foto",uploadFile:"Caricare un file"},upcomingAppointments:{labels:{date:"Al tuo posto",location:"Luogo",type:"Tipo",with:"Con"},titles:{upcomingAppointments:"Appuntamenti futuri"}}},customForms:{buttons:{addForm:"Aggiungi modulo"},labels:{formToAdd:"Modulo da aggiungere"},titles:{addCustomForm:"Aggiungi modulo personalizzato"}},dashboard:{needs_user_setup:"Si consiglia di impostare un account utente.",standalone_welcome:'<h4> Grazie per aver scaricato HospitalRun </h4> <p> Stai eseguendo HospitalRun in modalità stand-alone. Questa modalità consente di supportare più utenti in un\'unica istanza desktop / laptop di HospitalRun. Questo è ideale per: </li> <li> Valutazione di HospitalRun per un\'eventuale distribuzione del server. </li> <li> Utilizzando la piattaforma per supportare una clinica / un\'istanza dove è sufficiente un\'istanza singola. </Li> </ul> <p> Se stai pensando ad un\'installazione multi-dispositivo di HospitalRun, siamo <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank"> lavorando sulle funzionalità </ a> che ti permetterà di "graduare" da questa singola istanza in una distribuzione tradizionale basata su cloud / server. </p>',title:"Benvenuti in HospitalRun!"},dates:{long:"{years} anno {months} mesi {days} giorni",longOmitDays:"{years} anno {months} mesi",longOmitDaysPlural:"{years} anni {months} mesi",longOmitDaysYears:"{months} mesi",longOmitYears:"{months} mesi {days} giorni",longPlural:"{years} anni {months} mesi {days} giorni",short:"{years}y {months}m {days}d",shortOmitYears:"{months} m {days} d"},diagnosis:{labels:{activeDiagnosis:"Diagnosi attiva",date:"Al tuo posto",diagnosis:"Diagnosi",secondaryDiagnosis:"Diagnosi secondaria"},titles:{addDiagnosis:"Aggiungi la diagnosi",editDiagnosis:"Modifica la diagnosi"}},errors:{accepted:"Deve essere accettato",blank:"Non può essere vuoto",confirmation:"Non corrisponde {attribute}",empty:"Non può essere vuoto",equalTo:"Deve essere uguale a {count}",even:"Deve essere uguale",exclusion:"È riservato",greaterThan:"Deve essere maggiore di {count}",greaterThanOrEqualTo:"Deve essere maggiore o uguale a {count}",inclusion:"Non è incluso nell'elenco",invalid:"È invalido",invalidNumber:"Non un numero valido",lessThan:"Deve essere inferiore a {count}",lessThanOrEqualTo:"Deve essere inferiore o uguale a {count}",notANumber:"Non è un numero",notAnInteger:"Deve essere un numero intero",odd:"Deve essere strano",otherThan:"Deve essere diverso da {count}",present:"Deve essere vuoto",result:"Inserisci un risultato prima di completarlo",tooLong:"È troppo lungo (massimo {count} caratteri)",tooShort:"È troppo breve (minimo è {count} caratteri)",wrongLength:"È la lunghezza errata (dovrebbe essere {count} caratteri)"},headings:{chargedItems:"Elementi caricati"},imaging:{alerts:{completedMessage:"La richiesta di imaging è stata completata.",completedTitle:"Richiesta di imaging completata",savedMessage:"La richiesta di imaging è stata salvata.",savedTitle:"Richiesta di imaging salvata"},buttons:{newButton:"+ nuove immagini"},labels:{addNewVisit:"--Aggiungi nuova visita--",completedBy:"Completato da",radiologist:"Radiologo",requestedNotes:"Note richieste",resultNotes:"Note sul risultato"},messages:{noCompleted:"Non sono stati trovati elementi completi."},pageTitle:"Richieste di immagini",sectionTitle:"Imaging",titles:{completedImaging:"Imaging completato",editTitle:"Modifica Imaging Request",newTitle:"Nuova richiesta di imaging"}},incident:{buttons:{add:"Inserisci",addForm:"+ Aggiungi modulo",addItem:"Aggiungi articolo",cancel:"Annulla",delete:"Elimina",download:"Scaricare",edit:"Modifica",export:"Esportazioni",generateRep:"Genera rapporto",newAttachment:"+ Nuovo allegato",newCategory:"+ nuova categoria",newIncident:"+ nuovo incidente",newNote:"+ Nuova nota"},labels:{actions:"Azioni",addedBy:"Aggiunto da",category:"Categoria",categoryItem:"Categoria Articolo",date:"Data",dateRecorded:"Data registrata",department:"Dipartimento",description:"Descrizione dell'incidente",endDate:"Data di fine",givenBy:"Dato da",howToAddAttachment:"Come vuoi aggiungere un allegato?",incidentDate:"Data dell'incidente",incidentId:"Incident ID",item:"Articolo",lastUpdated:"Ultimo aggiornamento",note:"Nota",patientId:"Id paziente",patientImpacted:"Paziente Impattato",reportType:"Tipo di report",reportedBy:"Segnalato da",reportedDate:"Data riportata",reportedTo:"Incidente segnalato a (nome completo)",sentinelEvent:"Evento Sentinel",startDate:"Data d'inizio",status:"Stato",statusActive:"Attivo",statusClosed:"Chiuso",statusFollowup:"Seguito",statusReported:"Segnalato",title:"Titolo",total:"Totale",updatedBy:"Aggiornato da"},messages:{attachmentFileRequired:"Caricare un file o scattare una foto o prima di salvare questo allegato.",createNew:"Creare un nuovo incidente?",createNewIncidentCategory:"Creare una nuova categoria di incidenti?",fillIn:"Compila le opzioni di cui sopra per calcolare il punteggio",incidentCategorySaved:"La categoria {name} è stata salvata.",noClosedIncidents:"Non sono stati trovati incidenti chiusi.",noIncidentCategoriesFound:"Non sono state trovate categorie di incidenti.",noIncidents:"Nessun incidente trovato.",saved:"Il rapporto sull'incidente è stato salvato.",selectExistingPatient:"Selezionare un paziente esistente o lasciare vuoto questo campo."},titles:{addAttachment:"Aggiungi allegato",addCategoryItem:"Aggiungi articolo della categoria",addNote:"Aggiungi nota",attachments:"Allegati",closed:"Incidenti chiusi",current:"Attuale",deleteAttachment:"Elimina allegato",deleteIncident:"Cancellare l'incidente",deleteIncidentCategory:"Elimina categoria di incidenti",deleteItem:"Cancella oggetto",deleteNote:"Elimina nota",editAttachment:"Modifica allegato",editIncident:"Modifica incidente",editIncidentCategory:"Modifica categoria di incidenti",editNote:"Modifica nota",general:"Informazione generale",history:"Storia",incidentCategories:"Categorie di incidenti",incidentCategoryItem:"Categoria Incidente Categoria",incidentCategoryName:"Nome Categoria Incidente",incidentCategorySaved:"Categoria di incidente salvata",incidentSaved:"Incidente salvato",incidents:"Incidenti",incidentsByCategory:"Incidenti per categoria",incidentsByDepartment:"Incidenti per reparto",newIncident:"Nuovo incidente",newIncidentCategory:"Nuova categoria di incidenti",notes:"Gli appunti",reports:"Rapporti"}},inventory:{edit:{cost:"Costo per unità:",delivered:"Delievered a:",location:"Posizione regolata:",prescription:"Prescrizione per:",pulled:"Estratto da:",quantity:"Quantità al completamento:",reason:"Ragionare:",returned:"Ritorno da paziente:",transferredFrom:"Trasferito da:",transferredTo:"Trasferito a:"},labels:{action:"Azione",add:"Inserisci",addAdjustmentType:"Inserisci",adjust:"Regolare",adjustmentDate:"Data di regolazione",adjustmentFor:"Regolazione per",adjustmentType:"Tipo di regolazione",aisle:"Corridoio",aisleLocation:"Aisle Posizione",allInventory:"Tutto l'inventario",allItems:"Tutti gli articoli",availableQuantity:"{quantity} disponibile",billTo:"Fatturare a",consumePurchases:"Consumi Acquisti",consumptionRate:"Tasso di consumo",cost:"Costo",costPerUnit:"Costo per unità",crossReference:"Riferimento incrociato",currentQuantity:"Quantità corrente",dateCompleted:"Data completata",dateEffective:"Data effettiva",dateEnd:"Data di fine",dateReceived:"Data Ricevuto",dateStart:"Data d'inizio",dateTransferred:"Data trasferita",daysLeft:"Giorni Sinistra",deleteItem:"Cancella oggetto",deliveryAisle:"Aisle di consegna",deliveryLocation:"Luogo della consegna",details:"Dettagli",distributionUnit:"Unità di distribuzione",editItem:"Modifica l'elemento",expense:"Spesa a",expirationDate:"Data di scadenza",fulfillRequest:"Richiesta di compimento",fulfillRequestNow:"Compilare la richiesta ora",gift:"Regalo in Kind",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"Regalo in Uso Kind",inventoryConsumed:"Inventario Consumato",inventoryItem:"Articolo dell'inventario",inventoryObsolence:"Obsolenza dell'inventario",invoiceItems:"Elementi fattura",invoiceLineItem:"Elemento della linea di fattura",invoiceNumber:"Numero di fattura",item:"Articolo",itemNumber:"Codice articolo",items:"Elementi",location:"Luogo",locations:"Sedi",markAsConsumed:"Segna come Consumato",name:"Nome",newItem:"Nuovo oggetto",originalQuantity:"Quantità originale",print:"Stampare",printBarcode:"Stampa codice a barre",printer:"Stampante",pullFrom:"Tirare da",purchaseCost:"Costo di acquisto",purchaseInfo:"Informazioni sull'acquisto",purchases:"Acquisti",quantity:"Quantità ({unit})",quantityAvailable:"Quantità disponibile",quantityOnHand:"Quantità a disposizione",quantityRequested:"Quantità richiesta",rank:"Rango",reason:"Ragionare",remove:"Rimuovere",removeAdjustmentType:"Rimuovere",reorderPoint:"Punto di riordino",requestedItems:"Elementi richiesti",returnAdjustmentType:"Ritorno",returnToVendorAdjustmentType:"Ritorno al fornitore",salePricePerUnit:"Prezzo di vendita per unità",save:"Salvare",serialNumber:"Numero di serie / lotto",total:"Totale",totalCost:"Costo totale",totalReceived:"Totale ricevuti: {total}",transaction:"Transazione",transactions:"Le transazioni",transfer:"Trasferimento",transferFrom:"Trasferito da",transferTo:"Trasferire in posizione",transferToAisle:"Trasferimento in Aisle Location",unit:"Unità",unitCost:"Costo unitario",vendor:"Venditore",vendorItemNumber:"Numero di articolo del fornitore",writeOffAdjustmentType:"Cancellare",xref:"XRef"},messages:{adjust:"Regoli i quantitativi nella posizione appropriata per tenere conto della differenza di {difference}.",createRequest:"Creare una nuova richiesta?",itemNotFound:"Non è stato possibile trovare la voce inventario <strong> {item} </ strong>. Se desideri creare un nuovo elemento inventario, inserisci le informazioni riportate di seguito. In caso contrario, premi il pulsante Annulla per ritorno.",loading:"Caricamento delle transazioni ...",noItems:"Nessun articolo trovato.",noRequests:"Nessuna richiesta trovata.",purchaseSaved:"Gli acquisti di inventario sono stati salvati con successo.",quantity:"La quantità totale di <strong> ({quantity}) </ strong> non corrisponde alla quantità totale nelle posizioni <strong> ({locationQuantity}) </ strong>.",removeItem:"Sei sicuro di voler rimuovere questo elemento da questa fattura?",removeItemRequest:"Sei sicuro di voler rimuovere questo elemento da questa richiesta?",requestFulfilled:"La richiesta di inventario è stata soddisfatta.",requestUpdated:"La richiesta di inventario è stata aggiornata.",warning:"Compila i campi obbligatori (contrassegnati con *) e correggi gli errori prima di aggiungere."},reports:{adjustment:"Regolazione dettagliata",daysSupply:"Giorni di fornitura a sinistra",expenseDetail:"Spese dettagliate",expenseSum:"Spese di riepilogo",expiration:"Data di scadenza",export:"Esportare",fields:"Campi da includere",finance:"Riepilogo delle finanze",generate:"Genera rapporto",invLocation:"Inventario per località",invValuation:"Valutazione dell'inventario",purchaseDetail:"Acquisto dettagliato",purchaseSum:"Sommario Acquisto",reportType:"Tipo di report",rows:{adjustments:"Regolazioni",adjustmentsTotal:"Rettifiche totali",balanceBegin:"Saldo iniziale",balanceEnd:"Saldo finale",category:"Categoria",consumed:"Consumato",consumedGik:"GiK Consumato",consumedGikTotal:"Total GiK Consumato",consumedPuchases:"Acquisti Consumati",consumedPurchasesTotal:"Acquisti totali consumati",consumedTotal:"Totale Consumato",errInFinSum:"Errore in _generateFinancialSummaryReport: ",errInFindPur:"Errore in _findInventoryItemsByPurchase: ",errInFindReq:"Errore in _findInventoryItemsByRequest: ",expensesFor:"Spese per: ",noAccount:"(Nessun account)",subtotal:"Totale parziale: ",subtotalFor:"Subtotale per {category} - {account}: ",total:"Totale: ",totalFor:"Totale per {var}: ",totalPurchases:"Acquisti totali",transfer1:"{quantity} da {location}",trasnfer2:"Da: {source} A: {target}"},stockTransferDetail:"Trasferimento di riserva dettagliato",stockTransferSum:"Riepilogo trasferimento di riserva",stockUsageDetail:"Utilizzo dettagliato delle scorte",stockUsageSum:"Sommario Utilizzo di magazzino",titleDateRange:"{name} Segnala {startDate} - {endDate}",titleSingleDate:"{name} Rapporto {date}"},titles:{addPurchase:"Aggiungi l'acquisto",addRequest:"Nuova richiesta",adjustment:"Registrazione",editPurchase:"Modifica l'acquisto",editRequest:"Modifica richiesta",inventoryItem:"Nuovo elemento di magazzino",inventoryReport:"Rapporto di inventario",purchaseSaved:"Acquisti di magazzino salvati",quickAddTitle:"Nuovo elemento di magazzino",removeItem:"Rimuovi oggetto",requestFulfilled:"Richiesta compilata",requestUpdated:"Richiesta aggiornata",transfer:"Elementi di trasferimento",warning:"Avvertimento!!!!!"}},labels:{action:"Azione",actions:"Azioni",addNewOutpatientVisit:"- Aggiungere Nuova Visita Ambulatoriale--",address:"Indirizzo",age:"Età",allDay:"Tutto il giorno",allItems:"Tutti gli articoli",amount:"Quantità",anesthesia:"Anestesia",assisting:"Assistere",balanceDue:"Bilancio dovuto",billDate:"Bill Date",billTo:"Fatturare a",category:"Categoria",completed:"Completato",country:"Nazione",cptcode:"Codice CPT",creditTo:"Credito a",currencySymbol:"$",date:"Data",dateCompleted:"Data completata",dateOfBirth:"Data di nascita",dateOfBirthShort:"DoB",datePaid:"Data pagata",dateRequested:"Data richiesta",delete:"Elimina",deleteRequest:"Elimina richiesta",deleteUser:"Elimina Utente",department:"Dipartimento",description:"Descrizione",discount:"Sconto",displayName:"Nome da visualizzare",docRead:"Documenti Leggi",docWritten:"Documenti scritti",edit:"Modifica",editUser:"Modifica utente",email:"E-mail",endDate:"Data di fine",endTime:"Fine del tempo",excess:"Eccesso",expenseTo:"Spesa a",fileLoadSuccessful:"File per caricare il successo",fileName:"Nome del file",fileToLoad:"Caricamento del file",from:"A partire dal",fulfill:"Esaudire",fulfillRequest:"Richiesta di compimento",fulfillRequestNow:"Compilare la richiesta ora",fulfilled:"Soddisfatto",grandTotal:"Somma totale",id:"Id",imageOrders:"Ordini di immagine",imagingType:"Tipo di imaging",importFile:"Importare file",invoiceId:"ID fattura",labOrders:"Ordini del laboratorio",lineItems:"Elementi di linea",loading:"Caricamento in corso",location:"Luogo",lookupType:"Tipo di ricerca",medication:"Medicazione",name:"Nome",newItem:"+ nuovo elemento",newUser:"Nuovo utente",note:"Nota",notes:"Gli appunti",number:"Numero",on:"Sopra",password:"Parola d'ordine",patient:"Paziente",payments:"Pagamenti",physician:"Medico",prescriber:"Prescrivente",prescription:"Prescrizione",prescriptionDate:"Data di prescrizione",price:"Prezzo",print:"Stampare",procedures:"Procedure",provider:"Provider",pullFrom:"Tirare da",quantity:"Quantità",remarks:"Osservazioni",requestedBy:"Richiesto da",requestedOn:"Richiesto su",requests:"Richieste",result:"Risultato",results:"Risultati",role:"Ruolo",search:"Ricerca",sex:"Sesso",startDate:"Data d'inizio",startTime:"Ora d'inizio",status:"Stato",takenBy:"Preso da",to:"A",total:"Totale",type:"Tipo",userCanAddNewValue:"L'utente può aggiungere nuovi valori",username:"Nome utente",value:"Valore",view:"Vista",visit:"Visita",with:"Con"},labs:{alerts:{requestCompletedMessage:"La richiesta del laboratorio è stata completata.",requestCompletedTitle:"Richiesta di laboratorio completata",requestSavedMessage:"La richiesta del laboratorio è stata salvata.",requestSavedTitle:"Richiesta di laboratorio salvato"},buttons:{newButton:"+ nuovo laboratorio"},completedTitle:"Laboratori completati",deleteTitle:"Elimina richiesta",editTitle:"Modifica richiesta di laboratorio",labels:{addNewVisit:"--Aggiungi nuova visita--",labType:"Tipo di laboratorio"},messages:{createNewRecord:"Creare un nuovo record?",noCompleted:"Non sono stati trovati elementi completi.",noItemsFound:"Nessun laboratorio trovato."},newTitle:"Richiesta di nuovo laboratorio",requestsTitle:"Richieste del laboratorio",sectionTitle:"Labs"},languageName:"Italiano",loading:{messages:{0:"La velocità massima di volo della farfalla è di 12 miglia all'ora. Alcune falene possono volare 25 miglia all'ora!",1:"I gufi sono gli unici uccelli che possono vedere il colore blu.",10:"La lingua è l'unico muscolo nel tuo corpo che è attaccato ad una sola estremità.",11:"I cammelli hanno tre palpebre per proteggersi dalla sabbia.",2:"I gatti hanno più di 100 suoni vocali; i cani hanno solo 10.",3:"Gli esseri umani usano un totale di 72 muscoli differenti nel discorso.",4:"Nel continente africano si parla di più di 1000 lingue diverse.",5:"Un eritrofobo è qualcuno che si arrossisce facilmente.",6:"La fobia più diffusa al mondo è l'odinofobia che è la paura del dolore.",7:"Il tuo corpo usa 300 muscoli per bilanciare se sei in piedi.",8:"Alcune rane possono essere congelate solide, poi scongelate, e continuano a vivere.",9:"I nostri occhi sono sempre le stesse dimensioni dalla nascita, ma il naso e le orecchie non smettono mai di crescere."},progressBar:{progress:"{progressBarValue}% Completato"}},login:{labels:{password:"Parola d'ordine",signIn:"Registrati",username:"Nome utente"},messages:{error:"Nome utente o password non sono corretti.",offlineError:"Impossibile eseguire l'accesso mentre offline. Si prega di stabilire una connessione di rete e riprovare l'accesso.",signIn:"Accedi"}},medication:{alerts:{fulfilledTitle:"Richiesta di farmaco soddisfatto",returnedMessage:"Il farmaco è stato contrassegnato come restituito.",returnedTitle:"Il farmaco è tornato",savedMessage:"Il record di farmaci è stato salvato.",savedTitle:"Richiesta di farmaco salvato"},buttons:{dispenseMedication:"Dispensare farmaci",newButton:"+ nuova richiesta",returnMedication:"Restituisce il farmaco"},labels:{adjustmentDate:"Data di regolazione",creditToAccount:"Credito a conto",quantityDispensed:"Quantità dispensata",quantityDistributed:"Quantità distribuita",quantityRequested:"Quantità richiesta",quantityToReturn:"Quantità per tornare",refills:"Ricariche",returnAisle:"Ritorno a bordo",returnLocation:"Restituisce la posizione",returnReason:"Motivo / note di ritorno"},messages:{createNew:"Creare una nuova richiesta di farmaco?"},pageTitle:"Richieste di farmaco",returnMedication:"Restituisce il farmaco",sectionTitle:"Medicazione",titles:{completedMedication:"Completato farmaco",editMedicationRequest:"Modifica richiesta di farmaco",newMedicationRequest:"Nuova richiesta di farmaco"}},messages:{createNewRecord:"Creare un nuovo record?",createNewUser:"Crea un nuovo utente?",delete:"Sei sicuro di voler eliminare {name}?",delete_plural:"Sei sicuro di voler eliminare questi {name}?",delete_singular:"Sei sicuro di voler eliminare questo {name}?",forAuthorizedPersons:"Questo rapporto è riservato solo a persone autorizzate.",newPatientHasToBeCreated:"È necessario creare un nuovo paziente ... Si prega di attendere ..",noHistoryAvailable:"Nessuna storia disponibile.",noItemsFound:"Nessun articolo trovato.",noNotesAvailable:"Non sono disponibili ulteriori note cliniche per questa visita.",noUsersFound:"Nessun utente trovato.",onBehalfOf:"Per conto di",reportError:"Si è verificato un errore durante la generazione del rapporto richiesto. Si prega di informare l'amministratore di sistema di aver riscontrato un errore.",requiredFieldsCorrectErrors:"Compila i campi obbligatori (contrassegnati con *) e correggi gli errori prima del salvataggio.",saveActionException:"Si è verificato un errore durante il tentativo di salvare: {message}",sorry:"Scusa, qualcosa è andato storto...",userHasBeenSaved:"L'utente è stato salvato.",userSaved:"Utente salvato"},models:{appointment:{labels:{allDay:"Tutto il giorno",appointmentDate:"Data",appointmentType:"Tipo",endDate:"Data di fine",location:"Luogo",notes:"Gli appunti",patient:"Paziente",provider:"Con",startDate:"Data d'inizio",status:"Stato",type:"Tipo"},names:{plural:"Appuntamenti",singular:"Appuntamento"}},attachment:{names:{plural:"Allegati",singular:"Attaccamento"}},form:{names:{plural:"Forme",singular:"Modulo"}},imaging:{names:"imaging",request:{plural:"Richieste di imaging",singular:"Richiesta di imaging"}},incident:{names:{plural:"Incidenti",singular:"Incidente"}},item:{names:{plural:"Elementi",singular:"Articolo"}},lab:{names:{plural:"Laboratori",singular:"Laboratorio"},request:{plural:"Richieste di laboratorio",singular:"Richiesta di laboratorio"}},medication:{names:{plural:"Farmaci",singular:"Medicazione"},request:{plural:"Richieste di farmaci",singular:"Richiesta di farmaco"}},note:{names:{plural:"Gli appunti",singular:"Nota"}},patient:{labels:{name:"Nome"},names:{singular:"Paziente"}},procedure:{names:{plural:"Procedure",singular:"Procedura"}},user:{names:{plural:"Utenti",singular:"Utente"}},visit:{names:{plural:"Visite",singular:"Visita"}},vital:{names:{plural:"Organi vitali",singular:"Vitale"}}},navigation:{about:"Informazioni su HospitalRun",actions:{login:"Accesso",logout:"Logout",selectLanguage:"Seleziona la lingua"},administration:"Amministrazione",billing:"Fatturazione",imaging:"Imaging",incident:"Incidente",inventory:"Inventario",labs:"Labs",medication:"Medicazione",messages:{logoutFailed:"Impossibile disconnettersi in questo momento. Logout non è disponibile quando è offline."},patients:"Pazienti",scheduling:"Programmazione",subnav:{actions:"Azioni",addAppointment:"Aggiungi appuntamento",addressFields:"Campi di indirizzo",admittedPatients:"Pazienti ammessi",appointmentSearch:"Ricerca di appuntamento",appointmentsCalendar:"Appuntamenti Calendario",appointmentsThisWeek:"Appuntamenti Questa Settimana",cashier:"Cassiere",completed:"Completato",currentIncidents:"Incidenti attuali",customForms:"Forme personalizzate",dispense:"Dispensare",history:"Storia",incidentCategories:"Categorie di incidenti",inventoryReceived:"Inventario ricevuto",invoices:"Fatture",items:"Elementi",loadDB:"Carica DB",lookupLists:"Elenchi di ricerca",newIncident:"Nuovo incidente",newInvoice:"Nuova fattura",newPatient:"Nuovo paziente",newRequest:"Nuova richiesta",newUser:"Nuovo utente",outpatient:"Ambulatoriale",patientListing:"Elenco dei pazienti",priceProfiles:"Profili di prezzo",prices:"Prezzi",printHeader:"Intestazione di stampa",reports:"Rapporti",requests:"Richieste",returnMedication:"Restituisce il farmaco",scheduleSurgery:"Pianifica la chirurgia",textReplacements:"Shortcodes",theaterSchedule:"Pianificazione del teatro","today'sAppointments":"Appuntamenti di oggi",userRoles:"Ruoli utente",users:"Utenti",workflow:"Flusso di lavoro"},titles:{logoutFailed:"Logout non riuscito"}},operationReport:{labels:{additionalNotes:"Note aggiuntive",assistant:"Assistente",caseComplexity:"Complessità di casi",operationDescription:"Descrizione del funzionamento",preOpPrimaryDiagnosis:"Diagnosi primaria pre-op",preOpSecondaryDiagnosis:"Diagnosi secondaria pre-op",surgeon:"Chirurgo",surgeryDate:"Data della chirurgia"},messages:{reportSaved:"Il rapporto operativo è stato salvato."},titles:{editTitle:"Modifica report di funzionamento",newTitle:"Nuovo rapporto sull'operazione",reportSaved:"Report salvato"}},operativePlan:{buttons:{completePlan:"Piano completo"},labels:{additionalNotes:"Note aggiuntive",admissionInstructions:"Istruzioni all'ammissione",caseComplexity:"Complessità di casi",completedStatus:"Completato",droppedStatus:"Dropped",operationDescription:"Descrizione del funzionamento",plannedStatus:"Previsto",status:"Stato",surgeon:"Chirurgo"},messages:{planCompleted:"Il piano operativo è stato completato. Ora verrà indirizzato al rapporto di operazione.",planSaved:"Il piano operativo è stato salvato."},titles:{editTitle:"Modifica piano operativo",newTitle:"Nuovo Piano Operativo",planCompleted:"Piano Completato",planSaved:"Piano Salvato"}},patients:{buttons:{addContact:"Aggiungi contatto",addExpense:"Aggiungi spese",addFamilyMember:"Aggiungi membro della famiglia",addOperativePlan:"Aggiungi piano operativo",backToPatients:"Torna all'elenco dei pazienti",download:"Scaricare",editOperativePlan:"Piano operativo attuale",newAppointment:"Nuovo appuntamento",newImaging:"Nuova imaging",newLab:"Nuovo laboratorio",newMedication:"Nuovo farmaco",newPatient:"+ nuovo paziente",newPhoto:"Nuova foto",newVisit:"Nuova visita",patientCheckIn:"Check In Paziente",scheduleSurgery:"Pianifica la chirurgia"},labels:{admissionDate:"Data di ammissione",admit:"Ammettere",bloodType:"Gruppo sanguigno",caption:"Didascalia",civilStatus:"Stato civile",clinic:"Sito clinico",contacts:"Contatti",cost:"Costo",dateOfBirth:"Data di nascita",dateProcessed:"Data elaborata",dischargeDate:"Data di scarico",dob:"DOB",education:"Educazione",email:"E-mail",externalPatientId:"ID paziente esterno",firstName:"Nome di battesimo",income:"Reddito",insurance:"Assicurazione",lastName:"Cognome",middleName:"Secondo nome",monthlyCost:"Costo mensile",occupation:"Occupazione",operativePlan:"Piano Operativo",parent:"Genitore / tutore",patientDays:"Giorni di paziente",patientType:"Tipo di paziente",patientTypeCharity:"Carità",patientTypePrivate:"Privato",phone:"Telefono",placeOfBirth:"Luogo di nascita",primaryDiagnosis:"Diagnosi primaria",referredBy:"Riferito da",referredDate:"Data di riferimento",relationship:"Relazione con il paziente",relationships:"Le relazioni",religion:"Religione",secondaryDiagnosis:"Diagnosi secondaria",sex:"Sesso",sexNotEntered:"Sesso non entrato",sources:"Fonti",status:"Stato paziente",totalMontlyExpense:"Totale spese mensili"},messages:{areYouSureDelete:"Sei sicuro di voler eliminare questo {object}?",createNewPatient:"Creare un nuovo record del paziente?",deletingPatient:"Eliminazione del paziente e di tutti i record associati",noPatientsFound:"Nessun paziente è stato trovato.",notFoundQuickAdd:"Il paziente <strong> {patientFullName} </ strong> non è stato trovato. Se desideri creare un nuovo paziente, compila le seguenti informazioni. Altrimenti, premere il pulsante Annulla per tornare.",photoFileRequired:"Prendi una foto o carica un file prima di salvare questa foto.",savedPatient:"Il record del paziente per {displayName} è stato salvato."},navigation:{appointments:"Appuntamenti",general:"Generale",history:"Storia",imaging:"Imaging",labs:"Labs",medication:"Medicazione",photos:"Fotografie",socialWork:"Lavoro sociale",visits:"Visite"},notes:{newNote:"Nuova nota per",onBehalfOfCopy:"Per conto di",onBehalfOfLabel:"Per conto di",pleaseSelectAVisit:"Seleziona una visita",updateNote:"Aggiornamento della nota da"},titles:{addContact:"Aggiungi contatto",addPhoto:"Aggiungi foto",additionalContacts:"Contatti aggiuntivi",admissionsDetail:"Dettaglio delle iscrizioni",admissionsSummary:"Riepilogo delle iscrizioni",admittedPatients:"Pazienti ammessi",delete:"Elimina paziente",deleteContact:"Elimina contatto",deleteExpense:"Elimina spese",deleteFamilyMember:"Elimina membro della famiglia",deletePatientRecord:"Elimina il record paziente",deletePhoto:"Elimina foto",diagnosticTesting:"Test diagnostici",dischargesDetail:"Particelle di scariche",dischargesSummary:"Riepilogo degli scarichi",edit:"Modifica paziente",editPhoto:"Modifica foto",expenses:"Spese",familyInfo:"Info sulla famiglia",familyInformation:"Informazioni sulla famiglia",new:"Nuovo paziente",outpatientsForDate:"Ambulatori per {visitDate}",patient:"Rapporto paziente",patientListing:"Elenco dei pazienti",patientReport:"Rapporto paziente",patientStatus:"Stato paziente",proceduresDetail:"Dettaglio delle procedure",proceduresSummary:"Riepilogo delle procedure",savedPatient:"Paziente salvato",socialWork:"Spese",todaysOutpatients:"Gli ambulatori odierni",totalPatientDays:"Totale giorni del paziente",totalPatientDaysDetailed:"Totale giorni del paziente (dettagliato)",visit:"Visita"}},pricing:{labels:{discountAmount:"Totale sconto",discountPercentage:"Percentuale di sconto",setFee:"Imposta tariffa"},navigation:{}},print:{invoice:{labels:{billedBy:"Fatturato da:",billedDate:"Bill Data:",dateAdmitted:"AMMESSO:",dateDischarged:"SCARICO:",dischargeNotes:"Note di scarico:",patientAddress:"INDIRIZZO:",patientAge:"ETÀ:",patientId:"PAZIENTE #:",patientName:"NOME DEL PAZIENTE:",remarks:"Osservazioni:",spacer:"__________________________________________"},messages:{whereConducted:"Sono stati detratti durante il mio confinamento"},titles:{billingStatement:"ESTRATTO CONTO",patientMember:"Paziente-Stati",patients:"DEL PAZIENTE",relContact:"Relazione / Contatto no."}}},procedures:{buttons:{addMedication:"Aggiungi farmaci"},labels:{medicationUsed:"Medicazione utilizzata"},messages:{saved:"Il record di procedura è stato salvato."},titles:{addChargeItem:"Aggiungi articolo di carica",addMedicationUsed:"Aggiungi medicinali usati",deleteChargeItem:"Cancellare l'elemento di carica",deleteMedicationUsed:"Elimina il farmaco usato",edit:"Modifica la procedura",editChargeItem:"Modifica dell'articolo di carica",editMedicationUsed:"Modifica il farmaco usato",medicationUsed:"Medicazione utilizzata",new:"Nuova procedura",saved:"Procedura salvata"}},reports:{labels:{admissionDate:"Data di ammissione",allProcedures:"Tutte le procedure eseguite",completedBy:"Completato da",dischargeDate:"Data di scarico",examiner:"Esaminatore",images:"Immagini",labs:"Labs",location:"Visita la località",medications:"Farmaci",nextAppointment:"Prossima appuntamento",nextAppointments:"Appuntamenti successivi",notes:{author:"Autore",date:"Data",title:"Gli appunti"},operativePlan:{description:"Descrizione del funzionamento",instructions:"Istruzioni all'ammissione",procedures:"Procedure pianificate",title:"Piano Operativo"},primaryDiagnosis:"Diagnosi primaria",procedures:"Procedure",secondaryDiagnosis:"Diagnosi secondaria",visitDate:"Data di visita",visitType:"Tipo di visita"},messages:{delete:"Sei sicuro di voler eliminare questo rapporto?",saved:"Il rapporto è stato salvato."},titles:{dischargeReport:"Rapporto di scarico",newDischargeReport:"Nuovo rapporto di scarico",newOPDReport:"Nuova relazione OPD",opdReport:"Rapporto OPD",saved:"Il rapporto è stato salvato"}},user:{plusNewUser:"+ nuovo utente",usersPageTile:"Elenco utenti"},visits:{buttons:{addDiagnosis:"Aggiungi la diagnosi",checkIn:"Registrare",checkOut:"Check-out",discharge:"Scarico",newAppointment:"Nuovo appuntamento",newDischargeReport:"Nuovo rapporto di scarico",newOPDReport:"Nuova relazione OPD",newProcedure:"Nuova procedura",newVitals:"Nuovi vitali"},labels:{appointment:"Appuntamento",authoredBy:"Autore di",checkInTime:"Registrare",checkOutTime:"Check-out",createNewPatient:"Crea nuovo paziente",diagnosis:"Diagnosi",examiner:"Esaminatore",finalDiagnosis:"Diagnosi finale / fatturazione",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"Ordini Fatto",ordersNotDone:"N",patientToCheckIn:"Paziente per il check-in",procedure:"Procedura",procedureDate:"Data della procedura",reasonForVisit:"Ragione per visitare",reportType:"Tipo di report",status:"Visita dello stato",statusAdmitted:"Ammesso",statusCheckedIn:"Controllato",statusCheckedOut:"Controllato",statusDischarged:"Licenziato",visitDate:"Data visita",visitInformation:"Visita le informazioni",visitType:"Tipo di visita"},messages:{checkOut:"Sei sicuro di voler verificare {patientName}?",checkedOut:"È stato verificato {patientName}.",discharged:"{patientName} è stato scaricato.",patientCheckedIn:"È stato eseguito il login con {patientName}.",patientCreatedAndCheckedIn:"{patientName} è stato creato e controllato.",visitAndPatientSaved:"La visita e le registrazioni dei pazienti sono state salvate.",visitSaved:"Il record di visita è stato salvato."},navigation:{charges:"Oneri",notes:"Gli appunti",orders:"Ordini",procedures:"Procedure",reports:"Rapporti",vitals:"Organi vitali"},titles:{additionalDiagnoses:"Ulteriori diagnosi",checkOut:"Check paziente",checkedIn:"Paziente controllato",checkedOut:"Paziente controllato",discharged:"Paziente scaricato",editVisit:"Modifica visita",newVisit:"Nuova visita",patientCheckIn:"Check In Paziente",visitSaved:"Visita salvata"}},vitals:{labels:{dateRecorded:"Data registrata",dbp:"DBP",heartRate:"Frequenza cardiaca",height:"Altezza",respiratoryRate:"Frequenza respiratoria",sbp:"SBP",temperature:"Temperatura",weight:"Peso"}}}}),define("hospitalrun/translations/pt-br",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"Rótulo Endereço 1",address2Label:"Rótulo Endereço 2",address3Label:"Rótulo Endereço 3",address4Label:"Rótulo Endereço 4",addressLabel:"Endereço",editTitle:"Opções de Endereço",include1Label:"Rótulo Include 1",include2Label:"Rótulo Include 2",include3Label:"Rótulo Include 3",include4Label:"Rótulo Include 4",messages:{addressSaved:"As opções de endereço foram salvas"},newTitle:"Opções de Endereço",titles:{optionsSaved:"Opções Salvas"}},addressOptions:"Opções de Endereço",customForms:{buttons:{addField:"Adicionar Campo",moveDown:"Mover para Baixo",moveUp:"Mover para Cima",newForm:"+ Novo Formulário",preview:"Visualizar"},labels:{alwaysInclude:"Sempre Incluir",checkbox:"Checkbox",colSpan:"Número de colunas de espaço",columns:"Colunas",customForm:"Formulário Personalizado",dischargeReportFormType:"Relatório de Altas",expenseTo:"Despesa para",formName:"Nome do Formulário",formType:"Tipo do Formulário",header:"Header",incidentFormType:"Incidente",includeOtherOption:"Incluir Outra Opção",labFormType:"Lab",label:"Label",newForm:"Novo Formulário",opdReportFormType:"Relatório de Ambulatório",operativePlanFormType:"Relatório de Plano de Operação",otherOptionLabel:"Label de Outras Opções",patientFormType:"Paciente",property:"Propriedade",radio:"Radio",select:"Dropdown",socialworkFormType:"Serviço Social",text:"Texto",textarea:"Texto Grande",visitFormType:"Visita"},messages:{formSaved:"O formulário {name} foi salvo."},titles:{checkboxValues:"Valores do Checkbox",customForms:"Formularios Personalizados",deleteForm:"Excluir Formulário Personalizado",dropDownValues:"Valores do Dropdown",editCustomForm:"Editar Formulário Personalizado",fields:"Campos",formSaved:"Formulário Salvo",headerValues:"Valor da Linha do Header",newCustomForm:"Novo Formulário Personalizado",radioValues:"Valores do Radio"}},header:{editTitle:"Opções de Header",facilityName:"Nome da Instalação",headerLabel:"Header",headerLine1:"Header Linha 1",headerLine2:"Header Linha 2",headerLine3:"Header Linha 3",logoURL:"URL do Logo",messages:{headerSaved:"A opção do Header foi salva"},newTitle:"Opções de Header",titles:{optionsSaved:"Opções Salvas"}},loadDb:"Carregar BD",loaddb:{displayAlertMessage:"Por favor Selecione o Arquivo para Carregar.",displayAlertTitle:"Selecione o Arquivo para Carregar",editTitle:"Carregando BD",errorDisplayAlertMessage:"O banco de dados não foi carregado. O erro foi: {error}",errorDisplayAlertTitle:"Erro ao carregar",progressMessage:"Por favor aguarde enquanto o seu banco de dados é carregado.",progressTitle:"Carregando Banco de Dados"},lookup:{aisleLocationList:"Localização de Corredores no Inventário",alertImportListMessage:"Por favor Selecione o arquivo para importação.",alertImportListSaveMessage:"A lista de pesquisa foi importada.",alertImportListSaveTitle:"Lista Importdada",alertImportListTitle:"Selecione o arquivo para importação",alertImportListUpdateMessage:"A lista de pesquisa foi salva.",alertImportListUpdateTitle:"Lista Salva",anesthesiaTypes:"Tipos de Anestesia",anesthesiologists:"Anestesiologista",billingCategories:"Categorias de Faturamento",clinicList:"Localização de Clínicas",countryList:"Países",cptCodeList:"Códigos CPT",diagnosisList:"Diagnósticos",edit:{template:{addTitle:"Adicionar Valor",editTitle:"Editar Valor",labelTitle:"Valor",updateButtonTextAdd:"Adicionar",updateButtonTextUpdate:"Atualizar"}},expenseAccountList:"Contas de Despesas",imagingPricingTypes:"Tipos de Preço Imagem",incidentDepartments:"Departamentos do Incidente",inventoryTypes:"Tipos de Inventário",labPricingTypes:"Tipos de Preço Laboratório",pageTitle:"Listas de Pesquisa",patientStatusList:"Lista de Situação do Paciente",physicianList:"Médicos",procedureList:"Procedimentos",procedureLocations:"Localização de Procedimentos",procedurePricingTypes:"Tipos de Preço Procedimento",radiologists:"Radiologista",titles:{deleteLookupValue:"Excluir Valor"},unitTypes:"Tipos de Unidade",vendorList:"Fornecedor",visitLocationList:"Localização dos Visitantes",visitTypes:"Tipos de Visita",wardPricingTypes:"Tipos de Preços Enfermaria",warehouseList:"Locais de Inventário"},lookupLists:"Lista de Pesquisas",roles:{capability:{addAllergy:"Adicionar Alergia",addAppointment:"Adicionar Compromissos",addBillingDiagnosis:"Adicionar Fatura do Diagnóstico",addCharge:"Adicionar Cobrança",addDiagnosis:"Adicionar Diagnóstico",addImaging:"Adicionar Imagem",addIncident:"Adicionar Incidente",addIncidentCategory:"Adicionar Categoria de Incidente",addInventoryItem:"Adicionar Item de Inventário",addInventoryPurchase:"Adicionar Compra de Inventário",addInventoryRequest:"Adicionar Requisição de Inventário",addInvoice:"Adicionar Fatura",addLab:"Adicionar Laboratório",addMedication:"Adicionar Medicação",addNote:"Adicionar Nota",addOperationReport:"Adicionar Relatório de Operação",addOperativePlan:"Adicionar Plano de Operação",addPatient:"Adicionar Paciente",addPayment:"Adicionar Pagamentos",addPhoto:"Adicionar Foto",addPricing:"Adicionar Preço",addPricingProfile:"Adicionar Perfil de Preço",addProcedure:"Adicionar Procedimento",addSocialwork:"Adicionar Rede Social",addVisit:"Adicionar Visita",addVitals:"Adicionar Sinais Vitais",adjustInventoryLocation:"Ajustar Localização de Inventário",admin:"Administração",admitPatient:"Admitir Paciente",appointments:"Compromissos",billing:"Faturamentos",cashier:"Caixa",completeImaging:"Imagem Concluída",completeLab:"Laboratório Concluído",defineUserRoles:"Perfis de Usuários",deleteAppointment:"Excluir Compromisso",deleteDiagnosis:"Excluir Diagnóstico",deleteImaging:"Excluir Imagem",deleteIncident:"Excluir Incidente",deleteIncidentCategory:"Excluir Categoria de Incidente",deleteInventoryItem:"Excluir Item de Inventário",deleteInvoice:"Excluir Fatura",deleteLab:"Excluir Laboratório",deleteMedication:"Excluir Medicação",deleteNote:"Excluir Nota",deletePatient:"Excluir Paciente",deletePhoto:"Excluir Paciente",deletePricing:"Excluir Preço",deletePricingProfile:"Excluir Perfil de Preço",deleteProcedure:"Excluir Procedimento",deleteSocialwork:"Excluir Trabalho Social",deleteVisit:"Excluir Visita",deleteVitals:"Excluir Sinais Vitais",dischargePatient:"Alta do Paciente",editInvoice:"Editar Fatura",fulfillInventory:"Preencher Inventário",fulfillMedication:"Preencher Medicação",generateIncidentReport:"Gerar Relatório de Incidente",imaging:"Imagem",incident:"Incidente",inventory:"Inventário",invoices:"Faturas",labs:"Laboratório",listPaidInvoices:"Lista de Faturas Pagas",loadDb:"Carregar Banco de Dados",manageIncidents:"Gerenciar Incidentes",medication:"Medicação",overrideInvoice:"Substituir Fatura",patientReports:"Relatório do Paciente",patients:"Pacientes",pricing:"Preço",updateConfig:"Atualizar Configurações",visits:"Visita"},messages:{roleSaved:"O perfil {roleName} foi salvo."},titles:{roleSaved:"Perfil Salvo"}},textReplacements:{createNew:"Criar nova abreviação",existingRepl:"Abreviações existentes",noMatches:"Nenhuma substituição combina com {term}",pageTitle:"Abreviações",performExpand:"Pressione Enter para substituir #{from} por '{to}'",possibleExpansions:"Possíveis substituições: {possible}",replDesc:"Quando digitar um texto, essas abreviações permitem que você substitua uma sequência de caracteres curta por uma frase longa.",replaceWith:"Substituir por",toReplace:"Texto a ser substituído"},userRoles:"Perfis de Usuários",users:"Usuários",visitForms:{labels:{followup:"Seguir",form:"Formulário",initial:"Inicial",visitType:"Tipo de Visita"},titles:{visitForms:"Formulários de Visitas"}},workflow:{admissionDepositLabel:"Depósito de Admissão é exigido",clinicPrepaymentLabel:"Pagamento Antecipado da Clínica é exigido",editTitle:"Opções de Workflow",followupPrepaymentLabel:"Pagamento Antecipado do Acompanhamento é exigido",messages:{optionsSaved:"As opções de WorkFlow foram salvas"},newTitle:"Opções de Workflow",outpatientImagingLabel:"Pagamento Antecipado do Ambulatorio de Imagem é exigido",outpatientLabLabel:"Pagamento Antecipado do Laboratório Ambulatorial é exigido",outpatientMedicationLabel:"Pagamento Antecipado do Ambulatorio de Medicação é exigido",titles:{optionsSaved:"Opções Salvas"},workflowLabel:"Workflow"}},alerts:{errorExclamation:"Erro!!!!",pleaseWait:"Por Favor Aguarde",reportError:"Erro Gerando Relatório",warningExclamation:"Atenção!!!!"},allergies:{buttons:{addAllergy:"Adicionar alergia"},labels:{allergyName:"Nome",patientAllergy:"Alergias do paciente"},titles:{addAllergy:"Adicionar alergia",editAllergy:"Editar alergia"}},application:{messages:{sessionExpired:"Sua sessão expirou. Faça login para continuar."},titles:{sessionExpired:"Sessão expirada"}},appointments:{buttons:{newButton:"+ novo compromisso",scheduleSurgery:"+ nova cirurgia"},calendarTitle:"Compromissos",currentScreenTitle:"Lista de Compromisso",editTitle:"Editar Compromisso",labels:{noLocation:"Sem Localização",selectedStartingDate:"Mostrar Compromisso em ou após"},messages:{appointmentSaved:"O compromisso de {patient} foi salvo.",endTimeLaterThanStart:"Por favor, selecione um horário de término mais tarde do que a hora de início."},missed:"Compromissos Esquecidos",newTitle:"Novo Compromisso",searchTitle:"Pesquisar Compromissos",sectionTitle:"Compromissos",thisWeek:"Compromissos dessa Semana",titles:{appointmentSaved:"Compromisso Salvo",editSurgicalAppointment:"Editar cirurgia",newSurgicalAppointment:"Nova cirurgia",theaterSchedule:"Cirurgias"},todayTitle:"Compromissos de Hoje"},billing:{alerts:{noInvoiceFound:"Nenhuma fatura encontrada",noPricingItems:"Nenhum item de preço encontrado.",noPricingProfiles:"Nenhum perfil de preço encontrado."},buttons:{addDeposit:"+ adicionar depósito",addOverride:"Adicionar Substituir",createInvoice:"Criar nova fatura?",newInvoice:"+ nova fatura"},currentScreenTitle:"Faturas",editInvoice:"Editar Fatura",invoiceTitle:"Faturas",labels:{actualCharges:"Cobranças Atuais",discountAmount:"Quantidade de Desconto",discountPercentage:"Porcentagem de Desconto",externalInvoiceNumber:"Fatura Externa #",hmoCom:"HMO/COM",insurance:"Seguro Nacional",paymentProfile:"Perfil de Pagamento",paymentsDeposits:"Pagamentos/Depositos",pricingPanelOverrides:"Substituição e Perfil de Preços",pricingProfile:"Perfil de Preços",setFee:"Definir Taxa"},messages:{flatDiscountMsg:"Há um valor de desconto fixo aplicado a responsabilidade financeiro do paciente de {currency}{discountAmount}.",flatFeeMsg:"Há uma taxa fixa para a responsabilidade financeira do paciente de {currency}{setFee}."},navigation:{allInvoices:"Todas as Faturas",billed:"Faturada",drafts:"Rascunho",paid:"Pago"},newInvoice:"Nova Fatura"},buttons:{add:"Adicionar",addItem:"Adicionar Item",addLineItem:"Adicionar Item de Linha",addValue:"Adicionar Valor",addVisit:"Adicionar Visita",allRequests:"Todas as Requisições",barcode:"Código de Barras",cancel:"Cancelar",clear:"Limpar",close:"Fechar",complete:"Completo",delete:"Excluir",dispense:"Dispensar",edit:"Editar",filter:"Filtrar",fulfill:"Preencher",import:"Importar",loadFile:"Carregar Arquivo",newItem:"+ novo item",newNote:"Nova Nota",newRequest:"Nova Requisição",newRequestPlus:"+ nova requisição",newUser:"Novo Usuário",ok:"Ok",print:"Imprimir",remove:"Remover",returnButton:"Retornar",review:"Review",search:"Pesquisa",showAll:"Mostrar All",showFewer:"Mostrar Menos",update:"Atualizar"},components:{chargesByTypeTab:{charges:"cobranças"},customFormManager:{buttons:{addForm:"Adicionar formulário"}},dateTimePicker:{amHour:"{hour} AM",midnight:"Meia-noite",noon:"Meio-dia",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"Por favor selecione um arquivo de imagem válido."}},operativeProcedures:{buttons:{addProcedure:"Adicionar Procedimento"},labels:{procedure:"Procedimento"},titles:{procedures:"Procedimentos"}},patientOrders:{buttons:{newImaging:"Nova Imagem",newLab:"Novo Laboratório",newMedication:"Nova Medicação"},labels:{imagingOrderType:"Imagem",labOrderType:"Laboratório",medicationOrderType:"Medicação",orderType:"Tipo de Ordem"}},priceList:{charges:"cobranças de {pricingType}"},quantityCalc:{result:"{targetUnit} total: {calculated}"},quantityConv:{conversion:"O que significa contém 1 {name}?",unit:"Unidade"},sortableColumn:{labels:{selectAll:"(Selecionar Todos)"}},takePhoto:{camera:"Câmera",how:"Como você quer adicionar um Foto?",labels:{takeAPicture:"Tirar uma Foto",uploadAFile:"Carregar um arquivo"},photo:"foto",preview:"pré visualização",takePhoto:"Tirar um Foto",uploadFile:"Upload de Arquivo"},upcomingAppointments:{labels:{date:"Data",location:"Local",type:"Tipo",with:"Com"},titles:{upcomingAppointments:"Compromissos Futuros"}}},customForms:{buttons:{addForm:"Adicionar formulário"},labels:{formToAdd:"Formulário para adicionar"},titles:{addCustomForm:"Adicionar Formulário Personalizado"}},dashboard:{needs_user_setup:"Nós recomendamos que você configure uma conta de Usuário.",standalone_welcome:'<h4>Obrigado por baixar HospitalRun</h4><p>Você está executando HospitalRun em modo stand alone. Esse modo permite que você gerencie vários usuários em uma única instância do HospitalRun para desktop/laptop. Isso é ideal para:</p><ul><li>Avaliar o HospitalRun para uma eventual instalação em um servidor.</li><li>Usar a plataforma para gerenciar uma clínica / instalação onde uma única instância é o suficiente.</li></ul><p>Se você está considerando fazer uma instalação multi-device do HospitalRun, nós estamos <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">trabalhando em features</a> que irão permitir que você "evolua" desta instalação única para uma instalação tradicional baseada em cloud / servidor.</p>',title:"O que você gostaria de fazer?"},dates:{long:"{years} ano {months} meses {days} dias",longOmitDays:"{years} ano {months} meses",longOmitDaysPlural:"{years} anos {months} meses",longOmitDaysYears:"{months} meses",longOmitYears:"{months} meses {days} dias",longPlural:"{years} anos {months} meses {days} dias",short:"{years}y {months}m {days}d",shortOmitYears:"{months}m {days}d"},diagnosis:{labels:{activeDiagnosis:"Diagnóstico ativo",date:"Data",diagnosis:"Diagnóstico",secondaryDiagnosis:"Diagnóstico secundário"},titles:{addDiagnosis:"Adicionar diagnóstico",editDiagnosis:"Editar diagnóstico"}},errors:{accepted:"deve ser aceito",blank:"não pode ser branco",confirmation:"{attribute} não corresponde",empty:"não pode ser vazio",equalTo:"deve ser igual à {count}",even:"deve ser até",exclusion:"é reservado",greaterThan:"deve ser maior do que {count}",greaterThanOrEqualTo:"deve ser maior ou igual à {count}",inclusion:"não está na lista",invalid:"é inválido",invalidNumber:"número não é valido",lessThan:"deve ser menor do que {count}",lessThanOrEqualTo:"deve ser menor ou igual à {count}",notANumber:"não é um número",notAnInteger:"deve ser um número inteiro",odd:"deve ser ímpar",otherThan:"deve ser diferente de {count}",present:"pode ser branco",result:"Informe um resultado antes de concluir",tooLong:"é muito longo (quantidade máxima de caracteres é {count} )",tooShort:"é muito curta (quantidade mínima de caracteres é {count})",wrongLength:"o tamanho está errado (são esperados {count} caracteres)"},headings:{chargedItems:"Itens Carregados"},imaging:{alerts:{completedMessage:"A requisição de imagem esta completa.",completedTitle:"Requisição de Imagem Completa",savedMessage:"A requisição de imagem foi salva.",savedTitle:"Requisição de imagem salva"},buttons:{newButton:"+ nova imagem"},labels:{addNewVisit:"--Adicionar novo visitante--",completedBy:"Completada por",radiologist:"Radiologista",requestedNotes:"Notas de Requisição",resultNotes:"Notas de Resultados"},messages:{noCompleted:"Nenhum item completo encontrado."},pageTitle:"Requisição de imagens",sectionTitle:"Imagem",titles:{completedImaging:"Imagem completa",editTitle:"Requisição de edição de imagem",newTitle:"Nova requisição de imagem"}},incident:{buttons:{add:"Adicionar",addForm:"+ Adicionar formulário",addItem:"Adicionar Item",cancel:"Cancelar",delete:"Excluir",download:"Baixar",edit:"Editar",export:"Exportar Relatório",generateRep:"Gerar Relatório",newAttachment:"+ Novo Anexo",newCategory:"+ nova categoria",newIncident:"+ novo incidente",newNote:"+ Nova Nota"},labels:{actions:"Ações",addedBy:"Adicionada por",category:"Categoria",categoryItem:"Item de Categoria",date:"Data",dateRecorded:"Data Cadastro",department:"Departamento",description:"Descrição do Incidente",endDate:"Data da Conclusão",givenBy:"Criado por",howToAddAttachment:"Como você Deseja Adicionar um Anexo?",incidentDate:"Data do Incidente",incidentId:"ID do Incidente",item:"Item",lastUpdated:"Última Atualização",note:"Nota",patientId:"ID do Paciente",patientImpacted:"Paciente impactado",reportType:"Tipo de Relatório",reportedBy:"Reportado por",reportedDate:"Data do Relatório",reportedTo:"Incidente reportado a (Nome completo)",sentinelEvent:"Evento Sentinela",startDate:"Data Início",status:"Status",statusActive:"Ativo",statusClosed:"Fechado",statusFollowup:"Seguir",statusReported:"Reportado",title:"Título",total:"Total",updatedBy:"Atualizado por"},messages:{attachmentFileRequired:"Por favor, carregue um arquivo ou tire uma foto antes de salvar este anexo.",createNew:"Criar um novo incidente?",createNewIncidentCategory:"Criar uma nova Categoria de Incidentes?",fillIn:"Carregar nas opções acima para calcular pontuação",incidentCategorySaved:"A categoria {name} foi salva.",noClosedIncidents:"Nenhum incidente fechado encontrado.",noIncidentCategoriesFound:"Nenhuma Categoria de Incidentes encontrada.",noIncidents:"Nenhum Incidente encontrado",saved:"O relatório de incidente foi salvo.",selectExistingPatient:"Por favor selecione um paciente existente ou deixe esse campo em branco."},titles:{addAttachment:"Adicionar Anexo",addCategoryItem:"Adicionar Categoria",addNote:"Adicionar Nota",attachments:"Anexos",closed:"Incidentes Fechados",current:"Atual",deleteAttachment:"Excluir Anexo",deleteIncident:"Excluir Incidente",deleteIncidentCategory:"Excluir Categoria de Incidente",deleteItem:"Excluir Item",deleteNote:"Excluir Nota",editAttachment:"Editar Anexo",editIncident:"Editar Incidente",editIncidentCategory:"Editar Categoria de Incidente",editNote:"Editar Nota",general:"Informação Principal",history:"Histórico",incidentCategories:"Categorias de Incidentes",incidentCategoryItem:"Item da Categoria de Incidente",incidentCategoryName:"Nome da Categoria de Incidente",incidentCategorySaved:"Categoria de Incidente Salva",incidentSaved:"Incidente Salvo",incidents:"Incidentes",incidentsByCategory:"Incidentes por Categoria",incidentsByDepartment:"Incidentes por Departamento",newIncident:"Novo Incidente",newIncidentCategory:"Nova Categoria de Incidente",notes:"Notas",reports:"Relatórios"}},inventory:{edit:{cost:"Preço por Unidade:",delivered:"Entregue a:",location:"Localização Ajustada:",prescription:"Prescrição para:",pulled:"Retirado de:",quantity:"Quantidade na Conclusão:",reason:"Motivo:",returned:"Devolvido do Paciente:",transferredFrom:"Transferido de:",transferredTo:"Transferido para:"},labels:{action:"Ação",add:"Adicionar",addAdjustmentType:"Adicionar",adjust:"Ajustar",adjustmentDate:"Data de Ajuste",adjustmentFor:"Ajuste Para",adjustmentType:"Tipo de Ajuste",aisle:"Corredor",aisleLocation:"Localização do Corredor",allInventory:"Todo Inventário",allItems:"Todos os Itens",availableQuantity:"{quantity} disponível",billTo:"Conta Para",consumePurchases:"Compras para Consumo",consumptionRate:"Taxa de Consumo",cost:"Preço",costPerUnit:"Preço por Unidade",crossReference:"Referência Cruzada",currentQuantity:"Quantidade Atual",dateCompleted:"Data de Conclusao",dateEffective:"Data Efetiva",dateEnd:"Data de Término",dateReceived:"Data Recebida",dateStart:"Data de Início",dateTransferred:"Data Transferida",daysLeft:"Dias Restantes",deleteItem:"Deletar Item",deliveryAisle:"Corredor de Entrega",deliveryLocation:"Local de Entrega",details:"Detalhes",distributionUnit:"Centro de Distribuição",editItem:"Editar Item",expense:"Despesa para",expirationDate:"Data de Expiração",fulfillRequest:"Preencher Requisição",fulfillRequestNow:"Preencher Requisição Agora",gift:"Doação em Espécie",giftInKindNo:"N",giftInKindYes:"S",giftUsage:"Uso de Doação em Espécie",inventoryConsumed:"Inventário Consumido",inventoryItem:"Item de Inventário",inventoryObsolence:"Obsolescência de Inventário",invoiceItems:"Itens da Fatura",invoiceLineItem:"Item de Linha da Fatura",invoiceNumber:"Número da Fatura",item:"Item",itemNumber:"Número de Item",items:"Itens",location:"Localização",locations:"Localizações",markAsConsumed:"Marcar como Consumido",name:"Nome",newItem:"Novo Item",originalQuantity:"Quantidade Original",print:"Imprimir",printBarcode:"Imprimir Código Barras",printer:"Impressora",pullFrom:"Retirar de",purchaseCost:"Custo da Compra",purchaseInfo:"Informações da Compra",purchases:"Compras",quantity:"Quantity ({unit})",quantityAvailable:"Quantity Available",quantityOnHand:"Quantidade on Hand",quantityRequested:"Quantidade Solicitada",rank:"Classificação",reason:"Motivo",remove:"Remover",removeAdjustmentType:"Remover",reorderPoint:"Ponto de Reabastecimento",requestedItems:"Itens Solicitados",returnAdjustmentType:"Retornar",returnToVendorAdjustmentType:"Retornar para Venda",salePricePerUnit:"Preço de Venda por Unidade",save:"Salvar",serialNumber:"Lote/Número de Série",total:"Total",totalCost:"Preço Total",totalReceived:"Total Recebido: {total}",transaction:"Transação",transactions:"Transações",transfer:"Transferir",transferFrom:"Transferir de",transferTo:"Transferir para Localização",transferToAisle:"Transferir para Localização de Corredor",unit:"Unidade",unitCost:"Preço Unitário",vendor:"Fornecedor",vendorItemNumber:"Número de Item do Fornecedor",writeOffAdjustmentType:"Eliminar",xref:"RefX"},messages:{adjust:"Por favor ajustar as quantidades no(s) local(is) apropriado(s) da conta para a diferença de {difference}.",createRequest:"Criar uma nova requisição?",itemNotFound:"O item de inventário <strong>{item}</strong> não pode ser encontrado.<br>Se você quiser criar um novo item de inventário, preencha as informações abaixo.<br>Caso o contrário, pressione o botão Cancelar para voltar.",loading:"Carregando transações ...",noItems:"Nenhum item encontrado.",noRequests:"Nenhuma requisição encontrada.",purchaseSaved:"As compras de inventário foram salvas com sucesso.",quantity:"A quantidade total de <strong>({quantity})</strong> não corresponde com a quantidade total nas localizações<strong>({locationQuantity})</strong>.",removeItem:"Você tem certeza de que deseja remover este item desta fatura?",removeItemRequest:"Você tem certeza de que deseja remover este item desta requisição?",requestFulfilled:"A requisição de invenário foi preenchida.",requestUpdated:"A requisição de invenário foi atualizada.",warning:"Por favor preencher campos obrigatório (marcado(s) com *) e corrija os erros antes de adicionar."},reports:{adjustment:"Ajuste Detalhado",daysSupply:"Dias de Abastecimento Deixado no Estoque",expenseDetail:"Despesas Detalhadas",expenseSum:"Sumário de Despesas",expiration:"Data de Expiração",export:"Exportar Relatório",fields:"Campos para Incluir",finance:"Sumário Financeiro",generate:"Gerar Relatório",invLocation:"Inventário por Localização",invValuation:"Valorização do Inventário",purchaseDetail:"Compras Detalhadas",purchaseSum:"Sumário de Compras",reportType:"Tipo de Relatório",rows:{adjustments:"Ajustes",adjustmentsTotal:"Total dos Ajustes",balanceBegin:"Balanço Inicial",balanceEnd:"Balanço Final",category:"Categoria",consumed:"Consumidos",consumedGik:"Doações Consumidas",consumedGikTotal:"Total Doações Consumidas",consumedPuchases:"Compras Consumidas",consumedPurchasesTotal:"Total Compras Consumidas",consumedTotal:"Total Consumido",errInFinSum:"Erro em _generateFinancialSummaryReport: ",errInFindPur:"Erro em _findInventoryItemsByPurchase: ",errInFindReq:"Erro em _findInventoryItemsByRequest: ",expensesFor:"Despesas para: ",noAccount:"(Sem Conta)",subtotal:"Subtotal: ",subtotalFor:"Subtotal para {category} - {account}: ",total:"Total: ",totalFor:"Total para {var}: ",totalPurchases:"Total de Compras",transfer1:"{quantity} de {location}",trasnfer2:"De: {source} Para: {target}"},stockTransferDetail:"Tranferências de Estoque Detalhadas",stockTransferSum:"Sumário de Tranferências de Estoque",stockUsageDetail:"Uso de Estoque Detalhado",stockUsageSum:"Sumário de Uso de Estoque",titleDateRange:"{name} Relatório {startDate} - {endDate}",titleSingleDate:"{name} Relatório {date}"},titles:{addPurchase:"Adicionar Compra",addRequest:"Nova Requisição",adjustment:"Ajuste",editPurchase:"Editar Compra",editRequest:"Editar Requisição",inventoryItem:"Novo Item de Inventário",inventoryReport:"Relatório de Inventário",purchaseSaved:"Compras de Invenários Salvas",quickAddTitle:"Novo Item de Inventário",removeItem:"Remover Item",requestFulfilled:"Requisição Preenchida",requestUpdated:"Requisição Atualizada",transfer:"Itens de Transferência",warning:"Atenção!!!!!"}},labels:{action:"Ação",actions:"Ações",addNewOutpatientVisit:"--Adicionar Nova Visita Ambulatorial--",address:"Endereço",age:"Idade",allDay:"Todo Dia",allItems:"Todos os itens",amount:"Quantidade",anesthesia:"Anestesia",assisting:"Ajudante",balanceDue:"Saldo Devedor",billDate:"Data da Conta",billTo:"Conta Para",category:"Categoria",completed:"Completo",country:"País",cptcode:"Código CPT*",creditTo:"Crédito Para",currencySymbol:"R$",date:"Data",dateCompleted:"Data da Conclusão",dateOfBirth:"Data de Nascimento",dateOfBirthShort:"DtNasc",datePaid:"Data de Pagamento",dateRequested:"Data da Requisição",delete:"Excluir",deleteRequest:"Excluir Requisição",deleteUser:"Excluir Usuário",department:"Departamento",description:"Descrição",discount:"Desconto",displayName:"Nome de Exibição",docRead:"Documentos Lidos",docWritten:"Documentos Escritos",edit:"Editar",editUser:"Editar Usuário",email:"Email",endDate:"Data de Término",endTime:"Hora de Término",excess:"Excesso",expenseTo:"Despesa Para",fileLoadSuccessful:"Arquivo Carregado com Sucesso",fileName:"Arquivo Carregado com Sucesso",fileToLoad:"Carregar Arquivo",from:"De",fulfill:"Preencha",fulfillRequest:"Preencha a Requisição",fulfillRequestNow:"Preencha a Requisição Agora",fulfilled:"Preenchido",grandTotal:"Total Geral",id:"Id",imageOrders:"Pedido de Imagem",imagingType:"Tipo de Imagem",importFile:"Importar Arquivo",invoiceId:"ID da Fatura",labOrders:"Pedidos de Laboratório",lineItems:"Itens de Linha",loading:"Carregando",location:"Localização",lookupType:"Tipo de Pesquisa",medication:"Medicação",name:"Nome",newItem:"+ novo item",newUser:"Novo Usuário",note:"Note",notes:"Notas",number:"Número",on:"ligado",password:"Senha",patient:"Paciente",payments:"Pagamentos",physician:"Médico",prescriber:"Médico Responsável pela Prescrição",prescription:"Prescrição",prescriptionDate:"Data da Prescrição",price:"Preço",print:"Imprimir",procedures:"Procedimentos",provider:"Fornecedor",pullFrom:"Puxar De",quantity:"Quantidade",remarks:"Observações",requestedBy:"Requisitado por",requestedOn:"Solicitado em",requests:"Requisições",result:"Resultado",results:"Resultados",role:"Papel",search:"Pesquisa",sex:"Sexo",startDate:"Data de Início",startTime:"Hora Início",status:"Situação",takenBy:"Tirado por",to:"Para",total:"Total",type:"Tipo",userCanAddNewValue:"O usuário pode adicionar novos valores",username:"Usuário",value:"Valor",view:"Visualizar",visit:"Visita",with:"Com"},labs:{alerts:{requestCompletedMessage:"Requisição de laboratório foi concluída.",requestCompletedTitle:"Requisições de Laboratório Concluída",requestSavedMessage:"A requisição de laboratório foi salva.",requestSavedTitle:"Requisição de Laboratório Salva"},buttons:{newButton:"+ novo laboratório"},completedTitle:"Laboratórios Concluídos",deleteTitle:"Excluir Requisição",editTitle:"Editar Requisição de Laboratório",labels:{addNewVisit:"--Adicionar Nova Visita--",labType:"Tipo de Laboratório"},messages:{createNewRecord:"Criar novo registro?",noCompleted:"Items concluídos não econtrados.",noItemsFound:"Nenhum laboratório encontrado."},newTitle:"Nova Requisição de Laboratório",requestsTitle:"Requisições de Laboratório",sectionTitle:"Laboratório"},languageName:"Portugues (Brasileiro)",loading:{messages:{0:"A velocidade de vôo borboleta superior é de 12 milhas por hora. Alguns meses pode voar 25 milhas por hora!",1:"As corujas são os únicos pássaros que podem ver a cor azul.",10:"Sua língua é o único músculo em seu corpo qu está ligado apenas em uma extremidade.",11:"Camelos tem três pálpebras para se protegerem das tempestades de areia.",2:"Os gatos têm mais de 100 sons vocais; cachorros têm apenas 10.",3:"Os Humanos usam um total de 72 músculos diferentes na fala.",4:"Mais de 1.000 idiomas diferentes são falados no continente africano",5:"Uma eritrofobo é alguém que fica vermelho facilmente.",6:"A fobia mais comum do mundo é a Odinofobia que é o medo da dor.",7:"Seu corpo utiliza 300 músculo para manter o equilíbrio quando você está parado.",8:"Alguns sapos podem ser congelados e depois de serem descongelados continuarem a viver.",9:"Nossos olhos estão sempre do mesmo tamanho de quando nascemos, mas nossas orelhas e nariz nunca param de crescer."},progressBar:{progress:"{progressBarValue}% concluído"}},login:{labels:{password:"Senha",signIn:"Entrar",username:"Usuário"},messages:{error:"Nome de usuário ou senha está incorreta.",offlineError:"Não é possível logar enquanto estiver offline. Por favor estabilize a conexão com a rede e tente logar-se novamente.",signIn:"Entrar"}},medication:{alerts:{fulfilledTitle:"Requisição de Medicação Preenchido",returnedMessage:"A medicação foi marcada como retornada.",returnedTitle:"Medicação Retornada",savedMessage:"O registro de medicação foi salvo.",savedTitle:"Requisição de Medicação foi Salva"},buttons:{dispenseMedication:"dispensar medicação",newButton:"+ nova requisição",returnMedication:"retorno de medicação"},labels:{adjustmentDate:"Data de Ajuste",creditToAccount:"Crédito na Conta",quantityDispensed:"Quantidade Dispensada",quantityDistributed:"Quantidade Distribuída",quantityRequested:"Quantidade Requisitada",quantityToReturn:"Quantidade Retornada",refills:"Recargas",returnAisle:"Corredor de Retorno",returnLocation:"Localização de Retorno",returnReason:"Razão/Notas de Retorno"},messages:{createNew:"Criar uma nova requisição de medicação?"},pageTitle:"Requisição de Medicação",returnMedication:"Retorno de Medicação",sectionTitle:"Medicação",titles:{completedMedication:"Medicação Concluída",editMedicationRequest:"Editar Requisição de Medicação",newMedicationRequest:"Nova Requisição de Medicação"}},messages:{createNewRecord:"Criar uma nova gravação?",createNewUser:"Criar um novo usuário?",delete:"Você têm certeza de que quer excluir {name}?",delete_plural:"Você têm certeza de que quer excluir {name}?",delete_singular:"Você têm certeza de que quer excluir {name}?",forAuthorizedPersons:"Este relatório é somente para pessoas autorizadas.",newPatientHasToBeCreated:"Um novo paciente precisa ser criado... Por favor aguarde...",noHistoryAvailable:"Histórico não disponível.",noItemsFound:"Nenhum item encontrado",noNotesAvailable:"Nenhuma nota clinica adicional está diponível para essa visita.",noUsersFound:"Nenhum usuário encontrado.",onBehalfOf:"em nome de",reportError:"Um erro foi encontrado enquanto o relatório solicitado era gerado. Por favor entre em contato com o administrador do seu sistema e fale sobre este erro.",requiredFieldsCorrectErrors:"Por favor preencha os campos obrigatórios (marcados com *) e corrija os erros antes de salvar.",saveActionException:"Ocorreu um erro durante do salvamento de: {message}",sorry:"Desculpe, algo deu errado...",userHasBeenSaved:"O usuário foi salvo.",userSaved:"Usuário Salvo"},models:{appointment:{labels:{allDay:"O dia todo",appointmentDate:"Data",appointmentType:"Tipo",endDate:"Data Fim",location:"Local",notes:"Notas",patient:"Paciente",provider:"Acompanhante",startDate:"Data Início",status:"Status",type:"Tipo"},names:{plural:"compromissos",singular:"compromisso"}},attachment:{names:{plural:"anexos",singular:"anexo"}},form:{names:{plural:"formulários",singular:"formulário"}},imaging:{names:"imagem",request:{plural:"solicitações de imagem",singular:"solicitação de imagem"}},incident:{names:{plural:"incidentes",singular:"incidente"}},item:{names:{plural:"itens",singular:"item"}},lab:{names:{plural:"laboratórios",singular:"laboratório"},request:{plural:"solicitações de laboratório",singular:"solicitação de laboratório"}},medication:{names:{plural:"medicações",singular:"medicação"},request:{plural:"solicitações de medicação",singular:"solicitação de medicação"}},note:{names:{plural:"notas",singular:"nota"}},patient:{labels:{name:"Nome"},names:{singular:"Paciente"}},procedure:{names:{plural:"procedimentos",singular:"procedimento"}},user:{names:{plural:"usuários",singular:"usuário"}},visit:{names:{plural:"visitas",singular:"visita"}},vital:{names:{plural:"sinais vitais",singular:"sinal vital"}}},navigation:{about:"Sobre HospitalRun",actions:{login:"Entrar",logout:"Sair",selectLanguage:"Selecione o idioma"},administration:"Administração",billing:"Faturamento",imaging:"Imagem",incident:"Incidente",inventory:"Inventário",labs:"Laboratórios",medication:"Medicação",messages:{logoutFailed:"Não foi possível deslogar neste momento. O logout não está disponível enquanto estiver offline."},patients:"Pacientes",scheduling:"Agenda",subnav:{actions:"Ações",addAppointment:"Adicionar Compromisso",addressFields:"Campos de Endereço",admittedPatients:"Pacientes Admitidos",appointmentSearch:"Pesquisar compromissos",appointmentsCalendar:"Compromissos",appointmentsThisWeek:"Compromissos dessa Semana",cashier:"Caixa",completed:"Concluídos",currentIncidents:"Incidentes Atuais",customForms:"Formulários Personalizados",dispense:"Dispensar",history:"Histórico",incidentCategories:"Categorias de Incidentes",inventoryReceived:"Inventário Recebido",inventoryReceivedPlus:"+ Inventário Recebido",invoices:"Faturas",items:"Itens",loadDB:"Carregar BD",lookupLists:"Listas de Pesquisa",newIncident:"Novo Incidente",newInvoice:"Nova Fatura",newPatient:"Novo Paciente",newRequest:"Nova Requisição",newUser:"Novo Usuário",outpatient:"Ambulatório",patientListing:"Lista de Pacientes",priceProfiles:"Perfis de Preços",prices:"Preços",printHeader:"Imprimir Header",reports:"Relatórios",requests:"Requisições",returnMedication:"Retorno de Medicação",scheduleSurgery:"Agendar Cirurgia",textReplacements:"Abreviações",theaterSchedule:"Agenda de Cirurgias","today'sAppointments":"Compromissos de Hoje",userRoles:"Perfis de Usuário",users:"Usuários",workflow:"Workflow"},titles:{logoutFailed:"Falha ao Deslogar"}},operationReport:{labels:{additionalNotes:"Notas adicionais",assistant:"Assistente",caseComplexity:"Complexidade do caso",operationDescription:"Descrição da operação",preOpPrimaryDiagnosis:"Pre-op diagnóstico primário",preOpSecondaryDiagnosis:"Pre-op diagnóstico secundário",surgeon:"Cirurgião",surgeryDate:"Data da cirurgia"},messages:{reportSaved:"O relatório da operação foi salvo."},titles:{editTitle:"Editar relatório de operação",newTitle:"Novo relatório da operação",reportSaved:"Relatório salvo"}},operativePlan:{buttons:{completePlan:"Plano completo"},labels:{additionalNotes:"Notas adicionais",admissionInstructions:"Instruções após admissão",caseComplexity:"Complexidade do caso",completedStatus:"Completo",droppedStatus:"Desistiu",operationDescription:"Descrição da operação",plannedStatus:"Planejado",status:"Estado",surgeon:"Cirurgião"},messages:{planCompleted:"O plano de operação foi concluído. Agora você será direcionado para o relatório de operação.",planSaved:"O plano de operação foi salvo."},titles:{editTitle:"Editar plano de operação",newTitle:"Novo plano de operação",planCompleted:"Plano completo",planSaved:"Plano salvo"}},patients:{buttons:{addContact:"Adicionar Contato",addExpense:"Adicionar Despesa",addFamilyMember:"Adicionar Membro Familiar",addOperativePlan:"Adicionar Plano de Operação",backToPatients:"Voltar para Lista de Pacientes",download:"Baixar",editOperativePlan:"Editar Plano de Operação",newAppointment:"Novo Compromisso",newImaging:"Nova Imagem",newLab:"Novo Laboratório",newMedication:"Nova Medicação",newPatient:"+ novo paciente",newPhoto:"Nova Foto",newVisit:"Nova Visita",patientCheckIn:"Check In do Paciente",scheduleSurgery:"Marcar cirurgia"},labels:{admissionDate:"Data de Admissão",admit:"Admitir",bloodType:"Tipo Sanguíneo",caption:"Rúbrica",civilStatus:"Estado Civil",clinic:"Site(Filial) da Clínica",contacts:"Contatos",cost:"Custo",dateOfBirth:"Data de Nascimento",dateProcessed:"Data de Processamento",dischargeDate:"Data de Pagamento",dob:"DatNasc",education:"Educação",email:"Email",externalPatientId:"ID de Paciente Externo",firstName:"Primeiro Nome",income:"Renda",insurance:"Seguro",lastName:"Último Nome",middleName:"Nome do meio",monthlyCost:"Custo Mensal",occupation:"Ocupação",operativePlan:"Plano de Operação",parent:"Responsável Legal",patientDays:"Dias do Paciente",patientType:"Tipo de Paciente",patientTypeCharity:"Caridade",patientTypePrivate:"Privado",phone:"Telefone",placeOfBirth:"Local de Nascimento",primaryDiagnosis:"Diagnósticos Primários",referredBy:"Indicado Por",referredDate:"Data de Indicação",relationship:"Relação com Paciente",relationships:"Relação",religion:"Religião",secondaryDiagnosis:"Diagnósticos Secundários",sex:"Sexo",sexNotEntered:"Sexo não inserido",sources:"Fontes",status:"Situação do Paciente",totalMontlyExpense:"Total de Despesas Mensais"},messages:{areYouSureDelete:"Você tem certeza que deseja excluir este(a) {object}?",createNewPatient:"Criar novos registro de paciente?",deletingPatient:"Excluindo paciente e relatórios associados",noPatientsFound:"Nenhum paciente encontrado.",notFoundQuickAdd:"O paciente <strong>{patientFullName}</strong> não pode ser encontrato.  Se você deseja cadastras um novo paciente, preencha as informações abaixo.  Caso contrário clique em Cancelar para voltar.",photoFileRequired:"Por favor tire uma foto ou carregue um arquivo antes de salvar esta foto.",savedPatient:"O registro de paciente para {displayName} foi salvo."},navigation:{appointments:"Compromissos",general:"Geral",history:"Histórico",imaging:"Imagem",labs:"Laboratórios",medication:"Medicação",photos:"Fotos",socialWork:"Assitência Social",visits:"Visitas"},notes:{newNote:"Nova Nota para",onBehalfOfCopy:"em nome de",onBehalfOfLabel:"Em Nome de",pleaseSelectAVisit:"Por favor selecione uma visita",updateNote:"Atualizando Nota de"},titles:{addContact:"Adicionar Contato",addPhoto:"Adicionar Foto",additionalContacts:"Contatos Adicionais",admissionsDetail:"Detalhes de Admissão",admissionsSummary:"Sumário de Admissões",admittedPatients:"Pacientes Admitidos",delete:"Excluir Paciente",deleteContact:"Excluir Contato",deleteExpense:"Excluir Despesa",deleteFamilyMember:"Excluir Membro Familiar",deletePatientRecord:"Excluir Registro do Paciente",deletePhoto:"Excluir Foto",diagnosticTesting:"Teste de Diagnóstico",dischargesDetail:"Detalhes da alta",dischargesSummary:"Sumário de Altas",edit:"Editar Paciente",editPhoto:"Editar Foto",expenses:"Despesas",familyInfo:"Informação Familiar",familyInformation:"Informação Familiar",new:"Novo Paciente",outpatientsForDate:"Pacientes no ambulatório para {visitDate}",patient:"Relatório de Paciente",patientListing:"Lista de Pacientes",patientReport:"Relatório do Paciente",patientStatus:"Status do Paciente",proceduresDetail:"Detalhes do Paciente",proceduresSummary:"Sumário de Procedimentos",savedPatient:"Paciente Salvo",socialWork:"Despesa",todaysOutpatients:"Pacientes no Ambulatório Hoje",totalPatientDays:"Total de Dias do paciente",totalPatientDaysDetailed:"Total de Dias do paciente (Detalhado)",visit:"Visita"}},pricing:{labels:{discountAmount:"Quantia de Desconto",discountPercentage:"Porcentagem de Desconto",setFee:"Definir Taxa"},navigation:{allPricingItems:"Preço de Todos os Itens",imagePricing:"Preço da Imagem",labPricing:"Preço do Laboratório",pricingProfiles:"Perfis de Preço",procedurePricing:"Preço do Procedimento",wardPricing:"Preço da Enfermaria"},sectionTitle:"Preços"},print:{invoice:{labels:{billedBy:"Faturado por:",billedDate:"Data de Faturamento:",dateAdmitted:"ADMITIDO:",dateDischarged:"PAGAMENTO:",dischargeNotes:"Notas de Pagamento:",patientAddress:"ENDEREÇO:",patientAge:"IDADE:",patientId:"PACIENTE #:",patientName:"NOME DO PACIENTE:",remarks:"Observações:",spacer:"__________________________________________"},messages:{whereConducted:"foram deduzidos durante minha internação"},titles:{billingStatement:"DECLARAÇÃO DO FATURAMENTO",patientMember:"Paciente-Membro",patients:"DO PACIENTE",relContact:"Relações/Contato"}}},procedures:{buttons:{addMedication:"Adicionar Medicação"},labels:{medicationUsed:"Medicação Usada"},messages:{saved:"O registro de procedimento foi salvo."},titles:{addChargeItem:"Adicionar Item de Cobrança",addMedicationUsed:"Adicionar Medicação Usada",deleteChargeItem:"Excluir Item de Cobrança",deleteMedicationUsed:"Excluir Medicação Usada",edit:"Editar Procedimento",editChargeItem:"Editar Item de Cobrança",editMedicationUsed:"Editar Medicação Usada",medicationUsed:"Medicação Usada",new:"Novo Procedimento",saved:"Procedimento Salvo"}},reports:{labels:{admissionDate:"Data de Admisssão",allProcedures:"Todos os Procedimentos Realizados",completedBy:"Cadastrado por",dischargeDate:"Data da Alta",examiner:"Examinador",images:"Imagens",labs:"Laboratórios",location:"Local de Visita",medications:"Medicações",nextAppointment:"Próximo Compromisso",nextAppointments:"Próximos Compromissos",notes:{author:"Autor",date:"Data",title:"Notas"},operativePlan:{description:"Descrição da Operação",instructions:"Instruções sobre Admissão",procedures:"Procedimentos Planejados",title:"Plano de Operação"},primaryDiagnosis:"Diagnóstico Primário",procedures:"Procedimentos",secondaryDiagnosis:"Diagnóstico Secundário",visitDate:"Data da Visita",visitType:"Tipo de Visita"},messages:{delete:"Você têm certeza que deseja excluir este relatório?",saved:"O relatório foi salvo."},titles:{dischargeReport:"Relatório de Alta",newDischargeReport:"Novo Relatório de Alta",newOPDReport:"Novo Relatório de Ambulatório",opdReport:"Relatório de Ambulatório",saved:"Relatório salvo"}},user:{plusNewUser:"+ novo usuário",usersPageTile:"Lista de Usuários"},visits:{buttons:{addDiagnosis:"Adicionar Diagnóstico",checkIn:"Entrada",checkOut:"Saída",discharge:"Alta",newAppointment:"Novo Compromisso",newDischargeReport:"Novo Relatório de Alta",newOPDReport:"Novo Relatório de Ambulatório",newProcedure:"Novo Procedimento",newVitals:"Novos Sinais Vitais"},labels:{appointment:"Compromisso",authoredBy:"Autorizado Por",checkInTime:"Entrada",checkOutTime:"Saída",createNewPatient:"Criar Novo Paciente",diagnosis:"Diagnósticos",examiner:"Examinador",finalDiagnosis:"Diagnósticos de Finais/Faturamento",haveAppointment:"S",haveDoneOrders:"S",noAppointment:"N",ordersDone:"Ordens Prontas",ordersNotDone:"N",patientToCheckIn:"Paciente a dar Entrada",procedure:"Procedimentos",procedureDate:"Data do Procedimento",reasonForVisit:"Motivo da Visita",reportType:"Tipo do relatório",status:"Situação de Visita",statusAdmitted:"Admitido",statusCheckedIn:"Entrou",statusCheckedOut:"Saiu",statusDischarged:"Deu Alta",visitDate:"Data da Visita",visitInformation:"Imformação de Visita",visitType:"Tipo de Visita"},messages:{checkOut:"Você têm certeza que quer dar saída de {patientName}?",checkedOut:"{patientName} deu saída.",discharged:"{patientName} recebeu alta.",patientCheckedIn:"{patientName} deu entrada.",patientCreatedAndCheckedIn:"{patientName} foi criado e deu entrada.",visitAndPatientSaved:"Os registros de visita e paciente foram salvos.",visitSaved:"O registro de visita foi salvo."},navigation:{charges:"Cobranças",notes:"Notas",orders:"Ordens",procedures:"Procedimentos",reports:"Relatórios",vitals:"Sinais Vitais"},titles:{additionalDiagnoses:"Diagnósticos Adicionais",checkOut:"Saída de Paciente",checkedIn:"Paciente deu Entrada",checkedOut:"Paciente deu Saída",discharged:"Paciente recebeu Alta",editVisit:"Editar Visita",newVisit:"Nova Visita",patientCheckIn:"Entrada de Paciente",visitSaved:"Visita Salva"}},vitals:{labels:{dateRecorded:"Data de Gravação",dbp:"PAD",heartRate:"Frequência Cardíaca",height:"Altura",respiratoryRate:"Frequência Respiratória",sbp:"PAS",temperature:"Temperatura",weight:"Peso"}}}}),define("hospitalrun/translations/ru",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{addressLabel:"Адрес",editTitle:"Параметры адреса",messages:{addressSaved:"Адрес успешно сохранён"},newTitle:"Параметра адреса",titles:{optionsSaved:"Параметры сохранены"}},addressOptions:"Параметры адреса",customForms:{buttons:{addField:"Добавить поле",moveDown:"Переместить ниже",moveUp:"Переместить выше",newForm:"Новая форма",preview:"Предпросмотр"},labels:{alwaysInclude:"Всегда включать",checkbox:"Флажок",colSpan:"Количество колонок в диапазоне",columns:"Колонки",customForm:"Своя форма",dischargeReportFormType:"Отчёт о расходах",expenseTo:"Расходы на",formName:"Название формы",formType:"Тип формы",header:"Заголовок",incidentFormType:"Инцидент",includeOtherOption:"Включить другой вариант",labFormType:"Лаборатория",label:"Метка",newForm:"Новая форма",opdReportFormType:"Амбулаторный отчёт",operativePlanFormType:"Оперативный план и отчёт",otherOptionLabel:"Other option Label",patientFormType:"Пациент",property:"Свойство",radio:"Вариант",select:"Список",socialworkFormType:"Социальная работа",text:"Текстовая строка",textarea:"Текстовое поле",visitFormType:"Приём"},messages:{formSaved:"форма сохранена"},titles:{deleteForm:"удалить форму",editCustomForm:"редактировать форму",fields:"поля",formSaved:"форма сохранена",newCustomForm:"новая форма"}},header:{editTitle:"изменить заголовок",logoURL:"URL логотипа",messages:{headerSaved:"заголовок сохранён"},titles:{optionsSaved:"варианты сохранены"}},loaddb:{},lookup:{edit:{template:{}},titles:{}},roles:{capability:{},messages:{},titles:{}},textReplacements:{},visitForms:{labels:{},titles:{}},workflow:{messages:{},titles:{}}},alerts:{},allergies:{buttons:{},labels:{},titles:{}},application:{messages:{},titles:{}},appointments:{buttons:{},labels:{},messages:{},titles:{}},billing:{alerts:{},buttons:{},labels:{},messages:{},navigation:{}},buttons:{add:"Добавить",cancel:"Отметить",complete:"Готово",ok:"Ок",returnButton:"Вернутся",update:"Обновить"},components:{chargesByTypeTab:{},customFormManager:{buttons:{}},dateTimePicker:{},imageUpload:{messages:{}},operativeProcedures:{buttons:{},labels:{},titles:{}},patientOrders:{buttons:{},labels:{}},priceList:{},quantityCalc:{},quantityConv:{},sortableColumn:{labels:{}},takePhoto:{labels:{}},upcomingAppointments:{labels:{},titles:{}}},customForms:{buttons:{},labels:{},titles:{}},dashboard:{title:"Что вы хотите сделать?"},dates:{},diagnosis:{labels:{},titles:{}},errors:{},headings:{},imaging:{alerts:{completedMessage:"Запрос на визуализацию удовлетворён.",completedTitle:"Визуализация выполнена",savedMessage:"Запрос на визуализацию сохранён.",savedTitle:"Запрос сохранён"},buttons:{newButton:"+ новый запрос"},labels:{addNewVisit:"--Добавить новый тип осмотра--",radiologist:"Радиолог"},messages:{noCompleted:"Не найдено выполненых запросов."},pageTitle:"Запросы на визуализацию",sectionTitle:"Визуализация",titles:{completedImaging:"Выполненые запросы",editTitle:"Редактировать запрос на визуализацию",newTitle:"Новый запрос на визуализацию"}},incident:{buttons:{},labels:{},messages:{},titles:{}},inventory:{edit:{},labels:{},messages:{createRequest:"Создать новый запрос?",noRequests:"Запросов не найдено."},reports:{rows:{}},titles:{}},labels:{action:"Действие",actions:"Действия",age:"Возраст",completed:"Выполненые",dateCompleted:"Дата Выполнения",dateRequested:"Дата Запроса",edit:"Редактировать",fulfill:"Отправить",id:"Номер",imagingType:"Тип визуализации",name:"Имя",notes:"Заметки",patient:"Пациент",quantity:"Количество",requestedBy:"Запрошен",requestedOn:"Запрошен",requests:"Ожидающие",result:"Результат",results:"Результаты",sex:"Пол",visit:"Осмотр"},labs:{alerts:{},buttons:{},labels:{},messages:{}},languageName:"русский",loading:{messages:{},progressBar:{}},login:{labels:{password:"Пароль",signIn:"Войти",username:"Имя пользователя"},messages:{error:"Неверное имя пользователя или пароль.",signIn:"войдите в систему"}},medication:{alerts:{},buttons:{},labels:{},messages:{},titles:{}},messages:{createNewRecord:"Создать новую запись?",forAuthorizedPersons:"Этот отчет предназначен только для уполномоченных лиц.",noItemsFound:"Ничего не найдено."},models:{appointment:{labels:{},names:{}},attachment:{names:{}},form:{names:{}},imaging:{request:{}},incident:{names:{}},item:{names:{}},lab:{names:{},request:{}},medication:{names:{},request:{}},note:{names:{}},patient:{labels:{},names:{}},procedure:{names:{}},user:{names:{}},visit:{names:{}},vital:{names:{}}},navigation:{actions:{selectLanguage:"Выберите язык"},messages:{},subnav:{},titles:{}},operationReport:{labels:{},messages:{},titles:{}},operativePlan:{buttons:{},labels:{},messages:{},titles:{}},patients:{buttons:{},labels:{},messages:{},navigation:{},notes:{},titles:{}},pricing:{labels:{},navigation:{}},print:{invoice:{labels:{},messages:{},titles:{}}},procedures:{buttons:{},labels:{},messages:{},titles:{}},reports:{labels:{notes:{},operativePlan:{}},messages:{},titles:{}},user:{},visits:{buttons:{},labels:{},messages:{},navigation:{},titles:{}},vitals:{labels:{}}}}),define("hospitalrun/translations/th",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"ที่อยู่ Label 1",address2Label:"ที่อยู่ Label 2",address3Label:"ที่อยู่ Label 3",address4Label:"ที่อยู่ Label 4",addressLabel:"ที่อยู่",editTitle:"ตัวเลือกที่อยู่",include1Label:"รวม Label 1",include2Label:"รวม Label 2",include3Label:"รวม Label 3",include4Label:"รวม Label 4",messages:{addressSaved:"ตัวเลือกที่อยู่ถูกบันทึกแล้ว"},newTitle:"ตัวเลือกที่อยู่",titles:{optionsSaved:"บันทึกตัวเลือกแล้ว"}},addressOptions:"ตัวเลือกที่อยู่",customForms:{buttons:{addField:"ใส่ Field",moveDown:"ย้ายขิ้น",moveUp:"ย้ายลง",newForm:"+ ฟอร์มใหม่",preview:"แสดงตัวอย่าง"},labels:{alwaysInclude:"รวมทุกครั้ง",checkbox:"ช่องทำเครื่องหมาย",colSpan:"จำนวนคอลัมน์ที่ต้องการ Span",columns:"คอลัมน์",customForm:"ฟอร์มทกำหนดเอง",dischargeReportFormType:"รายงานการปลดประจำการ",expenseTo:"ค่าใช้จ่าย",formName:"Form ชือ่",formType:"Form ประเภท",header:"หัวข้อ",incidentFormType:"เหตุการณ์",includeOtherOption:"รวมตัวเลือกอื่น ๆ",labFormType:"Lab",label:"Label",newForm:"Form ใหม่",opdReportFormType:"รายงานผู้ป่วยนอก",operativePlanFormType:"แผนปฏิบัติการและรายงาน",otherOptionLabel:"ฉลากเลือกอื่น ๆ",patientFormType:"ผู้ป่วย",property:"คุณสมบัติ",radio:"วิทยุ",select:"Dropdown",socialworkFormType:"งานสังคมสงเคราะห์",text:"ข้อความ",textarea:"รายละเอียด",visitFormType:"Visit"},messages:{formSaved:"{name} form บันทึกแล้ว."},titles:{checkboxValues:"ค่าช่องทำเครื่องหมาย",customForms:"ฟอร์มที่กำหนดเอง",deleteForm:"ลบแบบฟอร์มที่กำหนดเอง",dropDownValues:"ค่า Dropdown",editCustomForm:"แก้ไขฟอร์มที่กำหนดเอง",fields:"Fields",formSaved:"Form บันทึกแล้ว",headerValues:"จำนวนบรรทัดของหัวเรื่อง",newCustomForm:"ฟอร์มที่กำหนดเองใหม่",radioValues:"จำนวนวิทยุ"}},header:{editTitle:"ตัวเลือกหัวเรื่อง",facilityName:"ชื่อสถานที่",headerLabel:"หัวเรื่อง",headerLine1:"หัวเรื่อง บรรทัดที่ 1",headerLine2:"หัวเรื่อง บรรทัดที่ 2",headerLine3:"หัวเรื่อง บรรทัดที่ 3",logoURL:"โลโก้ URL",messages:{headerSaved:" header options บันทึกแล้ว"},newTitle:"Header Options",titles:{optionsSaved:"Options บันทึกแล้ว"}},loadDb:"โหลด DB",loaddb:{displayAlertMessage:"โปรดเลือกไฟล์ที่จะโหลด",displayAlertTitle:"เลือกไฟล์ที่จะโหลด",editTitle:"โหลด DB",errorDisplayAlertMessage:"ไม่สามารถนำเข้าฐานข้อมูล ข้อผิดพลาดคือ: {error}",errorDisplayAlertTitle:"Error ขณะกำลังโหลด",progressMessage:"โปรดรอขณะโหลดฐานข้อมูลของคุณ",progressTitle:"กำลังโหลดฐานข้อมูล"},lookup:{aisleLocationList:"ที่เก็บสินค้าคงคลังของทางเดิน",alertImportListMessage:"โปรดเลือกไฟล์ที่จะนำเข้า",alertImportListSaveMessage:"มีการนำเข้ารายการค้นหาแล้ว",alertImportListSaveTitle:"นำเข้ารายการแล้ว",alertImportListTitle:"เลือกไฟล์ที่จะนำเข้า",alertImportListUpdateMessage:"รายการค้นหาได้รับการบันทึกแล้ว",alertImportListUpdateTitle:"บันทึกรายการแล้ว",anesthesiaTypes:"ประเภท Anesthesia",anesthesiologists:"Anesthesiologists",billingCategories:"Billing Categories",clinicList:"ที่ตั้ง Clinic",countryList:"ประเทศ",cptCodeList:"รหัส CPT",diagnosisList:"การวินิจฉัย",edit:{template:{addTitle:"ใส่ค่า",editTitle:"แก้ไขค่า",labelTitle:"ค่า",updateButtonTextAdd:"ใส่",updateButtonTextUpdate:"อัพเดท"}},expenseAccountList:"บัญชีค่าใช้จ่าย",imagingPricingTypes:"ประเภทราคาของภาพ",incidentDepartments:"แผนกอุบัติการณ์",inventoryTypes:"ประเภทพื้นที่โฆษณา",labPricingTypes:"ประเภทราคาสำหรับ Lab",pageTitle:"ค้นหารายการ",patientStatusList:"รายชื่อผู้ป่วย",physicianList:"แพทย์",procedureList:"ขั้นตอนการ",procedureLocations:"สถานที่ปฏิบัติงาน",procedurePricingTypes:"ประเภทราคาของขั้นตอน",radiologists:"แพทย์รังสีวิทยา",titles:{deleteLookupValue:"ลบค่า"},unitTypes:"ประเภทหน่วย",vendorList:"ผู้ขาย",visitLocationList:"ไปที่สถานที่",visitTypes:"ไปที่ประเภท",wardPricingTypes:"ประเภทราคาวอร์ด",warehouseList:"พื้นที่โฆษณา"},lookupLists:"ค้นหารายการ",roles:{capability:{addAllergy:"เพิ่มภูมิแพ้",addAppointment:"เพิ่มการนัดหมาย",addBillingDiagnosis:"เพิ่มการวินิจฉัยการเรียกเก็บเงิน",addCharge:"เพิ่มค่าบริการ",addDiagnosis:"เพิ่มการวินิจฉัย",addImaging:"เพิ่มภาพ",addIncident:"เพิ่มเหตุการณ์",addIncidentCategory:"เพิ่มหมวดหมู่เหตุการณ์",addInventoryItem:"เพิ่มสินค้าคงคลัง",addInventoryPurchase:"เพิ่มการสั่งซื้อพื้นที่โฆษณา",addInventoryRequest:"เพิ่มคำขอพื้นที่โฆษณา",addInvoice:"เพิ่มใบแจ้งหนี้",addLab:"เพิ่ม Lab",addMedication:"เพิ่มยา",addNote:"เพิ่มหมายเหตุ",addOperationReport:"เพิ่มรายงานการดำเนินงาน",addOperativePlan:"เพิ่มแผนปฏิบัติการ",addPatient:"เพิ่มผู้ป่วย",addPayment:"เพิ่มการชำระเงิน",addPhoto:"เพิ่มรูปภาพ",addPricing:"เพิ่มราคา",addPricingProfile:"เพิ่มโปรไฟล์ราคา",addProcedure:"เพิ่มขั้นตอน",addSocialwork:"เพิ่มงานสังคมสงเคราะห์",addVisit:"ใส่ Visit",addVitals:"ใส่ Vitals",adjustInventoryLocation:"ปรับตำแหน่งพื้นที่โฆษณา",admin:"การบริหาร",admitPatient:"ยอมรับผู้ป่วย",appointments:"นัดหมาย",billing:"การเรียกเก็บเงิน",cashier:"แคชเชียร์",completeImaging:"ภาพที่สมบูรณ์แบบ",completeLab:"Lab สมบูรณ์แบบ",defineUserRoles:"กำหนดบทบาทผู้ใช้",deleteAppointment:"ลบการนัดหมาย",deleteDiagnosis:"ลบการวินิจฉัย",deleteImaging:"ลบภาพ",deleteIncident:"ลบเหตุการณ์",deleteIncidentCategory:"ลบหมวดหมู่เหตุการณ์",deleteInventoryItem:"ลบรายการพื้นที่โฆษณา",deleteInvoice:"ลบใบแจ้งหนี้",deleteLab:"ลบ Lab",deleteMedication:"ลบยา",deleteNote:"ลบหมายเหตุ",deletePatient:"ลบผู้ป่วย",deletePhoto:"ลบรูปภาพ",deletePricing:"ลบราคา",deletePricingProfile:"ลบโปรไฟล์ราคา",deleteProcedure:"ลบขั้นตอน",deleteSocialwork:"ลบงานสังคมสงเคราะห์",deleteVisit:"ลบการเข้าชม",deleteVitals:"ลบ Vitals",dischargePatient:"ปลดปล่อยผู้ป่วย",editInvoice:"แก้ไขใบกำกับสินค้า",fulfillInventory:"ปฏิบัติตามพื้นที่โฆษณา",fulfillMedication:"ปฏิบัติตามยา",generateIncidentReport:"สร้างรายงานเหตุการณ์",imaging:"การถ่ายภาพ",incident:"อุบัติการณ์",inventory:"สินค้าคงคลัง",invoices:"ใบแจ้งหนี้",labs:"Labs",listPaidInvoices:"รายการใบแจ้งหนี้ที่ชำระแล้ว",loadDb:"โหลดฐานข้อมูล",manageIncidents:"จัดการเหตุการณ์",medication:"ยา",overrideInvoice:"แทนที่คำสั่งซื้อ",patientReports:"รายงานผู้ป่วย",patients:"ผู้ป่วย",pricing:"การตั้งราคา",updateConfig:"อัปเดตการกำหนดค่า",visits:"การเข้าชม"},messages:{roleSaved:"{roleName} บทบาทได้รับการบันทึกแล้ว"},titles:{roleSaved:"บันทึกบทบาทแล้ว"}},textReplacements:{createNew:"สร้างรหัสย่อใหม่",existingRepl:"รหัสย่อที่มีอยู่",noMatches:"ไม่มีการทดแทนที่ตรงกัน '{term}'",pageTitle:"ย่อ",performExpand:"กด Enter เพื่อแทนที่ #{from} กับ '{to}'",possibleExpansions:"ทางเลือกที่เป็นไปได้: {possible}",replDesc:"เมื่อป้อนข้อความทางลัดเหล่านี้ช่วยให้คุณสามารถแทนที่อักขระสั้น ๆ ด้วยวลีที่ยาวขึ้นได้",replaceWith:"แทนที่ด้วย",toReplace:"ข้อความที่จะแทนที่"},userRoles:"บทบาทผู้ใช้",users:"ผู้ใช้",visitForms:{labels:{followup:"ติดตาม",form:"ฟอร์ม",initial:"แรกเริ่ม",visitType:"ประเภทการเข้าชม"},titles:{visitForms:"ไปที่แบบฟอร์ม"}},workflow:{admissionDepositLabel:"ต้องวางเงินมัดจำ",clinicPrepaymentLabel:"จำเป็นต้องชำระเงินล่วงหน้าของคลินิก",editTitle:"ตัวเลือกเวิร์กโฟลว์",followupPrepaymentLabel:"จำเป็นต้องชำระเงินล่วงหน้าสำหรับการติดตามผล",messages:{optionsSaved:"ตัวเลือกเวิร์กโฟลว์ได้รับการบันทึกแล้ว"},newTitle:"ตัวเลือกเวิร์กโฟลว์",outpatientImagingLabel:"จำเป็นต้องชำระเงินล่วงหน้าสำหรับผู้ป่วยนอก",outpatientLabLabel:"จำเป็นต้องชำระเงินล่วงหน้าสำหรับผู้ป่วยนอก",outpatientMedicationLabel:"จำเป็นต้องชำระเงินล่วงหน้าสำหรับผู้ป่วยนอกยา",titles:{optionsSaved:"บันทึกตัวเลือกแล้ว"},workflowLabel:"ขั้นตอนการทำงาน"}},alerts:{errorExclamation:"Error!!!!",pleaseWait:"โปรดรอ",reportError:"สร้างรายงาน Error",warningExclamation:"Warning!!!!"},allergies:{buttons:{addAllergy:"เพิ่มภูมิแพ้"},labels:{allergyName:"ชื่อ",patientAllergy:"การแพ้ผู้ป่วย"},titles:{addAllergy:"เพิ่มภูมิแพ้",editAllergy:"แก้ไขอาการภูมิแพ้"}},application:{messages:{sessionExpired:"เซสชันของคุณหมดอายุแล้ว โปรดเข้าสู่ระบบเพื่อจะดำเนินการต่อ."},titles:{sessionExpired:"เซสชันหมดอายุแล้ว"}},appointments:{buttons:{newButton:"+ นัดใหม่",scheduleSurgery:"+ กำหนดการผ่าตัด"},calendarTitle:"นัดหมายปฏิทิน",currentScreenTitle:"นัดหมาย",editTitle:"แก้ไขการนัดหมาย",labels:{noLocation:"ไม่มีสถานที่",selectedStartingDate:"แสดงการนัดหมายในวันที่"},messages:{appointmentSaved:"ได้รับการแต่งตั้งสำหรับ {patient} แล้ว",endTimeLaterThanStart:"โปรดเลือกเวลาสิ้นสุดหลังเวลาเริ่มต้น"},missed:"พลาดนัด",newTitle:"การนัดหมายใหม่",searchTitle:"ค้นหานัดหมาย",sectionTitle:"นัดหมาย",thisWeek:"การนัดหมายในสัปดาห์นี้",titles:{appointmentSaved:"นัดหมายแล้วบันทึกไว้",editSurgicalAppointment:"แก้ไขการแต่งตั้งศัลยกรรม",newSurgicalAppointment:"นัดผ่าตัดใหม่",theaterSchedule:"กำหนดการโรงละคร"},todayTitle:"การนัดหมายวันนี้"},billing:{alerts:{noInvoiceFound:"ไม่พบใบแจ้งหนี้",noPricingItems:"ไม่พบรายการราคา",noPricingProfiles:"ไม่พบโปรไฟล์ราคา"},buttons:{addOverride:"เพิ่มการแทนที่",createInvoice:"สร้างใบแจ้งหนี้หรือไม่?"},labels:{actualCharges:"ค่าใช้จ่ายจริง",discountAmount:"จำนวนส่วนลด",discountPercentage:"เปอร์เซ็นต์ส่วนลด",externalInvoiceNumber:"ใบแจ้งหนี้ภายนอก #",hmoCom:"HMO/COM",insurance:"ประกันภัยแห่งชาติ",paymentProfile:"โปรไฟล์การชำระเงิน",paymentsDeposits:"การชำระเงิน / เงินฝาก",pricingPanelOverrides:"การแทนที่ค่ากำหนดราคา",pricingProfile:"รายละเอียดราคา",setFee:"ภาษี"},messages:{flatDiscountMsg:"มีการลดจำนวนเงินโดยใช้ความรับผิดชอบทางการเงินของผู้ป่วย {currency} {discountAmount}",flatFeeMsg:"มีค่าใช้จ่ายแบนสำหรับความรับผิดชอบทางการเงินของผู้ป่วย {currency} {setFee}"}},buttons:{add:"เพิ่ม",addItem:"เพิ่มรายการ",addLineItem:"เพิ่มบรรทัดรายการ",addValue:"เพิ่มมูลค่า",addVisit:"เพิ่มการเข้าชม",allRequests:"คำขอทั้งหมด",barcode:"บาร์โค้ด",cancel:"ยกเลิก",clear:"ชัดเจน",close:"ปิด",complete:"สมบูรณ์",dispense:"จ่ายยา",edit:"แก้ไข",filter:"กรอง",fulfill:"เติมเต็ม",import:"นำเข้า",loadFile:"โหลดไฟล์",newItem:"+ ไอเท็มใหม่",newNote:"บันทึกใหม่",newRequest:"คำขอใหม่",newRequestPlus:"+ คำขอใหม่",newUser:"ผู้ใช้ใหม่",ok:"Ok",print:"พิมพ์",remove:"Remove",returnButton:"กลับ",review:"Review",search:"ค้นหา",showAll:"แสดงทั้งหมด",showFewer:"แสดงน้อยลง",update:"Update"},components:{chargesByTypeTab:{charges:"ค่าใช้จ่าย"},customFormManager:{buttons:{addForm:"ใส่ Form"}},dateTimePicker:{amHour:"{hour} AM",midnight:"กลางคืน",noon:"กลางวัน",pmHour:"{hour} PM"},imageUpload:{messages:{selectValidImageFile:"โปรดเลือกไฟล์ภาพที่ถูกต้อง"}},operativeProcedures:{buttons:{addProcedure:"เพิ่มขั้นตอน"},labels:{procedure:"ขั้นตอน"},titles:{procedures:"ขั้นตอนการ"}},patientOrders:{buttons:{newImaging:"ภาพใหม่",newLab:"ห้องทดลองใหม่",newMedication:"ยาใหม่"},labels:{imagingOrderType:"การถ่ายภาพ",labOrderType:"ห้องปฏิบัติการ",medicationOrderType:"Medication",orderType:"ประเภทคำสั่งซื้อ"}},priceList:{charges:"{pricingType} ค่าใช้จ่าย"},quantityCalc:{result:"{targetUnit} ทั้งหมด: {calculated}"},quantityConv:{conversion:"{name} ประกอบด้วย?",unit:"หน่วย"},sortableColumn:{labels:{selectAll:"(เลือกทั้งหมด)"}},takePhoto:{camera:"กล้อง",how:"คุณต้องการเพิ่มภาพถ่ายอย่างไร?",labels:{takeAPicture:"ถ่ายภาพ",uploadAFile:"อัปโหลดไฟล์"},photo:"ภาพถ่าย",preview:"ภาพตัวอย่าง",takePhoto:"ถ่ายภาพ",uploadFile:"อัปโหลดไฟล์"},upcomingAppointments:{labels:{date:"วันที่",location:"ที่ตั้ง",type:"ชนิด","กับ ":" ด้วย"},titles:{upcomingAppointments:"การนัดหมายที่จะเกิดขึ้น"}}},customForms:{buttons:{addForm:"เพิ่มแบบฟอร์ม"},labels:{formToAdd:"แบบฟอร์มเพื่อเพิ่ม"},titles:{addCustomForm:"เพิ่มแบบฟอร์มที่กำหนดเอง"}},dashboard:{needs_user_setup:"เราขอแนะนำให้คุณตั้งค่าบัญชีผู้ใช้",standalone_welcome:'<h4> ขอบคุณที่ดาวน์โหลด HospitalRun </ h4> <p> คุณกำลังใช้งาน HospitalRun ในโหมด stand alone โหมดนี้ช่วยให้คุณสามารถสนับสนุนผู้ใช้หลายรายได้บนอินสแตนซ์เดียวของเดสก์ท็อป / แล็ปท็อปของ HospitalRun นี่เป็นวิธีที่เหมาะสำหรับ: </ p> <ul> <li> ประเมิน HospitalRun เพื่อใช้งานเซิร์ฟเวอร์ในที่สุด </ li> <li> การใช้แพลตฟอร์มเพื่อสนับสนุนคลินิก / สถานที่ที่มีเพียงอินสแตนซ์เดียวเท่านั้น </ li> </ ul> <p> หากคุณกำลังพิจารณาการติดตั้ง HospitalRun หลายอุปกรณ์เราจำเป็นต้อง <a href = "https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target = "_blank"> การทำงานกับคุณลักษณะ </a> ที่จะช่วยให้คุณสามารถ "จบการศึกษา" จากอินสแตนซ์เดี่ยวนี้ในการปรับใช้ระบบคลาวด์ / เซิร์ฟเวอร์แบบเดิมได้ </ p> ',title:"ยินดีต้อนรับสู่ HospitalRun!"},dates:{longOmitDays:"{years} ปี {months} เดือน",longOmitDaysPlural:"{years} years {months} months",longOmitDaysYears:"{months} months",longOmitYears:"{months} เดือน {days} วัน",longPlural:"{years} years {months} months {days} days",shortOmitYears:"{months} m {days} d","ยาว":"{years} ปี {months} เดือน {days} วัน","สั้น":"{years} y {months} m {days} d"},diagnosis:{labels:{activeDiagnosis:"การวินิจฉัยที่ใช้งาน",date:"วันที่",diagnosis:"วินิจฉัย",secondaryDiagnosis:"การวินิจฉัยทุติยภูมิ"},titles:{addDiagnosis:"เพิ่มการวินิจฉัย",editDiagnosis:"แก้ไขการวินิจฉัย"}},errors:{accepted:"ต้องได้รับการยอมรับ",blank:"ต้องไม่ว่างเปล่า",confirmation:"ไม่ตรงกับ {attribute}",empty:"ต้องว่างเปล่า",equalTo:"ต้องเท่ากับ {count}",even:"ต้องเป็นไปได้",exclusion:"สงวนไว้",greaterThan:"ต้องมากกว่า {count}",greaterThanOrEqualTo:"ต้องมากกว่าหรือเท่ากับ {count}",inclusion:"ไม่รวมอยู่ในรายการ",invalid:"ไม่ถูกต้อง",invalidNumber:"ไม่ใช่ตัวเลขที่ถูกต้อง",lessThan:"ต้องน้อยกว่า {count}",lessThanOrEqualTo:"ต้องน้อยกว่าหรือเท่ากับ {count}",notANumber:"ไม่ใช่ตัวเลข",notAnInteger:"ต้องเป็นจำนวนเต็ม",odd:"ต้องแปลก",otherThan:"ต้องไม่ใช่ {count}",present:"ต้องว่างเปล่า",result:"โปรดป้อนผลก่อนเสร็จสิ้น",tooLong:"ยาวเกินไป (สูงสุดคือ {count} อักขระ)",tooShort:"สั้นเกินไป (ต่ำสุดคือ {count} อักขระ)",wrongLength:"ความยาวที่ไม่ถูกต้อง (ควรเป็น {count} อักขระ)"},headings:{chargedItems:"รายการที่เรียกเก็บเงิน"},imaging:{alerts:{completedMessage:"คำขอภาพได้เสร็จสิ้นแล้ว",completedTitle:"ร้องขอการถ่ายภาพเสร็จสมบูรณ์แล้ว",savedMessage:"บันทึกคำขอภาพแล้ว",savedTitle:"บันทึกคำขอรูปภาพแล้ว"},buttons:{newButton:"+ การถ่ายภาพใหม่"},labels:{addNewVisit:"- เพิ่มการเข้าชมใหม่ -",completedBy:"เสร็จสมบูรณ์โดย",radiologist:"รังสีแพทย์",requestedNotes:"หมายเหตุที่ร้องขอ",resultNotes:"หมายเหตุผลลัพธ์"},messages:{noCompleted:"ไม่พบรายการที่สมบูรณ์"},pageTitle:"คำขอการถ่ายภาพ",sectionTitle:"การถ่ายภาพ",titles:{completedImaging:"ภาพที่เสร็จสมบูรณ์",editTitle:"แก้ไขคำขอการถ่ายภาพ",newTitle:"คำขอรูปภาพใหม่"}},incident:{buttons:{add:"เพิ่ม",addForm:"+ เพิ่มแบบฟอร์ม",addItem:"เพิ่มรายการ ",cancel:"ยกเลิก",delete:"ลบ",download:"ดาวน์โหลด",edit:"แก้ไข","export ":" Export Report ",generateRep:"สร้างรายงาน",newAttachment:"+ เอกสารแนบใหม่",newCategory:"+ หมวดหมู่ใหม่",newIncident:"+ เหตุการณ์ใหม่",newNote:"+ บันทึกใหม่"},labels:{actions:"การปฏิบัติ",addedBy:"เพิ่มโดย",category:"ประเภท",categoryItem:"หมวดสินค้า",date:"วันที่",dateRecorded:"วันที่ที่บันทึก",department:"แผนก",description:"รายละเอียดของเหตุการณ์",endDate:"วันที่สิ้นสุด",givenBy:"กำหนดโดย",howToAddAttachment:"คุณต้องการเพิ่มสิ่งที่แนบมาด้วยวิธีใด?",incidentDate:"วันที่เกิดเหตุการณ์",incidentId:"รหัสเหตุการณ์",item:"ชิ้น",lastUpdated:"อัปเดตครั้งล่าสุด",note:"บันทึก",patientId:"รหัสผู้ป่วย",patientImpacted:"ผู้ป่วยได้รับผลกระทบ",reportType:"ประเภทรายงาน",reportedBy:"รายงานโดย",reportedDate:"วันที่รายงาน",reportedTo:"รายงานเหตุการณ์ที่เกิดขึ้น (ชื่อเต็ม)",sentinelEvent:"Sentinel Event",startDate:"วันที่เริ่มต้น",status:"สถานะ",statusActive:"คล่องแคล่ว",statusClosed:"ปิด",statusFollowup:"ติดตาม",statusReported:"รายงาน",title:"หัวข้อ",total:"ทั้งหมด",updatedBy:"อัปเดตโดย"},messages:{attachmentFileRequired:"โปรดอัปโหลดไฟล์หรือถ่ายรูปหรือบันทึกไฟล์แนบนี้",createNew:"สร้างเหตุการณ์ใหม่ ๆ หรือไม่?",createNewIncidentCategory:"สร้างหมวดหมู่เหตุการณ์ใหม่หรือไม่?",fillIn:"กรอกข้อมูลในตัวเลือกด้านบนเพื่อคำนวณคะแนน",incidentCategorySaved:"หมวดหมู่ {name} ได้รับการบันทึกแล้ว",noClosedIncidents:"ไม่พบเหตุการณ์ที่ปิด",noIncidentCategoriesFound:"ไม่พบหมวดเหตุการณ์ที่เกิดขึ้น",noIncidents:"ไม่พบเหตุการณ์",saved:"รายงานเหตุการณ์ถูกบันทึกไว้",selectExistingPatient:"โปรดเลือกผู้ป่วยที่มีอยู่หรือปล่อยให้ฟิลด์นี้ว่างเปล่า"},titles:{addAttachment:"เพิ่มสิ่งที่แนบมา",addCategoryItem:"เพิ่มหมวดสินค้า",addNote:"เพิ่มหมายเหตุ",attachments:"สิ่งที่แนบมา",closed:"เหตุการณ์ที่ปิด",current:"ปัจจุบัน",deleteAttachment:"ลบเอกสารแนบ",deleteIncident:"ลบเหตุการณ์",deleteIncidentCategory:"ลบหมวดหมู่เหตุการณ์",deleteItem:"ลบรายการ",deleteNote:"ลบหมายเหตุ",editAttachment:"แก้ไขเอกสารแนบ",editIncident:"แก้ไขเหตุการณ์",editIncidentCategory:"แก้ไขประเภทเหตุการณ์",editNote:"แก้ไขหมายเหตุ",general:"ข้อมูลทั่วไป",history:"ประวัติศาสตร์",incidentCategories:"ประเภทเหตุการณ์",incidentCategoryItem:"หมวดหมู่เหตุการณ์",incidentCategoryName:"ชื่อประเภทเหตุการณ์",incidentCategorySaved:"หมวดหมู่เหตุการณ์ที่บันทึกไว้",incidentSaved:"บันทึกเหตุการณ์แล้ว",incidents:"เหตุการณ์ที่เกิดขึ้น",incidentsByCategory:"เหตุการณ์ตามประเภท",incidentsByDepartment:"เหตุการณ์ตามแผนก",newIncident:"เหตุการณ์ใหม่",newIncidentCategory:"หมวดหมู่เหตุการณ์ใหม่",notes:"หมายเหตุ",reports:"รายงาน"}},inventory:{edit:{cost:"ต้นทุนต่อหน่วย:",delivered:"ส่งถึง:",location:"สถานที่ปรับปรุงแล้ว:",prescription:"กําหนดสําหรับ:",pulled:"ดึงจาก:",quantity:"จำนวนที่เสร็จสิ้น:",reason:"เหตุผล:",returned:"กลับมาจากผู้ป่วย: ",transferredFrom:"โอนจาก:",transferredTo:"โอนไปยัง:"},labels:{action:"การกระทำ",add:"เพิ่ม",addAdjustmentType:"เพิ่ม",adjust:"ปรับ",adjustmentDate:"วันที่ปรับปรุง",adjustmentFor:"การปรับค่าสำหรับ",adjustmentType:"ประเภทการปรับปรุง",aisle:"ริมทางเดิน",aisleLocation:"ทางเดิน",allInventory:"สินค้าคงคลังทั้งหมด",allItems:"สิ่งของทั้งหมด",availableQuantity:"{quantity} ใช้ได้",billTo:"ส่งเบิกไปที่",consumePurchases:"ใช้การสั่งซื้อ",consumptionRate:"อัตราการบริโภค",cost:"ราคา",costPerUnit:"ต้นทุนต่อหน่วย",crossReference:"การอ้างอิงข้าม",currentQuantity:"ปริมาณปัจจุบัน",dateCompleted:"วันที่เสร็จสิ้น",dateEffective:"วันที่มีผล",dateEnd:"วันที่สิ้นสุด",dateReceived:"วันที่ได้รับ",dateStart:"วันที่เริ่มต้น",dateTransferred:"วันที่ย้ายแล้ว",daysLeft:"วันที่เหลือ",deleteItem:"ลบรายการ",deliveryAisle:"ทางเดินในการจัดส่ง",deliveryLocation:"สถานที่จัดส่ง",details:"รายละเอียด",distributionUnit:"หน่วยการแจกจ่าย",editItem:"แก้ไขรายการ",expense:"ค่าใช้จ่าย",expirationDate:"วันหมดอายุ",fulfillRequest:"ทำตามคำขอ",fulfillRequestNow:"ทำตามคำขอเดี๋ยวนี้",gift:"ของขวัญในประเภท",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"ของขวัญในรูปแบบการใช้งาน",inventoryConsumed:"พื้นที่โฆษณาใช้แล้ว",inventoryItem:"รายการสินค้าคงคลัง",inventoryObsolence:"ล้าสมัยของสินค้าคงคลัง",invoiceItems:"รายการใบแจ้งหนี้",invoiceLineItem:"รายการโฆษณาในใบแจ้งหนี้",invoiceNumber:"เลขใบสั่งของ",item:"ชิ้น",itemNumber:"หมายเลขรายการ",items:"รายการ",location:"ที่ตั้ง",locations:"สถานที่",markAsConsumed:"ทำเครื่องหมายว่าสิ้นเปลือง ",name:"ชื่อ",newItem:"ไอเท็มใหม่",originalQuantity:"จำนวนต้นฉบับ ",print:"พิมพ์",printBarcode:"พิมพ์บาร์โค้ด",printer:"เครื่องพิมพ์",pullFrom:"ดึงจาก",purchaseCost:"ซื้อต้นทุน",purchaseInfo:"ข้อมูลการสั่งซื้อ",purchases:"ซื้อ",quantity:"ปริมาณ ({unit})",quantityAvailable:"ปริมาณที่มี",quantityOnHand:"ปริมาณในมือ",quantityRequested:"ปริมาณที่ขอ",rank:"ยศ",reason:"เหตุผล",remove:"เอาออก",removeAdjustmentType:"เอาออก",reorderPoint:"จุดสั่งซื้อใหม่",requestedItems:"รายการที่ขอ",returnAdjustmentType:"กลับ",returnToVendorAdjustmentType:"กลับไปที่ผู้ขาย",salePricePerUnit:"ราคาขายต่อหน่วย",save:"บันทึก",serialNumber:"หมายเลขลำดับ / ล็อต",total:"ทั้งหมด",totalCost:"ค่าใช้จ่ายทั้งหมด",totalReceived:"ได้รับทั้งหมด: {total}",transaction:"การซื้อขาย",transactions:"การทำธุรกรรม",transfer:"โอน",transferFrom:"โอนจาก",transferTo:"โอนไปยังสถานที่",transferToAisle:"ถ่ายโอนไปยังทางเดิน",unit:"หน่วย",unitCost:"ต้นทุนต่อหน่วย",vendor:"ผู้ขาย",vendorItemNumber:"หมายเลขรายการผู้ขาย",writeOffAdjustmentType:"เขียนปิด",xref:"XRef"},messages:{adjust:"โปรดปรับปริมาณในตำแหน่งที่เหมาะสมเพื่อพิจารณาความแตกต่างของ {difference}",createRequest:"สร้างคำขอใหม่หรือไม่?",itemNotFound:"ไม่พบรายการพื้นที่โฆษณา <strong> {item} </ strong> <br> หากต้องการสร้างรายการสินค้าคงคลังใหม่ให้กรอกข้อมูลด้านล่าง <br> ถ้าไม่ต้องการให้กดปุ่มยกเลิกเพื่อ กลับ.",loading:"กำลังโหลดธุรกรรม ...",noItems:"ไม่พบรายการ",noRequests:"ไม่พบคำขอ",purchaseSaved:"ซื้อสินค้าคงคลังสำเร็จแล้ว",quantity:"จำนวนรวมของ <strong> ({quantity}) </ strong> ไม่ตรงกับจำนวนรวมในตำแหน่ง <strong> ({locationQuantity}) </ strong>",removeItem:"คุณแน่ใจหรือไม่ว่าต้องการนำรายการนี้ออกจากใบแจ้งหนี้นี้",removeItemRequest:"คุณแน่ใจหรือไม่ว่าต้องการนำรายการนี้ออกจากคำขอนี้",requestFulfilled:"คำขอพื้นที่โฆษณาได้รับการปฏิบัติตามแล้ว",requestUpdated:"คำขอพื้นที่โฆษณาได้รับการอัปเดตแล้ว",warning:"โปรดกรอกข้อมูลในช่องที่จำเป็น (ทำเครื่องหมาย *) และแก้ไขข้อผิดพลาดก่อนเพิ่ม"},reports:{adjustment:"การปรับรายละเอียด",daysSupply:"Days Supply เหลืออยู่ในสต็อก",expenseDetail:"ค่าใช้จ่ายโดยละเอียด",expenseSum:"สรุปค่าใช้จ่าย",expiration:"วันหมดอายุ",fields:"ฟิลด์ที่จะรวม",finance:"สรุปการเงิน",generate:"สร้างรายงาน",invLocation:"ตามพื้นที่",invValuation:"การประเมินมูลค่าสินค้าคงคลัง",purchaseDetail:"การซื้อโดยละเอียด",purchaseSum:"ซื้อสรุป",reportType:"ประเภทรายงาน",rows:{adjustments:"การปรับ",adjustmentsTotal:"การปรับทั้งหมด",balanceBegin:"ยอดคงเหลือต้นงวด",balanceEnd:"ยอดคงเหลือปลายงวด",category:"ประเภท",consumed:"ถูกใช้",consumedGik:"GiK Consumed",consumedGikTotal:"ยอดรวม GiK บริโภค",consumedPuchases:"ซื้อสินค้าหมด",consumedPurchasesTotal:"ปริมาณการบริโภคทั้งหมดที่บริโภค",consumedTotal:"บริโภครวม",errInFinSum:"ข้อผิดพลาดใน _generateFinancialSummaryReport:",errInFindPur:"ข้อผิดพลาดใน _findInventoryItemsByPurchase:",errInFindReq:"ข้อผิดพลาดใน _findInventoryItemsByRequest:",expensesFor:"ค่าใช้จ่ายสำหรับ: ",noAccount:"(ไม่มีบัญชี)",subtotal:"ยอดรวม: ",subtotalFor:"ยอดรวมย่อยสำหรับ {หมวดหมู่} - {account}: ",total:"ทั้งหมด: ",totalFor:"รวม {var}: ",totalPurchases:"ยอดซื้อทั้งหมด",transfer1:"{quantity} จาก {location}",trasnfer2:"จาก: {source} ถึง: {target}"},stockTransferDetail:"การโอนสต็อคโดยละเอียด",stockTransferSum:"สรุปการโอนสต็อค",stockUsageDetail:"การใช้สต็อคที่ละเอียด",stockUsageSum:"สรุปการใช้สต็อค",titleDateRange:"{name} รายงาน {เริ่มต้นวัน} - {endDate}",titleSingleDate:"{name} รายงาน {วันที่}","ส่งออก":"Export Report"},titles:{addPurchase:"เพิ่มการซื้อ",addRequest:"คำขอใหม่",adjustment:"การปรับ",editPurchase:"แก้ไขการซื้อ",editRequest:"แก้ไขคำขอ",inventoryItem:"รายการสินค้าคงคลังใหม่",inventoryReport:"รายงานพื้นที่โฆษณา",purchaseSaved:"บันทึกการซื้อสินค้าคงคลังแล้ว",quickAddTitle:"รายการสินค้าคงคลังใหม่",removeItem:"ลบรายการ",requestFulfilled:"คำขอถูกต้องแล้ว",requestUpdated:"คำขออัปเดตแล้ว",transfer:"โอนรายการ",warning:"Warning!!!!!"}},labels:{action:"การกระทำ",actions:"การกระทำ",addNewOutpatientVisit:"-เพิ่มผู้เยี่ยมชมนอกสถานที่คนใหม่ --",address:"ที่อยู่",age:"อายุ",allDay:"ทั้งวัน",allItems:"สิ่งของทั้งหมด",amount:"จำนวน",anesthesia:"ยาระงับความรู้สึก",assisting:"การให้ความช่วยเหลือ",balanceDue:"ยอดคงเหลือครบกำหนด",billDate:"วันที่บิล",billTo:"ส่งเบิกไปที่",category:"ประเภท",completed:"เสร็จ",country:"ประเทศ",cptcode:"รหัส CPT",creditTo:"เครดิต",currencySymbol:"$",date:"วันที่",dateCompleted:"วันที่เสร็จสิ้น",dateOfBirth:"วันเกิด",dateOfBirthShort:"DoB",datePaid:"วันที่ที่ชำระเงิน",dateRequested:"วันที่ที่ร้องขอ",deleteRequest:"ลบคำขอ",deleteUser:"ลบผู้ใช้",department:"แผนก",description:"ลักษณะ",discount:"ส่วนลด",displayName:"ชื่อที่แสดง",docRead:"อ่านเอกสารแล้ว",docWritten:"เอกสารที่เขียนขึ้น",edit:"แก้ไข",editUser:"แก้ไขผู้ใช้",email:"Email",endDate:"วันที่สิ้นสุด",endTime:"เวลาสิ้นสุด",excess:"ส่วนเกิน",expenseTo:"ค่าใช้จ่าย",fileLoadSuccessful:"ไฟล์ที่จะโหลดที่ประสบความสำเร็จ ",fileName:"ชื่อไฟล์",fileToLoad:"โหลดไฟล์",from:"From",fulfill:"Fulfill",fulfillRequest:"Fulfill Request",fulfillRequestNow:"Fulfill Request Now",fulfilled:"Fulfilled",grandTotal:"ผลรวมทั้งสิ้น",id:"ไอดี",imageOrders:"คำสั่งภาพ",imagingType:"ประเภทการถ่ายภาพ",importFile:"นำเข้าไฟล์",invoiceId:"รหัสใบแจ้งหนี้",labOrders:"สั่งซื้อห้องปฏิบัติการ",lineItems:"รายการโฆษณา",loading:"กำลังโหลด",location:"ที่ตั้ง",lookupType:"ประเภทการค้นหา",medication:"ยา",name:"ชื่อ",newItem:"+ ไอเท็มใหม่",newUser:"ผู้ใช้ใหม่",note:"บันทึก",notes:"หมายเหตุ",number:"จำนวน",on:"บน",password:"รหัสผ่าน",patient:"ผู้ป่วย",payments:"การชำระเงิน",physician:"แพทย์",prescriber:"ยา",prescription:"ใบสั่งยา",prescriptionDate:"วันกําหนด",price:"ราคา",print:"พิมพ์",procedures:"ขั้นตอนการ",provider:"ผู้ให้บริการ",pullFrom:"ดึงจาก",quantity:"ปริมาณ",remarks:"หมายเหตุ",requestedBy:"การร้องขอจาก",requestedOn:"Requested On",requests:"การร้องขอ",result:"ผล",results:"ผล",role:"บทบาท",search:"ค้นหา",sex:"เพศ",startDate:"วันที่เริ่มต้น",startTime:"เวลาเริ่มต้น",status:"สถานะ",takenBy:"ดำเนินการโดย",to:"To",total:"ทั้งหมด",type:"ชนิด",userCanAddNewValue:"ผู้ใช้สามารถเพิ่มมูลค่าใหม่ได้",username:"ชื่อผู้ใช้",value:"ความคุ้มค่า",view:"ดู",visit:"Visit",with:"With","ลบ ":" ลบ "},labs:{alerts:{requestCompletedMessage:"คำขอห้องปฏิบัติการเสร็จสิ้นแล้ว",requestCompletedTitle:"ร้องขอการทดลองเสร็จสมบูรณ์แล้ว",requestSavedMessage:"บันทึกคำขอห้องปฏิบัติการแล้ว.",requestSavedTitle:"บันทึกคำขอห้องปฏิบัติการแล้ว"},buttons:{newButton:"+ห้องปฏิบัติการใหม่"},completedTitle:"Labs เสร็จสมบูรณ์",deleteTitle:"ลบคำขอ",editTitle:"แก้ไขคำขอห้องปฏิบัติการ",labels:{addNewVisit:"- เพิ่มการเข้าชมใหม่ -",labType:"ประเภทห้องปฏิบัติการ"},messages:{createNewRecord:"สร้างระเบียนใหม่หรือไม่?",noCompleted:"ไม่พบรายการที่สมบูรณ์",noItemsFound:"ไม่พบห้องทดลอง"},newTitle:"คำขอ Lab ใหม่",requestsTitle:"คำขอจากห้องปฏิบัติการ",sectionTitle:"Labs"},languageName:"Thailand",loading:{messages:{0:"ความเร็วในการบินผีเสื้อด้านบนอยู่ที่ 12 ไมล์ต่อชั่วโมง ผีเสื้อบางตัวสามารถบินได้ 25 ไมล์ต่อชั่วโมง! ",1:"นกฮูกเป็นนกเพียงตัวเดียวที่สามารถมองเห็นสีน้ำเงิน",10:" ลิ้นของคุณเป็นกล้ามเนื้อเดียวในร่างกายของคุณที่ติดอยู่ที่ปลายข้างเดียว ",11:"อูฐมีสามเปลือกตาเพื่อป้องกันตัวเองจากการเป่าทราย",2:"แมวมีเสียงร้องมากกว่า 100 เสียง; สุนัขมีเพียง 10 ",3:"มนุษย์ใช้กล้ามเนื้อทั้งหมด 72 ชนิดในการพูด",4:"มีการพูดถึงมากกว่า 1,000 ภาษาในทวีปแอฟริกา",5:"erythrophobe เป็นคนที่แดงขึ้นอย่างง่ายดาย",6:"ความหวาดกลัวที่พบบ่อยที่สุดในโลกคืออาการ odynophobia ซึ่งเป็นความกลัวของอาการปวด",7:"ร่างกายของคุณใช้ 300 กล้ามเนื้อเพื่อความสมดุลของตัวเองเมื่อคุณกำลังยืนนิ่ง",8:"กบบางตัวสามารถแช่แข็งแข็งแล้วละลายและยังคงมีชีวิตอยู่",9:"ตาของเรามีขนาดเท่ากันตั้งแต่แรกเกิด แต่จมูกและหูของเราก็ไม่เคยหยุดนิ่ง"},progressBar:{progress:"{progressBarValue}% เสร็จสิ้น"}},login:{labels:{password:"รหัสผ่าน",signIn:"ลงชื่อเข้าใช้",username:"ชื่อผู้ใช้"},messages:{error:"ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง.",offlineError:"ไม่สามารถเข้าสู่ระบบขณะออฟไลน์ โปรดสร้างการเชื่อมต่อเครือข่ายและลองเข้าสู่ระบบอีกครั้ง",signIn:"กรุณาเข้าสู่ระบบ"}},medication:{alerts:{fulfilledTitle:"ขอใช้ยาเรียบร้อยแล้ว",returnedMessage:"ยาถูกทำเครื่องหมายว่าส่งคืนแล้ว",returnedTitle:"ยาที่ได้รับคืน",savedMessage:"บันทึกบันทึกยาแล้ว.",savedTitle:"บันทึกการร้องขอยาแล้ว"},buttons:{dispenseMedication:"จ่ายยา",newButton:"+ คำขอใหม่",returnMedication:"medication ส่งกลับ"},labels:{adjustmentDate:"วันที่ปรับปรุง",creditToAccount:"เครดิตไปยังบัญชี",quantityDispensed:"จำนวนจ่าย",quantityDistributed:"ปริมาณที่กระจาย",quantityRequested:"ปริมาณที่ขอ",quantityToReturn:"ปริมาณการย้อนกลับ ",refills:"เติม",returnAisle:"เดินกลับ",returnLocation:"กลับสถานที่",returnReason:"เหตุผลที่กลับ / หมายเหตุ"},messages:{createNew:"สร้างคำขอใช้ยาใหม่หรือไม่?"},pageTitle:"คำขอใช้ยา",returnMedication:"กลับยา",sectionTitle:"ยา",titles:{completedMedication:"ยาสำเร็จรูป",editMedicationRequest:"แก้ไขคำขอ Medication",newMedicationRequest:"คำขอใช้ยาใหม่"}},messages:{createNewRecord:"สร้างระเบียนใหม่หรือไม่?",createNewUser:"สร้างผู้ใช้ใหม่หรือไม่?",delete_plural:"คุณแน่ใจหรือไม่ว่าต้องการลบ {name} เหล่านี้",delete_singular:"คุณแน่ใจหรือไม่ว่าต้องการลบ {name} นี้",forAuthorizedPersons:"รายงานฉบับนี้มีไว้สำหรับผู้มีอำนาจเท่านั้น",newPatientHasToBeCreated:"ผู้ป่วยรายใหม่จำเป็นต้องสร้างขึ้น ... โปรดรอสักครู่",noHistoryAvailable:"ไม่มีประวัติ",noItemsFound:"ไม่พบรายการ",noNotesAvailable:"ไม่มีบันทึกทางคลินิกเพิ่มเติมสำหรับการเข้าชมครั้งนี้",noUsersFound:"ไม่พบผู้ใช้.",onBehalfOf:"ในนามของ",reportError:"เกิดข้อผิดพลาดขณะสร้างรายงานที่ร้องขอ โปรดแจ้งให้ผู้ดูแลระบบทราบว่าคุณพบข้อผิดพลาด",requiredFieldsCorrectErrors:"โปรดกรอกข้อมูลในช่องที่จำเป็น (ทำเครื่องหมาย *) และแก้ไขข้อผิดพลาดก่อนบันทึก",saveActionException:"เกิดข้อผิดพลาดขณะพยายามบันทึก: {message} ",sorry:"ขอโทษมีบางอย่างผิดพลาด...",userHasBeenSaved:"บันทึกผู้ใช้แล้ว",userSaved:"บันทึกผู้ใช้แล้ว","ลบ ":" คุณแน่ใจหรือว่าต้องการลบ {name}? "},models:{appointment:{labels:{allDay:"ทั้งวัน",appointmentDate:"วันที่",appointmentType:"ชนิด",endDate:"วันที่สิ้นสุด",location:"ที่ตั้ง",notes:"หมายเหตุ",patient:"ผู้ป่วย",provider:"กับ",startDate:"วันที่เริ่มต้น",status:"สถานะ",type:"ชนิด"},names:{plural:"การนัดหมาย",singular:"การแต่งตั้ง"}},attachment:{names:{plural:"สิ่งที่แนบมา",singular:"ความผูกพัน"}},form:{names:{plural:"รูปแบบ",singular:"รูปแบบ"}},imaging:{names:"การถ่ายภาพ",request:{plural:"คำขอภาพ",singular:"คำขอภาพ"}},incident:{names:{plural:"เหตุการณ์ที่เกิดขึ้น",singular:"อุบัติการณ์"}},item:{names:{plural:"รายการ",singular:"ชิ้น"}},lab:{names:{plural:"labs",singular:"lab"},request:{plural:"lab requests",singular:"lab request"}},medication:{names:{plural:"ยา",singular:"ยา"},request:{plural:"การขอยา",singular:"การขอยา"}},note:{names:{plural:"บันทึก",singular:"บันทึก"}},patient:{labels:{name:"ชื่อ"},names:{singular:"คนไข้"}},procedure:{names:{plural:"ขั้นตอน",singular:"ขั้นตอน"}},user:{names:{plural:"ผู้ใช้",singular:"ผู้ใช้"}},visit:{names:{plural:"visits",singular:"visit"}},vital:{names:{plural:"ผู้อาศัย",singular:"ผู้อาศัย"}}},navigation:{about:"เกี่ยวกับ HospitalRun",actions:{login:"ล็อกอิน",logout:"ล็อกเอ้าท์",selectLanguage:"เลือกภาษา"},administration:"Administration",billing:"การเรียกเก็บเงิน",imaging:"การถ่ายภาพ",incident:"อุบัติการณ์",inventory:"สินค้าคงคลัง",labs:"Labs",medication:"ยา",messages:{logoutFailed:"ไม่สามารถออกจากระบบได้ในขณะนี้ การออกจากระบบไม่สามารถใช้งานได้ขณะออฟไลน์"},patients:"ผู้ป่วย",scheduling:"การกำหนด",subnav:{actions:"การปฏิบัติ",addAppointment:"เพิ่มการนัดหมาย",addressFields:"ฟิลด์ที่อยู่",admittedPatients:"ผู้ป่วยที่เข้ารับการรักษา",appointmentSearch:"การนัดหมายการค้นหา",appointmentsCalendar:"นัดหมายปฏิทิน",appointmentsThisWeek:"การนัดหมายในสัปดาห์นี้",cashier:"แคชเชียร์",completed:"เสร็จ",currentIncidents:"เหตุการณ์ปัจจุบัน",customForms:"ฟอร์มที่กำหนดเอง",dispense:"จ่ายยา",history:"ประวัติศาสตร์",incidentCategories:"ประเภทเหตุการณ์",inventoryReceived:"สินค้าคงคลังที่ได้รับ",inventoryReceivedPlus:"ได้รับสินค้าคงคลังแล้ว",invoices:"ใบแจ้งหนี้",items:"รายการ",loadDB:"Load DB",lookupLists:"ค้นหารายการ",newIncident:"เหตุการณ์ใหม่",newInvoice:"ใบแจ้งหนี้ใหม่",newPatient:"ผู้ป่วยรายใหม่",newRequest:"คำขอใหม่",newUser:"ผู้ใช้ใหม่",outpatient:"คนไข้นอก",patientListing:"รายชื่อผู้ป่วย",priceProfiles:"โปรไฟล์ราคา",prices:"ราคา",printHeader:"ส่วนหัวพิมพ์",reports:"รายงาน",requests:"การร้องขอ",returnMedication:"ส่งคืน Medication",scheduleSurgery:"กำหนดการศัลยกรรม",textReplacements:"ย่อ",theaterSchedule:"กำหนดการโรงละคร",userRoles:"บทบาทผู้ใช้",users:"ผู้ใช้",workflow:"ขั้นตอนการทำงาน","การนัดหมายในวันนี้ ":" การนัดหมายในวันนี้"},titles:{logoutFailed:"ออกจากระบบผิดพลาด"}},operationReport:{labels:{additionalNotes:"หมายเหตุเพิ่มเติม",assistant:"ผู้ช่วย",caseComplexity:"กรณีซับซ้อน",operationDescription:"คำอธิบายการทำงาน",preOpPrimaryDiagnosis:"การวินิจฉัยเบื้องต้นจาก Pre-op",preOpSecondaryDiagnosis:"การวินิจฉัยรองก่อนวัยอันควร",surgeon:"ศัลยแพทย์",surgeryDate:"วันที่ผ่าตัด"},messages:{reportSaved:"รายงานการดำเนินการได้รับการบันทึกแล้ว"},titles:{editTitle:"แก้ไขรายงานการดำเนินงาน",newTitle:"รายงานการดำเนินงานใหม่",reportSaved:"บันทึกรายงานแล้ว"}},operativePlan:{buttons:{completePlan:"แผนสมบูรณ์"},labels:{additionalNotes:"หมายเหตุเพิ่มเติม",admissionInstructions:"คำแนะนำเมื่อเข้าเรียน",caseComplexity:"กรณีซับซ้อน",completedStatus:"เสร็จ",droppedStatus:"ปรับตัวลดลง",operationDescription:"คำอธิบายการทำงาน",plannedStatus:"วางแผน",status:"สถานะ",surgeon:"ศัลยแพทย์"},messages:{planCompleted:"แผนปฏิบัติการเสร็จสิ้นแล้ว ขณะนี้คุณจะถูกนำไปยังรายงานการดำเนินงาน",planSaved:"แผนปฏิบัติการได้รับการบันทึกแล้ว."},titles:{editTitle:"แก้ไขแผนปฏิบัติการ",newTitle:"แผนปฏิบัติการใหม่",planCompleted:"แผนเสร็จสมบูรณ์แล้ว",planSaved:"วางแผนที่บันทึกแล้ว"}},patients:{buttons:{addContact:"เพิ่มผู้ติดต่อ",addExpense:"เพิ่มค่าใช้จ่าย",addFamilyMember:"เพิ่มสมาชิกในครอบครัว ",addOperativePlan:"เพิ่มแผนปฏิบัติการ",backToPatients:"กลับไปที่รายชื่อผู้ป่วย",download:"ดาวน์โหลด",editOperativePlan:"แผนปฏิบัติการปัจจุบัน",newAppointment:"การนัดหมายใหม่",newImaging:"ภาพใหม่",newLab:"การทดลองใหม่",newMedication:"ยาใหม่",newPatient:"+ ผู้ป่วยรายใหม่",newPhoto:"รูปใหม่",newVisit:"การเยี่ยมชมใหม่",patientCheckIn:"ผู้ป่วยใน",scheduleSurgery:"กำหนดการศัลยกรรม"},labels:{admissionDate:"วันเข้าเรียน",admit:"ยอมรับ",bloodType:"กลุ่มเลือด",caption:"คำบรรยายภาพ",civilStatus:"สถานะทางแพ่ง",clinic:"ขนาดคลิกนิค",contacts:"ติดต่อ",cost:"ค่าใช้จ่าย",dateOfBirth:"วันเกิด",dateProcessed:"วันที่ดำเนินการ",dischargeDate:"วันจำหน่าย",dob:"DOB",education:"การศึกษา",email:"Email",externalPatientId:"รหัสผู้ป่วยภายนอก",firstName:"ชื่อ",income:"เงินได้",insurance:"ประกันภัย",lastName:"นามสกุล",middleName:"ชื่อกลาง",monthlyCost:"เงินเดิน",occupation:"อาชีพ",operativePlan:"แผนปฏิบัติการ",parent:"พ่อ/แม่/ผู้ปกครอง",patientDays:"วันที่ป่วย",patientType:"ประเภทผู้ป่วย",patientTypeCharity:"การกุศล",patientTypePrivate:"ส่งนตัว",phone:"เบอร์",placeOfBirth:"เกิดที่",primaryDiagnosis:"การวินิจฉัยเบื้องต้น",referredBy:"อ้างอิงจาก",referredDate:"วันที่ที่ระบุ",relationship:"ความสัมพันธ์กับผู้ป่วย",relationships:"สัมพันธ์",religion:"ศาสนา",secondaryDiagnosis:"การวินิจฉัยรอง",sex:"เพศ",sexNotEntered:"ไม่ได้ระบุเพศ",sources:"แหล่งที่มา",status:"สถานะผู้ป่วย",totalMontlyExpense:"ค่าใช้จ่ายรายเดือน"},messages:{areYouSureDelete:"คุณแน่ใจหรือไม่ว่าต้องการนำออก {object} นี้?",createNewPatient:"สร้างระเบียนผู้ป่วยใหม่?",deletingPatient:"การลบผู้ป่วยและบันทึกที่เกี่ยวข้องทั้งหมด ",noPatientsFound:"ไม่พบผู้ป่วย",notFoundQuickAdd:"ไม่พบผู้ป่วย <strong> {patientFullName} </ strong> หากคุณต้องการสร้างผู้ป่วยใหม่ให้กรอกข้อมูลด้านล่างนี้ หรือกดปุ่ม Cancel เพื่อกลับ ",photoFileRequired:"กรุณาถ่ายภาพหรืออัพโหลดไฟล์ก่อนบันทึกรูปภาพนี้",savedPatient:"บันทึกบันทึกผู้ป่วยสำหรับ {displayName} แล้ว"},navigation:{appointments:"นัดหมาย",general:"ทั่วไป",history:"ประวัติ",imaging:"การถ่ายภาพ",labs:"Labs",medication:"ยา",photos:"รูป",socialWork:"งานสังคมสงเคราะห์",visits:"Visits"},notes:{newNote:"หมายเหตุใหม่สำหรับ",onBehalfOfCopy:"ในนามของ",onBehalfOfLabel:"ในนามของ",pleaseSelectAVisit:"โปรดเลือกการเข้าชม",updateNote:"กำลังอัปเดตโน้ตจาก"},titles:{addContact:"เพิ่มผู้ติดต่อ",addPhoto:"เพิ่มรูปภาพ",additionalContacts:"รายชื่อเพิ่มเติม",admissionsDetail:"รายละเอียดการรับเข้าเรียน",admissionsSummary:"สรุปการรับเข้าศึกษา",admittedPatients:"ผู้ป่วยที่เข้ารับการรักษา",deleteContact:"ลบที่อยู่ติดต่อ",deleteExpense:"ลบค่าใช้จ่าย",deleteFamilyMember:"ลบสมาชิกในครอบครัว",deletePatientRecord:"ลบบันทึกผู้ป่วย",deletePhoto:"ลบรูปภาพo",diagnosticTesting:"การทดสอบวินิจฉัย",dischargesDetail:"รายละเอียดการปลดปล่อย",dischargesSummary:"ข้อมูลสรุปการปล่อย",edit:"แก้ไขผู้ป่วย",editPhoto:"แก้ไขรูปถ่าย",expenses:"รายจ่าย",familyInfo:"ข้อมูลครอบครัว",familyInformation:"ข้อมูลครอบครัว",outpatientsForDate:"ผู้ป่วยนอกสำหรับ {visitDate}",patient:"รายงานผู้ป่วย",patientListing:"รายชื่อผู้ป่วย",patientReport:"รายงานผู้ป่วย",patientStatus:"สถานะผู้ป่วย",proceduresDetail:"รายละเอียดกระบวนการ",proceduresSummary:"สรุปกระบวนการ",savedPatient:"บันทึกผู้ป่วยแล้ว",socialWork:"ค่าใช้จ่าย",todaysOutpatients:"ผู้ป่วยนอกในวันนี้",totalPatientDays:"จำนวนวันป่วยทั้งหมด",totalPatientDaysDetailed:"จำนวนผู้ป่วยทั้งหมด (รายละเอียด)",visit:"Visit","ลบ ":" ลบผู้ป่วย","ใหม่ ":" New Patient"}},pricing:{labels:{discountAmount:"จำนวนส่วนลด",discountPercentage:"เปอร์เซ็นต์ส่วนลด",setFee:"ตั้งค่า"}},print:{invoice:{labels:{billedBy:"เรียกเก็บโดย:",billedDate:"วันที่บิล:",dateAdmitted:"ที่ยอมรับ:",dateDischarged:"DISCHARGE:",dischargeNotes:"หมายเหตุการปลดปล่อย:",patientAddress:"ที่อยู่:",patientAge:"อายุ:",patientId:"ผู้ป่วย #:",patientName:"ชื่อผู้ป่วย:",remarks:"Remarks:",spacer:"__________________________________________"},messages:{whereConducted:"ถูกหักล้างระหว่างการคุมขังของฉัน"},titles:{billingStatement:"การเรียกเก็บเงิน",patientMember:"ผู้ป่วยที่เป็นสมาชิก",patients:"ของผู้ป่วย",relContact:"ความสัมพันธ์ / เบอร์ติดต่อ."}}},procedures:{buttons:{addMedication:"เพิ่มยา"},labels:{medicationUsed:"ใช้ยา"},messages:{saved:"บันทึกบันทึกขั้นตอนแล้ว"},titles:{addChargeItem:"เพิ่มรายการค่า ",addMedicationUsed:"เพิ่มยาที่ใช้",deleteChargeItem:"ลบรายการค่าใช้จ่าย",deleteMedicationUsed:"ลบยาที่ใช้",edit:"แก้ไขขั้นตอนe",editChargeItem:"แก้ไขรายการค่า",editMedicationUsed:"แก้ไขยาที่ใช้",medicationUsed:"ใช้ยา",saved:"บันทึกขั้นตอนแล้ว","ใหม่":"ขั้นตอนใหม่"}},reports:{labels:{admissionDate:"วันเข้าเรียน",allProcedures:"ขั้นตอนทั้งหมดดำเนินการ",completedBy:"เสร็จสมบูรณ์โดย",dischargeDate:"วันออกจำหน่าย",examiner:"ผู้ตรวจสอบ",images:"ภาพ",labs:"Labs",location:"เยี่ยมชมสถานที่n",medications:"ยา",nextAppointment:"การนัดหมายครั้งต่อไป",nextAppointments:"นัดหมายถัดไป",notes:{author:"ผู้เขียน",date:"วัน",title:"หมายเหตุ"},operativePlan:{description:"คำอธิบายการทำงาน",instructions:"คำแนะนำในการรับเข้าเรียน",procedures:"ขั้นตอนการวางแผน",title:"แผนปฏิบัติการ"},primaryDiagnosis:"การวินิจฉัยเบื้องต้น",procedures:"ขั้นตอนการ",secondaryDiagnosis:"การวินิจฉัยทุติยภูมิ",visitDate:"วันที่เข้าชม",visitType:"ประเภทการเข้าชม"},messages:{saved:"บันทึกรายงานแล้ว.","ลบ":"คุณแน่ใจหรือว่าต้องการลบรายงานนี้?"},titles:{dischargeReport:"รายงานการปลดประจำการ",newDischargeReport:"รายงานการปลดประจำการใหม่",newOPDReport:"รายงาน OPD ฉบับใหม่",opdReport:"รายงาน OPD",saved:"บันทึกรายงานแล้ว"}},user:{plusNewUser:"+ ผู้ใช้ใหม่",usersPageTile:"รายชื่อผู้ใช้"},visits:{buttons:{addDiagnosis:"เพิ่มการวินิจฉัย",checkIn:"เช็คอิน",checkOut:"เช็คเอาท์",discharge:"ปล่อย",newAppointment:"การนัดหมายใหม่t",newDischargeReport:"รายงานการปลดประจำการใหม่",newOPDReport:"รายงาน OPD ฉบับใหม่",newProcedure:"ขั้นตอนใหม่",newVitals:"Vitals ใหม่"},labels:{appointment:"การแต่งตั้ง",authoredBy:"เขียนโดย",checkInTime:"เช็คอิน",checkOutTime:"เช็คเอาท์",createNewPatient:"สร้างผู้ป่วยรายใหม่",diagnosis:"การวินิจฉัยโรค",examiner:"ผู้ตรวจสอบ",finalDiagnosis:"การวินิจฉัยขั้นสุดท้าย / การเรียกเก็บเงิน",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"คำสั่งเสร็จสิ้น",ordersNotDone:"N",patientToCheckIn:"ผู้ป่วยเข้าเช็คอิน",procedure:"ขั้นตอน",procedureDate:"วันที่ดำเนินการ",reasonForVisit:"เหตุผลสำหรับการเยี่ยมชม",reportType:"ประเภทรายงาน",status:"สถานะการเยี่ยมชม",statusAdmitted:"ที่ยอมรับ",statusCheckedIn:"ตรวจสอบใน",statusCheckedOut:"เช็คเอาท์",statusDischarged:"ปล่อย",visitDate:"วันที่เข้าชม",visitInformation:"เยี่ยมชมข้อมูล",visitType:"ประเภทการเข้าชม"},messages:{checkOut:"คุณแน่ใจหรือไม่ว่าต้องการเช็คเอาท์ {patientName}?",checkedOut:"{patientName} ถูกตรวจสอบแล้ว",discharged:"{patientName} ได้รับการปลดประจำการ ",patientCheckedIn:"{patientName} ได้รับการเช็คอินแล้ว",patientCreatedAndCheckedIn:"{patientName} ถูกสร้างและเช็คอินแล้ว",visitAndPatientSaved:"การบันทึกข้อมูลผู้เยี่ยมชมและผู้ป่วยได้รับการบันทึกแล้ว",visitSaved:"บันทึกการเข้าชมได้รับการบันทึกแล้ว."},navigation:{charges:"ค่าใช้จ่าย",notes:"หมายเหตุ",orders:"สั่งซื้อ",procedures:"ขั้นตอนการ",reports:"รายงาน",vitals:"Vitals"},titles:{additionalDiagnoses:"การวินิจฉัยเพิ่มเติม",checkOut:"ตรวจสอบผู้ป่วย",checkedIn:"เช็คอินผู้ป่วยแล้ว",checkedOut:"ตรวจสอบผู้ป่วยแล้ว",discharged:"ผู้ป่วยออก",editVisit:"แก้ไขการเข้าชม",newVisit:"การเยี่ยมชมใหม่",patientCheckIn:"เช็คอินของผู้ป่วย",visitSaved:"ไปที่บันทึกไว้"}},vitals:{labels:{dateRecorded:"วันที่ที่บันทึก",dbp:"DBP",heartRate:"อัตราการเต้นของหัวใจ",height:"ความสูง",respiratoryRate:"อัตราการหายใจ",sbp:"SBP",temperature:"อุณหภูมิ",weight:"น้ำหนัก"}}}}),define("hospitalrun/translations/tr",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{messages:{},titles:{}},customForms:{buttons:{},labels:{},messages:{},titles:{}},header:{messages:{},titles:{}},loaddb:{},lookup:{edit:{template:{}},titles:{}},roles:{capability:{},messages:{},titles:{}},textReplacements:{},visitForms:{labels:{},titles:{}},workflow:{messages:{},titles:{}}},alerts:{},allergies:{buttons:{},labels:{},titles:{}},application:{messages:{},titles:{}},appointments:{buttons:{},labels:{},messages:{},titles:{}},billing:{alerts:{},buttons:{},labels:{},messages:{},navigation:{}},buttons:{add:"Ekle",cancel:"Vazgeç",complete:"Bitir",ok:"Tamam",returnButton:"Geri Dön",update:"Güncelle"},components:{chargesByTypeTab:{},customFormManager:{buttons:{}},dateTimePicker:{},imageUpload:{messages:{}},operativeProcedures:{buttons:{},labels:{},titles:{}},patientOrders:{buttons:{},labels:{}},priceList:{},quantityCalc:{},quantityConv:{},sortableColumn:{labels:{}},takePhoto:{labels:{}},upcomingAppointments:{labels:{},titles:{}}},customForms:{buttons:{},labels:{},titles:{}},dashboard:{title:"Ne yapmak istersiniz?"},dates:{},diagnosis:{labels:{},titles:{}},errors:{},headings:{},imaging:{alerts:{completedMessage:"Görüntüleme talebi başarıyla tamamlandı.",completedTitle:"Görüntüleme Talebi Tamamlandı",savedMessage:"Görüntüleme Talebi başarıyla kaydedildi.",savedTitle:"Görüntüleme Talebi Kaydedildi"},buttons:{newButton:"+ yeni görüntüleme"},labels:{addNewVisit:"--Yeni Ziyaret Ekle--",radiologist:"Radyolog"},messages:{noCompleted:"Tamamlanmayan öğe bulunamadı."},pageTitle:"Görüntüleme talepleri",sectionTitle:"Görüntüleme",titles:{completedImaging:"Görüntüleme Tamamlandı",editTitle:"Görüntüleme Talebini Düzenle",newTitle:"Yeni Görüntüleme Talebi"}},incident:{buttons:{},labels:{},messages:{},titles:{}},inventory:{edit:{},labels:{},messages:{createRequest:"Yeni talep oluştur?",noRequests:"Talep bulunamadı"},reports:{rows:{}},titles:{}},labels:{action:"İşlem",actions:"İşlemler",age:"Yaş",completed:"Tamamlandı",dateCompleted:"Bitiş tarihi",dateRequested:"Talep Tarihi",edit:"Düzenle",fulfill:"Fulfill",id:"Id",imagingType:"Görüntüleme Tipi",name:"Ad",notes:"Notlar",patient:"Hasta",quantity:"Miktar",requestedBy:"Talep sahibi",requestedOn:"Açık Talep",requests:"Talepler",result:"Sonuç",results:"Sonuçlar",sex:"Cinsiyet",visit:"Ziyaret"},labs:{alerts:{},buttons:{},labels:{},messages:{}},languageName:"Türk",loading:{messages:{},progressBar:{}},login:{labels:{password:"Parola",signIn:"Giriş yap",username:"Kullanıcı Adı"},messages:{error:"Kullanıcı adı veya parola hatalı.",signIn:"GİRİŞ YAPIN"}},medication:{alerts:{},buttons:{},labels:{},messages:{},titles:{}},messages:{createNewRecord:"Yeni bir kayıt oluştur?",forAuthorizedPersons:"Bu rapor yetkili kişiler içindir.",noItemsFound:"Hiçbir öğe bulunamadı."},models:{appointment:{labels:{},names:{}},attachment:{names:{}},form:{names:{}},imaging:{request:{}},incident:{names:{}},item:{names:{}},lab:{names:{},request:{}},medication:{names:{},request:{}},note:{names:{}},patient:{labels:{},names:{}},procedure:{names:{}},user:{names:{}},visit:{names:{}},vital:{names:{}}},navigation:{actions:{selectLanguage:"Dil Seçin"},messages:{},subnav:{},titles:{}},operationReport:{labels:{},messages:{},titles:{}},operativePlan:{buttons:{},labels:{},messages:{},titles:{}},patients:{buttons:{},labels:{},messages:{},navigation:{},notes:{},titles:{}},pricing:{labels:{},navigation:{}},print:{invoice:{labels:{},messages:{},titles:{}}},procedures:{buttons:{},labels:{},messages:{},titles:{}},reports:{labels:{notes:{},operativePlan:{}},messages:{},titles:{}},user:{},visits:{buttons:{},labels:{},messages:{},navigation:{},titles:{}},vitals:{labels:{}}}}),define("hospitalrun/translations/tw",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"地址標籤1",address2Label:"地址標籤2",address3Label:"地址標籤3",address4Label:"地址標籤4",addressLabel:"地址",editTitle:"地址選項",include1Label:"包括標籤1",include2Label:"包括標籤2",include3Label:"包括標籤3",include4Label:"包括標籤4",messages:{addressSaved:"地址選項已成功儲存"},newTitle:"地址選項",titles:{optionsSaved:"選項已成功儲存"}},addressOptions:"地址選項",customForms:{buttons:{addField:"新增欄位",moveDown:"往上移",moveUp:"往下移",newForm:"＋ 新表格",preview:"預覽"},labels:{alwaysInclude:"總是包括",checkbox:"選項欄",colSpan:"欲展開之列數目",columns:"列",customForm:"自訂表格",dischargeReportFormType:"出院報告",expenseTo:"支付者",formName:"表格名稱",formType:"表格種類",header:"標題",incidentFormType:"事件",includeOtherOption:"包括其他選項",labFormType:"試驗",label:"標籤",newForm:"新增表格",opdReportFormType:"門診病人報告",operativePlanFormType:"手術計畫與報告",otherOptionLabel:"其他選項標籤",patientFormType:"病患",property:"屬性",radio:"單選按鈕",select:"複選單",socialworkFormType:"社區服務",text:"文字",textarea:"放大文字",visitFormType:"探訪"},messages:{formSaved:"{name}表格已成功儲存"},titles:{checkboxValues:"選項欄資料",customForms:"自訂表格",deleteForm:"刪除自訂表格",dropDownValues:"複選單資料",editCustomForm:"編輯自訂表格",fields:"欄位",formSaved:"表格成功儲存",headerValues:"標題文字",newCustomForm:"新增自訂表格",radioValues:"單選按鈕資料"}},header:{editTitle:"標題選項",facilityName:"設施名稱",headerLabel:"標題",headerLine1:"標題第1行",headerLine2:"標題第2行",headerLine3:"標題第3行",logoURL:"商標網址",messages:{headerSaved:"標題選項已成功儲存"},newTitle:"標題選項",titles:{optionsSaved:"選項已成功儲存"}},loadDb:"啟動數據庫",loaddb:{displayAlertMessage:"請選擇要開啟的檔案",displayAlertTitle:"選擇開啟檔案",editTitle:"啟動數據庫",errorDisplayAlertMessage:"無法啟動數據庫。問題：{error}",errorDisplayAlertTitle:"啟動時發生錯誤",progressMessage:"請等待數據庫啟動",progressTitle:"正在啟動數據庫"},lookup:{aisleLocationList:"庫存通道位置",alertImportListMessage:"請選擇要匯入的檔案.",alertImportListSaveMessage:"查找列表已成功匯入",alertImportListSaveTitle:"名單成功匯入",alertImportListTitle:"請選擇要匯入的檔案",alertImportListUpdateMessage:"查找列表已成功儲存",alertImportListUpdateTitle:"名單已儲存",anesthesiaTypes:"麻醉種類",anesthesiologists:"麻醉師",billingCategories:"建築類別",clinicList:"診所地點",countryList:"國家",cptCodeList:"CPT 編碼",diagnosisList:"診斷",edit:{template:{addTitle:"新增數值",editTitle:"編輯數值",labelTitle:"數值",updateButtonTextAdd:"增加",updateButtonTextUpdate:"編輯"}},expenseAccountList:"費用帳戶",imagingPricingTypes:"影像價目類別",incidentDepartments:"事件部門",inventoryTypes:"庫存類型",labPricingTypes:"試驗定價類型",pageTitle:"查找列表",patientStatusList:"病患狀態表",physicianList:"醫師",procedureList:"程序",procedureLocations:"程序地點",procedurePricingTypes:"程序定價類型",radiologists:"放射科醫生",titles:{deleteLookupValue:"刪除數值"},unitTypes:"單位類型",vendorList:"供應商",visitLocationList:"探訪地點",visitTypes:"探訪類型",wardPricingTypes:"病房定價類型",warehouseList:"庫存地點"},lookupLists:"查找列表",roles:{capability:{addAllergy:"新增過敏",addAppointment:"新增預約",addBillingDiagnosis:"增加計費診斷",addCharge:"增加收費",addDiagnosis:"增加診斷",addImaging:"增加影像",addIncident:"增加事件",addIncidentCategory:"增加事件種類",addInventoryItem:"增加庫存項目",addInventoryPurchase:"增加庫存購買",addInventoryRequest:"增加庫存請求",addInvoice:"增加單據",addLab:"增加測試",addMedication:"增加藥物",addNote:"增加筆記",addOperationReport:"增加程序報告",addOperativePlan:"增加程序類型",addPatient:"增加病患",addPayment:"新增付款",addPhoto:"增加照片",addPricing:"新增價錢",addPricingProfile:"新增定價概況",addProcedure:"新增程序",addSocialwork:"新增社區工作",addVisit:"新增探訪",addVitals:"新增命脈資料",adjustInventoryLocation:"調整庫存位置",admin:"行政",admitPatient:"接納病患",appointments:"預約",billing:"計費",cashier:"出納員",completeImaging:"完成影像",completeLab:"完成測試",defineUserRoles:"定義用戶角色",deleteAppointment:"刪除預約",deleteDiagnosis:"刪除診斷",deleteImaging:"刪除影像",deleteIncident:"刪除事件",deleteIncidentCategory:"刪除事件類型",deleteInventoryItem:"刪除庫存項目",deleteInvoice:"刪除單據",deleteLab:"刪除測試",deleteMedication:"刪除藥物",deleteNote:"刪除筆記",deletePatient:"刪除病患",deletePhoto:"刪除照片",deletePricing:"刪除定價",deletePricingProfile:"刪除定價概況",deleteProcedure:"刪除程序",deleteSocialwork:"刪除社會工作",deleteVisit:"刪除拜訪",deleteVitals:"刪除命脈資料",dischargePatient:"讓病患出院",editInvoice:"編輯單據",fulfillInventory:"滿足庫存",fulfillMedication:"滿足藥物",generateIncidentReport:"生成事件報告",imaging:"影像",incident:"事件",inventory:"庫存",invoices:"單據",labs:"測試",listPaidInvoices:"顯示付清單據",loadDb:"載入數據庫",manageIncidents:"管理事件",medication:"藥物",overrideInvoice:"覆蓋單據",patientReports:"病患報告",patients:"病患",pricing:"價錢",updateConfig:"更新設置",visits:"探訪"},messages:{roleSaved:"{roleName}任務已成功儲存"},titles:{roleSaved:"任務已成功儲存"}},textReplacements:{createNew:"新增簡碼",existingRepl:"現有簡碼",noMatches:"'{term}' 沒有相對應的替代品",pageTitle:"簡碼",performExpand:"按 Enter 來用 '{to}' 取代 #{from}",possibleExpansions:"{possible} 可能的替代品",replDesc:"輸入文字時，這些快捷鍵讓您短的字句變成長的語句.",replaceWith:"用 ... 來取代",toReplace:"要取代之文字"},userRoles:"用戶角色",users:"用戶",visitForms:{labels:{followup:"跟進",form:"表格",initial:"初始",visitType:"探訪類型"},titles:{visitForms:"探訪表格"}},workflow:{admissionDepositLabel:"需要入院押金",clinicPrepaymentLabel:"需要診所付款",editTitle:"流程選項",followupPrepaymentLabel:"需要跟進付款",messages:{optionsSaved:"流程選項已成功儲存"},newTitle:"流程選項",outpatientImagingLabel:"需要門診病人影像付款",outpatientLabLabel:"需要門診病人測試付款",outpatientMedicationLabel:"需要門診病人藥物付款",titles:{optionsSaved:"選項已儲存"},workflowLabel:"流程"}},alerts:{errorExclamation:"發生錯誤!!!",pleaseWait:"請稍候",reportError:"生成報告時發生錯誤",warningExclamation:"注意!!!"},allergies:{buttons:{addAllergy:"新增過敏"},labels:{allergyName:"名稱",patientAllergy:"患者過敏"},titles:{addAllergy:"新增過敏",editAllergy:"編輯過敏"}},application:{messages:{sessionExpired:"請重新登入"},titles:{sessionExpired:"會話過期"}},appointments:{buttons:{newButton:"+ 新增預約",scheduleSurgery:"+ 預約手術"},calendarTitle:"預約行事曆",currentScreenTitle:"預約列表",editTitle:"更改預約",labels:{noLocation:"無地點",selectedStartingDate:"顯示在 ... 之後的預約"},messages:{appointmentSaved:"{patient}的預約已成功儲存",endTimeLaterThanStart:"請選擇一個開始時間之後的結束時間"},missed:"錯過的預約",newTitle:"新增預約",searchTitle:"搜尋預約",sectionTitle:"預約",thisWeek:"本週預約",titles:{appointmentSaved:"預約已儲存",editSurgicalAppointment:"更改手術預約",newSurgicalAppointment:"新增手術預約",theaterSchedule:"手術室時間表"},todayTitle:"本日預約"},billing:{alerts:{noInvoiceFound:"找無單據",noPricingItems:"找無定價項目",noPricingProfiles:"找無定價概況"},buttons:{addOverride:"新增覆蓋",createInvoice:"建立單據?"},labels:{actualCharges:"實際收費",discountAmount:"折扣金額",discountPercentage:"折扣百分比",externalInvoiceNumber:"外部收據 #",hmoCom:"HMO/COM",insurance:"國家保險",paymentProfile:"付款資料",paymentsDeposits:"付款/存款",pricingPanelOverrides:"定價資料覆蓋",pricingProfile:"定價資料",setFee:"設定費用"},messages:{flatDiscountMsg:"患者負責的基本費用已包含 {currency}{discountAmount} 的折扣.",flatFeeMsg:"患者負責 {currency}{setFee} 的基本費用."},navigation:{}},buttons:{add:"新增",addItem:"新增項目",addLineItem:"新增訂單項目",addValue:"新增數值",addVisit:"新增探訪",allRequests:"全部要求",barcode:"條碼",cancel:"取消",clear:"清除",close:"關",complete:"完成",delete:"刪除",dispense:"分發",edit:"編輯",filter:"篩選",fulfill:"履行",import:"輸入",loadFile:"載入檔案",newItem:"+ 新增項目",newNote:"新增筆記",newRequest:"新增要求",newRequestPlus:"+ 新增要求",newUser:"新增使用者",ok:"Ok",print:"列印",remove:"移除",returnButton:"返回",review:"檢閱",search:"搜尋",showAll:"顯示全部",showFewer:"顯示部分",update:"更新"},components:{chargesByTypeTab:{charges:"收費"},customFormManager:{buttons:{addForm:"新增表格"}},dateTimePicker:{amHour:"上午{hour}",midnight:"午夜",noon:"中午",pmHour:"下午{hour}"},imageUpload:{messages:{selectValidImageFile:"請選擇一個有效的照片"}},operativeProcedures:{buttons:{addProcedure:"新增程序"},labels:{procedure:"程序"},titles:{procedures:"程序"}},patientOrders:{buttons:{newImaging:"新增影像",newLab:"新增測試",newMedication:"新增藥物"},labels:{imagingOrderType:"影像",labOrderType:"測試",medicationOrderType:"藥物",orderType:"訂購類型"}},priceList:{charges:"{pricingType} 收費"},quantityCalc:{result:"{targetUnit} 總和：{calculated}"},quantityConv:{conversion:"一個 {name} 含有?",unit:"單位"},sortableColumn:{labels:{selectAll:"(全選)"}},takePhoto:{camera:"相機",how:"想如何加入相片",labels:{takeAPicture:"拍張照片",uploadAFile:"上傳檔案"},photo:"照片",preview:"預覽",takePhoto:"拍照片",uploadFile:"上傳檔案"},upcomingAppointments:{labels:{date:"日期",location:"地點",type:"種類",with:"與"},titles:{upcomingAppointments:"將來預約"}}},customForms:{buttons:{addForm:"加入表格"},labels:{formToAdd:"要加入之表格"},titles:{addCustomForm:"加入自訂表格"}},dashboard:{needs_user_setup:"我們建議您建立使用者帳戶",standalone_welcome:'<h4>感謝您下載 HospitalRun. </h4><p>您正在使用 HospitalRun 的獨立模式. 這個模式支援多個使用者在一台電腦. 這對於下列是理想的:</p><ul><li>評估 HospitalRun 以開發伺服器.</li><li>使用平台來支援僅需單一設備(電腦)的診所.</li></ul><p>如果您\'考慮架構一個數台設備(電腦)的HospitalRun, 我們 <a href="https://github.com/HospitalRun/hospitalrun-frontend/issues/1048" target="_blank">正在試著開發功能</a> 讓您從這單一設置升級到一般的雲端/伺服器設置.</p>',title:"歡迎來到 HospitalRun!"},dates:{long:"{years} 年 {months} 月 {days} 日",longOmitDays:"{years} 年 {months} 月",longOmitDaysPlural:"{years} 年 {months} 月",longOmitDaysYears:"{months} 月",longOmitYears:"{months} 月 {days} 日",longPlural:"{years} 年 {months} 月 {days} 日",short:"{years}年 {months}月 {days}日",shortOmitYears:"{months}月 {days}日"},diagnosis:{labels:{activeDiagnosis:"現行診斷",date:"日期",diagnosis:"診斷",secondaryDiagnosis:"次要診斷"},titles:{addDiagnosis:"新增診斷",editDiagnosis:"編輯診斷"}},errors:{accepted:"必須要接受",blank:"不能空白",confirmation:"不符合 {attribute}",empty:"不能空白",equalTo:"必須等於 {count}",even:"必須是偶數",exclusion:"已保存",greaterThan:"必須大於 {count}",greaterThanOrEqualTo:"必須大於或等於 {count}",inclusion:"不在名單內",invalid:"不符合要求",invalidNumber:"不是有效數字",lessThan:"必須小於 {count}",lessThanOrEqualTo:"必須小於或等於 {count}",notANumber:"不是一個數字",notAnInteger:"必須是一個整數",odd:"必須是奇數",otherThan:"不能等於 {count}",present:"必須是空白",result:"請先輸入一個結果",tooLong:"字數太長 (不能超過 {count} 字數)",tooShort:"字數太短 (不能低於 {count} 字數)",wrongLength:"字數不對 (必須等於 {count} 字數)"},headings:{chargedItems:"收費項目"},imaging:{alerts:{completedMessage:"影像要求已完成",completedTitle:"影像要求完成",savedMessage:"影像要求已儲存",savedTitle:"影像要求已儲存"},buttons:{newButton:"+ 新增影像"},labels:{addNewVisit:"--新增探訪--",completedBy:"完成者",radiologist:"放射科醫師",requestedNotes:"要求的筆記",resultNotes:"結果筆記"},messages:{noCompleted:"找不到已完成的項目"},pageTitle:"影像要求",sectionTitle:"影像",titles:{completedImaging:"已完成影像",editTitle:"編輯影像要求",newTitle:"新增影像要求"}},incident:{buttons:{add:"新增",addForm:"+ 新增表格",addItem:"新增表格",cancel:"取消",delete:"刪除",download:"下載",edit:"編輯",export:"輸出報告",generateRep:"生成報告",newAttachment:"+ 新增附件",newCategory:"+ 新增類型",newIncident:"+ 新增事件",newNote:"+ 新增筆記"},labels:{actions:"作用",addedBy:"由...添加",category:"類型",categoryItem:"類型表格",date:"日期",dateRecorded:"紀錄日期",department:"部門",description:"事件描述",endDate:"結束日期",givenBy:"由...提供",howToAddAttachment:"您想如何增加附件?",incidentDate:"事件日期",incidentId:"事件 ID",item:"項目",lastUpdated:"上一次更新",note:"筆記",patientId:"患者 Id",patientImpacted:"影響患者",reportType:"報告種類",reportedBy:"由...報告",reportedDate:"報告日期",reportedTo:"事件已報告給 (Full Name)",sentinelEvent:"突發事件",startDate:"開始日期",status:"狀態",statusActive:"現行",statusClosed:"完成",statusFollowup:"跟進",statusReported:"已報告",title:"標題",total:"總和",updatedBy:"由...更新"},messages:{attachmentFileRequired:"儲存附件前請先上傳檔案或拍張照片",createNew:"新增事件?",createNewIncidentCategory:"新增事件類型?",fillIn:"填入上述選項以計算分數",incidentCategorySaved:"{name} 類型已成功儲存.",noClosedIncidents:"找不到已完成的事件.",noIncidentCategoriesFound:"找不到事件類型.",noIncidents:"找不到事件.",saved:"事件報告已成功儲存.",selectExistingPatient:"請選擇一個現有的患者或不要填寫此字段."},titles:{addAttachment:"加入附件",addCategoryItem:"加入類型項目",addNote:"加入筆記",attachments:"附件",closed:"已完成事件",current:"當前",deleteAttachment:"刪除附件",deleteIncident:"刪除事件",deleteIncidentCategory:"刪除事件類型",deleteItem:"刪除項目",deleteNote:"刪除筆記",editAttachment:"編輯附件",editIncident:"編輯事件",editIncidentCategory:"編輯事件類型",editNote:"編輯筆記",general:"一般信息",history:"歷史",incidentCategories:"事件類型",incidentCategoryItem:"事件類型項目",incidentCategoryName:"事件類型名稱",incidentCategorySaved:"事件類型已儲存",incidentSaved:"事件已儲存",incidents:"事件",incidentsByCategory:"按類型顯示事件",incidentsByDepartment:"按部門顯示事件",newIncident:"新增事件",newIncidentCategory:"新增事件類型",notes:"筆記",reports:"報告"}},inventory:{edit:{cost:"單位價:",delivered:"傳遞給:",location:"調整地點:",prescription:"處方給:",pulled:"來源:",quantity:"完成數量:",reason:"原因:",returned:"患者給回:",transferredFrom:"從...轉來:",transferredTo:"轉去:"},labels:{action:"行動",add:"加入",addAdjustmentType:"加入",adjust:"調整",adjustmentDate:"調整日期",adjustmentFor:"為...調整",adjustmentType:"調整種類",aisle:"通道",aisleLocation:"通道地點",allInventory:"全部清單",allItems:"全部項目",availableQuantity:"{quantity} 可用",billTo:"記帳到",consumePurchases:"消費購買",consumptionRate:"消費率",cost:"費用",costPerUnit:"單位價",crossReference:"交叉引用",currentQuantity:"現前數量",dateCompleted:"完成日期",dateEffective:"生效日期",dateEnd:"結束日期",dateReceived:"收到日期",dateStart:"開始日期",dateTransferred:"轉移日期",daysLeft:"剩餘天數",deleteItem:"刪除項目",deliveryAisle:"發送通道",deliveryLocation:"發送地點",details:"細節",distributionUnit:"分配單位",editItem:"編輯項目",expense:"記帳到",expirationDate:"截止日期",fulfillRequest:"實現需求",fulfillRequestNow:"現在實現需求",gift:"禮物",giftInKindNo:"N",giftInKindYes:"Y",giftUsage:"禮物用途",inventoryConsumed:"庫存消耗",inventoryItem:"庫存項目",inventoryObsolence:"庫存報廢",invoiceItems:"單據項目",invoiceLineItem:"單據單項",invoiceNumber:"單據號碼",item:"項目",itemNumber:"項目號碼",items:"項目",location:"地點",locations:"地點",markAsConsumed:"標記為已消耗",name:"名稱",newItem:"新增項目",originalQuantity:"原本數量",print:"列印",printBarcode:"列印條碼",printer:"列印機",pullFrom:"從...拉入",purchaseCost:"購買價格",purchaseInfo:"購買資料",purchases:"購買",quantity:"數目 ({unit})",quantityAvailable:"可提供之數目",quantityOnHand:"現有數目",quantityRequested:"要求數目",rank:"級別",reason:"原因",remove:"移除",removeAdjustmentType:"移除",reorderPoint:"訂貨點",requestedItems:"要求項目",returnAdjustmentType:"退回",returnToVendorAdjustmentType:"退回給供應商",salePricePerUnit:"銷售單位價",save:"儲存",serialNumber:"序列號",total:"總和",totalCost:"總價碼",totalReceived:"總收入: {total}",transaction:"交易",transactions:"交易",transfer:"調動",transferFrom:"從...調動",transferTo:"調動到目的地",transferToAisle:"調動到通道地點",unit:"單位",unitCost:"單位價",vendor:"供應商",vendorItemNumber:"供應商項目編號",writeOffAdjustmentType:"註銷",xref:"外部參照"},messages:{adjust:"請調整適當地區的數目以解釋誤差 {difference}.",createRequest:"加入新需求？",itemNotFound:"找不到庫存項目 <strong>{item}</strong>.<br>如果要加入新的庫存項目, 請填入以下資料.<br>或選擇取消以返回.",loading:"載入交易...",noItems:"找無項目.",noRequests:"找無要求.",purchaseSaved:"庫存購買已成功儲存.",quantity:"總數目 <strong>({quantity})</strong> 不吻合地點的總數目 <strong>({locationQuantity})</strong>.",removeItem:"確定要從庫存中移除此項目？",removeItemRequest:"確定要從要求中移除此項目？",requestFulfilled:"庫存要求已完成.",requestUpdated:"庫存要求已更新.",warning:"加入前請填入必要的欄位 (有 * 標註) 並更正錯誤."},reports:{adjustment:"詳細的調整",daysSupply:"庫存能支援天數",expenseDetail:"詳細的費用",expenseSum:"費用概要",expiration:"截止日期",export:"輸出報告",fields:"要包括之欄位",finance:"財政概要",generate:"生成報告",invLocation:"按地點顯示庫存",invValuation:"庫存計價",purchaseDetail:"購買詳細資料",purchaseSum:"購買概要",reportType:"報告種類",rows:{adjustments:"調整",adjustmentsTotal:"總調整",balanceBegin:"初期結餘",balanceEnd:"最終結餘",category:"類別",consumed:"已消耗",consumedGik:"已消耗GiK",consumedGikTotal:"已消耗GiK總和",consumedPuchases:"已消耗購買",consumedPurchasesTotal:"已消耗購買總和",consumedTotal:"已消耗總和",errInFinSum:"生成財政概況報告時發生錯誤: ",errInFindPur:"依購買搜尋庫存項目時發生錯誤: ",errInFindReq:"依要求搜尋庫存項目時發生錯誤: ",expensesFor:"...的費用: ",noAccount:"(沒有帳戶)",subtotal:"小計: ",subtotalFor:"小計：{category} - {account}: ",total:"總和: ",totalFor:"{var}總和: ",totalPurchases:"購買總和",transfer1:"{quantity}來自{location}",trasnfer2:"從: {source} 到: {target}"},stockTransferDetail:"庫存傳遞詳細資料",stockTransferSum:"庫存傳遞概要",stockUsageDetail:"詳細庫存使用資料",stockUsageSum:"庫存使用概要",titleDateRange:"{name} 報告 {startDate} - {endDate}",titleSingleDate:"{name} 報告 {date}"},titles:{addPurchase:"加入購買",addRequest:"新增需求",adjustment:"調整",editPurchase:"編輯購買",editRequest:"編輯需求",inventoryItem:"新增庫存項目",inventoryReport:"庫存報告",purchaseSaved:"庫存購買已儲存",quickAddTitle:"新增庫存項目",removeItem:"移除項目",requestFulfilled:"需求已滿足",requestUpdated:"需求已更新",transfer:"搬遷項目",warning:"警告!!!!!"}},labels:{action:"行動",actions:"行動",addNewOutpatientVisit:"--加入門診病人探訪--",address:"地址",age:"年齡",allDay:"整天",allItems:"所有項目",amount:"數目",anesthesia:"麻醉",assisting:"助理",balanceDue:"餘額到期",billDate:"收費日期",billTo:"跟...收費",category:"類別",completed:"已完成",country:"國家",cptcode:"CPT 代碼",creditTo:"歸於",currencySymbol:"$",date:"日期",dateCompleted:"完成日期",dateOfBirth:"出生年月日",dateOfBirthShort:"生日",datePaid:"付款日期",dateRequested:"要求的日期",delete:"刪除",deleteRequest:"刪除要求",deleteUser:"刪除使用者",department:"部門",description:"描述",discount:"折扣",displayName:"顯示名稱",docRead:"已讀文件",docWritten:"已填文件",edit:"編輯",editUser:"編輯使用者",email:"電子郵件",endDate:"結束日期",endTime:"結束時間",excess:"過量",expenseTo:"由...付費",fileLoadSuccessful:"成功載入檔案",fileName:"檔案名稱",fileToLoad:"檔案載入",from:"來自",fulfill:"實現",fulfillRequest:"實現需求",fulfillRequestNow:"現在實現需求",fulfilled:"已實現",grandTotal:"累計",id:"Id",imageOrders:"圖像訂製",imagingType:"影像種類",importFile:"載入檔案",invoiceId:"單據ID",labOrders:"指定試驗",lineItems:"訂單項目",loading:"正在載入",location:"地點",lookupType:"查找種類",medication:"藥物",name:"名稱",newItem:"+ 新增項目",newUser:"新增使用者",note:"筆記",notes:"筆記",number:"數字",on:"上",password:"密碼",patient:"患者",payments:"付款",physician:"醫師",prescriber:"處方師",prescription:"處方",prescriptionDate:"處方日期",price:"價格",print:"列印",procedures:"程序",provider:"提供者",pullFrom:"從...拉入",quantity:"數目",remarks:"備註",requestedBy:"要求者",requestedOn:"要求的日期",requests:"要求",result:"結果",results:"結果",role:"角色(任務)",search:"搜尋",sex:"性別",startDate:"開始日期",startTime:"開始時間",status:"狀態",takenBy:"由...採取",to:"給",total:"總和",type:"種類",userCanAddNewValue:"使用者可加入數值",username:"用戶名",value:"數值",view:"檢視",visit:"探訪",with:"與"},labs:{alerts:{requestCompletedMessage:"測試要求已完成.",requestCompletedTitle:"測試要求已完成",requestSavedMessage:"測試要求已儲存.",requestSavedTitle:"測試要求已儲存"},buttons:{newButton:"+ 新增測試"},completedTitle:"已完成的測試",deleteTitle:"刪除要求",editTitle:"編輯測試要求",labels:{addNewVisit:"--加入新探訪--",labType:"測試種類"},messages:{createNewRecord:"加入新紀錄?",noCompleted:"找無已完成的項目.",noItemsFound:"找無測試."},newTitle:"新增測試要求",requestsTitle:"測試要求",sectionTitle:"測試"},languageName:"繁體中文",loading:{messages:{0:"飛行最快的蝴蝶可以達到每小時12英里. 有些飛蛾能達到每小時25英里的飛行速度!",1:"貓頭鷹是唯一能識別藍色的鳥類.",10:"舌頭是您體內唯一僅附在最後端的肌肉.",11:"駱駝有三個眼皮來防護風吹砂.",2:"貓可以發出超過一百種聲音，狗只能發出十種.",3:"人類說話時運用了72個不同的肌肉.",4:"非洲上的語言超過一千種.",5:"Erythrophobe 這個詞形容一個容易臉紅的人.",6:"世上最常見的恐懼症是怕痛的恐懼.",7:"當您站立不動的時候，您的身體運用了300個肌肉來平衡自己.",8:"特定青蛙能在被結凍又解凍後繼續生存.",9:"人體的眼睛從出生就保持同樣的大小, 但鼻子和耳朵會一直持續成長."},progressBar:{progress:"{progressBarValue}% 完成"}},login:{labels:{password:"密碼",signIn:"登入",username:"用戶名"},messages:{error:"用戶名或密碼不正確.",offlineError:"離線時無法登入. 請連上網路後再試.",signIn:"請登入"}},medication:{alerts:{fulfilledTitle:"藥物要求完成",returnedMessage:"藥物已標記為退還.",returnedTitle:"退還藥物",savedMessage:"藥物紀錄已儲存.",savedTitle:"藥物要求已儲存"},buttons:{dispenseMedication:"發放配藥",newButton:"+ 新增要求",returnMedication:"退還藥物"},labels:{adjustmentDate:"調整日期",creditToAccount:"歸於...帳戶",quantityDispensed:"分配數量",quantityDistributed:"分發數量",quantityRequested:"要求數量",quantityToReturn:"要還的數量",refills:"充值",returnAisle:"退還通道",returnLocation:"退還地點",returnReason:"退還原因/備註"},messages:{createNew:"新增藥物要求?"},pageTitle:"藥物要求",returnMedication:"退還藥物",sectionTitle:"藥物",titles:{completedMedication:"完成藥物",editMedicationRequest:"編輯藥物要求",newMedicationRequest:"新增藥物要求"}},messages:{createNewRecord:"建立新紀錄?",createNewUser:"建立新使用者?",delete:"確定要刪除 {name}?",delete_plural:"確定要刪除這些 {name}?",delete_singular:"確定要刪除 {name}?",forAuthorizedPersons:"這報告只提供給特定授權人.",newPatientHasToBeCreated:"必須建立一個新的患者...請稍候..",noHistoryAvailable:"沒有歷史.",noItemsFound:"找無項目.",noNotesAvailable:"沒有其他的其他的臨床報告可提供給此次探訪.",noUsersFound:"找無使用者.",onBehalfOf:"代表",reportError:"生成報告時發生錯誤. 請通報錯誤給系統管理員.",requiredFieldsCorrectErrors:"加入前請填入必要的欄位 (有 * 標註) 並更正錯誤.",saveActionException:"嘗試儲存時發生錯誤: {message}",sorry:"抱歉，發生錯誤...",userHasBeenSaved:"使用者已儲存.",userSaved:"使用者已儲存"},models:{appointment:{labels:{allDay:"整天",appointmentDate:"日期",appointmentType:"種類",endDate:"結束日期",location:"地點",notes:"筆記",patient:"患者",provider:"與",startDate:"開始日期",status:"狀態",type:"種類"},names:{plural:"預約",singular:"預約"}},attachment:{names:{plural:"附件",singular:"附件"}},form:{names:{plural:"表格",singular:"表格"}},imaging:{names:"影像",request:{plural:"影像要求",singular:"影像要求"}},incident:{names:{plural:"事件",singular:"事件"}},item:{names:{plural:"項目",singular:"項目"}},lab:{names:{plural:"測試",singular:"測試"},request:{plural:"測試要求",singular:"測試要求"}},medication:{names:{plural:"藥物",singular:"藥物"},request:{plural:"藥物要求",singular:"藥物要求"}},note:{names:{plural:"筆記",singular:"筆記"}},patient:{labels:{name:"名稱"},names:{singular:"患者"}},procedure:{names:{plural:"程序",singular:"程序"}},user:{names:{plural:"使用者",singular:"使用者"}},visit:{names:{plural:"探訪",singular:"探訪"}},vital:{names:{plural:"命脈資料",singular:"命脈資料"}}},navigation:{about:"關於HospitalRun",actions:{login:"登入",logout:"登出",selectLanguage:"選擇語言"},administration:"行政",billing:"計費",imaging:"影像",incident:"事件",inventory:"庫存",labs:"測試",medication:"藥物",messages:{logoutFailed:"現在無法登出. 離線時無法登出."},patients:"患者",scheduling:"調度",subnav:{actions:"動作",addAppointment:"新增預約",addressFields:"地址欄位",admittedPatients:"收入患者",appointmentSearch:"搜尋預約",appointmentsCalendar:"預約行事曆",appointmentsThisWeek:"本週預約",cashier:"收銀員",completed:"已完成",currentIncidents:"現行事件",customForms:"自訂表格",dispense:"配藥",history:"歷史",incidentCategories:"事件類別",inventoryReceived:"收到的庫存",inventoryReceivedPlus:"+ 收到的庫存",invoices:"清單",items:"項目",loadDB:"啟動數據庫",lookupLists:"查找列表",newIncident:"新增事件",newInvoice:"新增清單",newPatient:"新增患者",newRequest:"新增要求",newUser:"新增使用者",outpatient:"門診病人",patientListing:"患者名單",priceProfiles:"價格概況",prices:"價格",printHeader:"列印標題",reports:"報告",requests:"要求",returnMedication:"退還藥物",scheduleSurgery:"排定手術",textReplacements:"短代碼",theaterSchedule:"手術室時間表","today'sAppointments":"本日預約",userRoles:"使用者角色(任務)",users:"使用者",workflow:"工作流程"},titles:{logoutFailed:"登出失敗"}},operationReport:{labels:{additionalNotes:"其他備註",assistant:"助理",caseComplexity:"案件複雜度",operationDescription:"程序描述",preOpPrimaryDiagnosis:"程序前主要診斷",preOpSecondaryDiagnosis:"程序前次要診斷",surgeon:"手術師",surgeryDate:"手術日期"},messages:{reportSaved:"程序報告已成功儲存."},titles:{editTitle:"編輯程序報告",newTitle:"新增程序報告",reportSaved:"報告已儲存"}},operativePlan:{buttons:{completePlan:"完成計畫"},labels:{additionalNotes:"其他備註",admissionInstructions:"入院後指導",caseComplexity:"案件複雜度",completedStatus:"已完成",droppedStatus:"被取消",operationDescription:"程序描述",plannedStatus:"已計劃",status:"狀態",surgeon:"手術師"},messages:{planCompleted:"程序計畫已完成. 您將被導向程序報告.",planSaved:"程序計畫已儲存."},titles:{editTitle:"編輯程序計畫",newTitle:"新增程序計畫",planCompleted:"計畫已完成",planSaved:"計畫已儲存"}},patients:{buttons:{addContact:"新增聯絡人",addExpense:"新增費用",addFamilyMember:"新增家庭成員",addOperativePlan:"新增程序計畫",backToPatients:"回到患者名單",download:"下載",editOperativePlan:"現有程序計畫",newAppointment:"新增預約",newImaging:"新增影像",newLab:"新增測試",newMedication:"新增藥物",newPatient:"+ 新增患者",newPhoto:"新增照片",newVisit:"新增探訪",patientCheckIn:"患者登記",scheduleSurgery:"安排手術時間"},labels:{admissionDate:"入院日期",admit:"收入患者",bloodType:"血型",caption:"說明",civilStatus:"公民身份",clinic:"診所地點",contacts:"聯絡人",cost:"費用",dateOfBirth:"出生年月日",dateProcessed:"處理日期",dischargeDate:"出院日期",dob:"生日",education:"學歷",email:"電子郵件",externalPatientId:"外部患者 Id",firstName:"名",income:"收入",insurance:"保險",lastName:"姓",middleName:"中間名",monthlyCost:"月費",occupation:"職業",operativePlan:"程序計畫",parent:"家長/監護人",patientDays:"患者天數",patientType:"患者類型",patientTypeCharity:"慈善機構",patientTypePrivate:"私人",phone:"電話",placeOfBirth:"出生地點",primaryDiagnosis:"主要診斷",referredBy:"由...推薦",referredDate:"推薦日期",relationship:"與患者的關係",relationships:"關係",religion:"宗教",secondaryDiagnosis:"次要診斷",sex:"性別",sexNotEntered:"性別空白",sources:"來源",status:"患者狀態",totalMontlyExpense:"總共月費"},messages:{areYouSureDelete:"確定要刪除 {object}?",createNewPatient:"建立新的患者報告?",deletingPatient:"正在刪除患者與其所擁有的資料",noPatientsFound:"找無患者.",notFoundQuickAdd:"找不到患者 <strong>{patientFullName}</strong>. 若您想建立新患者, 請填入以下資料. 或選擇取消以返回.",photoFileRequired:"儲存照片前請先上傳檔案或拍張照片.",savedPatient:"患者的 {displayName} 資料已成功儲存."},navigation:{appointments:"預約",general:"取消",history:"歷史",imaging:"影像",labs:"測試",medication:"藥物",photos:"照片",socialWork:"社區工作",visits:"探訪"},notes:{newNote:"為...新增備註",onBehalfOfCopy:"代表",onBehalfOfLabel:"代表",pleaseSelectAVisit:"請選擇一個探訪",updateNote:"從...更新資料"},titles:{addContact:"新增聯絡人",addPhoto:"新增照片",additionalContacts:"其他聯絡人",admissionsDetail:"入院細節",admissionsSummary:"入院概要",admittedPatients:"入院患者",delete:"刪除患者",deleteContact:"刪除聯絡人",deleteExpense:"刪除費用",deleteFamilyMember:"刪除家庭成員",deletePatientRecord:"刪除患者紀錄",deletePhoto:"刪除照片",diagnosticTesting:"診斷測試",dischargesDetail:"出院細節",dischargesSummary:"出院概要",edit:"編輯患者",editPhoto:"編輯照片",expenses:"費用",familyInfo:"家庭資料",familyInformation:"家庭資料",new:"新增患者",outpatientsForDate:"{visitDate} 的門診病人",patient:"患者報告",patientListing:"患者名單",patientReport:"患者報告",patientStatus:"患者狀態",proceduresDetail:"程序細節",proceduresSummary:"程序概要",savedPatient:"患者已儲存",socialWork:"費用",todaysOutpatients:"本日門診病人",totalPatientDays:"總和患者天數",totalPatientDaysDetailed:"總和患者天數(細節)",visit:"探訪"}},pricing:{labels:{discountAmount:"折扣金額",discountPercentage:"折扣百分比",setFee:"設定費用"},navigation:{}},print:{invoice:{labels:{billedBy:"由...收費:",billedDate:"收費日期:",dateAdmitted:"入院:",dateDischarged:"出院:",dischargeNotes:"出院備註:",patientAddress:"地址:",patientAge:"年齡:",patientId:"患者 #:",patientName:"患者姓名:",remarks:"備註:",spacer:"__________________________________________"},messages:{whereConducted:"接產中扣了..."},titles:{billingStatement:"帳單",patientMember:"患者成員",patients:"患者",relContact:"關係/聯絡電話"}}},procedures:{buttons:{addMedication:"新增藥物"},labels:{medicationUsed:"使用之藥物"},messages:{saved:"程序紀錄已儲存."},titles:{addChargeItem:"新增收費項目",addMedicationUsed:"新增使用藥物",deleteChargeItem:"刪除收費項目",deleteMedicationUsed:"新增使用藥物",edit:"編輯程序",editChargeItem:"編輯收費項目",editMedicationUsed:"編輯使用藥物",medicationUsed:"使用藥物",new:"新增程序",saved:"程序已儲存"}},reports:{labels:{admissionDate:"入院日期",allProcedures:"已完成所有程序",completedBy:"由...完成",dischargeDate:"出院日期",examiner:"審查者",images:"照片",labs:"測試",location:"探訪地點",medications:"藥物",nextAppointment:"下個預約",nextAppointments:"下個預約",notes:{author:"作者",date:"日期",title:"備註"},operativePlan:{description:"程序描述",instructions:"入院後指導",procedures:"已計劃程序",title:"程序計畫"},primaryDiagnosis:"主要診斷",procedures:"程序",secondaryDiagnosis:"次要診斷",visitDate:"探訪日期",visitType:"探訪類別"},messages:{delete:"確定要刪除此報告?",saved:"報告已成功儲存."},titles:{dischargeReport:"出院報告",newDischargeReport:"新增出院報告",newOPDReport:"新增OPD報告",opdReport:"OPD報告",saved:"報告已儲存"}},user:{plusNewUser:"+ 新增使用者",usersPageTile:"使用者名單"},visits:{buttons:{addDiagnosis:"新增診斷",checkIn:"報到",checkOut:"退房",discharge:"出院",newAppointment:"新增預約",newDischargeReport:"新增出院報告",newOPDReport:"新增OPD報告",newProcedure:"新增程序",newVitals:"新增命脈資料"},labels:{appointment:"預約",authoredBy:"由...創作",checkInTime:"報到",checkOutTime:"退房",createNewPatient:"建立新患者",diagnosis:"診斷",examiner:"審查者",finalDiagnosis:"最後診斷",haveAppointment:"Y",haveDoneOrders:"Y",noAppointment:"N",ordersDone:"已完成訂單",ordersNotDone:"N",patientToCheckIn:"要報到之患者",procedure:"程序",procedureDate:"程序日期",reasonForVisit:"探訪原因",reportType:"報告類型",status:"探訪狀態",statusAdmitted:"收入醫院",statusCheckedIn:"已報到",statusCheckedOut:"已離開",statusDischarged:"已出院",visitDate:"探訪日期",visitInformation:"探訪資料",visitType:"探訪類型"},messages:{checkOut:"確定要把 {patientName} 退房?",checkedOut:"{patientName} 已被准許離開.",discharged:"{patientName} 已出院.",patientCheckedIn:"{patientName} 已報到.",patientCreatedAndCheckedIn:"{patientName} 已建立並報到.",visitAndPatientSaved:"探訪與患者紀錄已儲存.",visitSaved:"探訪紀錄已儲存."},navigation:{charges:"收費",notes:"備註",orders:"訂購",procedures:"程序",reports:"報告",vitals:"命脈資料"},titles:{additionalDiagnoses:"其他診斷",checkOut:"患者離開",checkedIn:"患者報到",checkedOut:"患者退房",discharged:"患者出院",editVisit:"編輯探訪",newVisit:"新增探訪",patientCheckIn:"患者報到",visitSaved:"探訪已儲存"}},vitals:{labels:{dateRecorded:"紀錄之日期",dbp:"出生年月日",heartRate:"心率",height:"身高",respiratoryRate:"呼吸頻率",sbp:"SBP",temperature:"體溫",weight:"體重"}}}}),define("hospitalrun/translations/ur",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={admin:{address:{address1Label:"ایڈریس 1 لیبل",address2Label:"ایڈریس 2 لیبل",address3Label:"ایڈریس 3 لیبل",address4Label:"ایڈریس 4 لیبل",addressLabel:"ایڈریس",editTitle:"ایڈریس آپشنز",include1Label:"1 لیبل شامل کریں",include2Label:"2 لیبل شامل کریں",include3Label:"3 لیبل شامل کریں",include4Label:"4 لیبل شامل کریں",messages:{addressSaved:"ایڈریس آپشنز محفوظ کرلیے گۓ ہیں"},newTitle:"ایڈریس آپشنز",titles:{optionsSaved:"آپشنز محفوظ ہوگۓ"}},addressOptions:"ایڈرس آپشنز",customForms:{buttons:{addField:"فیلڈ کا اضافہ کریں",moveDown:"نیچے منتقل کریں",moveUp:"اوپر منتقل کریں",newForm:"+ نیا فام",preview:"مشاہدہ کریں"},labels:{alwaysInclude:"ہمیشہ شامل",checkbox:"چیک باکس",colSpan:"پھیلاؤ کے کالموں کی تعداد",columns:"کالم",customForm:"کسٹم فام",formName:"فارم کا نام",formType:"فارم کی قسم",includeOtherOption:"دیگر آپشن شامل کریں",label:"لیبل",newForm:"نیا فارم",operativePlanFormType:"آپریٹو پلان اور رپورٹ",otherOptionLabel:"دیگر آپشن لیبل",patientFormType:"مریض",property:"خصوصیت",radio:"ریڈیو",select:"ڈراپ ڈاؤن",socialworkFormType:"سماجی کام",text:"عبارت",textarea:"بڑی عبارت",visitFormType:"دورہ"},messages:{formSaved:"فارم محفوظ ہوگیا ہے {name} "},titles:{checkboxValues:"چیک باکس میں قیمتیں",customForms:"کسٹم فارمز",deleteForm:"کسٹم فارم حذف کریں",dropDownValues:"ڈراپ ڈاؤن فہرست",editCustomForm:"کسٹم فارم میں ترمیم کریں",fields:"قطعات",formSaved:"فارم محفوظ ہوگیا",newCustomForm:"نئے کسٹم فارم",radioValues:"ریڈیو میں قیمتیں"}},header:{messages:{},titles:{}},loadDb:"DB لوڈ کریں",loaddb:{displayAlertMessage:"لوڈ کرنے کے لئے فائل کو منتخب کیجیے.",displayAlertTitle:"لوڈ کرنے کے لئے فائل کو منتخب کریں",editTitle:"DB لوڈ کریں",errorDisplayAlertMessage:"ڈیٹا بیس امپورٹ نہیں ہوسکتی. یہ خامی  ہے {error}",errorDisplayAlertTitle:"لوڈ کرنے میں خامی",progressMessage:"آپ کا ڈیٹابیس لوڈ کیا جا رہا ہے، براۂ مہربانی انتظار کریں.",progressTitle:"ڈیٹابیس لوڈ ہو رہا ہے"},lookup:{aisleLocationList:"انوینٹری راہداری مقامات",alertImportListMessage:"امپورٹ کرنے کے لئے فائل کو منتخب کیجیے",alertImportListSaveMessage:"تلاش فہرست امپورٹ ہو گئی ہے.",alertImportListSaveTitle:"لسٹ امپورٹ ہوگئ",alertImportListTitle:"امپورٹ کرنے کے لئے فائل کو منتخب کریں",alertImportListUpdateMessage:"تلاش فہرست محفوظ ہو گئی ہے.",alertImportListUpdateTitle:"فہرست محفوظ",anesthesiaTypes:"اینستھیزیا کی اقسام",anesthesiologists:"اینستھیسیالوجسٹس",billingCategories:"بلنگ کی اقسام",clinicList:"کلینک مقامات",countryList:"ممالک",cptCodeList:"CPT کوڈز",diagnosisList:"تشخیص",edit:{template:{addTitle:"قیمت شامل کریں",editTitle:"قیمت ترمیم کریں",labelTitle:"قدر",updateButtonTextAdd:"شامل کریں",updateButtonTextUpdate:"اپ ڈیٹ"}},expenseAccountList:"اخراجات اکاؤنٹس",imagingPricingTypes:"امیجنگ قیمتوں کا تعین کی اقسام",inventoryTypes:"انوینٹری کی اقسا م",labPricingTypes:"لیب کی قیمتوں کا تعین کی اقسام",pageTitle:"تلاش فہرستیں",patientStatusList:"مریض سٹیٹس کی فہرست",physicianList:"ڈاکٹر",procedureList:"طریقہ کار",procedureLocations:"طریقہ کار مقامات",procedurePricingTypes:"ضابطے کی قیمتوں کا تعین کی اقسام",radiologists:"ریڈیولوجسٹ",titles:{deleteLookupValue:"قدر حذف کریں"},unitTypes:"یونٹ کی اقسام",vendorList:"وینڈر",visitLocationList:"دورہ مقامات",visitTypes:"دورہ کی اقسا م",wardPricingTypes:"وارڈ کی قیمتوں کا تعین کی اقسام",warehouseList:"انوینٹری مقامات"},lookupLists:"تلاش فہرستیں",roles:{capability:{addAllergy:"الرجی کا اضافہ کریں",addAppointment:"ملاقات اضافہ",addBillingDiagnosis:"بلنگ تشخیص شامل کریں",addCharge:"چارج شامل کریں",addDiagnosis:"تشخیص کے لئے شامل کریں",addImaging:"امیجنگ کا اضافہ کریں",addInventoryItem:"انوینٹری آئٹم شامل کریں",addInventoryPurchase:"انوینٹری کی خریداری شامل کریں",addInventoryRequest:"انوینٹری کی درخواست شامل کریں",addInvoice:"رسید شامل کریں",addLab:"لیب شامل کریں",addMedication:"ادویات شامل",addNote:"نوٹ شامل",addOperationReport:"آپریشن رپورٹ شامل کریں",addOperativePlan:"آپریٹو پلان شامل کریں",addPatient:"مریض شامل کریں",addPayment:"ادائیگی شامل کریں",addPhoto:"تصویر کا اضافہ کریں",addPricing:"قیمتوں کا تعین شامل کریں",addPricingProfile:"قیمتوں کا تعین پروفائل شامل کریں",addProcedure:"ضابطے شامل کریں",addSocialwork:"سوشل ورک شامل",addVisit:"دورہ شامل کریں",addVitals:"vitals شامل کریں",adjustInventoryLocation:"انوینٹری مقام کو درست کریں",admin:"انتظامیہ",admitPatient:"مریض جمع کریں",appointments:"ملاقاتیں",billing:"بلنگ",completeImaging:"مکمل امیجنگ",completeLab:"مکمل لیب",defineUserRoles:"صارف کے کردار کی وضاحت کریں",deleteAppointment:"ملاقات حذف کریں",deleteDiagnosis:"تشخیس حذف کریں",deleteImaging:"امیجنگ حذف کریں",deleteInventoryItem:"حذف انوینٹری آئٹم",deleteInvoice:"رسید کو حذف کریں",deleteLab:"لیب حذف کریں",deleteMedication:"ادویات حذف کریں",deleteNote:"نوٹ حذف کریں",deletePatient:"مریض کو حذف کریں",deletePhoto:"تصویر حذف",deletePricing:"قیمتوں کا تعین حذف کریں",deletePricingProfile:"قیمتوں کا تعین پروفائل حذف کریں",deleteProcedure:"ضابطہ حذف کریں",deleteSocialwork:"سماجی کام حذف کریں",deleteVisit:" دورہ حذف کریں",deleteVitals:" vitals حذف کریں",dischargePatient:"تخریج مریض",editInvoice:"رسید میں ترمیم کریں",fulfillInventory:"انوینٹری پورا کریں",fulfillMedication:"ادویات پورا کریں",imaging:"امیجنگ",inventory:"انوینٹری",invoices:"رسیدیں",labs:"لیبز",loadDb:"لوڈ کریں ڈیٹا بیس",medication:"ادویات",overrideInvoice:"رسید کو منسوخ کردے",patientReports:"مریض کی رپورٹیں",patients:"مریض",pricing:"قیمتوں کا تعین",updateConfig:"اپ ڈیٹ کی ترتیب",visits:"دورے"},messages:{roleSaved:"{roleName} کردار محفوظ ہوگیا ہے."},titles:{roleSaved:"کردار محفوظ ہوگیا ہے"}},textReplacements:{},userRoles:"صارف کے کردار",users:"صارفین",visitForms:{labels:{followup:"فالواپ",form:"فارم",initial:"ابتدائی",visitType:"دورہ کی قسم"},titles:{visitForms:"دورہ فارم"}},workflow:{admissionDepositLabel:"داخلہ جمع کی ضرورت",clinicPrepaymentLabel:"کلینک قبل از استعمال ادائیگی کی ضرورت",editTitle:"ورک فلو آپشنز",followupPrepaymentLabel:"تعاقب قبل از استعمال ادائیگی کی ضرورت",messages:{optionsSaved:"ورک فلو آپشنز محفوظ ہوگۓ ہیں"},newTitle:"ورک فلو آپشنز",outpatientImagingLabel:"بیرونی مریض کی امیجنگ قبل از استعمال ادائیگی کی ضرورت",outpatientLabLabel:"بیرونی مریضوں کی لیب قبل از استعمال ادائیگی کی ضرورت",outpatientMedicationLabel:"بیرونی مریضوں کی ادویات قبل از استعمال ادائیگی کی ضرورت",titles:{optionsSaved:"آپشنز محفوظ ہوگۓ"},workflowLabel:"فلو آپشنز"}},alerts:{errorExclamation:"خرابی !!!!",pleaseWait:"برائے مہربانی انتظار کریں",reportError:" رپورٹ کی تیاری میں خرابی",warningExclamation:"انتباہ !!!!"},allergies:{buttons:{addAllergy:"الرجی شامل کریں"},labels:{allergyName:"نام",patientAllergy:"مریض کی الرجی"},titles:{addAllergy:"الرجی شامل کریں",editAllergy:"الرجی میں ترمیم کریں"}},application:{messages:{sessionExpired:"آپ کا سیشن متروک ہو گیا ہے۔ کاروائی جاری رکھنے کے لاگ ان کریں"},titles:{sessionExpired:"سیشن کی مدت ختم ہوگئی"}},appointments:{buttons:{newButton:"+ نئی ملاقات",scheduleSurgery:" + سرجری کا وقت مقرر کریں"},calendarTitle:" ملاقات کا کیلنڈر",currentScreenTitle:"ملاقات کی فہرست",editTitle:"ملاقات میں ترمیم کریں",labels:{noLocation:"کوئی مقام نہیں",selectedStartingDate:"اس تاریخ پر یا اس کے بعد کی ملاقاتیں دیکھیں"},messages:{appointmentSaved:"  - مریض کے  ساتھ ملاقات محفوظ کر لی گئی ہے {patient}",endTimeLaterThanStart:"براہ مہربانی وقت آغاز کے بعد کا ختم وقت منتخب کریں۔"},missed:"چوک جانے والی ملاقاتیں",newTitle:"نئی ملاقات",searchTitle:"ملاقاتیں تلاش کریں",sectionTitle:"ملاقاتیں",thisWeek:"اس ہفتہ کی ملاقاتیں",titles:{appointmentSaved:"ملاقات محفوظ کر لی گئی",editSurgicalAppointment:"سرجری کی ملاقات میں ترمیم کریں",newSurgicalAppointment:"نئی سرجری کی ملاقات",theaterSchedule:"تھیٹر اوقات نامہ"},todayTitle:"آج کی ملاقاتیں"},billing:{alerts:{noInvoiceFound:"کوئی رسید نہیں ملی",noPricingItems:"کوئی قیمتوں کے تعیں والی اشیاء نہیں ملی",noPricingProfiles:"کوئی قیمتوں کے تعیں والی پروفائل نہیں ملی"},buttons:{addOverride:"منسوخ شامل کریں",createInvoice:"ایک رسید بنائیں؟"},labels:{actualCharges:"اصل قیمت",discountAmount:"ڈسکاؤنٹ رقم",discountPercentage:"رعایت فی صد",externalInvoiceNumber:"بیرونی رسید #",hmoCom:"HMO / COM",insurance:"قومی بیمہ",paymentProfile:"ادائیگی پروفائل",paymentsDeposits:"ادائیگی / جمع کھاتہ",pricingPanelOverrides:"قیمتوں کا تعین پروفائل کی منسوخی",pricingProfile:"قیمتوں کا تعین پروفائل"},messages:{},navigation:{}},buttons:{add:"شامل کریں",addItem:"آئٹم شامل کریں",addLineItem:"لائن آئٹم شامل کریں",addValue:"قیمت جمع کریں",addVisit:"دورہ میں شامل کریں",allRequests:"تمام درخواستیں",barcode:"بارکوڈ",cancel:"منسوخ کریں",clear:"صاف",close:"بند کریں",complete:"مکمل",delete:"حذف کریں",dispense:"تقسیم",edit:"تصیح",filter:"فلٹر",fulfill:"پورا کریں",import:" امپورٹ کریں",loadFile:"فائل لوڈ کریں",newItem:"+ نیا آئٹم",newNote:"نیا نوٹ",newRequest:"نئی درخواست",newRequestPlus:"+ نئی درخواست",newUser:"نیا صارف",ok:"ٹھیک ہے",remove:"دور کریں",returnButton:"واپسی",search:"تلاش کریں",showAll:"سارے دکھائیں",showFewer:"کم دکھائیں",update:"اپ ڈیٹ"},components:{chargesByTypeTab:{charges:"چارجز"},customFormManager:{buttons:{addForm:"فارم کا اضافہ کریں"}},dateTimePicker:{amHour:"{hour} AM",midnight:"آدھی رات",noon:"دوپہر",pmHour:"{hour} PM"},imageUpload:{messages:{}},operativeProcedures:{buttons:{addProcedure:"ضابطے شامل کریں"},labels:{procedure:"طریقہ کار"},titles:{procedures:"طریقہ کار/ ضابطے"}},patientOrders:{buttons:{newImaging:"نئی امیجنگ",newLab:"نئی لیب",newMedication:"نئی ادویات"},labels:{imagingOrderType:"امیجنگ",labOrderType:"لیب",medicationOrderType:"ادویات",orderType:"آرڈر کی قسم"}},priceList:{charges:"{pricingType} چارجز"},quantityCalc:{result:"{targetUnit} کل: {calculated}"},quantityConv:{conversion:" میں کیا شامل ہے؟ {name} 1",unit:"اکائی"},sortableColumn:{labels:{selectAll:"(تمام منتخب کریں)"}},takePhoto:{camera:"کیمرہ",how:"آپ ایک تصویر کو کس طرح شامل کرنا چاہتے ہیں؟",labels:{},photo:"تصویر",preview:"پیش نظارہ",takePhoto:"تصویر کھینچیں",uploadFile:"فائل اپ لوڈ کریں"},upcomingAppointments:{labels:{date:"تاریخ",location:"مقام",type:"قسم",with:"کے ساتھ"},titles:{upcomingAppointments:"عنقریب آنے والی ملاقاتیں"}}},customForms:{buttons:{addForm:"فارم شامل کریں"},labels:{formToAdd:"شامل کرنے کے لئے فارم"},titles:{addCustomForm:"کسٹم فارم شامل کریں"}},dashboard:{title:"آپ کیا کرنا چاہیں گے؟"},dates:{long:"دن {days} مہینے {months} سال {years}",longOmitDays:"مہینے {months} سال {years}",longOmitDaysPlural:"مہینے {months} سال {years}",longOmitDaysYears:"مہینے {months}",longOmitYears:"دن {days} مہینے {months}",longPlural:"دن {days} مہینے {months} سال {years}",short:"د{days} م{months} س{years}",shortOmitYears:"د{days} م{months}"},diagnosis:{labels:{activeDiagnosis:"فعال تشخیص",date:"تاریخ",diagnosis:"تشخیص",secondaryDiagnosis:"ثانوی تشخیص"},titles:{addDiagnosis:"تشخیص کے لئے شامل کریں",editDiagnosis:"تشخیص میں ترمیم کریں"}},errors:{accepted:"قبول کرنا ضروری",blank:"خالی نہیں رہ سکتی",confirmation:"کے مماثل نہیں ہے {attribute}",empty:"خالی نہیں ہو سکتا",equalTo:"کے برابر ہونا چاہیے {count}",even:"جفت ہونا ضروری ہے",exclusion:"مخصوص ہے",greaterThan:"سے زیادہ ہونا چاہیے {count}",greaterThanOrEqualTo:"سے زیادہ یا برابر ہونا چاہیے {count}",inclusion:"فہرست میں شامل نہیں ہے",invalid:"غلط ہے",invalidNumber:"درست نمبر نہیں",lessThan:"سے کم ہونا چاہیے {count}",lessThanOrEqualTo:"سے کم یا برابر ہونا چاہیے {count}",notANumber:"ایک نمبر نہیں ہے",notAnInteger:"ایک عددی ہونا لازمی ہے",odd:"طاق ہونا ضروری ہے",otherThan:"سے مختلف ہونا چاہیے {count}",present:"خالی ہونا ضروری ہے",result:"براے مہربانی مکمل کرنے سے پہلے نتیجہ درج کریں",tooLong:"حروف {count}بہت طویل ہے، زیادہ سے زیادہ ",tooShort:"حروف{count}بہت مختصر ہے کم از کم ",wrongLength:"حروف ہونے چاہئے{count}غلط لمبائی ہے "},headings:{chargedItems:"چارج اشیا"},imaging:{alerts:{completedMessage:"امیجنگ درخواست کو مکمل کیا گیا ہے",completedTitle:"امیجنگ درخواست مکمل",savedMessage:"امیجنگ درخواست کو محفوظ کر لیا گیا ہے۔",savedTitle:"امیجنگ گذارش بچا لیا"},buttons:{newButton:"+ نئے امیجنگ"},labels:{addNewVisit:"--- نیا دورہ شامل کریں ---",radiologist:"ریڈیولوجسٹ"},messages:{noCompleted:"کوئی مکمل اشیاء نہیں موجود۔"},pageTitle:"امیجنگ درخواستیں",sectionTitle:"امیجنگ",titles:{completedImaging:"امیجنگ مکمل",editTitle:"امیجنگ ترمیم کی گذارش",newTitle:"نئے امیجنگ گذارش"}},incident:{buttons:{},labels:{},messages:{},titles:{}},inventory:{edit:{cost:"فی یونٹ لاگت:",delivered:"وصول کنندہ:",location:"مقام کی درستگی:",prescription:"نسخہ براۓ:",pulled:"سے نکالا:",quantity:"تکمیل پر مقدار:",reason:"وجہ:",returned:"مریض سے واپس",transferredFrom:"سے منتقل:",transferredTo:"میں منتقل کر دیا:"},labels:{action:"عمل",add:"شامل کریں",adjust:"درست کریں",adjustmentDate:"درستگی کی تاریخ",adjustmentFor:"درستگی براۓ",adjustmentType:"درستگی کی قسم",aisle:"راہداری",aisleLocation:"راہداری مقام",allInventory:"تمام انوینٹری",allItems:"تمام چیزیں",availableQuantity:"{quantity} دستیاب",billTo:"کا بل",consumePurchases:"کھپت خریداریاں",consumptionRate:"کھپت کی شرح",cost:"لاگت",costPerUnit:"فی یونٹ لاگت",crossReference:"دوطرفی حوالہ",currentQuantity:"موجودہ مقدار",dateCompleted:"تاریخ مکمل",dateEffective:"تاریخ نافذ",dateEnd:"آخری تاریخ",dateReceived:"تاریخ موصولی",dateStart:"شروع کرنے کی تاریخ",dateTransferred:"تاریخ منتقل",daysLeft:"دن باقی",deleteItem:"آٹم حذف کریں",deliveryAisle:"ڈلیوری راہداری",deliveryLocation:"ترسیل کے محل وقوع",details:"تفصیلات دیکھیں",distributionUnit:"تقسیم کا یونٹ",editItem:"آٹم میں ترمیم",expense:"کرنے کے اخراجات",expirationDate:"میعاد ختم ہونے کی تاریخ",fulfillRequest:"درخواست کو پورا کریں",fulfillRequestNow:"ابھی درخواست کو پورا کریں",gift:"خیراتی تحفہ",giftInKindNo:"نہیں",giftInKindYes:"ہاں",giftUsage:"خیراتی تحفہ کا استعمال",inventoryConsumed:"انوینٹری کھپت",inventoryItem:"انوینٹری آئٹم",inventoryObsolence:"متروک انوینٹری",invoiceItems:"رسید اشیاء",invoiceLineItem:"رسید لائن آئٹم",invoiceNumber:"رسید نمبر",item:"آئٹم",itemNumber:"آئٹم نمبر",items:"اشیاء",location:"مقام",locations:"مقامات",markAsConsumed:"خرچ شدہ کے طور پر درج کریں",name:"نام",newItem:"نئی آٹم",originalQuantity:"اصل مقدار",print:"پرنٹ",printBarcode:"پرنٹ بارکوڈ",printer:"پرنٹر",pullFrom:"سے ھیںچو",purchaseCost:"خریداری کی لاگت",purchaseInfo:"خریداری کی معلومات",purchases:"خریداری",quantity:"مقدار ({unit})",quantityAvailable:"دستیاب مقدار",quantityOnHand:"موجودہ مقدار",quantityRequested:" درخواست کی گئی مقدار",rank:"درجہ",reason:"وجہ",remove:"دور کریں",reorderPoint:" پوائنٹ پھر ترتیب کریں",requestedItems:"درخواست کی گئی اشیاء",salePricePerUnit:"فی یونٹ فروخت کی قیمت",save:"محفوظ کریں",serialNumber:"سیریل / لوٹ نمبر",total:"کل",totalCost:"کل لاگت",totalReceived:"کل موصول: {total}",transaction:"ٹرانزیکشن",transactions:"ٹرانزیکشنز",transfer:"منتقلی",transferFrom:"سے منتقلی",transferTo:"مقام پر منتقلی",transferToAisle:"مقام راہداری پر منتقلی",unit:"یونٹ",unitCost:"یونٹ کی لاگت",vendor:"وینڈر",vendorItemNumber:"وینڈر آئٹم نمبر",xref:"XRef"},messages:{adjust:" فرق کے تخمینہ کے لئے مناسب جگہ (جگہوں) پر مقدار کو ٹھیک کریں {difference }.",createRequest:"ایک نئی درخواست بنائیں؟",itemNotFound:"<br> ورنہ واپس جانے کے لیے منسوخ کا بٹن دبائیں  <br> اگر آپ ایک نیا انونٹری آئٹم تخلیق کرنا چاہتے ہیں تو ذیل میں معلومات درج کریں۔  <strong>{item}</strong>انونٹری آئٹم نہیں ملا۔ ",loading:"ٹراسیکشنر لوڈ ہو رہی ہے۔۔۔",noItems:"کوئی آئٹم نہیں ملا۔",noRequests:"کوئی درخواستیں نہیں ملی۔",purchaseSaved:"انونٹری کی خریداری کو کامیابی سے محفوظ کر لیا گیا ہے۔",quantity:" کے مقامات میں کل مقدار سے مماثل نہیں ہے <strong>({locationQuantity})</strong>کی کل مقدار <strong>({quantity})</strong>",removeItem:" آپ کو یقین ہے کہ آپ اس آٹم کو رسید سے ہٹانا چاہتے ہیں؟",removeItemRequest:" آپ کو یقین ہے کہ آپ اس آٹم کو درخواست سے ہٹانا چاہتے ہیں؟",requestFulfilled:"انونٹری کی درخواست پوری ہو گئی.",requestUpdated:"انونٹری درخواست کو اپ ڈیٹ کر دیا گیا ہے.",warning:"ضروری ہے (* کے نشان والے) قطعات میں بھرنا اور شامل کرنے سے پہلے غلطیوں کو درست کریں۔"},reports:{adjustment:"تفصیلی درستگی",daysSupply:"اسٹاک میں دنوں کی فراہمی",expenseDetail:"تفصیلی اخراجات",expenseSum:"خلاصہ اخراجات",expiration:"میعاد ختم ہونے کی تاریخ",export:"ایکسپورٹ رپورٹ",fields:" شامل کرنے کے قطعات",finance:"مالیات کا خلاصہ",generate:"رپورٹ بنائیں",invLocation:"محل وقوع کے اعتبار انوینٹری",invValuation:"انوینٹری کی مالیت",purchaseDetail:"تفصیلی خرید",purchaseSum:"خلاصہ خرید",reportType:"رپورٹ کی قسم",rows:{adjustments:"درستگیاں",adjustmentsTotal:"کل درستگیاں",balanceBegin:"ابتدائی بقایا رقم",balanceEnd:"اختمام پر بقایا رقم",category:"قسم",consumed:"کھپت",consumedGik:"کی کھپت GiK",consumedGikTotal:"کی کھپت GiK کل",consumedPuchases:"خریداری کی کھپت",consumedPurchasesTotal:"کل خریداری کی کھپت",consumedTotal:"کل کھپت",errInFinSum:"_generateFinancialSummaryReport میں خرابی: ",errInFindPur:"_findInventoryItemsByPurchase میں خرابی: ",errInFindReq:"_findInventoryItemsByRequest میں خرابی: ",expensesFor:"کے لئے اخراجات: ",noAccount:"(کوئی اکاؤنٹ نہیں)",subtotal:"ذیلی کل: ",subtotalFor:"{account} - {category}ذیلی کل ",total:"کل: ",totalFor:" کل براۓ {var}: ",totalPurchases:"کل خریداری",transfer1:"{quantity } سے {location }",trasnfer2:"{target} :براۓ{source} :منجانب"},stockTransferDetail:"تفصیلی اسٹاک کی منتقلی",stockTransferSum:"خلاصہ اسٹاک کی منتقلی",stockUsageDetail:"تفصیلی اسٹاک استعمال",stockUsageSum:"خلاصہ اسٹاک استعمال",titleDateRange:"{startDate} - {endDate} رپورٹ {name}",titleSingleDate:"{date} رپورٹ {name}"},titles:{addPurchase:"خریداری شامل کریں",addRequest:"نئی درخواست",adjustment:"درستگی",editPurchase:"خریداری میں ترمیم کریں",editRequest:"تصیح کی گذارش",inventoryItem:"نئے انوینٹری آئٹم",inventoryReport:"انوینٹری کی رپورٹ",purchaseSaved:"انوینٹری خریداریاں محفوظ کرلی",quickAddTitle:"نئے انوینٹری آئٹم",removeItem:"آئٹم ہٹائیں",requestFulfilled:"درخواست پوری",requestUpdated:"درخواست اپ ڈیٹ ہوگئی",transfer:" اشیا منتقل کریں",warning:"انتباہ!!!"}},labels:{action:"عمل",actions:"عوامل",addNewOutpatientVisit:"نۓ بیرنی مریض کے لیے دورہ کا اضافہ کریں",address:"ایڈریس",age:"عمر",allDay:"تمام دن",amount:"رقم",anesthesia:"اینستھیزیا",assisting:"مدد",balanceDue:"واجب الادا",billDate:"بل تاریخ",billTo:"کا بل",category:"قسم",completed:"مکمل",country:"ملک",cptcode:"CPT کوڈ",creditTo:"کرنے کے لئے کریڈٹ",date:"تاریخ",dateCompleted:"تاریخ مکمل",dateOfBirth:"پیدائش کی تاریخ",dateOfBirthShort:"DOB",datePaid:"تاریخ ادا",dateRequested:"درخواست کی تاریخ",delete:"حذف کریں",deleteRequest:"درخواست حذف کریں",deleteUser:"صارف حذف کریں",department:"محکمہ",description:"تفصیل",discount:"رعایت",displayName:"دکھانے کے لیے نام",docRead:"دستاویزات پڑھیں",docWritten:"ڈاکس سے تحریری",edit:"تصیح",editUser:"صارف میں ترمیم کریں",email:"ای میل",endDate:"تاریخ اختتام",endTime:"آخر وقت",excess:"اضافی",expenseTo:"کرنے کے اخراجات",fileLoadSuccessful:" فائل لوڈ کامیابی سے ہو گئ",fileName:"فائل کا نام",fileToLoad:" لوڈ کے لیے فائل",fulfill:"پورا کریں",fulfillRequest:"درخواست کو پورا کریں",fulfillRequestNow:"ابھی درخواست کو پورا کریں",fulfilled:"پوری کر دی گئ",grandTotal:"مجموعی عدد",id:"آئی ڈی",imageOrders:"امیج آرڈرز",imagingType:"امیجنگ قسم",importFile:"امپورٹ فائل",invoiceId:"رسید کی آئی ڈی",labOrders:"لیب آرڈرز",lineItems:"لائن آئٹمز",loading:"لوڈ کر رہا ہے",location:"مقام",lookupType:"تلاش قسم",medication:"ادویات",name:"نام",newUser:"نیا صارف",note:"نوٹ",notes:"نوٹس",number:"نمبر",on:"پر",password:"پاس ورڈ",patient:"مریض",payments:"ادائیگیاں",physician:"فزیشن",prescriber:"تجویز کنندہ",prescription:"نسخے",prescriptionDate:"نسخے تاریخ",price:"قیمت",procedures:"طریقہ کار",provider:"مھیا کرنے والا",pullFrom:"سے کھیںچو",quantity:"تعداد",remarks:"تبصرہ",requestedBy:"کی طرف سے درخواست",requestedOn:"پر درخواست",requests:"درخواستیں",result:"نتیجہ",results:"نتائج",role:"کردار",search:"تلاش کریں",sex:"جنس",startDate:"شروع کرنے کی تاریخ",startTime:"وقت آغاز",status:"صورتحال",total:"کل",type:"قسم",userCanAddNewValue:"صارف نئی اقدار کا اضافہ کر سکتے ہیں",username:"یوزر نیم",value:"قدر",visit:"دورہ",with:"ساتھ"},labs:{alerts:{requestCompletedMessage:"لیب کی درخواست مکمل ہو گئی ہے",requestCompletedTitle:"لیب درخواست مکمل",requestSavedMessage:"لیب کی درخواست محفوظ ہو گئی ہے۔",requestSavedTitle:"لیب کی درخواست محفوظ"},buttons:{newButton:"+ نئی لیب"},completedTitle:"مکمل لیبز",deleteTitle:"درخواست حذف کریں",editTitle:"لیب میں ترمیم کی درخواست",labels:{addNewVisit:"۔۔ نیا دورہ شامل کریں ۔۔",labType:"لیب کی قسم"},messages:{createNewRecord:"ایک نیا ریکارڈ بنائیں؟",noCompleted:"کوئی مکمل آئٹم موجود نہیں",noItemsFound:"کوئی لیب موجود نہیں"},newTitle:"نئے لیب کی گذارش",requestsTitle:"لیب درخواستیں",sectionTitle:"لیبز"},languageName:"اردو",loading:{messages:{0:"سب سے تیز تیتلی پرواز کی رفتار فی گھنٹہ 12 میل ہے. کچھ کیڑے 25 میل فی گھنٹہ کی رفتار سے پرواز کر سکتے ہیں",1:" پرندے میں صرف اللو ہیں جو نیلا رنگ دیکھ سکتے ہیں",10:"آپ کی زبان آپ کے جسم میں واحد پٹھہ ہے جو صرف ایک طرف سے منسلک ہے",11:"اونٹ کی تین پلکیں ہوتی ہیں جو اڑتی ریت سے بچانے کے لئے ہیں۔",2:"بلی کی 100 مختلف آوازیں ہیں؛ کتے کی صرف 10 ہیں",3:"انسان تقریر میں 72 مختلف پٹھوں کی کل استعمال کرتے ہیں",4:" افریقہ کے براعظم میں 1،000 سے زائد مختلف زبانیں بولی جاتی ہیں",5:" اراۓتھروفوب وہ ہے جو آسانی سے شرما جاۓ ",6:"دنیا میں سب سے زیادہ عام فوبیا درد کا خوف ہے جو اوڈاۓنوفوبیا ہے",7:" آپ جب بھی کھڑے ہوتے ہیں آپ کا جسم خود کو متوازن کرنے کے لیے 300 پٹھوں کا استعمال کرتا",8:"بعض میںڈک منجمد ٹھوس ہوسکتے ہیں پھر پگھل  جائیں تو بھی جی سکتے ہیں",9:"ہماری آنکھیں پیدائش سے ہی اسی ہجم کی ہیں، لیکن ہماری ناک اور کان کبھی بڑھنا نہیں رکتی"},progressBar:{progress:"{progressBarValue}٪ مکمل"}},login:{labels:{password:"پاس ورڈ",signIn:"سائن ان ",username:"یوزر نیم"},messages:{error:"یوزر نیم یا پاس ورڈ غلط ہے.",signIn:"سائن ان کریں"}},medication:{alerts:{fulfilledTitle:"ادویات درخواست پوری",returnedMessage:"ادویات پر واپس کر دی گئی کا نشان لگا دیا گیا ہے۔",returnedTitle:"واپس کی گئی ادویات",savedMessage:"ادویات کا ریکارڈ محفوظ ہوگیا ہے۔",savedTitle:"ادویات کی درخواست محفوظ کر لی گئی"},buttons:{dispenseMedication:"ادویات تقسیم",newButton:"+ نئی درخواست",returnMedication:"واپسی دوا"},labels:{adjustmentDate:"تاریخ درستگی",creditToAccount:"اکاؤنٹ کو کریڈٹ",quantityDispensed:"تقسیم یا استعمال کی گئی مقدار",quantityDistributed:"تقسیم کی گئی مقدار",quantityRequested:" درخواست کی گئی مقدار",quantityToReturn:"مقدار براۓ واپسی",refills:"دوبارہ بھریں",returnAisle:"واپسی راہداری",returnLocation:" مقام واپسی",returnReason:"واپسی کی وجہ / نوٹس"},messages:{createNew:"ایک نئی دوا کی درخواست بنائیں؟"},pageTitle:"ادویات کی درخواستیں",returnMedication:"واپس دوا",sectionTitle:"ادویات",titles:{completedMedication:"مکمل دوا",editMedicationRequest:"ادویات میں ترمیم کی درخواست",newMedicationRequest:"نئی دوا کی گذارش"}},messages:{createNewRecord:"ایک نیا ریکارڈ بنائیں؟",createNewUser:"ایک نیا صارف بنائیں؟",forAuthorizedPersons:"یہ رپورٹ صرف مجاز افراد کے لئے ہے.",newPatientHasToBeCreated:"ایک نیا مریض بنایا جانا ضروری ہے ... براہ کرم انتظار کریں ...",noHistoryAvailable:"کوئی سرگزشت دستیاب نہیں",noItemsFound:"کوئی آئٹم نہیں ملا.",noNotesAvailable:"کوئی اضافی کلینکل نوٹ اس دورے کے لئے دستیاب نہیں.",noUsersFound:"کوئی صارف دستیاب نہیں",onBehalfOf:"کی جانب سے",reportError:"درخواست کی رپورٹ کو پیدا کرتے وقت ایک خرابی کا سامنا ہوا۔ براہ مہربانی اپنے سسٹم ایڈمنسٹریٹر کے علم میں لائیں کہ آپ کو خرابی کا سامنا ہوا",requiredFieldsCorrectErrors:"ضرورت ہے کہ خالی قطعات (* کے نشان) میں بھریں اور محفوظ کرنے سے پہلے غلطیوں کو درست کریں.",saveActionException:"محفوظ کرنے کی کوشش کرتے ہوئے ایک خرابی واقع ہوئی ہے: {message}",sorry:"معاف کرنا، کچھ غلط ہوگیا...",userHasBeenSaved:"صارف محفوظ ہوگیا ہے.",userSaved:" صارف محفوظ"},models:{appointment:{labels:{},names:{}},attachment:{names:{}},form:{names:{}},imaging:{request:{}},incident:{names:{}},item:{names:{}},lab:{names:{},request:{}},medication:{names:{},request:{}},note:{names:{}},patient:{labels:{},names:{}},procedure:{names:{}},user:{names:{}},visit:{names:{}},vital:{names:{}}},navigation:{about:"HospitalRun  کے بارے",actions:{login:"لاگ ان",logout:"لاگ آوٹ",selectLanguage:"زبان منتخب کریں"},administration:"انتظامیہ",billing:"بلنگ",imaging:"امیجنگ",inventory:"انوینٹری",labs:"لیبز",medication:"ادویات",messages:{},patients:"مریض",scheduling:"اوقات نامہ",subnav:{actions:"عوامل",addAppointment:"ملاقات اضافہ",addressFields:"ایڈریس قطعات",admittedPatients:"جمع شدہ مریض",appointmentSearch:" ملاقاتیں تلاش کریں",appointmentsCalendar:"ملاقاتوں کا کیلنڈر",appointmentsThisWeek:"اس ہفتے کی ملاقاتیں",completed:"مکمل",customForms:"کسٹم فام",dispense:"تقسیم",inventoryReceived:"انوینٹری موصول",inventoryReceivedPlus:"+ انوینٹری موصو",invoices:"رسیدیں",items:"اشیاء",loadDB:"DB لوڈ کریں",lookupLists:"تلاش فہرستیں",newInvoice:"نئے رسید",newPatient:"نئے مریض",newRequest:"نئی درخواست",newUser:"نیا صارف",outpatient:"آؤٹ پیشنٹ",patientListing:"مریض کی فہرست سازی",priceProfiles:"قیمت پروفائلز",prices:"قیمتیں",reports:"رپورٹس",requests:"درخواستیں",returnMedication:"واپس دوا",scheduleSurgery:"سرجری اوقات نامہ",theaterSchedule:"تھیٹر اوقات نامہ",userRoles:"صارف کے کردار",users:"صارفین",workflow:"ورک فلو"},titles:{}},operationReport:{labels:{additionalNotes:"اضافی نوٹس",assistant:"مددگار",caseComplexity:"کیس پیچیدگی",operationDescription:"آپریشن کی تفصیل",preOpPrimaryDiagnosis:"آپریشن سے پہلے بنیادی تشخیص",preOpSecondaryDiagnosis:"آپریشن سے پہلے ثانوی تشخیص",surgeon:"سرجن",surgeryDate:"سرجری تاریخ"},messages:{reportSaved:"آپریشن رپورٹ محفوظ ہوگئی ہے۔"},titles:{editTitle:"آپریشن رپورٹ میں ترمیم کریں",newTitle:"نئے آپریشن کی رپورٹ",reportSaved:"رپورٹ محفوظ ہوگئی"}},operativePlan:{buttons:{completePlan:"مکمل حکمت عمل"},labels:{additionalNotes:"اضافی نوٹس",admissionInstructions:"داخلے کی ہدایات",caseComplexity:"کیس پیچیدگی",completedStatus:"مکمل",droppedStatus:"گرا دیا",operationDescription:"آپریشن کی تفصیل",plannedStatus:"منصوبہ بندی کر لی گئی",status:"صورتحال",surgeon:"سرجن"},messages:{planCompleted:"آپریٹو پلان مکمل ہو چکا ہے۔ اب آپریشن رپورٹ کی طرف آپ کی رہنمائی کی جائے گی۔",planSaved:"آپریٹو پلان محفوظ ہوگیا ہے۔"},titles:{editTitle:"آپریٹو پلان میں ترمیم کریں",newTitle:"نیا آپریٹو پلان",planCompleted:"پلان مکمل",planSaved:"پلان محفوظ"}},patients:{buttons:{addContact:"رابطہ شامل کریں",addExpense:"اخراجات میں شامل کریں",addFamilyMember:"خاندان کا فرد شامل کریں",addOperativePlan:"آپریٹو پلان میں شامل کریں",backToPatients:"مریض کی فہرست پر واپس جائیں",editOperativePlan:"موجودہ آپریٹو پلان",newAppointment:"نئی ملاقات",newImaging:"نئی امیجنگ",newLab:"نئی لیب",newMedication:"نئی دوا",newPatient:"+ نیا مریض",newPhoto:"نئی تصویر",newVisit:"نیا دورہ",patientCheckIn:"مریض کا چیک ان",scheduleSurgery:"سرجری کا وقت مقرر کریں"},labels:{admissionDate:"داخلے کی تاریخ",admit:"داخل کریں",bloodType:"خون کی قسم",civilStatus:"سول حیثیت",clinic:"کلینک کی جگہ",contacts:"رابطے",cost:"لاگت",dateOfBirth:"پیدائش کی تاریخ",dateProcessed:"عمل درآمد کی تاریخ",dischargeDate:"فارغ کرنے کی تاریخ",dob:"DOB",education:"تعلیم",email:"ای میل",externalPatientId:"بیرونی مریض کی شناخت",firstName:"نام کا پہلا حصہ",income:"آمدن",insurance:"بیمہ",lastName:"نام کا آخری حصہ",middleName:"نام کا درمیانی حصہ",monthlyCost:"ماہانہ اخراجات",occupation:"پیشہ",operativePlan:"آپریٹو پلان",parent:"والدین / سرپرست",patientDays:"مریض کے دن",patientType:"مریضوں کی اقسام",phone:"فون",placeOfBirth:"جائے پیدائش",primaryDiagnosis:"بنیادی تشخیص",referredBy:"کی طرف سے بھیجا گیا",referredDate:"حوالہ دینے کی تاریخ",relationship:"مریض سے تعلق",relationships:"تعلقات",religion:"مذہب",secondaryDiagnosis:"ثانوی تشخیص",sex:"جنس",sexNotEntered:"جنس داخل نہیں کیا گیا",sources:"ذرائع",status:"مریض کی صورتحال",totalMontlyExpense:"مجموعی ماہانہ اخراجات"},messages:{areYouSureDelete:" کو حذف کرنا چاہتے ہیں؟ {object} آپ کو یقین ہے کہ آپ اس ",createNewPatient:"ایک نیا مریض ریکارڈ بنائیں؟",deletingPatient:"مریض اور سارے متعلقہ ریکارڈز حذف کیا جا رہا ہے",noPatientsFound:"کوئی مریض نہیں ملا۔",notFoundQuickAdd:" مریض نہیں مل سکا۔ اگر آپ کو ایک نیا مریض بنانا چاہتے ہیں تو ذیل میں معلومات درج کیجے۔ ورنہ واپس جانے کے کیے منسوخ کا بٹن دبائیں۔ <strong>{patientFullName}</strong> ",savedPatient:" کے لئے مریض کا ریکارڈ محفوظ ہوگیا ہے۔ {displayName} "},navigation:{appointments:"ملاقاتیں",general:"عمومی",history:"سرگزشت",imaging:"امیجنگ",labs:"لیبز",medication:"ادویات",photos:"تصاویر",socialWork:"سماجی کام",visits:"دورے"},notes:{newNote:"نیا نوٹ برائے",onBehalfOfCopy:"کی جانب سے",onBehalfOfLabel:"کی جانب سے",pleaseSelectAVisit:"ایک دورے براہ مہربانی منتخب کریں",updateNote:"کی صرف سے نوٹ اپ ڈیٹ ہورہے ہیں"},titles:{addContact:"رابطہ شامل کریں",addPhoto:"تصویر کا اضافہ کریں",additionalContacts:"اضافی رابطے",admissionsDetail:"داخلوں کی تفصیل",admissionsSummary:"داخلوں کا خلاصہ",admittedPatients:"داخل کیے گئے مریض",delete:"مریض کو حذف کریں",deleteContact:"رابطہ کریں حذف کریں",deleteExpense:"خرچہ حذف کریں",deleteFamilyMember:"خاندان کے فرد کو حذف کریں",deletePatientRecord:"مریض ریکارڈ حذف کریں",deletePhoto:"تصویر حذف کریں",diagnosticTesting:"تشخیصی جانچ",dischargesDetail:"فارغ کرنے کی تفصیل",dischargesSummary:"فارغ کرنے کا خلاصہ",edit:"مریض میں ترمیم کریں",editPhoto:"تصویر میں ترمیم کریں",expenses:"اخراجات",familyInfo:"خاندانی معلومات",familyInformation:"خاندان کی معلومات",new:"نئے مریض",outpatientsForDate:"{visitDate} بیرونی مریض برائے ",patient:"مریض رپورٹ",patientListing:"مریض کی فہرست سازی",patientReport:"مریض رپورٹ",patientStatus:"مریض کی صورتحال",proceduresDetail:"طریقہ کار کی تفصیل",proceduresSummary:"طریقہ کار کا خلاصہ",savedPatient:"مریض محفوظ ہو گیا",socialWork:"خرچہ",todaysOutpatients:"آج کے بیرونی مریضوں",totalPatientDays:"مریض کے کل دن",totalPatientDaysDetailed:"مریض کے کل دن(تفصیلی) ۔",visit:"دورہ"}},pricing:{labels:{},navigation:{}},print:{invoice:{labels:{billedBy:"بل منجانب:",billedDate:"بل کی تاریخ:",dateAdmitted:"داخلہ کی تاریخ:",dateDischarged:"فارغ کرنے کی تاریخ:",dischargeNotes:"فارغ کرنے کے نوٹس:",patientAddress:"پتہ:",patientAge:"عمر:",patientId:"مریض #:",patientName:"مریض کا نام:",remarks:"خیالات:",spacer:"__________________________________________"},messages:{whereConducted:"میری محدودیت کے دوران کاٹ لیے گئے تھے"},titles:{billingStatement:"بلنگ کی عبارت",patientMember:"مریض رکن",patients:"مریض کا",relContact:"تعلق / رابطہ نمبر"}}},procedures:{buttons:{addMedication:"ادویات شامل کریں"},labels:{medicationUsed:"استعمال کی گئی ادویات"},messages:{saved:" آپ کو یقین ہے کہ آپ اس طریقہ کار کو حذف کرنا چاہتے ہیں؟"},titles:{addChargeItem:"چارج آئٹم شامل کریں",addMedicationUsed:"استعمال کی گئی ادویات شامل کریں",deleteChargeItem:"چارج آئٹم حذف کریں",deleteMedicationUsed:"استعمال کی گئی ادویات حذف کریں",edit:"ضابطے میں ترمیم کریں",editChargeItem:"چارج آئٹم میں ترمیم کریں",editMedicationUsed:"استعمال کی گئی ادویات میں ترمیم کریں",medicationUsed:"استعمال کی گئی ادویات",new:"نیا طریقہ کار",saved:"ضابطے محفوظ"}},reports:{labels:{notes:{},operativePlan:{}},messages:{},titles:{}},user:{plusNewUser:"+ نیا صارف",usersPageTile:"صارفین کی فہرست سازی"},visits:{buttons:{addDiagnosis:"تشخیص کے لئے شامل کریں",checkIn:"چیک ان",checkOut:"چیک آٹ",discharge:"فارغ کر دیں",newAppointment:"نئی ملاقات",newProcedure:"نئے طریقہ کار",newVitals:"نئے vitals"},labels:{appointment:"ملاقات",authoredBy:"کی طرف سے تحریر",checkInTime:"چیک ان",checkOutTime:"چیک آٹ",createNewPatient:"نیا مریض بنائیں",diagnosis:"تشخیص",examiner:"معائنہ کار",finalDiagnosis:"حتمی / بلنگ تشخیص",haveAppointment:"ہاں",haveDoneOrders:"ہاں",noAppointment:"نہیں",ordersDone:"آرڈرز مکمل کر دیے گئے",ordersNotDone:"نہیں",patientToCheckIn:"مریض کا چیک ان کرنا",procedure:"ضابطے",procedureDate:"ضابطے کی تاریخ",reasonForVisit:"دورے کی وجہ",status:"دورہ کی صورتحال",statusAdmitted:"داخل کر دیا گیا",statusCheckedIn:"چیک ان کر دیا گیا",statusCheckedOut:"چیک آٹ کر دیا گیا",statusDischarged:"فارغ کر دیا گیا",visitDate:"دورہ کی تاریخ",visitInformation:"دورہ معلومات",visitType:"دورہ کی قسم"},messages:{checkOut:"کو چیک آٹ کرنا چاہتے ہیں؟ {patientName} آپ کو یقین ہے کہ آپ ",checkedOut:"چیک آٹ کر دیا گیا ہے {patientName} ",discharged:" کو فارغ کر دیا گیا ہے  {patientName} ",patientCheckedIn:"چیک ان کر دیا گیا ہے {patientName} ",patientCreatedAndCheckedIn:" ۔  (مریض) بنا دیا گیا ہے اور چیک ان کر دیا گیا ہے {patientName} ",visitAndPatientSaved:"دورے اور مریض ریکارڈ محفوظ کیا گیا ہے۔",visitSaved:"دورہ کا ریکارڈ کو محفوظ کیا گیا ہے۔"},navigation:{charges:"چارجز",notes:"نوٹس",orders:"آرڈرز",procedures:"طریقہ کار",vitals:"Vitals"},titles:{additionalDiagnoses:"اضافی تشخیص",checkOut:"مریض چیک آٹ",checkedIn:"مریض چیک ان مکمل",checkedOut:"مریض چیک آٹ مکمل",discharged:"مریض فارغ کر دیا گیا",editVisit:"دورہ ترمیم کریں",newVisit:"نیا دورہ",patientCheckIn:"مریض چیک ان",visitSaved:"دورہ محفوظ"}},vitals:{labels:{dateRecorded:"تاریخ اندراج",dbp:"DBP",heartRate:"دل کی دھڑکن کی شرح",height:"اونچائی",respiratoryRate:"سانس کی شرح",sbp:"SBP",temperature:"درجہ حرارت",weight:"وزن"}}}})
define("hospitalrun/users/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:(0,n.t)("labels.deleteUser"),actions:{delete:function(){var e=this,t=this.get("model")
this.get("model").destroyRecord().then(function(){e.send("closeModal",t)})}}})}),define("hospitalrun/users/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"y35HAFNO",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete"],[["name"],[[20,["model","displayName"]]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/users/delete/template.hbs"}})}),define("hospitalrun/users/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/user-roles","uuid"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{config:Ember.inject.service(),usersController:Ember.inject.controller("users/index"),updateCapability:"add_user",users:null,actions:{update:function(){var e=this,t=this.get("model"),n=this.get("users")
if(t.get("isNew")){var i=t.getProperties("password","email","roles","displayName")
i.name=i.email,i.id="org.couchdb.user:"+i.email,Ember.isEmpty(i.password)&&(i.password=a.default.v4()+a.default.v4()),t.deleteRecord(),t=this.get("store").createRecord("user",i),this.set("model",t)}if(Ember.isEmpty(t.get("userPrefix"))){for(var s=1,o="p",r=o+0,l=n.findBy("userPrefix",o);!Ember.isEmpty(l);)o=r+s++,l=n.findBy("userPrefix",o)
t.set("userPrefix",o)}t.save().then(function(){e.displayAlert(Ember.get(e,"intl").t("messages.userSaved"),Ember.get(e,"intl").t("messages.userHasBeenSaved"))
var t=Ember.get(e,"intl").t("labels.editUser"),n={}
n.currentScreenTitle=t,e.send("setSectionHeader",n),Ember.get(e,"config").markUserSetupComplete()}).catch(function(t){e._handleError(t)})}}})}),define("hospitalrun/users/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/macro"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({editTitle:(0,n.t)("labels.editUser"),modelName:"user",newTitle:(0,n.t)("labels.newUser"),getNewData:function(){return Ember.RSVP.resolve({roles:["Data Entry","user"]})},setupController:function(e,t){var n=this
this._super(e,t),this.store.findAll("user").then(function(t){Ember.set(e,"users",t)}).catch(function(e){return n.send("error",e)})}})}),define("hospitalrun/users/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Nyz5LYXU",block:'{"symbols":["form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"div"],[9,"class","form-group has-success"],[7],[0,"\\n        "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.username"],null],false],[8],[0,"\\n        "],[6,"div"],[9,"class","form-control"],[7],[0,"\\n          "],[1,[20,["model","name"]],false],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[1,[25,"component",[[19,1,["input"]]],[["property","label","class"],["displayName",[25,"t",["labels.displayName"],null],"user-display-name"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["property","type","label","class"],["email","email",[25,"t",["labels.email"],null],"user-email"]]],false],[0,"\\n    "],[1,[25,"component",[[19,1,["input"]]],[["property","type","label","class"],["password","password",[25,"t",["labels.password"],null],"user-password"]]],false],[0,"\\n    "],[6,"div"],[9,"class","form-input-group has-success"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.role"],null],false],[8],[0,"\\n      "],[1,[25,"role-select",null,[["selection","content","action","class"],[[20,["model","roles"]],[20,["userRoles"]],[25,"action",[[19,0,[]],[25,"mut",[[20,["model","roles"]]],null]],null],"user-role"]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/users/edit/template.hbs"}})}),define("hospitalrun/users/index/controller",["exports","hospitalrun/controllers/abstract-paged-controller","hospitalrun/mixins/user-session"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{addPermission:"add_user",deletePermission:"delete_user",sortProperties:["displayName"]})}),define("hospitalrun/users/index/route",["exports","hospitalrun/routes/abstract-index-route","hospitalrun/mixins/user-session","hospitalrun/macro"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,{config:Ember.inject.service(),newButtonAction:Ember.computed(function(){return this.currentUserCan("add_user")?"newItem":null}),newButtonText:(0,a.t)("user.plusNewUser"),pageTitle:(0,a.t)("user.usersPageTile"),model:function(){return this.store.findAll("user")}})}),define("hospitalrun/users/index/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"CRYxfn/w",block:'{"symbols":["user"],"statements":[[4,"item-listing",null,[["paginationProps"],[[20,["paginationProps"]]]],{"statements":[[4,"if",[[20,["hasRecords"]]],null,{"statements":[[0,"    "],[6,"table"],[9,"class","table"],[7],[0,"\\n      "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.username"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.name"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.email"],null],false],[8],[0,"\\n        "],[6,"th"],[7],[1,[25,"t",["labels.role"],null],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"          "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"      "],[8],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[4,"unless",[[19,1,["deleted"]]],null,{"statements":[[0,"          "],[6,"tr"],[9,"class","clickable"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]]],[7],[0,"\\n            "],[6,"td"],[9,"class","user-name"],[7],[1,[19,1,["name"]],false],[8],[0,"\\n            "],[6,"td"],[9,"class","user-display-name"],[7],[1,[19,1,["displayName"]],false],[8],[0,"\\n            "],[6,"td"],[9,"class","user-email"],[7],[1,[19,1,["email"]],false],[8],[0,"\\n            "],[6,"td"],[9,"class","user-role"],[7],[1,[19,1,["displayRole"]],false],[8],[0,"\\n"],[4,"if",[[20,["showActions"]]],null,{"statements":[[0,"              "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"editItem",[19,1,[]]],[["bubbles"],[false]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDelete"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"deleteItem",[19,1,[]]],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"          "],[8],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[6,"div"],[9,"class","alert alert-info"],[7],[0,"\\n      "],[6,"em"],[7],[1,[25,"t",["messages.noUsersFound"],null],false],[8],[0,"\\n"],[4,"if",[[20,["canAdd"]]],null,{"statements":[[0,"        "],[6,"em"],[7],[1,[25,"t",["messages.createNewUser"],null],false],[8],[0," "],[6,"button"],[9,"class","btn btn-primary"],[3,"action",[[19,0,[]],"newItem"]],[7],[1,[25,"t",["buttons.newUser"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"    "],[8],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/users/index/template.hbs"}})}),define("hospitalrun/users/route",["exports","ember-simple-auth/mixins/authenticated-route-mixin"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend(t.default,{actions:{allItems:function(){this.transitionTo("users.index")}}})}),define("hospitalrun/utils/can-use-dom",["exports","ember-metrics/utils/can-use-dom"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/utils/date-sort",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={sortByDate:function(e,t,n){var a=e.get(n),i=t.get(n)
return Ember.compare(a.getTime(),i.getTime())}}}),define("hospitalrun/utils/email-validation",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={emailRegex:/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/}}),define("hospitalrun/utils/get-cmd-key",["exports","ember-keyboard/utils/get-cmd-key"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/utils/i18n/missing-message",["exports","ember-intl/utils/locale","hospitalrun/config/environment"],function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0})
var a=n.default.intl.defaultLocale
e.default=function(e,n,i){if(e===a||"development"===window.env)return"Missing translation: "+n
Ember.Logger.warn("Missing translation: "+n)
var s=Ember.get(i,"count"),o=Ember.makeArray(Ember.get(i,"default"))
return o.unshift(n),new t.default(a,Ember.getOwner(this)).getCompiledTemplate(o,s)(i)}}),define("hospitalrun/utils/intl/missing-message",["exports","ember-intl/utils/missing-message"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/utils/item-condition",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.rankToMultiplier=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"B"
return Ember.A(t).findBy("rank",e).value},e.getCondition=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1
return(e*=t)>=14?"good":e<7?"bad":"average"}
var t=[{rank:"A",value:.5},{rank:"B",value:1},{rank:"C",value:2}]}),define("hospitalrun/utils/listener-name",["exports","ember-keyboard/utils/listener-name"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/utils/object-transforms",["exports","ember-metrics/utils/object-transforms"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("hospitalrun/utils/patient-validation",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default={patientTypeAhead:{acceptance:{accept:!0,if:function(e){if(!e.get("selectPatient"))return!1
if(!e.get("hasDirtyAttributes"))return!1
var t=e.get("patient.displayName"),n=e.get("patientTypeAhead")
if(Ember.isEmpty(t)||Ember.isEmpty(n))return!0
var a=n.substr(0,t.length).toLowerCase()
return 0!==t.toLowerCase().indexOf(a)},message:"Please select a patient"}}}}),define("hospitalrun/utils/pouch-views",["exports"],function(e){function t(e,t){return t.query(e,{limit:0}).catch(function(e){console.log("index error: "+JSON.stringify(e,null,2))})}function n(e,t,n){var a="function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}"
return t&&(a+='function getCompareDate(dateString) {if (!dateString || dateString === "") {return 0;}return new Date(dateString).getTime();}'),a+='function compareStrings(aString, bString) {if (!aString) {aString = "";}if (!bString) {bString = "";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}',n&&(a+="rows = rows.filter("+n+");"),a+="rows.sort("+e+');if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({"rows" : rows}));}'}function a(e,t){return"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === '"+e+"') {\n        "+t+"\n      }\n    }\n  }"}function i(e,n,a,i,s){var o=function(e,t){var n={_id:"_design/"+e.name,version:e.version,views:{}}
return t&&(n._rev=t),n.views[e.name]={map:e.function.toString()},e.sort&&(n.lists={sort:e.sort}),n}(e,a)
return i&&console.log("WARNING: The view "+e.name+" is out of date. Please update the pouch dump "+s+" to the latest version of "+e.name),n.put(o).then(function(){return t(e.name,n)},function(e){console.log("ERR updating design doc:",JSON.stringify(e,null,2))})}function s(e){return"var "+e+" = doc.data."+e+";\n    if ("+e+" && "+e+' !== "") {\n      '+e+" = new Date("+e+");\n      if ("+e+".getTime) {\n        "+e+" = "+e+".getTime();\n      }\n    }"}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e,n,a){var s=[]
return d.forEach(function(o){s.push(function(e,n,a,s){return n.get("_design/"+e.name).then(function(o){return o.version!==e.version?i(e,n,o._rev,a,s):a?t(e.name,n):Ember.RSVP.resolve()},function(){return i(e,n,null,a,s)})}(o,e,n,a))}),Ember.RSVP.all(s)}
var o=n(function(e,t){function n(e){return e&&""!==e?e:"Scheduled"}var a=""
switch(req.query&&req.query.sortKey&&(a=req.query.sortKey),a){case"appointmentType":case"location":case"provider":return compareStrings(e.doc.data[a],t.doc.data[a])
case"date":var i=getCompareDate(e.doc.data.startDate)-getCompareDate(t.doc.data.startDate)
return 0===i?getCompareDate(e.doc.data.endDate)-getCompareDate(t.doc.data.endDate):i
case"status":var s=n(e.doc.data[a]),o=n(t.doc.data[a])
return compareStrings(s,o)
default:return 0}}.toString(),!0,function(e){var t=null,n=!0
if(req.query&&req.query.filterBy&&(t=JSON.parse(req.query.filterBy)),!t)return!0
for(var a=0;a<t.length;a++){var i=e.doc.data[t[a].name]
if("status"!==t[a].name||i&&""!==i||(i="Scheduled"),i!==t[a].value){n=!1
break}}return n}.toString()),r="if (doc.data.friendlyId) {\n    emit([doc.data.friendlyId, doc._id]);\n  } else if (doc.data.externalPatientId) {\n    emit([doc.data.externalPatientId, doc._id]);\n  } else {\n    emit([doc._id, doc._id]);\n }",l=n(function(e,t){var n=""
switch(req.query&&req.query.sortKey&&(n=req.query.sortKey),n){case"firstName":case"sex":case"lastName":case"status":return compareStrings(e.doc.data[n],t.doc.data[n])
case"dateOfBirth":return getCompareDate(e.doc.data.dateOfBirth)-getCompareDate(t.doc.data.dateOfBirth)
default:return 0}}.toString(),!0),d=[{name:"appointments_by_date",function:a("appointment",s("endDate")+"\n    "+s("startDate")+"\n    if (doc.data.appointmentType !== 'Surgery') {\n      emit([startDate, endDate, doc._id]);\n    }"),sort:o,version:7},{name:"appointments_by_patient",function:a("appointment",s("endDate")+"\n    "+s("startDate")+"\n    emit([doc.data.patient, startDate, endDate,doc._id]);"),version:4},{name:"custom_form_by_type",function:a("customForm","emit(doc.data.formType);"),version:1},{name:"imaging_by_status",function:a("imaging",s("imagingDate")+"\n    "+s("requestedDate")+"\n    emit([doc.data.status, requestedDate, imagingDate, doc._id]);"),version:4},{name:"inventory_by_friendly_id",function:a("inventory","emit([doc.data.friendlyId, doc._id]);"),version:1},{name:"inventory_by_name",function:a("inventory","emit([doc.data.name, doc._id]);"),sort:n(function(e,t){var n=""
switch(req.query&&req.query.sortKey&&(n=req.query.sortKey),n){case"crossReference":case"description":case"friendlyId":case"name":case"price":case"quantity":case"inventoryType":return compareStrings(e.doc.data[n],t.doc.data[n])
default:return 0}}.toString()),version:5},{name:"incident_by_friendly_id",function:a("incident","emit([doc.data.friendlyId, doc._id]);"),version:1},{name:"incident_by_date",function:a("incident",s("dateOfIncident")+"\n    emit([dateOfIncident, doc._id]);"),version:1},{name:"open_incidents_by_user",function:a("incident",'if (doc.data.status !== "Closed") {\n      emit([doc.data.reportedBy, doc._id]);\n    }'),sort:n(function(e,t){var n=""
return req.query&&req.query.sortKey?(n=req.query.sortKey,compareStrings(e.doc.data[n],t.doc.data[n])):0}.toString()),version:1},{name:"closed_incidents_by_user",function:a("incident",'if (doc.data.status === "Closed") {\n      emit([doc.data.reportedBy, doc._id]);\n    }'),version:1},{name:"inventory_by_type",function:a("inventory","emit(doc.data.inventoryType);"),version:5},{name:"inventory_purchase_by_date_received",function:a("invPurchase",s("dateReceived")+"\n    emit([dateReceived, doc._id]);"),version:5},{name:"inventory_purchase_by_expiration_date",function:a("invPurchase",s("expirationDate")+"\n    emit([expirationDate, doc._id]);"),version:5},{name:"inventory_request_by_item",function:a("invRequest",s("dateCompleted")+"\n    emit([doc.data.inventoryItem, doc.data.status, dateCompleted]);"),version:5},{name:"inventory_request_by_status",function:a("invRequest",s("dateCompleted")+"\n    emit([doc.data.status, dateCompleted, doc._id]);"),version:5},{name:"invoice_by_patient",function:a("invoice","emit(doc.data.patient);"),version:1},{name:"invoice_by_status",function:a("invoice",s("billDate")+"\n    emit([doc.data.status, billDate, doc._id]);"),version:4},{name:"lab_by_status",function:a("lab",s("labDate")+"\n    "+s("requestedDate")+"\n    emit([doc.data.status, requestedDate, labDate, doc._id]);"),version:4},{name:"medication_by_status",function:a("medication",s("prescriptionDate")+"\n    "+s("requestedDate")+"\n    emit([doc.data.status, requestedDate, prescriptionDate, doc._id]);"),version:4},{name:"patient_by_display_id",function:a("patient",r),sort:l,version:7},{name:"patient_by_status",function:a("patient","emit(doc.data.status);"),version:3},{name:"patient_by_admission",function:a("patient","if (doc.data.admitted === true) {\n      "+r+"\n    }"),sort:l,version:4},{name:"photo_by_patient",function:a("photo","emit(doc.data.patient);"),version:4},{name:"photo_by_procedure",function:a("photo","emit(doc.data.procedure);"),version:1},{name:"photo_by_visit",function:a("photo","emit(doc.data.visit);"),version:1},{name:"procedure_by_date",function:a("procedure",s("procedureDate")+"\n    emit([procedureDate, doc._id]);"),version:4},{name:"pricing_by_category",function:a("pricing","emit([doc.data.category, doc.data.name, doc.data.pricingType, doc._id]);"),version:5},{name:"sequence_by_prefix",function:a("sequence","emit(doc.data.prefix);"),version:4},{name:"surgical_appointments_by_date",function:a("appointment",s("endDate")+"\n    "+s("startDate")+"\n    if (doc.data.appointmentType === 'Surgery') {\n      emit([startDate, endDate, doc._id]);\n    }"),sort:o,version:1},{name:"visit_by_date",function:a("visit",s("endDate")+"\n    "+s("startDate")+"\n    emit([startDate, endDate, doc._id]);"),version:4},{name:"visit_by_discharge_date",function:a("visit",s("endDate")+"\n    emit([endDate, doc._id]);"),version:2},{name:"visit_by_patient",function:a("visit",s("endDate")+"\n    "+s("startDate")+"\n    emit([doc.data.patient, startDate, endDate, doc.data.visitType, doc._id]);"),version:4},{name:"report_by_visit",function:a("report","emit(doc.data.visit);"),version:1}]}),define("hospitalrun/utils/rtl-detect",["exports"],function(e){var t
Object.defineProperty(e,"__esModule",{value:!0})
var n=t={_escapeRegExpPattern:function(e){return"string"!=typeof e?e:e.replace(/([\.\*\+\^\$\[\]\\\(\)\|\{\}\,\-\:\?])/g,"\\$1")},_toLowerCase:function(e,t){return"string"!=typeof e?t&&e:e.toLowerCase()},_toUpperCase:function(e,t){return"string"!=typeof e?t&&e:e.toUpperCase()},_trim:function(e,n,a){var i,s=[],o=function(e){s.push("^"+e+"+|"+e+"+$")}
if("boolean"==typeof n&&(a=n,n=null),"string"!=typeof e)return a&&e
if(Array.isArray(n)&&n.map(function(e){var n=t._escapeRegExpPattern(e)
o(n)}),"string"==typeof n){var r=t._escapeRegExpPattern(n)
o(r)}n||o("\\s")
var l="("+s.join("|")+")"
for(i=new RegExp(l,"g");e.match(i);)e=e.replace(i,"")
return e},_parseLocale:function(e){var n,a=/^([a-zA-Z]*)([_\-a-zA-Z]*)$/.exec(e)
if(e&&a)return a[2]=t._trim(a[2],["-","_"]),{lang:t._toLowerCase(a[1]),countryCode:n=t._toUpperCase(a[2])||n}},isRtlLang:function(e){var n=t._parseLocale(e)
if(n)return t._BIDI_RTL_LANGS.indexOf(n.lang)>=0},getLangDir:function(e){return t.isRtlLang(e)?"rtl":"ltr"}}
Object.defineProperty(t,"_BIDI_RTL_LANGS",{value:["ae","ar","arc","bcc","bqi","ckb","dv","fa","glk","he","ku","mzn","nqo","pnb","ps","sd","ug","ur","yi"],writable:!1,enumerable:!0,configurable:!1}),e.default=n}),define("hospitalrun/utils/select-values",["exports"],function(e){function t(e){return{id:e,value:e}}Object.defineProperty(e,"__esModule",{value:!0}),e.default={selectObjectMap:function(e){return Ember.Object.create({selectObject:e})},selectValuesMap:t,selectValues:function(e,n){if(Ember.isArray(e)){var a=new Array(e)
return n?(a=[""]).addObjects(e):a=e,a.map(t)}}}}),define("hospitalrun/utils/text-expansion",["exports"],function(e){function t(e,t,n){return n.indexOf(e)===t}Object.defineProperty(e,"__esModule",{value:!0}),e.default={findExpansionSubjects:function(e){for(var n=/(^|\s+)(#\S+)/g,a=!0,i=[];null!=a;)(a=n.exec(e))&&a.length>2&&i.push(a[2])
return i.filter(t)},findExpansionSites:function(e,t){return t.map(function(e){return function(t){for(var n=[],a=!0,i=0;a;)(i=e.indexOf(t,i))>-1?n.push({index:i,match:t,term:t.slice(1)}):a=!1,i+=1
return n}}(e)).reduce(function(e,t){return e.concat(t)},[])}}}),define("hospitalrun/utils/unauthorized-error",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=t.default.AdapterError,a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"The adapter operation is unauthorized"
n.call(this,e,t)}
a.prototype=Object.create(n.prototype),e.default=a}),define("hospitalrun/utils/visit-statuses",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0})
e.ADMITTED="Admitted",e.DISCHARGED="Discharged",e.CHECKED_IN="CheckedIn",e.CHECKED_OUT="CheckedOut"}),define("hospitalrun/visits/charge/controller",["exports","hospitalrun/procedures/charge/controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({cancelAction:"closeModal",newPricingItem:!1,requestingController:Ember.inject.controller("visits/edit")})}),define("hospitalrun/visits/charge/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"I/iIpxPZ",block:'{"symbols":[],"statements":[[12,"procedures/charge",[]]],"hasEval":true}',meta:{moduleName:"hospitalrun/visits/charge/template.hbs"}})}),define("hospitalrun/visits/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({title:"Delete Visit",afterDeleteAction:Ember.computed("model.deleteFromPatient",function(){return this.get("model.deleteFromPatient")?"visitDeleted":"closeModal"})})}),define("hospitalrun/visits/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"MOdu0vo4",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.visit.names.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n  "],[6,"form"],[9,"role","form"],[7],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.startDate"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["model","startDate"]]],null],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.endDate"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"date-format",[[20,["model","endDate"]]],null],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["visits.labels.examiner"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","examiner"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.location"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","location"]],false],[8],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","form-group"],[7],[0,"\\n      "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["labels.type"],null],false],[8],[0,"\\n      "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visitType"]],false],[8],[0,"\\n    "],[8],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/visits/delete/template.hbs"}})}),define("hospitalrun/visits/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/add-new-patient","hospitalrun/mixins/allergy-actions","hospitalrun/mixins/charge-actions","hospitalrun/mixins/diagnosis-actions","moment","hospitalrun/mixins/patient-notes","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/user-session","hospitalrun/utils/visit-statuses","hospitalrun/mixins/visit-types"],function(e,t,n,a,i,s,o,r,l,d,u,c){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,s.default,l.default,r.default,d.default,c.default,{visitsController:Ember.inject.controller("visits"),filesystem:Ember.inject.service(),additionalButtons:Ember.computed("model.status",function(){var e={buttonIcon:"glyphicon glyphicon-log-out",class:"btn btn-primary on-white"},t=this.get("intl"),n=this.get("model.status")
return n===u.default.ADMITTED?(e.buttonAction="discharge",e.buttonText=t.t("visits.buttons.discharge"),[e]):n===u.default.CHECKED_IN?(e.buttonAction="checkout",e.buttonText=t.t("visits.buttons.checkOut"),[e]):void 0}),noReport:!1,canAddAppointment:Ember.computed("model.isNew",function(){return!this.get("model.isNew")&&this.currentUserCan("add_appointment")}),canAddBillingDiagnosis:Ember.computed("model.isNew",function(){return!this.get("model.isNew")&&this.currentUserCan("add_billing_diagnosis")}),canAddImaging:Ember.computed(function(){return this.currentUserCan("add_imaging")}),canAddLab:Ember.computed(function(){return this.currentUserCan("add_lab")}),canAddMedication:Ember.computed(function(){return this.currentUserCan("add_medication")}),canAddPhoto:Ember.computed(function(){var e=this.get("isFileSystemEnabled")
return this.currentUserCan("add_photo")&&e}),canAddProcedure:Ember.computed(function(){return this.currentUserCan("add_procedure")}),canAddVitals:Ember.computed(function(){return this.currentUserCan("add_vitals")}),canAddReport:Ember.computed("hasReport",function(){return this.currentUserCan("add_report")&&!this.get("hasReport")}),canDeleteImaging:Ember.computed(function(){return this.currentUserCan("delete_imaging")}),canDeleteLab:Ember.computed(function(){return this.currentUserCan("delete_lab")}),canDeleteMedication:Ember.computed(function(){return this.currentUserCan("delete_medication")}),canDeletePhoto:Ember.computed(function(){return this.currentUserCan("delete_photo")}),canDeleteProcedure:Ember.computed(function(){return this.currentUserCan("delete_procedure")}),canDeleteVitals:Ember.computed(function(){return this.currentUserCan("delete_vitals")}),canDeleteReport:Ember.computed(function(){return this.currentUserCan("delete_report")}),isAdmissionVisit:Ember.computed("model.visitType",function(){return"Admission"===this.get("model.visitType")}),cancelAction:Ember.computed("model.returnTo","model.returnToPatient",function(){var e=this.get("model.returnTo")
return Ember.isEmpty(e)?Ember.isEmpty(this.get("model.returnToPatient"))?this._super():"returnToPatient":"returnTo"}),allowAddAllergy:Ember.computed.not("model.isNew"),allowAddDiagnosis:Ember.computed.not("model.isNew"),allowAddOperativePlan:Ember.computed.not("model.isNew"),chargePricingCategory:"Ward",chargeRoute:"visits.charge",diagnosisList:Ember.computed.alias("visitsController.diagnosisList"),findPatientVisits:!1,hideChargeHeader:!0,isFileSystemEnabled:Ember.computed.alias("filesystem.isFileSystemEnabled"),patientImaging:Ember.computed.alias("model.imaging"),patientLabs:Ember.computed.alias("model.labs"),patientMedications:Ember.computed.alias("model.medication"),pricingList:null,pricingTypes:Ember.computed.alias("visitsController.wardPricingTypes"),physicianList:Ember.computed.alias("visitsController.physicianList"),locationList:Ember.computed.alias("visitsController.locationList"),sexList:Ember.computed.alias("visitsController.sexList"),visitTypesList:Ember.computed.alias("visitsController.visitTypesList"),lookupListsToUpdate:[{name:"physicianList",property:"model.examiner",id:"physician_list"},{name:"locationList",property:"model.location",id:"visit_location_list"}],updateCapability:"add_visit",showPatientSelection:Ember.computed("model.checkIn","model.hidePatientSelection",function(){return this.get("model.checkIn")&&!this.get("model.hidePatientSelection")}),updateButtonIcon:Ember.computed("model.checkIn",function(){if(this.get("model.checkIn"))return"glyphicon glyphicon-log-in"}),updateButtonText:Ember.computed("model.{checkIn,isNew}",function(){var e=this.get("intl")
return this.get("model.checkIn")?e.t("visits.buttons.checkIn"):this._super()}),validVisitTypes:Ember.computed("visitTypes","model.outPatient",function(){var e=this.get("model.outPatient"),t=this.get("visitTypes")
return!0===e&&(t=t.filter(function(e){return"Admission"!==e.id})),t}),_addChildObject:function(e,t){var n={queryParams:{forVisitId:this.get("model.id")}}
this.transitionToRoute(e,"new",n).then(function(e){t&&t(e)})},_finishAfterUpdate:function(){var e=this.get("addedNewPatient"),t=this.get("model.checkIn"),n=this.get("intl"),a=n.t("visits.messages.visitSaved"),i=n.t("visits.titles.visitSaved")
!0===t&&(this.get("model").set("checkIn"),this.send("setSectionHeader",{currentScreenTitle:n.t("visits.titles.editVisit")}))
if(t){i=n.t("visits.titles.checkedIn")
var s={patientName:this.get("model.patient.displayName")}
!0===e?(this.set("addedNewPatient"),a=n.t("visits.messages.patientCreatedAndCheckedIn",s)):a=n.t("visits.messages.patientCheckedIn",s)}this.displayAlert(i,a)},_findAssociatedAppointment:function(e){var t=e.get("appointment"),n=(0,o.default)().startOf("day").valueOf(),a=this.get("database"),i=(0,o.default)().endOf("day").valueOf(),s=a.getMaxPouchId("appointment"),r=a.getMinPouchId("appointment"),l=e.get("patient.id")
return Ember.isEmpty(t)?this.store.query("appointment",{options:{startkey:[l,n,n,r],endkey:[l,i,i,s]},mapReduce:"appointments_by_patient"}).then(function(e){return Ember.isEmpty(e)?void 0:e.get("firstObject")}):Ember.RSVP.resolve(t)},_saveAssociatedAppointment:function(e){return this._findAssociatedAppointment(e).then(function(t){return Ember.isEmpty(t)?(e.set("hasAppointment",!1),Ember.RSVP.resolve()):(e.set("hasAppointment",!0),t.set("status","Attended"),t.save())})},haveAdditionalDiagnoses:Ember.computed("model.additionalDiagnoses.[]",function(){return!Ember.isEmpty(this.get("model.additionalDiagnoses"))}),afterUpdate:function(e){this.updatePatientVisitFlags(e).then(this._finishAfterUpdate.bind(this))},beforeUpdate:function(){var e=this
return this.get("model.isNew")?new Ember.RSVP.Promise(function(t,n){var a=e.get("model")
return a.validate().then(function(){if(a.get("isValid")){var i=a.get("patient")
if(Ember.isEmpty(i))return e.addNewPatient(),n({ignore:!0,message:"creating new patient first"})
var s=!1,o=void 0
"Admission"===a.get("visitType")?o=u.default.ADMITTED:(s=!0,o=u.default.CHECKED_IN),a.setProperties({outPatient:s,status:o}),e.get("model.checkIn")?e._saveAssociatedAppointment(a).then(function(){e.saveNewDiagnoses().then(t,n)}):e.saveNewDiagnoses().then(t,n)}})}):this.updateCharges()},checkoutPatient:function(e){var t=this.get("model")
this.checkoutVisit(t,e)},patientSelected:function(e){Ember.isEmpty(e)?Ember.set(this,"model.createNewPatient",!0):(Ember.set(this,"model.createNewPatient",!1),this.getPatientDiagnoses(e,Ember.get(this,"model")))},updateList:function(e,t,n){this.get("model").get(e).then(function(e){n?e.removeObject(t):e.addObject(t),this.send("update",!0),this.send("closeModal")}.bind(this))},actions:{addAllergy:function(e){var t=Ember.get(this,"model.patient")
this.savePatientAllergy(t,e)},addDiagnosis:function(e){this.addDiagnosisToModelAndPatient(e)},addPhoto:function(e){this.get("model.photos").addObject(e),this.send("closeModal")},addVitals:function(e){this.updateList("vitals",e)},cancel:function(){var e=this.get("model")
this.get("model.isNew")?e.deleteRecord():e.rollbackAttributes(),this.send(this.get("cancelAction"))},checkout:function(){this.checkoutPatient(u.default.CHECKED_OUT)},deleteAllergy:function(e){var t=Ember.get(this,"model.patient")
this.deletePatientAllergy(t,e)},deleteProcedure:function(e){this.updateList("procedures",e,!0)},deletePhoto:function(e){var t=e.get("photoToDelete"),n=t.get("id"),a=this.get("model.photos"),i=t.get("fileName")
a.removeObject(t),t.destroyRecord().then(function(){var e=this.get("filesystem")
if(this.get("isFileSystemEnabled")){var t=this.get("database").getPouchId(n,"photo")
e.deleteFile(i,t)}}.bind(this))},deleteVitals:function(e){this.updateList("vitals",e,!0)},discharge:function(){this.checkoutPatient(u.default.DISCHARGED)},editImaging:function(e){e.get("canEdit")&&e.setProperties("returnToVisit",this.get("model.id")),this.transitionToRoute("imaging.edit",e)},editLab:function(e){e.get("canEdit")&&(e.setProperties("returnToVisit",this.get("model.id")),this.transitionToRoute("labs.edit",e))},editMedication:function(e){e.get("canEdit")&&(e.set("returnToVisit",this.get("model.id")),this.transitionToRoute("medication.edit",e))},editOperativePlan:function(e){var t=this,n=e
Ember.isEmpty(n)?this._addChildObject("patients.operative-plan",function(e){e.controller.getPatientDiagnoses(t.get("model.patient"),e.currentModel)}):(n.set("returnToVisit",this.get("model.id")),this.transitionToRoute("patients.operative-plan",n))},editPhoto:function(e){this.send("openModal","patients.photo",e)},newPatientChanged:function(e){Ember.set(this,"model.createNewPatient",e)
var t=this.get("model"),n=t.get("patient")
e&&!Ember.isEmpty(n)&&(t.set("patientTypeAhead",n.get("displayName")),t.set("patient"))},showAddVitals:function(){var e=this.get("store").createRecord("vital",{dateRecorded:new Date})
this.send("openModal","visits.vitals.edit",e)},showAddPatientNote:function(e){Ember.isEmpty(e)&&(e=this.get("store").createRecord("patient-note",{visit:this.get("model"),createdBy:this.getUserName(),patient:this.get("model").get("patient"),noteType:this._computeNoteType(this.get("model"))})),this.send("openModal","patients.notes",e)},showAddPhoto:function(){var e=this.get("store").createRecord("photo",{patient:this.get("model.patient"),visit:this.get("model"),saveToDir:this.get("model.patient.id")+"/photos/"})
e.set("editController",this),this.send("openModal","patients.photo",e)},newAppointment:function(){this._addChildObject("appointments.edit")},newImaging:function(){this._addChildObject("imaging.edit")},newLab:function(){this._addChildObject("labs.edit")},newMedication:function(){this._addChildObject("medication.edit")},newReport:function(){this._addChildObject("visits.reports.edit")},showAddProcedure:function(){this._addChildObject("procedures.edit")},showDeleteImaging:function(e){this.send("openModal","imaging.delete",e)},showDeleteLab:function(e){this.send("openModal","labs.delete",e)},showDeleteMedication:function(e){this.send("openModal","medication.delete",e)},showDeleteProcedure:function(e){this.send("openModal","visits.procedures.delete",e)},showDeletePhoto:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deletePhoto",title:this.get("intl").t("patients.titles.deletePhoto"),message:this.get("intl").t("patients.titles.deletePhoto",{object:"photo"}),photoToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},showDeleteVitals:function(e){this.send("openModal","visits.vitals.delete",e)},showEditProcedure:function(e){Ember.isEmpty(e.get("visit"))&&e.set("visit",this.get("model")),e.set("returnToVisit",this.get("model.id")),e.set("returnToPatient"),this.transitionToRoute("procedures.edit",e)},showEditVitals:function(e){this.send("openModal","visits.vitals.edit",e)},showDeletePatientNote:function(e){this.send("openModal","dialog",Ember.Object.create({confirmAction:"deletePatientNote",title:"Delete Note",message:"Are you sure you want to delete this note?",noteToDelete:e,updateButtonAction:"confirm",updateButtonText:this.get("intl").t("buttons.ok")}))},deletePatientNote:function(e){var t=e.get("noteToDelete")
this.get("model.patientNotes").removeObject(t),this.send("update",!0)},startDateChanged:function(e){var t=this.get("isAdmissionVisit"),n=this.get("model")
t||n.set("endDate",e)},printReport:function(e){Ember.set(e,"returnToVisit",Ember.get(this,"model.id")),this.transitionToRoute("visits.reports.edit",e,{queryParams:{print:!0}})},viewReport:function(e){Ember.set(e,"returnToVisit",Ember.get(this,"model.id")),this.transitionToRoute("visits.reports.edit",e,{queryParams:{print:null}})}}})})
define("hospitalrun/visits/edit/route",["exports","hospitalrun/macro","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/charge-route","hospitalrun/mixins/patient-list-route","hospitalrun/mixins/patient-visits","ember-data"],function(e,t,n,a,i,s,o){Object.defineProperty(e,"__esModule",{value:!0}),e.default=n.default.extend(a.default,i.default,s.default,{customForms:Ember.inject.service(),editTitle:(0,t.t)("visits.titles.editVisit"),modelName:"visit",newTitle:(0,t.t)("visits.titles.newVisit"),pricingCategory:"Ward",photos:null,model:function(e){var t=this,n=Ember.get(this,"idParam")
return Ember.isEmpty(n)||"checkin"!==e[n]?this._super(e):this.getNewData().then(function(e){return e.checkIn=!0,Ember.get(t,"store").createRecord("visit",e)})},getNewData:function(){var e={startDate:new Date,visitType:"Admission",customForms:Ember.Object.create()}
return this.get("customForms").setDefaultCustomForms(["visit"],e)},getScreenTitle:function(e){return e.get("checkIn")?this.get("intl").t("visits.titles.patientCheckIn"):this._super(e)},setupController:function(e,t){var n=this.store.query("report",{options:{key:Ember.get(t,"id")},mapReduce:"report_by_visit"}).then(function(t){return Ember.set(e,"noReport",Ember.isEmpty(t)),Ember.isEmpty(t)?"":Ember.get(t,"firstObject")})
Ember.set(e,"report",o.default.PromiseObject.create({promise:n})),this._super(e,t),this.store.query("photo",{options:{key:Ember.get(t,"id")},mapReduce:"photo_by_visit"}).then(function(e){var n=[]
n.addObjects(e),t.set("photos",n)})},actions:{updateNote:function(){this.controller.send("update",!0)},deletePatientNote:function(e){this.controller.send("deletePatientNote",e)},deletePhoto:function(e){this.controller.send("deletePhoto",e)}}})}),define("hospitalrun/visits/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"KhsbWCzF",block:'{"symbols":["form","vital","procedure","photo","note","form"],"statements":[[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","panel-group"],[9,"id","visit-accordion"],[7],[0,"\\n    "],[6,"div"],[9,"class","panel"],[7],[0,"\\n      "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n        "],[6,"h3"],[9,"class","panel-title"],[7],[0,"\\n          "],[6,"a"],[9,"data-toggle","collapse"],[9,"data-parent","#visit-accordion"],[9,"href","#visit-info"],[7],[0,"\\n            "],[1,[25,"t",["visits.labels.visitInformation"],null],false],[0,"\\n          "],[8],[0,"\\n"],[4,"if",[[20,["canAddAppointment"]]],null,{"statements":[[0,"            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"newAppointment"],[["bubbles"],[false]]],[7],[0,"\\n              "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.newAppointment"],null],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"id","visit-info"],[9,"class","panel-collapse collapse in"],[7],[0,"\\n        "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","patient"]]],null,{"statements":[[0,"              "],[1,[25,"patient-summary",null,[["class","patient","diagnosisContainer","returnTo","returnToContext","disablePatientLink","allowAddAllergy","allowAddDiagnosis","allowAddOperativePlan","diagnosisList"],["clickable",[20,["model","patient"]],[20,["model"]],"visits.edit",[20,["model","id"]],[20,["model","isNew"]],true,true,true,[20,["diagnosisList"]]]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["showPatientSelection"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["model","createNewPatient"]]],null,{"statements":[[0,"                  "],[1,[25,"component",[[19,6,["input"]]],[["property","label","class"],["patientTypeAhead",[25,"t",["visits.labels.patientToCheckIn"],null],"required patient-name col-sm-9"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                  "],[1,[25,"patient-typeahead",null,[["model","property","label","content","selection","class"],[[20,["model"]],"patientTypeAhead",[25,"t",["visits.labels.patientToCheckIn"],null],[20,["patientList"]],[20,["selectedPatient"]],"required patient-name col-sm-9"]]],false],[0,"\\n"]],"parameters":[]}],[0,"                "],[6,"div"],[9,"class","checkbox col-sm-3 new-patient-checkbox"],[7],[0,"\\n                  "],[6,"label"],[7],[0,"\\n                    "],[6,"input"],[9,"type","checkbox"],[10,"checked",[20,["model","createNewPatient"]],null],[10,"onchange",[25,"action",[[19,0,[]],"newPatientChanged"],[["value"],["target.checked"]]],null],[7],[8],[0,"\\n                    "],[1,[25,"t",["visits.labels.createNewPatient"],null],false],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n            "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["isAdmissionVisit"]]],null,{"statements":[[0,"                "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"startDate",[25,"t",["patients.labels.admissionDate"],null],true,"col-sm-4 required test-visit-start"]]],false],[0,"\\n                "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"endDate",[25,"t",["patients.labels.dischargeDate"],null],true,"col-sm-4"]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"startDate",[25,"t",["visits.labels.checkInTime"],null],true,"col-sm-4 required checkin-date"]]],false],[0,"\\n"],[4,"if",[[25,"eq",[[20,["model","status"]],"CheckedOut"],null]],null,{"statements":[[0,"                  "],[1,[25,"date-picker",null,[["model","property","label","showTime","class"],[[20,["model"]],"endDate",[25,"t",["visits.labels.checkOutTime"],null],true,"col-sm-4 checkout-date"]]],false],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"              "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,6,[]],[20,["model"]],"col-sm-4 visit-location","location",[25,"t",["labels.location"],null],[20,["locationList"]],[20,["model","location"]]]]],false],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"if",[[20,["model","isNew"]]],null,{"statements":[[0,"                "],[1,[25,"component",[[19,6,["select"]]],[["class","label","property","content","prompt"],["col-sm-4 required form-input-group visit-type",[25,"t",["visits.labels.visitType"],null],"visitType",[20,["validVisitTypes"]]," "]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[6,"div"],[9,"class","form-group col-sm-4"],[7],[0,"\\n                  "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["visits.labels.visitType"],null],false],[8],[0,"\\n                    "],[6,"p"],[9,"class","form-control-static"],[7],[1,[20,["model","visitType"]],false],[8],[0,"\\n                "],[8],[0,"\\n"]],"parameters":[]}],[4,"if",[[20,["model","status"]]],null,{"statements":[[0,"                "],[6,"div"],[9,"class","form-group col-sm-4"],[7],[0,"\\n                  "],[6,"label"],[9,"class","control-label"],[7],[1,[25,"t",["visits.labels.status"],null],false],[8],[0,"\\n                    "],[6,"p"],[9,"class","form-control-static"],[7],[1,[25,"t",[[25,"concat",["visits.labels.status",[20,["model","status"]]],null]],null],false],[8],[0,"\\n                "],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection"],[[19,6,[]],[20,["model"]],"col-sm-4 visit-examiner","examiner",[25,"t",["visits.labels.examiner"],null],[20,["physicianList"]],[20,["model","examiner"]]]]],false],[0,"\\n            "],[8],[0,"\\n            "],[1,[25,"expand-text",null,[["property","label","rows","form"],["reasonForVisit",[25,"t",["visits.labels.reasonForVisit"],null],3,[19,6,[]]]]],false],[0,"\\n"],[4,"if",[[20,["canAddBillingDiagnosis"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","row"],[7],[0,"\\n                "],[1,[25,"select-or-typeahead",null,[["form","model","className","property","label","list","selection","hint"],[[19,6,[]],[20,["model"]],"col-sm-5","primaryBillingDiagnosis",[25,"t",["visits.labels.finalDiagnosis"],null],[20,["diagnosisList"]],[20,["model","primaryBillingDiagnosis"]],false]]],false],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"visit",[19,6,[]]]]],false],[0,"\\n"]],"parameters":[6]},null],[0,"        "],[8],[0,"\\n      "],[8],[0,"\\n    "],[8],[0,"\\n"],[4,"unless",[[20,["model","isNew"]]],null,{"statements":[[0,"      "],[6,"ul"],[9,"class","nav nav-pills tab-nav"],[9,"role","tablist"],[7],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[9,"class","active"],[7],[0,"\\n          "],[6,"a"],[9,"href","#orders"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","orders-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.orders"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#visit-vitals"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","vitals-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.vitals"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#visit-notes"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","notes-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.notes"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#visit-photos"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","photos-tab"],[7],[0,"\\n            "],[1,[25,"t",["patients.navigation.photos"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#visit-procedures"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","procedures-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.procedures"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#charges"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","charges-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.charges"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"li"],[9,"role","presentation"],[7],[0,"\\n          "],[6,"a"],[9,"href","#reports"],[9,"role","tab"],[9,"data-toggle","pill"],[9,"data-test-selector","reports-tab"],[7],[0,"\\n            "],[1,[25,"t",["visits.navigation.reports"],null],false],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n      "],[6,"div"],[9,"class","tab-content"],[7],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","visit-notes"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["visits.labels.authoredBy"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.note"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","patientNotes"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,5,["date"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["authoredBy"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,5,["noteType"]],false],[0,": "],[1,[19,5,["content"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddNote"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showAddPatientNote",[19,5,[]]]],[7],[1,[25,"t",["buttons.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteNote"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeletePatientNote",[19,5,[]]]],[7],[0,"\\n                          "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[5]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"if",[[20,["canAddNote"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-primary align-right"],[9,"data-test-selector","new-note-btn"],[3,"action",[[19,0,[]],"showAddPatientNote"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["buttons.newNote"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","visit-photos"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel"],[7],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n                "],[6,"button"],[9,"type","button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddPhoto"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[1,[25,"t",["patients.buttons.newPhoto"],null],false],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[6,"div"],[9,"class","panel-body detail-section-content"],[7],[0,"\\n              "],[6,"div"],[9,"class","row"],[7],[0,"\\n"],[4,"each",[[20,["model","photos"]]],null,{"statements":[[0,"                  "],[6,"div"],[9,"class","col-sm-4 col-md-3"],[7],[0,"\\n                    "],[6,"div"],[9,"class","thumbnail"],[3,"action",[[19,0,[]],"editPhoto",[19,4,[]]]],[7],[0,"\\n                      "],[1,[25,"photo-display",null,[["photo"],[[19,4,[]]]]],false],[0,"\\n                      "],[6,"div"],[9,"class","caption"],[7],[0,"\\n                        "],[1,[19,4,["caption"]],false],[0,"\\n                        "],[6,"p"],[7],[0,"\\n"],[4,"if",[[20,["canAddPhoto"]]],null,{"statements":[[0,"                            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"editPhoto",[19,4,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeletePhoto"]]],null,{"statements":[[0,"                            "],[6,"button"],[9,"type","button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeletePhoto",[19,4,[]]],[["bubbles"],[false]]],[7],[0,"\\n                              "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                        "],[8],[0,"\\n                      "],[8],[0,"\\n                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","visit-procedures"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["visits.labels.procedure"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","procedures"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,3,["procedureDate"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,3,["description"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddProcedure"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditProcedure",[19,3,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteProcedure"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteProcedure",[19,3,[]]]],[7],[0,"\\n                          "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[3]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"if",[[20,["canAddProcedure"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-primary align-right"],[9,"data-test-selector","new-procedure-btn"],[3,"action",[[19,0,[]],"showAddProcedure"],[["bubbles"],[false]]],[7],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.newProcedure"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane active"],[9,"id","orders"],[7],[0,"\\n          "],[1,[25,"patient-orders",null,[["visit"],[[20,["model"]]]]],false],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","visit-vitals"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n            "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n              "],[6,"table"],[9,"class","table"],[7],[0,"\\n                "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.takenBy"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.temperature"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.weight"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.height"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.sbp"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.dbp"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.heartRate"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["vitals.labels.respiratoryRate"],null],false],[8],[0,"\\n                  "],[6,"th"],[7],[1,[25,"t",["labels.delete"],null],false],[8],[0,"\\n                "],[8],[0,"\\n"],[4,"each",[[20,["model","vitals"]]],null,{"statements":[[0,"                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["modifiedBy"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[19,2,["dateRecorded"]]],[["format"],["l h:mm A"]]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["temperature"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["weight"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["height"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["sbp"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["dbp"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["heartRate"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[19,2,["respiratoryRate"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n"],[4,"if",[[20,["canAddVitals"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default neutral"],[3,"action",[[19,0,[]],"showEditVitals",[19,2,[]]]],[7],[1,[25,"t",["labels.edit"],null],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["canDeleteVitals"]]],null,{"statements":[[0,"                        "],[6,"button"],[9,"class","btn btn-default warning"],[3,"action",[[19,0,[]],"showDeleteVitals",[19,2,[]]]],[7],[0,"\\n                        "],[6,"span"],[9,"class","octicon octicon-x"],[7],[8],[0," "],[1,[25,"t",["buttons.delete"],null],false],[0,"\\n                        "],[8],[0,"\\n"]],"parameters":[]},null],[0,"                    "],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n            "],[6,"div"],[9,"class","panel-footer"],[7],[0,"\\n"],[4,"if",[[20,["canAddVitals"]]],null,{"statements":[[0,"                "],[6,"button"],[9,"class","btn btn-primary align-right"],[3,"action",[[19,0,[]],"showAddVitals"],[["bubbles"],[false]]],[7],[0,"\\n                  "],[6,"span"],[9,"class","octicon octicon-plus"],[7],[8],[0," "],[1,[25,"t",["visits.buttons.newVitals"],null],false],[0,"\\n                "],[8],[0,"\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","charges"],[7],[0,"\\n"],[4,"em-form",null,[["model","submitButton"],[[19,0,[]],false]],{"statements":[[0,"            "],[12,"item-charges",[1]],[0,"\\n"]],"parameters":[1]},null],[0,"        "],[8],[0,"\\n        "],[6,"div"],[9,"role","tabpanel"],[9,"class","tab-pane"],[9,"id","reports"],[7],[0,"\\n          "],[6,"div"],[9,"class","panel detail-section"],[7],[0,"\\n"],[4,"if",[[20,["noReport"]]],null,{"statements":[[0,"\\n              "],[6,"div"],[9,"class","panel-heading"],[7],[0,"\\n"],[4,"if",[[20,["canAddReport"]]],null,{"statements":[[0,"                  "],[6,"button"],[9,"class","btn btn-primary align-right"],[9,"data-test-selector","report-btn"],[3,"action",[[19,0,[]],"newReport"]],[7],[0,"\\n"],[4,"if",[[20,["model","outPatient"]]],null,{"statements":[[0,"                      "],[1,[25,"t",["visits.buttons.newOPDReport"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                      "],[1,[25,"t",["visits.buttons.newDischargeReport"],null],false],[0,"\\n"]],"parameters":[]}],[0,"                  "],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n\\n"]],"parameters":[]},{"statements":[[0,"\\n              "],[6,"div"],[9,"class","panel-body"],[7],[0,"\\n                "],[6,"table"],[9,"class","table"],[7],[0,"\\n                  "],[6,"tr"],[9,"class","table-header"],[7],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.date"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["visits.labels.authoredBy"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["visits.labels.reportType"],null],false],[8],[0,"\\n                    "],[6,"th"],[7],[1,[25,"t",["labels.actions"],null],false],[8],[0,"\\n                  "],[8],[0,"\\n\\n                  "],[6,"tr"],[7],[0,"\\n                    "],[6,"td"],[7],[1,[25,"date-format",[[20,["report","reportDate"]]],null],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[20,["report","modifiedBy"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[1,[20,["report","reportType"]],false],[8],[0,"\\n                    "],[6,"td"],[7],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default neutral"],[9,"data-test-selector","view-report-btn"],[3,"action",[[19,0,[]],"viewReport",[20,["report"]]]],[7],[1,[25,"t",["labels.view"],null],false],[8],[0,"\\n                      "],[6,"button"],[9,"class","btn btn-default neutral"],[9,"data-test-selector","print-report-btn"],[3,"action",[[19,0,[]],"printReport",[20,["report"]]]],[7],[1,[25,"t",["labels.print"],null],false],[8],[0,"\\n                    "],[8],[0,"\\n                  "],[8],[0,"\\n                "],[8],[0,"\\n              "],[8],[0,"\\n\\n"]],"parameters":[]}],[0,"\\n          "],[8],[0,"\\n        "],[8],[0,"\\n      "],[8],[0,"\\n"]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":true}',meta:{moduleName:"hospitalrun/visits/edit/template.hbs"}})}),define("hospitalrun/visits/procedures/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({afterDeleteAction:"notifyProcedureDelete",editController:Ember.inject.controller("visits/edit"),title:"Delete Procedure",actions:{notifyProcedureDelete:function(){this.send("closeModal"),this.get("editController").send("deleteProcedure",this.get("model"))}}})}),define("hospitalrun/visits/procedures/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"opdBwK5k",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_singular"],[["name"],[[25,"t",["models.procedure.names.singular"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/visits/procedures/delete/template.hbs"}})}),define("hospitalrun/visits/reports/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller","hospitalrun/mixins/patient-submodule","hospitalrun/mixins/patient-diagnosis","hospitalrun/mixins/pouchdb"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,a.default,i.default,{queryParams:["print"],print:null,visitsController:Ember.inject.controller("visits"),physicianList:Ember.computed.alias("visitsController.physicianList"),logoURL:Ember.computed.alias("visitsController.printHeader.value.logoURL"),facilityName:Ember.computed.alias("visitsController.printHeader.value.facilityName"),headerLine1:Ember.computed.alias("visitsController.printHeader.value.headerLine1"),headerLine2:Ember.computed.alias("visitsController.printHeader.value.headerLine2"),headerLine3:Ember.computed.alias("visitsController.printHeader.value.headerLine3"),diagnosisList:Ember.computed.alias("visitsController.diagnosisList"),additionalButtons:Ember.computed("model.isNew",function(){var e=Ember.get(this,"model.isNew"),t=Ember.get(this,"intl")
if(!e)return[{class:"btn btn-primary on-white",buttonAction:"printReport",buttonIcon:"octicon octicon-check",buttonText:t.t("labels.print")}]}),updateCapability:"add_report",beforeUpdate:function(){var e=this
return new Ember.RSVP.Promise(function(t){var n=Ember.get(e,"model")
Ember.get(n,"isNew")&&(Ember.get(e,"model.visit.outPatient")?Ember.set(n,"reportType","OPD Report"):Ember.set(n,"reportType","Discharge Report")),t()})},afterUpdate:function(){var e=Ember.get(this,"intl").t("reports.titles.saved"),t=Ember.get(this,"intl").t("reports.messages.saved")
this.saveVisitIfNeeded(e,t)
var n=Ember.get(this,"intl").t("reports.titles.opdReport"),a=Ember.get(this,"intl").t("reports.titles.dischargeReport"),i=Ember.get(this,"model.visit.outPatient")?n:a,s={}
s.currentScreenTitle=i,this.send("setSectionHeader",s)},actions:{printReport:function(){window.print()}}})}),define("hospitalrun/visits/reports/edit/route",["exports","hospitalrun/routes/abstract-edit-route","hospitalrun/mixins/add-to-patient-route","hospitalrun/macro","hospitalrun/mixins/patient-visits"],function(e,t,n,a,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend(n.default,i.default,{modelName:"report",customForms:Ember.inject.service(),getNewData:function(){var e={reportDate:new Date,customForms:Ember.Object.create()}
return Ember.get(this,"customForms").setDefaultCustomForms(["opdReport","dischargeReport"],e)},getScreenTitle:function(e){var t=Ember.get(e,"isNew"),n=null
return n=Ember.get(e,"visit.outPatient")?t?"newOPDReport":"opdReport":t?"newDischargeReport":"dischargeReport",(0,a.t)("reports.titles."+n)},getDiagnosisContainer:function(e){return Ember.get(e,"outPatient")?e:null},getCurrentOperativePlan:function(e){return Ember.get(e,"operativePlans").findBy("isPlanned",!0)},afterModel:function(e){if(!Ember.get(e,"isNew")){var t=Ember.get(e,"visit.patient")
Ember.set(e,"patient",t)}if(!Ember.get(e,"visit"))return this.transitionTo("patients")},setupController:function(e,t){this._super(e,t)
var n=Ember.get(t,"visit"),a=Ember.get(t,"patient"),i=Ember.get(n,"outPatient")
Ember.set(e,"visit",n),Ember.set(e,"isOutPatient",i),Ember.set(e,"diagnosisContainer",this.getDiagnosisContainer(n)),Ember.set(e,"currentOperativePlan",this.getCurrentOperativePlan(a)),i?Ember.set(e,"nextAppointments",this.getPatientFutureAppointment(n,!0)):Ember.set(e,"nextAppointment",this.getPatientFutureAppointment(n))}})}),define("hospitalrun/visits/reports/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"JqwIM9tA",block:'{"symbols":["form","note","procedure","note","procedure","appointment","medication","item","item","item"],"statements":[[4,"print-this",null,[["print","delay"],[[20,["print"]],1000]],{"statements":[[0,"  "],[6,"div"],[9,"class","report-header"],[7],[0,"\\n"],[4,"if",[[20,["logoURL"]]],null,{"statements":[[0,"      "],[6,"img"],[10,"src",[18,"logoURL"],null],[9,"class","report-logo"],[7],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["facilityName"]]],null,{"statements":[[0,"      "],[6,"h3"],[7],[1,[18,"facilityName"],false],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["headerLine1"]]],null,{"statements":[[0,"      "],[6,"span"],[7],[1,[18,"headerLine1"],false],[8],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["headerLine2"]]],null,{"statements":[[0,"      "],[6,"span"],[7],[1,[18,"headerLine2"],false],[8],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["headerLine3"]]],null,{"statements":[[0,"      "],[6,"span"],[7],[1,[18,"headerLine3"],false],[8],[6,"br"],[7],[8],[0,"\\n"]],"parameters":[]},null],[4,"if",[[20,["isOutPatient"]]],null,{"statements":[[0,"      "],[6,"h3"],[7],[1,[25,"t",["reports.titles.opdReport"],null],false],[8],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[6,"h3"],[7],[1,[25,"t",["reports.titles.dischargeReport"],null],false],[8],[0,"\\n"]],"parameters":[]}],[0,"  "],[8],[0,"\\n  "],[6,"div"],[9,"class","report"],[7],[0,"\\n"],[4,"edit-panel",null,[["editPanelProps"],[[20,["editPanelProps"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[4,"if",[[20,["model","patient"]]],null,{"statements":[[0,"          "],[1,[25,"patient-summary",null,[["patient","disablePatientLink","diagnosisContainer","diagnosisList"],[[20,["model","patient"]],true,[20,["diagnosisContainer"]],[20,["diagnosisList"]]]]],false],[0,"\\n"]],"parameters":[]},null],[0,"\\n        "],[6,"div"],[9,"class","ps-info-group test-visit-date"],[7],[0,"\\n          "],[6,"label"],[9,"class","ps-info-label test-visit-date-label"],[7],[0,"\\n"],[4,"if",[[20,["isOutPatient"]]],null,{"statements":[[0,"              "],[1,[25,"t",["reports.labels.visitDate"],null],false],[0,":\\n"]],"parameters":[]},{"statements":[[0,"              "],[1,[25,"t",["reports.labels.admissionDate"],null],false],[0,":\\n"]],"parameters":[]}],[0,"          "],[8],[0,"\\n          "],[6,"span"],[9,"class","test-visit-date-data"],[7],[1,[25,"date-format",[[20,["visit","startDate"]]],null],false],[8],[0,"\\n        "],[8],[0,"\\n\\n"],[4,"if",[[20,["isOutPatient"]]],null,{"statements":[[0,"\\n"],[4,"if",[[20,["visit","visitType"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-visit-type"],[7],[0,"\\n              "],[6,"p"],[7],[6,"b"],[9,"class","test-visit-type-label"],[7],[1,[25,"t",["reports.labels.visitType"],null],false],[0,":"],[8],[0,"\\n                "],[6,"span"],[9,"class","test-visit-type-data"],[7],[1,[20,["visit","visitType"]],false],[8],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","examiner"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-examiner"],[7],[0,"\\n              "],[6,"p"],[7],[6,"b"],[9,"class","test-examiner-label"],[7],[1,[25,"t",["reports.labels.examiner"],null],false],[0,":"],[8],[0,"\\n                "],[6,"span"],[9,"class","test-examiner-data"],[7],[1,[20,["visit","examiner"]],false],[8],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","location"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-location"],[7],[0,"\\n              "],[6,"p"],[7],[6,"b"],[9,"class","test-location-label"],[7],[1,[25,"t",["reports.labels.location"],null],false],[0,":"],[8],[0,"\\n                "],[6,"span"],[9,"class","test-location-data"],[7],[1,[20,["visit","location"]],false],[8],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","procedures"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-opd-procedure"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-opd-procedure-label"],[7],[1,[25,"t",["reports.labels.procedures"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","procedures"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-opd-procedure-data"],[7],[1,[19,10,["description"]],false],[8],[0,"\\n"]],"parameters":[10]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","labs"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-labs"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-labs-label"],[7],[1,[25,"t",["reports.labels.labs"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","labs"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-labs-data"],[7],[1,[19,9,["labType","name"]],false],[0,"-"],[1,[19,9,["result"]],false],[0," ("],[1,[19,9,["status"]],false],[0,")"],[8],[0,"\\n                  "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm","isReadonly"],[[19,9,[]],"lab",[19,1,[]],true]]],false],[0,"\\n"]],"parameters":[9]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","imaging"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-images"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-images-label"],[7],[1,[25,"t",["reports.labels.images"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","imaging"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-images-data"],[7],[1,[19,8,["imagingType","name"]],false],[0,"-"],[1,[19,8,["result"]],false],[0," ("],[1,[19,8,["status"]],false],[0,")"],[8],[0,"\\n"]],"parameters":[8]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","medication"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-medication"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-medication-label"],[7],[1,[25,"t",["reports.labels.medications"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","medication"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-medication-data"],[7],[1,[19,7,["medicationName"]],false],[0," - "],[1,[19,7,["prescription"]],false],[0," ("],[1,[19,7,["status"]],false],[0,")"],[8],[0,"\\n"]],"parameters":[7]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["nextAppointments"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-appointment"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-appointment-label"],[7],[1,[25,"t",["reports.labels.nextAppointments"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["nextAppointments"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-appointment-data"],[7],[0,"\\n                    "],[1,[25,"date-format",[[19,6,["startDate"]]],null],false],[0,"\\n"],[4,"if",[[19,6,["appointmentType"]]],null,{"statements":[[0,"                      ("],[6,"b"],[7],[1,[19,6,["appointmentType"]],false],[8],[0,")\\n"]],"parameters":[]},null],[0,"                  "],[8],[0,"\\n"]],"parameters":[6]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["currentOperativePlan"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-operative-plan"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-operative-plan-label"],[7],[1,[25,"t",["reports.labels.operativePlan.title"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"if",[[20,["currentOperativePlan","operationDescription"]]],null,{"statements":[[0,"                  "],[6,"li"],[7],[0,"\\n                    "],[6,"p"],[7],[6,"b"],[9,"class","test-operative-plan-description-label"],[7],[1,[25,"t",["reports.labels.operativePlan.description"],null],false],[0,":"],[8],[6,"br"],[7],[8],[0,"\\n                      "],[6,"span"],[9,"class","test-operative-plan-description-data"],[7],[1,[20,["currentOperativePlan","operationDescription"]],false],[8],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n                "],[6,"li"],[7],[0,"\\n                  "],[6,"p"],[7],[6,"b"],[9,"class","test-operative-plan-procedures-label"],[7],[1,[25,"t",["reports.labels.operativePlan.procedures"],null],false],[0,":"],[8],[8],[0,"\\n                  "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["currentOperativePlan","procedures"]]],null,{"statements":[[0,"                      "],[6,"li"],[9,"class","test-operative-plan-procedures-description"],[7],[1,[19,5,["description"]],false],[8],[0,"\\n"]],"parameters":[5]},null],[0,"                  "],[8],[0,"\\n                "],[8],[0,"\\n\\n"],[4,"if",[[20,["currentOperativePlan","admissionInstructions"]]],null,{"statements":[[0,"                  "],[6,"li"],[7],[0,"\\n                    "],[6,"p"],[7],[6,"b"],[9,"class","test-operative-plan-instructions-label"],[7],[1,[25,"t",["reports.labels.operativePlan.instructions"],null],false],[0,":"],[8],[6,"br"],[7],[8],[0,"\\n                      "],[6,"span"],[9,"class","test-operative-plan-instructions-data"],[7],[1,[20,["currentOperativePlan","admissionInstructions"]],false],[8],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","patientNotes"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-notes"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-notes-label"],[7],[1,[25,"t",["reports.labels.notes.title"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","patientNotes"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-notes-data"],[7],[0,"\\n                    "],[6,"b"],[7],[1,[25,"t",["reports.labels.notes.date"],null],false],[0,":"],[8],[0," "],[1,[25,"date-format",[[19,4,["date"]]],null],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"b"],[7],[1,[25,"t",["reports.labels.notes.author"],null],false],[0,":"],[8],[0," "],[1,[19,4,["authoredBy"]],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"b"],[7],[1,[19,4,["noteType"]],false],[0,": "],[1,[19,4,["content"]],false],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[4]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n          "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"opdReport",[19,1,[]]]]],false],[0,"\\n\\n"]],"parameters":[]},{"statements":[[0,"\\n          "],[6,"div"],[9,"class","ps-info-group test-visit-date"],[7],[0,"\\n            "],[6,"label"],[9,"class","ps-info-label test-visit-discharge-date-label"],[7],[1,[25,"t",["reports.labels.dischargeDate"],null],false],[0,": "],[8],[0,"\\n            "],[6,"span"],[9,"class","test-visit-discharge-date-data"],[7],[1,[25,"date-format",[[20,["model","reportDate"]]],null],false],[8],[0,"\\n          "],[8],[0,"\\n\\n"],[4,"if",[[20,["visit","examiner"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-examiner"],[7],[0,"\\n              "],[6,"p"],[7],[6,"b"],[9,"class","test-examiner-label"],[7],[1,[25,"t",["reports.labels.examiner"],null],false],[0,":"],[8],[0,"\\n                "],[6,"span"],[9,"class","test-examiner-data"],[7],[1,[20,["visit","examiner"]],false],[8],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["patientProcedures"]]],null,{"statements":[[0,"            "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["reports.labels.allProcedures"],null],false],[8],[0,"\\n            "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["patientProcedures"]]],null,{"statements":[[0,"                "],[6,"li"],[7],[1,[19,3,["description"]],false],[0," -\\n"],[4,"if",[[19,3,["procedureDate"]]],null,{"statements":[[0,"                    "],[1,[25,"date-format",[[19,3,["procedureDate"]]],null],false],[0,"\\n                  "]],"parameters":[]},null],[8],[0,"\\n"]],"parameters":[3]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["visit","patientNotes"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group test-notes"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label test-notes-label"],[7],[1,[25,"t",["reports.labels.notes.title"],null],false],[8],[0,"\\n              "],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["visit","patientNotes"]]],null,{"statements":[[0,"                  "],[6,"li"],[9,"class","test-notes-data"],[7],[0,"\\n                    "],[6,"b"],[7],[1,[25,"t",["reports.labels.notes.date"],null],false],[0,":"],[8],[0," "],[1,[25,"date-format",[[19,2,["date"]]],null],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"b"],[7],[1,[25,"t",["reports.labels.notes.author"],null],false],[0,":"],[8],[0," "],[1,[19,2,["authoredBy"]],false],[6,"br"],[7],[8],[0,"\\n                    "],[6,"b"],[7],[1,[19,2,["noteType"]],false],[0,": "],[1,[19,2,["content"]],false],[8],[0,"\\n                  "],[8],[0,"\\n"]],"parameters":[2]},null],[0,"              "],[8],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[20,["nextAppointment"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["reports.labels.nextAppointment"],null],false],[0,":"],[8],[0,"\\n              "],[1,[25,"date-format",[[20,["nextAppointment","startDate"]]],null],false],[0,"\\n"],[4,"if",[[20,["nextAppointment","location"]]],null,{"statements":[[0,"                ("],[1,[20,["nextAppointment","location"]],false],[0,")\\n"]],"parameters":[]},null],[0,"            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n          "],[1,[25,"custom-form-manager",null,[["model","formType","rapidForm"],[[20,["model"]],"dischargeReport",[19,1,[]]]]],false],[0,"\\n\\n"],[4,"if",[[20,["model","modifiedBy"]]],null,{"statements":[[0,"            "],[6,"div"],[9,"class","ps-info-group"],[7],[0,"\\n              "],[6,"label"],[9,"class","ps-info-label"],[7],[1,[25,"t",["reports.labels.completedBy"],null],false],[0,":"],[8],[0,"\\n              "],[1,[20,["model","modifiedBy"]],false],[0,"\\n            "],[8],[0,"\\n"]],"parameters":[]},null],[0,"\\n"]],"parameters":[]}]],"parameters":[1]},null]],"parameters":[]},null],[0,"  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/visits/reports/edit/template.hbs"}})}),define("hospitalrun/visits/route",["exports","hospitalrun/routes/abstract-module-route"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({addCapability:"add_visit",additionalModels:[{name:"anesthesiaTypes",findArgs:["lookup","anesthesia_types"]},{name:"anesthesiologistList",findArgs:["lookup","anesthesiologists"]},{name:"diagnosisList",findArgs:["lookup","diagnosis_list"]},{name:"cptCodeList",findArgs:["lookup","cpt_code_list"]},{name:"physicianList",findArgs:["lookup","physician_list"]},{name:"locationList",findArgs:["lookup","visit_location_list"]},{name:"procedureList",findArgs:["lookup","procedure_list"]},{name:"procedureLocations",findArgs:["lookup","procedure_locations"]},{name:"procedurePricingTypes",findArgs:["lookup","procedure_pricing_types"]},{name:"sexList",findArgs:["lookup","sex"]},{name:"visitTypesList",findArgs:["lookup","visit_types"]},{name:"wardPricingTypes",findArgs:["lookup","ward_pricing_types"]},{name:"printHeader",findArgs:["option","print_header"]}],moduleName:"visits",newButtonAction:null,sectionTitle:"Visits",actions:{allItems:function(){this.transitionTo("patients.index")}}})}),define("hospitalrun/visits/vitals/delete/controller",["exports","hospitalrun/controllers/abstract-delete-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({afterDeleteAction:"notifyVitalsDelete",editController:Ember.inject.controller("visits/edit"),title:"Delete Vitals",actions:{notifyVitalsDelete:function(){this.send("closeModal"),this.get("editController").send("deleteVitals",this.get("model"))}}})}),define("hospitalrun/visits/vitals/delete/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"uKmiYE2r",block:'{"symbols":[],"statements":[[4,"modal-dialog",null,[["isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[0,"  "],[6,"div"],[9,"class","alert alert-danger"],[7],[0,"\\n    "],[6,"span"],[9,"class","glyphicon glyphicon-warning-sign"],[7],[8],[0,"\\n    "],[1,[25,"t",["messages.delete_plural"],[["name"],[[25,"t",["models.vital.names.plural"],null]]]],false],[0,"\\n  "],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/visits/vitals/delete/template.hbs"}})}),define("hospitalrun/visits/vitals/edit/controller",["exports","hospitalrun/controllers/abstract-edit-controller"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.extend({cancelAction:"closeModal",editController:Ember.inject.controller("visits/edit"),newVitals:!1,temperatureLabel:"Temperature (°C)",title:Ember.computed("model.isNew",function(){return this.get("model.isNew")?"Add Vitals":"Edit Vitals"}),updateCapability:"add_vitals",beforeUpdate:function(){return this.get("model.isNew")&&this.set("newVitals",!0),Ember.RSVP.Promise.resolve()},afterUpdate:function(e){this.get("newVitals")?this.get("editController").send("addVitals",e):this.send("closeModal")}})}),define("hospitalrun/visits/vitals/edit/template",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"iQ6pw/ZT",block:'{"symbols":["form"],"statements":[[4,"modal-dialog",null,[["hideCancelButton","isUpdateDisabled","title","updateButtonAction","updateButtonText"],[[20,["hideCancelButton"]],[20,["isUpdateDisabled"]],[20,["title"]],[20,["updateButtonAction"]],[20,["updateButtonText"]]]],{"statements":[[4,"em-form",null,[["model","submitButton"],[[20,["model"]],false]],{"statements":[[0,"    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"date-picker",null,[["model","property","label","class","format","showTime"],[[20,["model"]],"dateRecorded",[25,"t",["vitals.labels.dateRecorded"],null],"col-sm-6","l h:mm A",true]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","class","property","label"],[[20,["model"]],"col-sm-3 temperature-text","temperature",[20,["temperatureLabel"]]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["class","property","label"],["col-sm-3 weight-text","weight",[25,"t",["vitals.labels.weight"],null]]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["class","property","label"],["col-sm-3 height-text","height",[25,"t",["vitals.labels.height"],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["class","property","label"],["col-sm-3 sbp-text","sbp",[25,"t",["vitals.labels.sbp"],null]]]],false],[0,"\\n      "],[1,[25,"component",[[19,1,["input"]]],[["class","property","label"],["col-sm-3 dbp-text","dbp",[25,"t",["vitals.labels.dbp"],null]]]],false],[0,"\\n    "],[8],[0,"\\n    "],[6,"div"],[9,"class","row"],[7],[0,"\\n      "],[1,[25,"number-input",null,[["model","class","property","label"],[[20,["model"]],"col-sm-3 heart-rate-text","heartRate",[25,"t",["vitals.labels.heartRate"],null]]]],false],[0,"\\n      "],[1,[25,"number-input",null,[["model","class","property","label"],[[20,["model"]],"col-sm-3 respiratory-rate-text","respiratoryRate",[25,"t",["vitals.labels.respiratoryRate"],null]]]],false],[0,"\\n    "],[8],[0,"\\n"]],"parameters":[1]},null]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"hospitalrun/visits/vitals/edit/template.hbs"}})}),define("hospitalrun/config/environment",[],function(){try{var e="hospitalrun/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(unescape(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(a){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("hospitalrun/app").default.create({name:"hospitalrun",version:"1.0.0-beta+417480ec"})
